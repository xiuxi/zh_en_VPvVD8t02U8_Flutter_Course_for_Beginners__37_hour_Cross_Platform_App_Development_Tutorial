1
07:06:03,840 --> 07:06:07,360
scrcpy 实际上就像我们要做的那样                    

2
07:06:07,360 --> 07:06:10,080
在这门课上                    

3
07:06:10,080 --> 07:06:14,000
我只是在这里记下我已经解释过的笔记                    

4
07:06:14,000 --> 07:06:20,400
嗯，在我们开始安装 scrcpy 之前，我们需要                    

5
07:06:20,400 --> 07:06:26,000
嗯，我们需要安装 adb 和                    

6
07:06:26,000 --> 07:06:31,680
这个 adb 就像嗯，我相信它实际上代表 android                    

7
07:06:31,680 --> 07:06:36,400
调试器之类的，让我们看看 adb 代表什么                    

8
07:06:36,400 --> 07:06:42,400
我要在这里打开一个 safari 窗口，你可以看到 adb                    

9
07:06:42,400 --> 07:06:47,760
代表android debug bridge，如果你想的话，adb是一个很好的工具                    

10
07:06:47,760 --> 07:06:52,240
实例可以通过命令与你的安卓手机通话                    

11
07:06:52,240 --> 07:06:56,878
行，这样您就可以向它发送消息并说嘿，截图                    

12
07:06:56,878 --> 07:07:02,798
嘿，这样做或单击此处或关闭此应用程序，无论如何，您                    

13
07:07:02,798 --> 07:07:06,240
基本上通过你的发送命令到你的安卓手机或平板电脑                    

14
07:07:06,240 --> 07:07:09,520
终端，嗯，太棒了                    

15
07:07:09,520 --> 07:07:11,680
与 与                    

16
07:07:11,680 --> 07:07:16,638
adb 我的意思是让 adb 安装您的计算机，然后您可以实际安装                    

17
07:07:16,638 --> 07:07:21,200
scrcpy 使用 adb 与您的                    

18
07:07:21,200 --> 07:07:26,638
电话并向其发送命令并从中接收图像等                    

19
07:07:26,638 --> 07:07:32,558
话虽如此，我们需要安装 adb 所以我要在这里关闭这个转向窗口                    

20
07:07:32,558 --> 07:07:38,240
我要调出终端 我要增加这个的大小                    

21
07:07:38,240 --> 07:07:41,360
终端窗口，这样你就可以看到我在做什么                    

22
07:07:41,360 --> 07:07:46,240
所以在这里我会说 brew install                    

23
07:07:46,240 --> 07:07:51,760
cask android平台工具没问题                    

24
07:07:51,760 --> 07:07:58,240
所以如果可以的话，这将允许你安装                    

25
07:07:58,240 --> 07:08:03,600
使用android平台工具然后你就可以从中获取adb了                    

26
07:08:03,600 --> 07:08:07,600
android平台工具insta安装居然包括adb all                    

27
07:08:07,600 --> 07:08:09,600
没错                    

28
07:08:09,600 --> 07:08:13,440
嗯，我可以看到我的意思是对我来说你可以看到我已经安装了 android                    

29
07:08:13,440 --> 07:08:17,120
平台工具，所以我在这里收到这条消息，说你已经                    

30
07:08:17,120 --> 07:08:20,478
安装它，但如果你还没有安装 android                    

31
07:08:20,478 --> 07:08:24,478
运行此命令之前的平台工具将实际安装它                    

32
07:08:24,478 --> 07:08:28,400
为你现在我不想重新安装它所以我只是不打算这样做                    

33
07:08:28,400 --> 07:08:33,520
这里建议的命令，但只知道在安装 scr cpy 之前，你会                    

34
07:08:33,520 --> 07:08:42,558
需要让 adb 正常运行，并且在 android 平台工具中提供                    

35
07:08:42,558 --> 07:08:45,680
好的                    

36
07:08:45,680 --> 07:08:49,360
所以让我来看看我的笔记                    

37
07:08:49,360 --> 07:08:55,600
说我们已经讨论过 adb 所以在你完成 adb 之后我们需要去，我                    

38
07:08:55,600 --> 07:09:00,958
又要调出 safari 让我们看看能不能调出窗口                    

39
07:09:00,958 --> 07:09:06,000
在这里你也可以看到我在做什么然后我会说 scr cpy                    

40
07:09:06,000 --> 07:09:09,840
好的，然后你会看到第一个建议的网站在 github 上，并且                    

41
07:09:09,840 --> 07:09:15,840
这正是你需要去的地方所以去这里的 scrcpy 你会看到                    

42
07:09:15,840 --> 07:09:21,200
有关如何实际安装 scrcpy 的信息，它在 linux 上说你                    

43
07:09:21,200 --> 07:09:26,320
可以在 Windows 上做 apt installer crcpy 你可以在这里下载                    

44
07:09:26,320 --> 07:09:30,080
然后在mac os上你可以做 brew install                    

45
07:09:30,080 --> 07:09:33,280
脚本                    

46
07:09:33,280 --> 07:09:36,160
所以我已经这样做了所以我已经                    

47
07:09:36,160 --> 07:09:42,478
实际安装了 scrcpy 所以我不需要做任何特别的事情                    

48
07:09:42,478 --> 07:09:46,878
嗯，你可以看到它实际上告诉你我要增加                    

49
07:09:46,878 --> 07:09:49,440
这个窗口让你看得更清楚一点                    

50
07:09:49,440 --> 07:09:53,920
它会在这里告诉你，如果你需要从你的路径访问 adb                    

51
07:09:53,920 --> 07:09:59,200
还没有它然后执行我向您提到的命令好吗                    

52
07:09:59,200 --> 07:10:02,400
所以在你完成安装之后                    

53
07:10:02,400 --> 07:10:06,000
你的电脑，那么你应该能够启动一个终端，所以我要                    

54
07:10:06,000 --> 07:10:08,718
在此处调出终端并                    

55
07:10:08,718 --> 07:10:14,080
正如你在这里看到的，我有我的安卓手机，它的屏幕看起来像                    

56
07:10:14,080 --> 07:10:20,798
这是现在所以它只是在主屏幕上没什么特别的                    

57
07:10:20,798 --> 07:10:25,840
然后我想调出 scrcpy                    

58
07:10:25,840 --> 07:10:29,120
但在你这样做之前，如果这是你第一次这样做                    

59
07:10:29,120 --> 07:10:34,478
在这个过程中，您可能需要启用称为 USB 调试的功能                    

60
07:10:34,478 --> 07:10:37,680
你的安卓手机和                    

61
07:10:37,680 --> 07:10:43,280
取决于您的 android 手机的外观或                    

62
07:10:43,280 --> 07:10:46,638
当你插入你的 USB 调试是什么                    

63
07:10:46,638 --> 07:10:49,520
安卓手机它会向你展示                    

64
07:10:49,520 --> 07:10:52,558
嗯这样的画面                    

65
07:10:52,558 --> 07:10:55,520
所以我要把它放大一点，这样你可以看得更清楚                    

66
07:10:55,520 --> 07:11:01,040
所以这个对话框会在你的安卓手机上弹出，说哦，你呢                    

67
07:11:01,040 --> 07:11:05,600
想让这台电脑在这个手机上的这个um上做调试                    

68
07:11:05,600 --> 07:11:08,878
你需要做的就是说总是允许从这台电脑上然后                    

69
07:11:08,878 --> 07:11:15,840
按下确定按钮，这只是为了让您首先能够安装                    

70
07:11:15,840 --> 07:11:19,280
并调试您的颤振应用程序                    

71
07:11:19,280 --> 07:11:23,120
全部来自 Visual Studio 代码或来自 android studio 就在你的 android 上                    

72
07:11:23,120 --> 07:11:27,520
电话或平板电脑，它也可以让你运行 scrcpy                    

73
07:11:27,520 --> 07:11:32,240
依次使用 adb 进行通信                    

74
07:11:32,240 --> 07:11:36,878
你的设备没问题                    

75
07:11:36,878 --> 07:11:43,120
那是用于usb调试的                    

76
07:11:43,120 --> 07:11:46,798
所以我们需要做的实际上是调出 scr cpy 所以                    

77
07:11:46,798 --> 07:11:50,478
在终端我只想说 ser cpy                    

78
07:11:50,478 --> 07:11:53,440
正如你在这里看到的，它会和我的安卓手机通话                    

79
07:11:53,440 --> 07:11:57,600
调出一个窗口，我将慢慢把它带到这个屏幕上，这样你                    

80
07:11:57,600 --> 07:12:00,718
可以看到                    

81
07:12:00,718 --> 07:12:03,760
我要离开航站楼，因为航站楼实际上正在加油                    

82
07:12:03,760 --> 07:12:07,760
这件事所以如果我关闭我的终端这也将被关闭所以只是                    

83
07:12:07,760 --> 07:12:12,798
保持此终端打开，或者如果您正在使用项目，例如我正在使用                    

84
07:12:12,798 --> 07:12:16,400
然后您可以打开一个新选项卡并继续使用另一个选项卡                    

85
07:12:16,400 --> 07:12:20,558
命令行，否则你可以关闭它，或者你可以最小化它                    

86
07:12:20,558 --> 07:12:25,840
如果您对此感到困扰，那么您现在可以看到我有我的android                    

87
07:12:25,840 --> 07:12:28,718
手机在我的屏幕上镜像我实际上要去                    

88
07:12:28,718 --> 07:12:32,400
这样做是为了让你看得更清楚，我会把它做好                    

89
07:12:32,400 --> 07:12:38,558
介于两者之间，所以这是我真正的安卓手机，所以如果我用我的点击这里                    

90
07:12:38,558 --> 07:12:42,638
鼠标它实际上与我的手机交互所以                    

91
07:12:42,638 --> 07:12:47,600
我可以在这里把我的手机拿出来，这样你就可以看到它们并排                    

92
07:12:47,600 --> 07:12:52,478
如果在 scrcpy 屏幕上的 if 上，我按下                    

93
07:12:52,478 --> 07:12:56,000
后退按钮你会看到我的安卓屏幕                    

94
07:12:56,000 --> 07:13:00,000
再更改一次点击谷歌                    

95
07:13:00,000 --> 07:13:04,638
所以它真的和我的安卓手机在这里互动好吗                    

96
07:13:04,638 --> 07:13:06,878
所以我强烈建议你实际上                    

97
07:13:06,878 --> 07:13:11,200
老实说，安装 sdrcpy 如果您喜欢，它是一个很棒的工具                    

98
07:13:11,200 --> 07:13:15,360
移动开发，或者如果您想成为移动开发人员，那么                    

99
07:13:15,360 --> 07:13:18,958
嗯，关于我之前所说的                    

100
07:13:18,958 --> 07:13:23,840
我认为您的设备将与                    

101
07:13:23,840 --> 07:13:28,638
ios模拟器和android模拟器然而                    

102
07:13:28,638 --> 07:13:31,360
我个人应该建议你花                    

103
07:13:31,360 --> 07:13:35,680
并投入一些钱为自己购买他们没有的设备                    

104
07:13:35,680 --> 07:13:39,040
成为最新设备的顶级产品，但                    

105
07:13:39,040 --> 07:13:42,798
一部安卓手机和一部ios手机                    

106
07:13:42,798 --> 07:13:46,558
甚至平板电脑也可以，但最好是您甚至不必拥有的电话                    

107
07:13:46,558 --> 07:13:51,440
它们中的 sim 卡只是电话设备本身，所以                    

108
07:13:51,440 --> 07:13:53,520
嗯和                    

109
07:13:53,520 --> 07:13:57,360
我的意思是，如果你进入移动开发领域，你会经历很多                    

110
07:13:57,360 --> 07:14:01,760
反正有很多电话，因为你会得到这样的                    

111
07:14:01,760 --> 07:14:05,280
一年的新电话，然后两年后你得到另一部电话，所以你                    

112
07:14:05,280 --> 07:14:07,760
把它们堆起来，嗯                    

113
07:14:07,760 --> 07:14:12,718
然后您可以将所有电话用作我们所说的测试电话                    

114
07:14:12,718 --> 07:14:15,280
好吧                    

115
07:14:15,280 --> 07:14:20,878
这就是现在我们需要做的就是现在我们的安卓手机是                    

116
07:14:20,878 --> 07:14:24,718
连接到这里我们需要做的是去视觉                    

117
07:14:24,718 --> 07:14:30,638
工作室代码进入我们的项目并选择那个嗯                    

118
07:14:30,638 --> 07:14:35,200
所以选择我们的让我看看如果我可以在 Visual Studio 中调出 Visual Studio 代码                    

119
07:14:35,200 --> 07:14:38,638
代码这是我这里有很多屏幕所以                    

120
07:14:38,638 --> 07:14:41,200
实际上这有点挑战                    

121
07:14:41,200 --> 07:14:45,680
把它们都排在这里所以我要做的是我会摆脱旁边                    

122
07:14:45,680 --> 07:14:50,878
窗口没问题，我会在右侧打开然后 scr cpy 和                    

123
07:14:50,878 --> 07:14:54,718
然后在这里稍微调整一下屏幕大小                    

124
07:14:54,718 --> 07:14:59,040
然后像这样，所以我有你这就像我通常的设置，所以我有视觉                    

125
07:14:59,040 --> 07:15:03,600
工作室代码在左边，然后我把我的安卓手机镜像到了                    

126
07:15:03,600 --> 07:15:08,000
右手边没关系，那你之后需要做什么                    

127
07:15:08,000 --> 07:15:11,520
你已经完成了所有这些工作是在 Visual Studio 代码中只需说命令                    

128
07:15:11,520 --> 07:15:17,200
在 mac 上 shift p 或在 linux 上 ctrl shift b 和                    

129
07:15:17,200 --> 07:15:20,400
windows，如果你使用的是 android studio，我真的不知道                    

130
07:15:20,400 --> 07:15:24,320
命令在那里选择一个设备，它们可能像一个下拉菜单或                    

131
07:15:24,320 --> 07:15:28,320
某事，所以请这样做，所以在这里我只想说命令                    

132
07:15:28,320 --> 07:15:31,600
shift b 我会说颤振选择设备好                    

133
07:15:31,600 --> 07:15:34,638
在选择设备中，我实际上要选择我的                    

134
07:15:34,638 --> 07:15:38,240
安卓手机，这是这里镜像的手机                    

135
07:15:38,240 --> 07:15:42,160
选择一部安卓手机，然后我会说run run without debug                    

136
07:15:42,160 --> 07:15:45,360
好的                    

137
07:15:45,360 --> 07:15:49,280
那么让我们看看                    

138
07:15:49,280 --> 07:15:56,400
你可以在这里看到它说在调试模式下在 gm 19 blah blah 上启动 dart 所以                    

139
07:15:56,400 --> 07:16:00,240
因为它是一个android应用程序现在突然我们只是从ios切换                    

140
07:16:00,240 --> 07:16:03,520
到 android 之前，我们的应用程序就像我们的源代码一样                    

141
07:16:03,520 --> 07:16:07,840
由 xcode 编译，现在因为我们正在尝试部署到                    

142
07:16:07,840 --> 07:16:11,680
一部安卓手机，它是 gradle 它的 gradle 基本上是在照顾                    

143
07:16:11,680 --> 07:16:15,520
构建过程，所以如果你是一个 android 开发者，那么你知道                    

144
07:16:15,520 --> 07:16:18,558
基本上是零级构建系统，是的                    

145
07:16:18,558 --> 07:16:22,240
它正在工作，它基本上是在构建                    

146
07:16:22,240 --> 07:16:26,638
背景所以我真的很高兴我们得到了这个                    

147
07:16:26,638 --> 07:16:31,120
现在出现错误，所以我将把我们讨论过的笔记记录在这里                    

148
07:16:31,120 --> 07:16:36,000
vs代码选择android，然后显示android手机镜像工作正常                    

149
07:16:36,000 --> 07:16:40,478
所以你在这里看到我们有一些错误                    

150
07:16:40,478 --> 07:16:44,240
实际上，当我们在章节中谈到我们在哪一章时，我们在章节中                    

151
07:16:44,240 --> 07:16:48,798
10. 在第 9 章中，当我们谈到在 ios 上运行我们的应用程序时，我们                    

152
07:16:48,798 --> 07:16:53,520
实际上得到了类似的东西有一个错误说哦你的                    

153
07:16:53,520 --> 07:16:57,200
呃依赖火力基地他们需要这个                    

154
07:16:57,200 --> 07:17:00,958
版本，但您使用的是该版本以及以下版本                    

155
07:17:00,958 --> 07:17:04,718
如果您还记得我们访问了我们的 pod 文件，那么实际解决它的代码                    

156
07:17:04,718 --> 07:17:09,840
只是把这个平台放在这里说 ios 13 因为你看我们有四个                    

157
07:17:09,840 --> 07:17:14,718
目前的依赖关系我们有firebase auth我们有firebase核心                    

158
07:17:14,718 --> 07:17:18,798
分析和其他我不记得的东西让我看看                    

159
07:17:18,798 --> 07:17:23,120
注意这里有核心身份验证云火库和                    

160
07:17:23,120 --> 07:17:27,440
firebase 分析这四个依赖项他们有他们的                    

161
07:17:27,440 --> 07:17:32,958
自己的要求，所以他们说我们作为依赖项不能安装在                    

162
07:17:32,958 --> 07:17:38,718
例如支持非常旧的 android 操作系统或非常旧的 ios 的应用程序                    

163
07:17:38,718 --> 07:17:44,958
版本，所以这些依赖项对您的项目提出了要求，所以                    

164
07:17:44,958 --> 07:17:52,000
我们在第九章中解决了这个问题                    

165
07:17:52,000 --> 07:17:56,160
进入 pod 文件并注释掉这个基本上删除                    

166
07:17:56,160 --> 07:17:59,920
此行的注释并将其从 9 更改                    

167
07:17:59,920 --> 07:18:05,600
到 13. 所以我们为 ios 修复它，但我们现在如何为 android 做它                    

168
07:18:05,600 --> 07:18:09,360
在这里得到很多很棒的信息，它说你需要找到                    

169
07:18:09,360 --> 07:18:15,680
这个调试默认配置和最小 sdk 版本没问题，所以让我们寻找默认配置                    

170
07:18:15,680 --> 07:18:22,000
config 所以我要复制那个文本，然后我要命令 shift f in                    

171
07:18:22,000 --> 07:18:28,240
视觉工作室代码并搜索它，正如你在这里看到的，我们有一点                    

172
07:18:28,240 --> 07:18:31,760
颤动版本名称，然后颤动版本代码为整数                    

173
07:18:31,760 --> 07:18:36,638
我可以在这里看到有关颤振版本的信息，例如                    

174
07:18:36,638 --> 07:18:39,920
如果你去我们的 build gradle 和                    

175
07:18:39,920 --> 07:18:44,638
整数有一个颤振版本代码，即                    

176
07:18:44,638 --> 07:18:49,600
以及这里的主要 sdk 在哪里 min sdk version 好，所以我要搜索                    

177
07:18:49,600 --> 07:18:54,558
对于 min sdk 版本，在这里我可以看到它是 19 在这里                    

178
07:18:54,558 --> 07:19:01,120
19. 和 android min sdk 版本 19 所以实际上有很多                    

179
07:19:01,120 --> 07:19:05,120
可以提到19的地方                    

180
07:19:05,120 --> 07:19:11,520
并且错误本身让我们阅读它需要更高的android sdk版本                    

181
07:19:11,520 --> 07:19:16,958
通过将以下内容添加到文件 build gradle android default config 来解决此问题                    

182
07:19:16,958 --> 07:19:23,200
min sdk version 没关系，所以如果我们在这里查看默认配置                    

183
07:19:23,200 --> 07:19:27,200
它正在谈论这个东西 min sdk 版本我可以看到以前这个                    

184
07:19:27,200 --> 07:19:31,680
以前是数字，最近改成flutter min sdk版本                    

185
07:19:31,680 --> 07:19:36,398
所以我要调出一个 safari 窗口，我要说 change flutter min                    

186
07:19:36,398 --> 07:19:41,520
sdk 版本，所以让我们看看人们实际建议的是什么                    

187
07:19:41,520 --> 07:19:46,878
允许我们执行此操作的命令，您会看到人们仍在说我们                    

188
07:19:46,878 --> 07:19:52,080
需要通过将其更改为特定版本来做到这一点，但我相信                    

189
07:19:52,080 --> 07:19:57,120
应该有更好的方法来做到这一点，而不是硬编码                    

190
07:19:57,120 --> 07:20:00,240
使用具有您无法更改的颤振样式的新颤振项目                    

191
07:20:00,240 --> 07:20:03,760
mini sdk 版本和本地属性                    

192
07:20:03,760 --> 07:20:08,080
很好，所以如果我们转到一个名为 local.properties 的文件，那就是它们                    

193
07:20:08,080 --> 07:20:10,718
在这里说所以我要                    

194
07:20:10,718 --> 07:20:15,600
尝试查找本地属性，我可以在这里看到                    

195
07:20:15,600 --> 07:20:21,680
此处设置了 sdk，但没有最小 sdk 版本                    

196
07:20:21,680 --> 07:20:25,040
所以我们可能需要去修复它                    

197
07:20:25,040 --> 07:20:28,638
up 所以我要复制粘贴，我只想说flutter.sdk版本                    

198
07:20:28,638 --> 07:20:34,160
19. 好的，保存那个文件，然后我要回到主 dart 然后说                    

199
07:20:34,160 --> 07:20:39,440
不调试就运行，看看这次会发生什么                    

200
07:20:39,440 --> 07:20:43,040
如果它接受本地属性的改变，我们只是                    

201
07:20:43,040 --> 07:20:46,718
制造，它仍然说它不会                    

202
07:20:46,718 --> 07:20:50,718
能够让用户运行所以呃老实说我们可以在这里做些什么                    

203
07:20:50,718 --> 07:20:54,638
和你一起只是故障排除所以让我们说回到根目录                    

204
07:20:54,638 --> 07:21:02,160
你的应用程序的文件夹并说flutter clean android                    

205
07:21:02,160 --> 07:21:06,320
为什么它在做 xcode 工作区然后说颤动                    

206
07:21:06,320 --> 07:21:13,120
弹出获取                    

207
07:21:13,120 --> 07:21:17,600
所以如果这工作正常，那么它应该已经为我们清理了 android 代码并且                    

208
07:21:17,600 --> 07:21:22,320
就像将版本 19 放在我们的构建 gradle 中，这样实际上应该可以解决                    

209
07:21:22,320 --> 07:21:27,280
到 19 岁，所以让我们去主飞镖，再试一次                    

210
07:21:27,280 --> 07:21:30,718
解决方案不起作用那么我们很遗憾必须进入我们的                    

211
07:21:30,718 --> 07:21:34,878
构建 gradle 文件并执行推荐的操作并放入 min sdk 版本                    

212
07:21:34,878 --> 07:21:38,558
有一个常数值 19 只是为了获取代码                    

213
07:21:38,558 --> 07:21:42,958
编译所以让我们看看这里                    

214
07:21:42,958 --> 07:21:47,680
我们的 gradle build 会做什么                    

215
07:21:47,680 --> 07:21:50,240
所以我真的不知道发生了什么                    

216
07:21:50,240 --> 07:21:53,840
它                    

217
07:21:53,840 --> 07:21:58,398
我似乎并没有真正做任何事情，所以再试一次                    

218
07:21:58,398 --> 07:22:02,558
调试并查看启动时会发生什么                    

219
07:22:02,558 --> 07:22:05,920
我要在这里看看我的安卓手机以及运行 gradle 任务                    

220
07:22:05,920 --> 07:22:10,638
组装调试                    

221
07:22:10,638 --> 07:22:14,718
对我来说，它目前在这部手机上没有运行任何东西，所以什么                    

222
07:22:14,718 --> 07:22:19,040
我们要做的是让我们去我的意思是这个解决方案不起作用所以                    

223
07:22:19,040 --> 07:22:23,440
我要删除它，我要构建 gradle 并放置                    

224
07:22:23,440 --> 07:22:28,798
目标 sdk 版本我认为那是最小 sdk 版本对不起                    

225
07:22:28,798 --> 07:22:33,200
在这里我们只会说 19 而不是好的                    

226
07:22:33,200 --> 07:22:36,638
就像它实际上是向我们建议的那样                    

227
07:22:36,638 --> 07:22:40,718
嗯，然后让我们去主 dart，然后再说一次不调试就运行                    

228
07:22:40,718 --> 07:22:45,120
如果这个解决方案不起作用，我实际上可能不得不重新启动视觉                    

229
07:22:45,120 --> 07:22:48,638
工作室代码，如果由于某种原因有点混乱                    

230
07:22:48,638 --> 07:22:52,878
因为通常当你说 gradle 就像你开始构建时                    

231
07:22:52,878 --> 07:22:57,680
过程 它实际上给了你一些反馈 它要么说某事                    

232
07:22:57,680 --> 07:23:03,920
失败了，或者是的，我嗯，然后它成功运行了，在这个                    

233
07:23:03,920 --> 07:23:07,200
案例我可以看到它没有运行所以我只想说退出 Visual Studio 代码                    

234
07:23:07,200 --> 07:23:10,160
好的，然后我要调出视觉效果                    

235
07:23:10,160 --> 07:23:13,440
工作室代码，所以我通常有很多项目                    

236
07:23:13,440 --> 07:23:16,398
我要[音乐]                    

237
07:23:16,398 --> 07:23:20,558
尽量减少所有这些事情，我只会打开                    

238
07:23:20,558 --> 07:23:25,280
我们的我的笔记应用程序，所以让我们进去吧                    

239
07:23:25,280 --> 07:23:29,920
到我的笔记应用程序中，让我们再试一次，我要去                    

240
07:23:29,920 --> 07:23:35,040
在不调试的情况下运行，让我们看看会发生什么                    

241
07:23:35,040 --> 07:23:39,280
哦，现在它在调试模式下选择iphone 13 pro，那是因为我重新启动了                    

242
07:23:39,280 --> 07:23:42,558
视觉工作室代码，它不知道要在哪个设备上运行，所以我要去                    

243
07:23:42,558 --> 07:23:46,160
说选择设备，然后再次选择我的安卓手机                    

244
07:23:46,160 --> 07:23:52,080
在没有调试的情况下运行并希望在这里交叉我的手指                    

245
07:23:52,080 --> 07:23:55,120
既然我们改变了                    

246
07:23:55,120 --> 07:23:58,160
嗯版本号然后它会工作                    

247
07:23:58,160 --> 07:24:02,478
我可以在这里看到                    

248
07:24:02,478 --> 07:24:07,600
我明白了，现在它抱怨多甲板，所以我的意思是这很棒                    

249
07:24:07,600 --> 07:24:11,280
我很高兴我们看到所有这些错误，因为通常我们不会                    

250
07:24:11,280 --> 07:24:14,798
有可能我的意思是通常你在教程中看到是的一切都是                    

251
07:24:14,798 --> 07:24:19,120
工作正常，呃，他点击了那里，然后点击了那里，一切正常，但是                    

252
07:24:19,120 --> 07:24:23,600
在这里，我们实际上已经到了可以看到每个问题的地步                    

253
07:24:23,600 --> 07:24:26,798
出现，然后我们将一起修复它，这就像一天                    

254
07:24:26,798 --> 07:24:31,760
软件开发人员的生活出了问题，但你必须修复它                    

255
07:24:31,760 --> 07:24:35,520
嗯，这个 multi-dex 是你必须要做的                    

256
07:24:35,520 --> 07:24:42,478
配置，我们会说使用多 dex 标志所以                    

257
07:24:42,478 --> 07:24:46,798
我要去野生动物园，我要把它贴在这里                    

258
07:24:46,798 --> 07:24:50,958
嗯，然后有一个解决方案希望在我们默认的某个地方                    

259
07:24:50,958 --> 07:24:54,478
配置你看到它说启用了多 dex 所以                    

260
07:24:54,478 --> 07:24:59,760
让我们去你的应用程序中构建 gradle 就在这里                    

261
07:24:59,760 --> 07:25:04,558
你会在默认配置中看到 android app build gradle，就像这里所说的那样                    

262
07:25:04,558 --> 07:25:08,878
启用多甲板只需把它带到这里就在那里                    

263
07:25:08,878 --> 07:25:13,520
然后在此文件底部转到您的依赖项并带上                    

264
07:25:13,520 --> 07:25:18,398
实施多甲板就在那里好吧，所以我只是将它粘贴到正确的位置                    

265
07:25:18,398 --> 07:25:23,440
回到我这里的主要保护文件，然后说运行运行而不调试                    

266
07:25:23,440 --> 07:25:28,000
所以让我们看看会发生什么                    

267
07:25:28,000 --> 07:25:31,120
这里有一些警告是红色的，你不必                    

268
07:25:31,120 --> 07:25:34,878
现在非常担心他们，他们的名字有警告                    

269
07:25:34,878 --> 07:25:39,360
建议所以你不必像我一样担心对你诚实                    

270
07:25:39,360 --> 07:25:44,478
提到所以我们去这里是我们的颤振                    

271
07:25:44,478 --> 07:25:49,600
应用程序现在可以在 um 上运行                    

272
07:25:49,600 --> 07:25:55,120
在实际的电话上，所以我要把电话带到这里                    

273
07:25:55,120 --> 07:25:59,440
你可以看到它显示的是完全相同的东西所以如果我用鼠标移过去                    

274
07:25:59,440 --> 07:26:03,040
你看不到，因为你真的看到了我的脸                    

275
07:26:03,040 --> 07:26:06,798
所以嗯，然后你会看到值 3                    

276
07:26:06,798 --> 07:26:10,878
也印在这里，那就太好了                    

277
07:26:10,878 --> 07:26:14,320
东西嗯                    

278
07:26:14,320 --> 07:26:23,840
然后                    

279
07:26:23,840 --> 07:26:28,798
我不知道为什么这个呃屏幕是旋转的                    

280
07:26:28,798 --> 07:26:32,398
我把它转回来哦那是因为我的手机实际上是                    

281
07:26:32,398 --> 07:26:37,680
旋转所以我要把它旋转回来所以它是呃                    

282
07:26:37,680 --> 07:26:42,320
它没有以错误的方向旋转很好，所以我们得到了很多                    

283
07:26:42,320 --> 07:26:46,160
老实说有问题，嗯，但没关系，通常就是这样                    

284
07:26:46,160 --> 07:26:50,160
至少在我们开始进行移动开发时会发生                    

285
07:26:50,160 --> 07:26:53,360
当您进行设置时，我实际上是                    

286
07:26:53,360 --> 07:26:57,920
感谢我们收到这些错误，所以你看到它们，所以你不只是想                    

287
07:26:57,920 --> 07:27:01,440
一切都会从一开始就进行，所以                    

288
07:27:01,440 --> 07:27:04,160
尽管正如我在介绍中所说，我还没有计划所有                    

289
07:27:04,160 --> 07:27:08,240
这就是这些错误的出现，我不希望事情变得完美，所以即使                    

290
07:27:08,240 --> 07:27:12,958
这正在发生，但我仍然非常感谢他们正在发生                    

291
07:27:12,958 --> 07:27:18,558
我们现在需要谈论的是一个叫做屏幕睡眠和嗯                    

292
07:27:18,558 --> 07:27:23,680
当你在你的安卓手机或平板电脑上开发你的应用程序时                    

293
07:27:23,680 --> 07:27:28,398
您会注意到您将在手机或平板电脑上运行您的应用程序                    

294
07:27:28,398 --> 07:27:31,680
然后过了一会儿你的屏幕就会消失                    

295
07:27:31,680 --> 07:27:34,398
to sleep 这意味着屏幕将被锁定                    

296
07:27:34,398 --> 07:27:38,558
然后当您尝试重新运行或重新运行您的应用程序或重新刷新时                    

297
07:27:38,558 --> 07:27:41,920
你的应用程序然后你会从颤动中得到一个错误，说它不能                    

298
07:27:41,920 --> 07:27:45,280
部署应用程序，因为设备被锁定所以                    

299
07:27:45,280 --> 07:27:48,638
电话能做到这一点很烦人，但这是为了好                    

300
07:27:48,638 --> 07:27:52,320
出于安全目的，电话之所以喜欢它们必须锁定屏幕，因此                    

301
07:27:52,320 --> 07:27:55,280
如果你把它放在长凳上或公园里的某个地方，你                    

302
07:27:55,280 --> 07:27:59,040
忘记它然后你就走然后它被锁定所以没有人会得到                    

303
07:27:59,040 --> 07:28:03,760
访问您的电话数据并说明我们需要做什么                    

304
07:28:03,760 --> 07:28:07,280
在开发应用程序时禁用它，因为                    

305
07:28:07,280 --> 07:28:10,638
你想要的是一部随时可用的电话 屏幕可用                    

306
07:28:10,638 --> 07:28:14,558
不会锁定，因此您可以随时向其部署更新版本的应用程序                    

307
07:28:14,558 --> 07:28:20,000
或者只要您不自己手动锁定它                    

308
07:28:20,000 --> 07:28:23,440
所以我们要做的是我要在这里打电话给你看                    

309
07:28:23,440 --> 07:28:28,840
我在做什么 我要去这里 我要去设置                    

310
07:28:28,840 --> 07:28:32,558
屏幕嗯这里和                    

311
07:28:32,558 --> 07:28:35,920
你可能需要我的意思是为了让你实际上甚至能够                    

312
07:28:35,920 --> 07:28:39,920
运行您的应用程序并在您的应用程序上做一些时髦的事情                    

313
07:28:39,920 --> 07:28:43,360
电话，您需要启用称为开发人员远程的功能，以便开发人员                    

314
07:28:43,360 --> 07:28:48,000
mode on android and on ios是手机的一系列开发工具                    

315
07:28:48,000 --> 07:28:52,240
仅提供给开发人员，为了获得您需要执行的那些工具                    

316
07:28:52,240 --> 07:28:56,398
一系列动作，例如猴子或手机上的其他东西，以及                    

317
07:28:56,398 --> 07:29:00,320
嗯，我不会为所有不同的人提供确切的说明                    

318
07:29:00,320 --> 07:29:03,200
电话，因为取决于电话的制造商                    

319
07:29:03,200 --> 07:29:07,200
特别是如果它在android上，那么就会带来开发者模式                    

320
07:29:07,200 --> 07:29:11,040
以不同的方式进入生活，所以你需要做的是找出                    

321
07:29:11,040 --> 07:29:15,200
您的电话的制造商和您的电话型号是                    

322
07:29:15,200 --> 07:29:20,718
oneplus pro 7 我相信然后谷歌说 oneplus pro 7 开发者选项                    

323
07:29:20,718 --> 07:29:23,600
或开发者模式，然后你会得到一些关于                    

324
07:29:23,600 --> 07:29:28,000
如何启用我已经这样做了所以如果我去我相信它是                    

325
07:29:28,000 --> 07:29:31,440
实用程序或抱歉，我认为这是系统                    

326
07:29:31,440 --> 07:29:35,520
你可以在那里看到然后我有一个叫做开发者选项的选项好吧                    

327
07:29:35,520 --> 07:29:39,760
所以为了禁用屏幕睡眠，你必须去开发者选项和                    

328
07:29:39,760 --> 07:29:45,200
说保持清醒，默认情况下全部禁用                    

329
07:29:45,200 --> 07:29:47,680
正确的                    

330
07:29:47,680 --> 07:29:50,718
所以嗯                    

331
07:29:50,718 --> 07:29:56,718
我们现在谈到了开发者工具，我们谈到了                    

332
07:29:56,718 --> 07:30:02,320
您可以使用 scrcpy 与您的电话进行交互                    

333
07:30:02,320 --> 07:30:06,840
老实说，我想我认为这就是你需要知道的全部                    

334
07:30:06,840 --> 07:30:12,398
嗯，对于 android 设置，没什么好说的了，剩下的就是                    

335
07:30:12,398 --> 07:30:17,600
像往常一样开发我们的应用程序，然后在安卓手机上运行它                    

336
07:30:17,600 --> 07:30:21,680
然后使用 crcpy 镜像屏幕，这就是我要做的                    

337
07:30:21,680 --> 07:30:26,000
整个课程我将主要运行应用程序运行我们的                    

338
07:30:26,000 --> 07:30:29,680
我们将在本课程中在此电话上开发的应用程序和                    

339
07:30:29,680 --> 07:30:33,920
使用 scr cpy 镜像屏幕，但您可以选择使用 ios                    

340
07:30:33,920 --> 07:30:38,718
模拟器或android模拟器或ios手机或平板电脑等等                    

341
07:30:38,718 --> 07:30:42,320
所以我不能提供关于如何做所有的描述                    

342
07:30:42,320 --> 07:30:46,398
那些东西，因为那是一个完整的过程，但至少现在你                    

343
07:30:46,398 --> 07:30:50,878
拥有工具和必要的信息，以便了解如何                    

344
07:30:50,878 --> 07:30:55,520
你实际上可以部署到iphone和android手机上                    

345
07:30:55,520 --> 07:30:57,680
所以呃                    

346
07:30:57,680 --> 07:31:02,320
话虽如此，现在我们可以说我们实际上很适合继续使用 android                    

347
07:31:02,320 --> 07:31:05,760
嗯，在下一章，也就是第 11 章，我们会讲到一些                    

348
07:31:05,760 --> 07:31:10,398
多汁的东西是呃在firebase上设置我们的项目，如果你还记得的话                    

349
07:31:10,398 --> 07:31:13,920
从介绍中我们将使用firebase作为我们的后端                    

350
07:31:13,920 --> 07:31:17,520
那么嗯                    

351
07:31:17,520 --> 07:31:21,360
你知道下一章会发生什么，现在你有了工具                    

352
07:31:21,360 --> 07:31:26,718
为了让应用程序运行是必要的，所以我们开始吧                    

353
07:31:26,718 --> 07:31:30,080
并配置我们的firebase项目                    

354
07:31:30,080 --> 07:31:33,760
第11章大家好，欢迎来到第11章                    

355
07:31:33,760 --> 07:31:36,478
本章我们要讲的这门课                    

356
07:31:36,478 --> 07:31:40,080
关于我们使用 firebase 的后端设置                    

357
07:31:40,080 --> 07:31:45,120
嗯，我就像我之前所说的那样，我有点假设你已经经历了                    

358
07:31:45,120 --> 07:31:49,040
本课程的章节按时间顺序排列 所以你开始了                    

359
07:31:49,040 --> 07:31:51,440
从绝对开始介绍然后                    

360
07:31:51,440 --> 07:31:55,040
你跟着，所以有很多很多的信息，因为你                    

361
07:31:55,040 --> 07:31:58,840
可以看到这一章之前大约八小时的信息                    

362
07:31:58,840 --> 07:32:02,958
所以我觉得因为我已经在所有这些中彻底解释了一切                    

363
07:32:02,958 --> 07:32:06,958
我不会再经历这一切的章节                    

364
07:32:06,958 --> 07:32:10,638
所以我会跳过我已经解释过的东西，如果你还没有解释过                    

365
07:32:10,638 --> 07:32:15,280
看了那些章节我真的建议你至少略读                    

366
07:32:15,280 --> 07:32:19,440
稍微看一下，这样你就明白了                    

367
07:32:19,440 --> 07:32:23,520
嗯，现在我在看我的笔记，我可以看到                    

368
07:32:23,520 --> 07:32:27,520
在本章中，正如标题所示，我们将建立我们的背部                    

369
07:32:27,520 --> 07:32:33,920
结束我们的后端正在使用 firebase 并且在开发本课程时我                    

370
07:32:33,920 --> 07:32:38,240
考虑创建一个喜欢作为本课程的一部分                    

371
07:32:38,240 --> 07:32:42,240
自定义后端以及我们用 django 做的我个人做 django                    

372
07:32:42,240 --> 07:32:47,520
开发呃后端和网站，如rest apis，也适用于                    

373
07:32:47,520 --> 07:32:51,600
简单的网站也是如此，但说实话，如果我去的话                    

374
07:32:51,600 --> 07:32:56,080
并使用 django 创建一个简单的后端，然后向您展示如何与                    

375
07:32:56,080 --> 07:32:59,920
使用颤振它真的与颤振无关                    

376
07:32:59,920 --> 07:33:04,558
就像后端部分与颤振本身无关，所以                    

377
07:33:04,558 --> 07:33:07,520
在本课程开始时遇到这个问题我                    

378
07:33:07,520 --> 07:33:12,798
面临着一个挑战，我是否要进入创建定制的兔子洞？                    

379
07:33:12,798 --> 07:33:15,120
回来参加这门课程                    

380
07:33:15,120 --> 07:33:18,080
并引导您创建一个无关的自定义包                    

381
07:33:18,080 --> 07:33:23,280
颤动和颤动是你观看这门课程的原因，所以我                    

382
07:33:23,280 --> 07:33:29,520
面临着我应该这样做还是只使用呃firebase的挑战                    

383
07:33:29,520 --> 07:33:34,240
我选择并且我选择了firebase只是因为它是谷歌的产品                    

384
07:33:34,240 --> 07:33:37,600
有点像无服务器，所以它是一个服务器，你实际上不需要                    

385
07:33:37,600 --> 07:33:42,558
这样写代码，所以我选择了firebase，因为它很简单                    

386
07:33:42,558 --> 07:33:48,080
这样我们就可以在没有太多工作的情况下让后端正常运行                    

387
07:33:48,080 --> 07:33:51,440
我希望你明白这就是我们不做定制的原因                    

388
07:33:51,440 --> 07:33:55,040
后端但firebase是一个非常可靠的呃                    

389
07:33:55,040 --> 07:34:00,558
由谷歌创建的后端，它拥有谷歌的所有财务支持                    

390
07:34:00,558 --> 07:34:04,080
进一步的发展和支持，所以你                    

391
07:34:04,080 --> 07:34:07,280
如果您正在选择火力基地并且您在想哦，是吗？                    

392
07:34:07,280 --> 07:34:11,840
将继续得到支持 快速回答是肯定的                    

393
07:34:11,840 --> 07:34:16,000
得到支持它是如此之大，每个人都在使用它，它太大了，甚至无法失败我                    

394
07:34:16,000 --> 07:34:19,200
至少现在会说                    

395
07:34:19,200 --> 07:34:24,240
呃即将到来的呃未来几年我会说                    

396
07:34:24,240 --> 07:34:28,160
我无法预测未来 10 20 年的未来，但                    

397
07:34:28,160 --> 07:34:32,000
现在你不必担心，所以                    

398
07:34:32,000 --> 07:34:35,920
嗯，这就是我们要做的                    

399
07:34:35,920 --> 07:34:39,280
这一章我只是把它记在我的笔记里                    

400
07:34:39,280 --> 07:34:45,520
现在以前当 uh flutter 在 2020 年甚至开始时出现                    

401
07:34:45,520 --> 07:34:50,000
如果您想与 2021 年的                    

402
07:34:50,000 --> 07:34:53,120
firebase 你必须做很多自定义工作                    

403
07:34:53,120 --> 07:34:57,760
现在在最新版本的颤振中                    

404
07:34:57,760 --> 07:35:01,760
有一个命令可以从你的                    

405
07:35:01,760 --> 07:35:08,080
终端它被称为flutter fire cli和这个命令                    

406
07:35:08,080 --> 07:35:12,718
太棒了，因为就像您以前必须手动完成的工作一样                    

407
07:35:12,718 --> 07:35:17,760
自定义工作拖动文件和 p 列表和 jsons 配置应用程序 ID                    

408
07:35:17,760 --> 07:35:23,040
等等，这是一项艰巨的任务，很多开发人员                    

409
07:35:23,040 --> 07:35:28,320
在这个过程中会犯很多错误，而且效果不好，所以                    

410
07:35:28,320 --> 07:35:31,360
嗯，现在有一个命令，你可以                    

411
07:35:31,360 --> 07:35:35,280
从您的终端发出，允许您完成所有自定义工作                    

412
07:35:35,280 --> 07:35:39,600
但它会为您完成，因此您不必手动执行此操作                    

413
07:35:39,600 --> 07:35:43,360
正如我在这里提供的，有一个链接我要打开那个链接                    

414
07:35:43,360 --> 07:35:48,240
如果我可以在某个地方让我们看看我是否可以带上 safari                    

415
07:35:48,240 --> 07:35:53,440
它在错误的屏幕中打开，我将把那个屏幕带到这里                    

416
07:35:53,440 --> 07:35:58,718
所以你会看到它以及放大屏幕并放大                    

417
07:35:58,718 --> 07:36:03,040
字体，所以它更明显，所以你可以看到它说 fluffifier                    

418
07:36:03,040 --> 07:36:06,000
概述，它说要了解 Firebase                    

419
07:36:06,000 --> 07:36:09,280
Flutter 我们建议从 get to 开始                    

420
07:36:09,280 --> 07:36:12,798
知道用于颤振代码实验室和视频的firebase，所以如果有视频，这里有                    

421
07:36:12,798 --> 07:36:16,558
你想看它，呃，如果你是的话，它说没关系                    

422
07:36:16,558 --> 07:36:20,558
迁移现有项目，然后查看迁移指南，如果迁移                    

423
07:36:20,558 --> 07:36:23,840
如果您不是来自软件，那么您不熟悉该术语                    

424
07:36:23,840 --> 07:36:27,360
工程师背景迁移经济，所以你有一个现有的东西，你想要                    

425
07:36:27,360 --> 07:36:30,958
让它更新                    

426
07:36:30,958 --> 07:36:35,440
并在其中放入新内容，这样您就可以从旧的信息中迁移信息                    

427
07:36:35,440 --> 07:36:38,638
项目到新的所以但在这种情况下我们不必担心                    

428
07:36:38,638 --> 07:36:43,360
关于那个，因为我们已经创建了一个全新的项目，所以没有现有的                    

429
07:36:43,360 --> 07:36:47,760
我们必须担心的应用程序中的firebase安装                    

430
07:36:47,760 --> 07:36:53,040
这里有很多信息，你可以看到它说使用 cli 等                    

431
07:36:53,040 --> 07:36:56,638
这实际上就是我们现在要做的                    

432
07:36:56,638 --> 07:37:02,000
我们将看看如何安装flutter fire cli                    

433
07:37:02,000 --> 07:37:05,920
你可以在这里看到它说你应该执行 dart pop global activate                    

434
07:37:05,920 --> 07:37:09,520
flussifier cli 然后你发出颤动的火                    

435
07:37:09,520 --> 07:37:14,638
Flussifier 配置所以让我们首先从这里复制这段代码复制它并                    

436
07:37:14,638 --> 07:37:18,878
我要打开我的终端，我要增加我的                    

437
07:37:18,878 --> 07:37:23,360
终端，所以您实际上可以看到这里发生了什么，好吧，所以我要粘贴                    

438
07:37:23,360 --> 07:37:27,840
那个命令进来，我会让它做它的事情                    

439
07:37:27,840 --> 07:37:31,440
我之前已经完成了这个安装，所以对我来说它实际上可能会                    

440
07:37:31,440 --> 07:37:34,398
稍微平滑一点或更快一点，但对你来说可能需要一点时间                    

441
07:37:34,398 --> 07:37:38,320
稍长一点，具体取决于您之前是否已经安装了平面 rsli 或                    

442
07:37:38,320 --> 07:37:41,280
现在不是这样，下一个安装                    

443
07:37:41,280 --> 07:37:45,920
你要做的就是你实际上需要确保我的意思是                    

444
07:37:45,920 --> 07:37:48,798
文档中未提供，但这是我提供的                    

445
07:37:48,798 --> 07:37:53,120
你是因为我知道我以前亲自遇到过这个问题                    

446
07:37:53,120 --> 07:37:55,680
所以嗯                    

447
07:37:55,680 --> 07:38:01,520
这个颤动的火cli它会给你这个命令，你可以在这里看到颤动                    

448
07:38:01,520 --> 07:38:07,200
火好吧，如果我在我的终端说哪个扑火                    

449
07:38:07,200 --> 07:38:11,360
你可以看到这个文件夹中安装了flutter fire所以它在                    

450
07:38:11,360 --> 07:38:17,200
我电脑上的个人文件夹 slash dot pop cache slash bin 然后                    

451
07:38:17,200 --> 07:38:21,840
就在那里，不幸的是，当您安装大量 fire cli 时，它不会                    

452
07:38:21,840 --> 07:38:26,240
它不会告诉您的终端它的安装位置，所以如果您立即                    

453
07:38:26,240 --> 07:38:31,040
在那之后说扑火然后等等等等，就像这里提到的那样                    

454
07:38:31,040 --> 07:38:35,120
分类器配置你的终端很可能会说什么是颤动                    

455
07:38:35,120 --> 07:38:36,798
这么火                    

456
07:38:36,798 --> 07:38:39,360
它没有在文档中提供，但我在这里告诉你                    

457
07:38:39,360 --> 07:38:42,958
正如您在标题中看到的那样，您需要告诉终端在哪里颤动                    

458
07:38:42,958 --> 07:38:47,280
fire实际上是安装好的所以                    

459
07:38:47,280 --> 07:38:51,360
嗯，那么你需要做的就是呃做                    

460
07:38:51,360 --> 07:38:54,638
正如我在这里提到的，你可以看到我说过你需要改变你的路径                    

461
07:38:54,638 --> 07:39:00,638
并包括你的主文件夹斜线弹出缓存斜线箱所以如果我去我的                    

462
07:39:00,638 --> 07:39:06,840
终端配置如果我说嗯                    

463
07:39:06,840 --> 07:39:11,200
vshrc 你可以在顶部的某个地方看到我                    

464
07:39:11,200 --> 07:39:17,280
应该在那里你看到它说出口路径，我说好吧我的新路径是                    

465
07:39:17,280 --> 07:39:22,958
旧路径加上这里使用这个呃双列或列                    

466
07:39:22,958 --> 07:39:26,718
我在屏幕底部的标题中提到的这个文件夹                    

467
07:39:26,718 --> 07:39:31,120
所以你也需要这样做，所以我会时不时地退出 vim                    

468
07:39:31,120 --> 07:39:37,040
你已经做到了，确保你来源                    

469
07:39:37,040 --> 07:39:40,398
配置所以在我的情况下我不得不说来源                    

470
07:39:40,398 --> 07:39:45,520
zsh rc 这将读取路径 um                    

471
07:39:45,520 --> 07:39:49,360
新鲜的，否则你也可以走大路，喜欢                    

472
07:39:49,360 --> 07:39:52,878
关闭您的终端完全终止，然后重新启动它                    

473
07:39:52,878 --> 07:39:56,958
依次读取配置并为扑火带来一条路径                    

474
07:39:56,958 --> 07:40:00,240
存在                    

475
07:40:00,240 --> 07:40:03,920
如果你不想采购这就是我的意思                    

476
07:40:03,920 --> 07:40:07,120
所以现在我们已经讨论过了，现在让我们                    

477
07:40:07,120 --> 07:40:12,080
其实说说firebase cli是什么                    

478
07:40:12,080 --> 07:40:17,440
这是一个嗯实际上让我确保我勾选所有这些项目                    

479
07:40:17,440 --> 07:40:20,958
我谈到了                    

480
07:40:20,958 --> 07:40:24,798
现在让我将它们标记为已完成                    

481
07:40:24,798 --> 07:40:29,200
在我的笔记中                    

482
07:40:29,200 --> 07:40:33,040
嗯所以你现在需要做的就是我们                    

483
07:40:33,040 --> 07:40:37,040
现在需要做的就是说说firebase cli                    

484
07:40:37,040 --> 07:40:40,398
嗯，正如你所看到的，这是一个帮助我们的 cli                    

485
07:40:40,398 --> 07:40:43,760
现在就从我们的终端与 firebase 交互                    

486
07:40:43,760 --> 07:40:47,440
嗯，这曾经是手动完成的                    

487
07:40:47,440 --> 07:40:51,520
以前你必须去firebase并喜欢创建一个整体                    

488
07:40:51,520 --> 07:40:55,760
单独的项目，然后将该项目集成到您的牙线应用程序中，这样                    

489
07:40:55,760 --> 07:40:58,798
你不必再做任何事情了                    

490
07:40:58,798 --> 07:41:03,920
嗯你现在需要做的是下一步是安装firebase cli                    

491
07:41:03,920 --> 07:41:09,600
它为您完成所有这些工作，所以我在这里提供了您可以看到的                    

492
07:41:09,600 --> 07:41:13,600
这里有一个命令可以发出                    

493
07:41:13,600 --> 07:41:19,600
然后你可以去firebase google com docs cli install cli mac blah blah                    

494
07:41:19,600 --> 07:41:24,080
所以我实际上要去那个地方                    

495
07:41:24,080 --> 07:41:29,280
在我的网络浏览器中，这样你就可以看到我在做什么                    

496
07:41:29,280 --> 07:41:33,040
在这里，你会看到有很多                    

497
07:41:33,040 --> 07:41:36,798
这里提供的信息我要提出呃我要做的                    

498
07:41:36,798 --> 07:41:39,600
尺寸大一点，我要把我的脸带到右下角                    

499
07:41:39,600 --> 07:41:42,958
也可以在屏幕上看到更多信息                    

500
07:41:42,958 --> 07:41:46,718
你可以看到mac或linux然后有                    

501
07:41:46,718 --> 07:41:50,320
是的，让我们去这里吧，你可以使用为宏 linux 安装 firebase cli                    

502
07:41:50,320 --> 07:41:55,120
以下选项之一，所以独立二进制等等等等，所以你                    

503
07:41:55,120 --> 07:41:59,040
需要查看有关如何安装的文档                    

504
07:41:59,040 --> 07:42:03,360
无论您使用的是 mac 还是计算机上的 firebase cli                    

505
07:42:03,360 --> 07:42:09,280
无论您使用的是linux还是windows                    

506
07:42:09,280 --> 07:42:11,920
所以在你完成之后                    

507
07:42:11,920 --> 07:42:19,600
安装了您实际需要的firebase cli                    

508
07:42:19,600 --> 07:42:23,760
使用它登录您的帐户                    

509
07:42:23,760 --> 07:42:26,958
firebase cli                    

510
07:42:26,958 --> 07:42:30,398
所以让我们这样做让我真正进入                    

511
07:42:30,398 --> 07:42:37,440
嗯，让我们在 Visual Studio 代码中提出我们的项目，所以我会带来它                    

512
07:42:37,440 --> 07:42:41,440
在这里并提出正确的标题                    

513
07:42:41,440 --> 07:42:44,558
所以你明白我们在谈论什么我们将谈论firebase登录                    

514
07:42:44,558 --> 07:42:49,200
当你想集成你的颤振时，你会看到注销                    

515
07:42:49,200 --> 07:42:52,798
使用 firebase 的应用程序，您需要创建一个                    

516
07:42:52,798 --> 07:42:56,840
firebase 项目在称为 firebase 控制台的东西上                    

517
07:42:56,840 --> 07:43:03,600
所以这个项目几乎是你的 Firebase 后端的配置                    

518
07:43:03,600 --> 07:43:08,478
在他们网站上的firebase控制台上，所以你需要配置一个后端                    

519
07:43:08,478 --> 07:43:13,360
我们现在需要做的是在我们可以真正重新配置它之前                    

520
07:43:13,360 --> 07:43:19,040
在您的终端中，您需要告诉 firebase 您拥有什么用户，因为我                    

521
07:43:19,040 --> 07:43:23,040
个人有很多谷歌账户，任何一个谷歌账户都可以                    

522
07:43:23,040 --> 07:43:28,240
可能有很多颤振对不起很多firebase项目                    

523
07:43:28,240 --> 07:43:32,878
因为 firebase 项目与您的谷歌帐户相关联，好吧                    

524
07:43:32,878 --> 07:43:39,920
现在为了让我们的 firebase cli 了解它需要在哪里创建                    

525
07:43:39,920 --> 07:43:44,718
项目，你需要告诉它用一个帐户登录，所以                    

526
07:43:44,718 --> 07:43:48,558
这样做的方法是打开终端，正如你所看到的，这是我的                    

527
07:43:48,558 --> 07:43:51,520
终端，我要清理一下                    

528
07:43:51,520 --> 07:43:56,718
我也要调出字体，所以它非常大，没关系                    

529
07:43:56,718 --> 07:44:01,280
所以你现在需要做的是告诉它登录                    

530
07:44:01,280 --> 07:44:08,000
所以我会说firebase登录没问题                    

531
07:44:08,000 --> 07:44:11,840
它会完成它的工作，它告诉我我已经用这个登录了                    

532
07:44:11,840 --> 07:44:15,840
帐户 如果您还没有使用帐户登录，那么您会收到提示                    

533
07:44:15,840 --> 07:44:21,840
告诉你好吧，你想用哪个电子邮件和密码登录所以                    

534
07:44:21,840 --> 07:44:24,798
现在，嗯，它实际上可能是值得的                    

535
07:44:24,798 --> 07:44:28,638
对你说实话，让我现在退出，以便你看到整个过程                    

536
07:44:28,638 --> 07:44:32,478
所以我有点犹豫要退出，因为                    

537
07:44:32,478 --> 07:44:36,878
呃，我实际上已经用安全密钥保护了我的谷歌帐户                    

538
07:44:36,878 --> 07:44:40,160
所以我这里没有钥匙，我                    

539
07:44:40,160 --> 07:44:44,798
希望我能找到它                    

540
07:44:44,798 --> 07:44:48,478
和你一起经历这个过程，这样你就会看到它是如何工作的，我会                    

541
07:44:48,478 --> 07:44:52,558
注销所以让我们在这里注销                    

542
07:44:52,558 --> 07:44:57,760
所以我说的是firebase logout，它说有一个新版本的                    

543
07:44:57,760 --> 07:45:04,080
firebase 工具，所以让我们在这里复制它，我会看看我们是否可以安装                    

544
07:45:04,080 --> 07:45:07,840
嗯它说什么 npm install                    

545
07:45:07,840 --> 07:45:15,520
全球所以让我们在这里复制全球firebase工具好吧                    

546
07:45:15,520 --> 07:45:19,520
如果它可以完成它的工作那么在我们可以继续之前                    

547
07:45:19,520 --> 07:45:25,280
npm 是一种叫做节点包管理器的东西，它有点像                    

548
07:45:25,280 --> 07:45:29,200
如果您正在使用 node.js 如果您正在开发实例节点                    

549
07:45:29,200 --> 07:45:32,080
您不必知道的应用程序                    

550
07:45:32,080 --> 07:45:37,600
关于它只是一种方式它就像一个用于创建应用程序的工具包                    

551
07:45:37,600 --> 07:45:42,080
删除现有文件并重试或强制 npm 好                    

552
07:45:42,080 --> 07:45:48,798
npm install global with dash dash force 我认为                    

553
07:45:48,798 --> 07:45:51,360
是的，所以它就像一个依赖                    

554
07:45:51,360 --> 07:45:55,840
节点应用程序和 firebase 工具的管理是                    

555
07:45:55,840 --> 07:46:00,240
一个节点应用程序，这就是你需要知道的一切，我的意思是那里有                    

556
07:46:00,240 --> 07:46:04,160
有关于 node 和 node.js 的课程，那么你实际上可以有一个                    

557
07:46:04,160 --> 07:46:09,120
看看它们是如何工作的等等，所以我不打算详细说明，所以                    

558
07:46:09,120 --> 07:46:13,440
在我可以之前，我的意思是我实际上可以在没有的情况下完成 firebase 注销                    

559
07:46:13,440 --> 07:46:17,840
所有这一切，但我只是想告诉你，事情没有计划好，我做不到                    

560
07:46:17,840 --> 07:46:21,200
在这里完美地计划事情，当我试图注销时，它说哦，有一个                    

561
07:46:21,200 --> 07:46:24,240
新版本的节点可用等等等等                    

562
07:46:24,240 --> 07:46:28,000
现在我想抱歉有一个新版本的firebase工具可用                    

563
07:46:28,000 --> 07:46:31,200
你可以使用你可以用 npm 安装的，所以                    

564
07:46:31,200 --> 07:46:37,680
我这样做了，所以现在让我们说呃 firebase logout                    

565
07:46:37,680 --> 07:46:40,840
好的，所以 logit 实际上是成功的                    

566
07:46:40,840 --> 07:46:46,240
以前，所以现在让我们说firebase登录                    

567
07:46:46,240 --> 07:46:49,760
它说允许firebase收集cli使用情况和错误报告                    

568
07:46:49,760 --> 07:46:53,440
老实说，作为开发人员，我要说的信息                    

569
07:46:53,440 --> 07:46:59,440
你可能会倾向于说不喜欢这里，但如果你是开发人员，你可以                    

570
07:46:59,440 --> 07:47:02,878
穿上你的鞋，你可以把自己换成另一个开发者工作的鞋                    

571
07:47:02,878 --> 07:47:07,520
在谷歌为 firebase 工作，他们正试图获取一些关于                    

572
07:47:07,520 --> 07:47:12,558
您如何使用 cli 以及他们是否可以从您对 cli 的使用中学习                    

573
07:47:12,558 --> 07:47:17,120
为了使 cli 更好，所以我通常对这些事情说是                    

574
07:47:17,120 --> 07:47:20,878
特别是如果有开发人员请求许可，但您可以拒绝                    

575
07:47:20,878 --> 07:47:23,440
如果你愿意，我会说是的                    

576
07:47:23,440 --> 07:47:27,440
你可以看到这里然后这里提供了一个屏幕要求我登录                    

577
07:47:27,440 --> 07:47:30,958
使用我的一个谷歌帐户                    

578
07:47:30,958 --> 07:47:34,000
我要选择我公司的 google 帐户，因为这是我通常使用的                    

579
07:47:34,000 --> 07:47:38,398
使用好吧，所以我要选择它，它说firebase cli想要                    

580
07:47:38,398 --> 07:47:42,798
访问您的谷歌帐户，它说好的，它将使用什么权限                    

581
07:47:42,798 --> 07:47:45,520
如果您愿意，可以查看此信息                    

582
07:47:45,520 --> 07:47:49,200
如果它与您有关 如果您担心这些事情中的任何一个                    

583
07:47:49,200 --> 07:47:52,638
请阅读此处提供的链接                    

584
07:47:52,638 --> 07:47:55,760
我只想说允许，一旦完成，你就会看到                    

585
07:47:55,760 --> 07:48:00,240
它说firebase cli登录成功，然后你几乎可以关闭                    

586
07:48:00,240 --> 07:48:06,080
此窗口安全，现在显示以 pixelityav 登录                    

587
07:48:06,080 --> 07:48:11,360
gmail.com，所以我可以再次说 firebase login，这将是提示                    

588
07:48:11,360 --> 07:48:16,718
您在此视频的开头看到您已正常登录                    

589
07:48:16,718 --> 07:48:19,360
很好，现在有很多信息                    

590
07:48:19,360 --> 07:48:25,520
您已使用 firebase cli 登录，您实际上需要配置一个                    

591
07:48:25,520 --> 07:48:31,280
firebase 项目没问题，我们使用我们的 flutter fire cli 来做到这一点                    

592
07:48:31,280 --> 07:48:34,958
安装在本章开头使用这个命令 dart pop                    

593
07:48:34,958 --> 07:48:41,040
全局激活好吧，所以你现在需要做的是                    

594
07:48:41,040 --> 07:48:44,558
发出扑火配置                    

595
07:48:44,558 --> 07:48:48,798
命令就像我在左侧显示的那样，所以我要做                    

596
07:48:48,798 --> 07:48:54,398
那个颤动的火配置，所以它会获取所有的项目                    

597
07:48:54,398 --> 07:48:59,920
我已经在我的谷歌帐户中创建了，它说好的这些                    

598
07:48:59,920 --> 07:49:04,798
有没有可用的项目 flash chat fluffer note 猜测 chords 随机                    

599
07:49:04,798 --> 07:49:09,360
项目测试，或者您可以创建一个新项目                    

600
07:49:09,360 --> 07:49:12,878
现在我要选择在这里创建一个新项目                    

601
07:49:12,878 --> 07:49:16,000
它说好的输入你的项目ID                    

602
07:49:16,000 --> 07:49:20,798
新的 firebase 项目，所以我在这里要做的是输入我的                    

603
07:49:20,798 --> 07:49:23,920
笔记好吧                    

604
07:49:23,920 --> 07:49:28,638
如您所见，我的笔记是我们的颤振项目的名称                    

605
07:49:28,638 --> 07:49:32,320
好吧，所以我的笔记现在我要说好的，我要创建相同的                    

606
07:49:32,320 --> 07:49:37,280
项目叫我的笔记好吧我要在这里按回车                    

607
07:49:37,280 --> 07:49:40,718
我说是的，我要创建它，它可能是                    

608
07:49:40,718 --> 07:49:44,718
我的意思是你可以看到我们立即得到一个错误说                    

609
07:49:44,718 --> 07:49:47,200
这个项目已经存在，你可以看到                    

610
07:49:47,200 --> 07:49:49,760
嗯，命令等等等等，是的，失败了                    

611
07:49:49,760 --> 07:49:52,558
创建一个项目，因为已经有一个项目                    

612
07:49:52,558 --> 07:49:56,878
使用 id mynotes 请使用唯一的项目 id 重试，所以                    

613
07:49:56,878 --> 07:50:01,120
这基本上是在告诉我们，嘿，其他人已经创建了我的笔记，它                    

614
07:50:01,120 --> 07:50:04,958
不是我们创建的项目之一，因为如果你有一个                    

615
07:50:04,958 --> 07:50:08,718
如果你打开你的网络浏览器并说                    

616
07:50:08,718 --> 07:50:14,240
firebase 控制台 转到您的 firebase 控制台                    

617
07:50:14,240 --> 07:50:19,360
嗯，让我确保我使用我的像素帐户登录是的                    

618
07:50:19,360 --> 07:50:23,680
如果我看看让我们看看解雇让我们                    

619
07:50:23,680 --> 07:50:27,920
查看开始使用 firebase 帮助您观看                    

620
07:50:27,920 --> 07:50:30,798
演示是的，我们使用该帐户登录                    

621
07:50:30,798 --> 07:50:34,398
所以我实际上可以看到也许我没有在这里设置任何项目                    

622
07:50:34,398 --> 07:50:37,600
有点奇怪，因为我们实际上看到有一些                    

623
07:50:37,600 --> 07:50:41,440
在此帐户下设置的项目，所以我不明白为什么 firebase                    

624
07:50:41,440 --> 07:50:44,878
控制台，所以它没有显示他们                    

625
07:50:44,878 --> 07:50:49,280
由 google 支持的 firebase 控制台 firebase 控制台 google                    

626
07:50:49,280 --> 07:50:54,798
是的，他们很好，所以它在 console.firebase.google 上                    

627
07:50:54,798 --> 07:51:00,558
我可以看到我的笔记应用程序不是我拥有的应用程序                    

628
07:51:00,558 --> 07:51:05,840
还没有创造，所以它说的是全球                    

629
07:51:05,840 --> 07:51:09,760
firebase 项目有一个标识符，现在我输入了一个标识符                    

630
07:51:09,760 --> 07:51:13,120
已经采取了所以我要做什么然后我要去                    

631
07:51:13,120 --> 07:51:18,878
发出相同的命令 uh firebase flutter fire configure 和这个                    

632
07:51:18,878 --> 07:51:22,080
是时候我将提供有关项目名称的更多信息                    

633
07:51:22,080 --> 07:51:26,878
所以这让它更加独特所以我要选择                    

634
07:51:26,878 --> 07:51:29,920
创建一个新项目然后在此处以该名称                    

635
07:51:29,920 --> 07:51:36,558
项目我要说 mynotes 扑动项目                    

636
07:51:36,558 --> 07:51:40,000
也许有人也已经采取了这个                    

637
07:51:40,000 --> 07:51:42,638
我不知道                    

638
07:51:42,638 --> 07:51:51,760
所以它在做它的事情它基本上在做它的魔法所以让我们看看                    

639
07:51:51,760 --> 07:51:55,440
我的意思是这没关系，这需要一些时间                    

640
07:51:55,440 --> 07:51:58,798
正在做很多工作，就像 ios 项目和 android 项目一样设置                    

641
07:51:58,798 --> 07:52:02,478
等等，所以这件事过去需要很多时间                    

642
07:52:02,478 --> 07:52:06,638
用手做，可能是这个时间的 10 倍                    

643
07:52:06,638 --> 07:52:11,360
cli 正在占用，所以我并不担心它需要一些时间，所以                    

644
07:52:11,360 --> 07:52:14,718
在这里它实际上会告诉你你想选择哪些平台                    

645
07:52:14,718 --> 07:52:19,840
就像我说的那样，flutter 允许你创建 web 应用程序 android                    

646
07:52:19,840 --> 07:52:23,360
应用程序 ios 应用程序还有呃                    

647
07:52:23,360 --> 07:52:27,680
桌面应用程序或四个平台，然后在这里说好的，哪些可以                    

648
07:52:27,680 --> 07:52:31,600
你现在想为我们的项目创建你可以                    

649
07:52:31,600 --> 07:52:35,440
说android和ios你不用担心就好了                    

650
07:52:35,440 --> 07:52:40,240
嗯 mac os 或 linux 或 windows 和 web 但是                    

651
07:52:40,240 --> 07:52:43,920
如果你愿意，你有能力做到这一点，所以选择 android 和 ios                    

652
07:52:43,920 --> 07:52:53,760
现在按回车，它会做它的工作                    

653
07:52:53,760 --> 07:52:58,478
所以让它发挥它的魔力                    

654
07:52:58,478 --> 07:53:03,360
现在这是你必须手动完成的令人惊奇的部分                    

655
07:53:03,360 --> 07:53:08,160
以前必须像您的申请一样去注册                    

656
07:53:08,160 --> 07:53:11,440
苹果然后去注册包标识符然后把包                    

657
07:53:11,440 --> 07:53:15,520
在firebase中手动识别标识符，然后下载一些文件将这些文件放入                    

658
07:53:15,520 --> 07:53:19,200
你的 ios 和 android 项目现在你不必再这样做了                    

659
07:53:19,200 --> 07:53:22,798
在这里它只是告诉你你使用哪个包标识符                    

660
07:53:22,798 --> 07:53:26,798
项目，如果你还记得我们之前创建 Flutter 项目的时候                    

661
07:53:26,798 --> 07:53:33,360
一开始我们说flutter create，然后是一个对我来说是s的组织                    

662
07:53:33,360 --> 07:53:35,920
e dot pixolity 你还记得那个命令吗                    

663
07:53:35,920 --> 07:53:40,398
有点像嗯，我的意思是，如果我打开终端，也许我                    

664
07:53:40,398 --> 07:53:45,280
甚至可以回到它颤振创建你记得这个命令我会放大吗                    

665
07:53:45,280 --> 07:53:48,878
稍微深入一点，这样你就可以看得更清楚，这就是我们实际创建的方式                    

666
07:53:48,878 --> 07:53:54,000
我们的项目我们说flutter create.org，因为他在我的笔记中像素化了所以捆绑                    

667
07:53:54,000 --> 07:53:57,680
此应用程序的标识符将是 sepixolity.mynotes                    

668
07:53:57,680 --> 07:54:02,398
但是，由于 sc 像素性对我来说是反向域，所以这不会                    

669
07:54:02,398 --> 07:54:06,000
你的情况，所以回到你是如何创建的                    

670
07:54:06,000 --> 07:54:09,840
使用您的组织名称的项目标识符，您现在拥有                    

671
07:54:09,840 --> 07:54:14,160
把它贴在这里，这样你就会看到我要说 s e                    

672
07:54:14,160 --> 07:54:19,280
像素点我的笔记好                    

673
07:54:19,280 --> 07:54:24,798
所以输入它，它将配置你的 ios                    

674
07:54:24,798 --> 07:54:30,320
给你的项目                    

675
07:54:30,320 --> 07:54:33,920
就是这样，现在有了                    

676
07:54:33,920 --> 07:54:38,718
设置项目运行所需的一切，所以我的意思是你可以                    

677
07:54:38,718 --> 07:54:42,718
可能只是觉得哦，这太少了，它实际上做了什么                    

678
07:54:42,718 --> 07:54:47,120
但对于长期使用 firebase 和 flutter 的我来说                    

679
07:54:47,120 --> 07:54:50,080
时间这一切都很神奇，因为它做了很多                    

680
07:54:50,080 --> 07:54:54,080
它实际上在 Firebase 控制台上配置了您的应用程序的工作                    

681
07:54:54,080 --> 07:54:59,760
注册了一个 android 和一个 ios 项目挂钩到这个 firebase 项目                    

682
07:54:59,760 --> 07:55:05,040
下载的配置文件将它们放置在您的正确位置                    

683
07:55:05,040 --> 07:55:08,558
应用程序，所以它做了很多工作，但你没有                    

684
07:55:08,558 --> 07:55:13,360
真的必须知道，所以现在如果你想看看                    

685
07:55:13,360 --> 07:55:17,280
如果你在这里看到它的结果，它的输出表明有一个标识符                    

686
07:55:17,280 --> 07:55:21,280
与您的 ios 应用相关联，然后有一个与                    

687
07:55:21,280 --> 07:55:25,760
你的安卓应用，这就是我们现在要做的                    

688
07:55:25,760 --> 07:55:30,478
现在让我们确保这些标识符是正确的，并且                    

689
07:55:30,478 --> 07:55:35,600
我们提供给 cli 的包标识符也放在                    

690
07:55:35,600 --> 07:55:40,160
配置文件正确所以复制这个例如 ios 标识符                    

691
07:55:40,160 --> 07:55:45,120
这是为你创建的，所以复制它，然后在你的整个                    

692
07:55:45,120 --> 07:55:49,360
项目，然后你会在这里找到一个小文件，让我把它记下来                    

693
07:55:49,360 --> 07:55:53,840
它被称为 firebaseoptions.dart                    

694
07:55:53,840 --> 07:55:59,600
所以这是配置 ios 的地方，让我这样带上，这样你就不会                    

695
07:55:59,600 --> 07:56:02,398
看到它，这就是 android 项目所在的位置                    

696
07:56:02,398 --> 07:56:08,638
配置你可以看到 um app id 就在这里，api key 是                    

697
07:56:08,638 --> 07:56:13,200
就在那里所以不用担心我的意思是你不应该显示你的 api 密钥                    

698
07:56:13,200 --> 07:56:19,520
和任何人的应用程序 ID 嗯，但是因为我正在为你开发这门课程，所以我                    

699
07:56:19,520 --> 07:56:23,040
必须证明它我不能只是去审查它但不要担心它                    

700
07:56:23,040 --> 07:56:26,878
你看到这个 um 视频的时候 你看到这个课程的时候 我已经                    

701
07:56:26,878 --> 07:56:30,080
已经从 firebase 中删除了这个项目，所以不会有任何                    

702
07:56:30,080 --> 07:56:33,600
所以涉及安全风险                    

703
07:56:33,600 --> 07:56:37,040
这样即使您知道应用程序 ID 上的 api 密钥，该项目也不会存在                    

704
07:56:37,040 --> 07:56:41,120
所以不用担心，但如果您正在开发自己的应用程序                    

705
07:56:41,120 --> 07:56:46,878
小心你与谁分享你的 api 密钥和应用程序 ID                    

706
07:56:46,878 --> 07:56:52,718
那是很多信息很多很多很多所以嗯                    

707
07:56:52,718 --> 07:56:59,280
我真的会在这里打勾，我们已经讨论过了                    

708
07:56:59,280 --> 07:57:04,798
我创建了一个新项目，是的，就是这样                    

709
07:57:04,798 --> 07:57:08,398
应该这样我也要去这里                    

710
07:57:08,398 --> 07:57:12,398
字幕，我可以看到我在这里有一些关于启用的信息                    

711
07:57:12,398 --> 07:57:17,040
multi-decks 和 multi-dex 是我们已经在                    

712
07:57:17,040 --> 07:57:21,120
上一章是 android 项目的第 10 章，所以                    

713
07:57:21,120 --> 07:57:25,280
现在一切都应该像以前一样工作，老实说，所以如果                    

714
07:57:25,280 --> 07:57:29,040
如果你正在开发，你在你的 Visual Studio 代码或 android Studio 中                    

715
07:57:29,040 --> 07:57:32,000
在您的带有 android studio 的颤振应用程序下，您还可以                    

716
07:57:32,000 --> 07:57:36,718
去选择你的设备现在在上一章中运行，你看到了                    

717
07:57:36,718 --> 07:57:40,558
本课程中的全部聊天内容我将使用安卓手机                    

718
07:57:40,558 --> 07:57:45,920
开发我们的应用程序，以便您可以选择使用 io 模拟器和 android                    

719
07:57:45,920 --> 07:57:49,920
模拟器或android手机或平板电脑或ios手机或平板电脑所以但我会                    

720
07:57:49,920 --> 07:57:56,160
使用真正的安卓手机，正如你所见，我们有能力调出 scr cpy                    

721
07:57:56,160 --> 07:58:02,878
镜像 android 屏幕所以我要把它带到这里                    

722
07:58:02,878 --> 07:58:06,558
稍微改变一下visual studio代码窗口的大小，这样你就可以看到                    

723
07:58:06,558 --> 07:58:10,558
android um 电话也在那里，然后我要做什么                    

724
07:58:10,558 --> 07:58:14,718
只是为了确保项目在我们完成所有这些工作之后运行                    

725
07:58:14,718 --> 07:58:19,200
这样我们就没有破坏任何东西真的让我们走吧                    

726
07:58:19,200 --> 07:58:23,040
调试应用程序对不起运行它没有调试和这个                    

727
07:58:23,040 --> 07:58:27,120
这就是为什么你会看到这是我们所做的所有工作的结果                    

728
07:58:27,120 --> 07:58:30,638
几乎什么都不像                    

729
07:58:30,638 --> 07:58:33,760
我的意思是说这听起来很有趣，因为我们做到了                    

730
07:58:33,760 --> 07:58:37,440
firebase 项目有很多工作，但你看不到任何东西                    

731
07:58:37,440 --> 07:58:40,718
屏幕，这就是你做软件开发的现实                    

732
07:58:40,718 --> 07:58:44,240
有时在做某事时付出很多努力，结果却不是                    

733
07:58:44,240 --> 07:58:48,638
马上就可以看到了，但是你在这做了什么                    

734
07:58:48,638 --> 07:58:52,240
章是你实际上只用几个命令设置了你的后端                    

735
07:58:52,240 --> 07:58:57,360
您安装了两个 cli，即您登录的 flutter fire cli 和 firebase cli                    

736
07:58:57,360 --> 07:59:02,398
使用 firebase cli，然后使用 flutter fire cli 设置后端                    

737
07:59:02,398 --> 07:59:04,798
现在好了，只是为了确保一切都设置好了                    

738
07:59:04,798 --> 07:59:08,398
正确启动你也可以打开你的网络浏览器我会在这里打开它                    

739
07:59:08,398 --> 07:59:12,958
我会说 console.firebase 和                    

740
07:59:12,958 --> 07:59:16,558
让我确保我们有                    

741
07:59:16,558 --> 07:59:20,558
我们的笔记应用在这里你可以看到我的node slatter项目                    

742
07:59:20,558 --> 07:59:23,760
你可以点击它，你可以看到它是如何为你设置的，你可以看到                    

743
07:59:23,760 --> 07:59:27,920
有一个 android 应用程序设置和一个 ios 应用程序设置所以                    

744
07:59:27,920 --> 07:59:31,520
你不必真的做任何事现在你可以做很多事情                    

745
07:59:31,520 --> 07:59:34,558
我们将在整个过程中实际使用的 firebase                    

746
07:59:34,558 --> 07:59:38,878
当然，但不是现在，只需确保您的                    

747
07:59:38,878 --> 07:59:45,280
通过登录 console.firebase.google.com 为您创建 firebase 项目                    

748
07:59:45,280 --> 07:59:48,160
许多点                    

749
07:59:48,160 --> 07:59:52,798
好的，我们已经讨论过这个，现在运行应用程序                    

750
07:59:52,798 --> 07:59:57,040
安卓手机，所以已经设置好了，所以我们没有                    

751
07:59:57,040 --> 08:00:00,718
既然你已经看到你已经建立了，现在就谈谈这个                    

752
08:00:00,718 --> 08:00:06,558
你的后端你准备好了，嗯，所以我可以说恭喜你                    

753
08:00:06,558 --> 08:00:10,080
现在按顺序                    

754
08:00:10,080 --> 08:00:13,360
android设置已经完成所以我可以看到我们没有设置                    

755
08:00:13,360 --> 08:00:18,080
然而，不得不谈论这个                    

756
08:00:18,080 --> 08:00:21,760
我们确实需要谈论的是我们将要讨论的                    

757
08:00:21,760 --> 08:00:26,558
在下一章讨论所以                    

758
08:00:26,558 --> 08:00:31,680
在下一章中，我们将第一次在本课程中讨论                    

759
08:00:31,680 --> 08:00:36,080
关于呃页脚代码的实际想法或                    

760
08:00:36,080 --> 08:00:41,600
代码我们将开始编写一个简单的注册屏幕所以使用这个                    

761
08:00:41,600 --> 08:00:46,320
注册屏幕 我们现在假设的用户要去                    

762
08:00:46,320 --> 08:00:50,638
看着屏幕说好吧我不                    

763
08:00:50,638 --> 08:00:54,080
有这个应用程序的帐户我要注册自己所以                    

764
08:00:54,080 --> 08:00:58,000
那么您将能够他们将能够进入                    

765
08:00:58,000 --> 08:01:03,520
他们的电子邮件地址他们选择的密码按下某种按钮                    

766
08:01:03,520 --> 08:01:08,000
然后我们将与 firebase 交谈并说这是一个新用户注册                    

767
08:01:08,000 --> 08:01:13,840
好吧，这就是下一章的全部内容，即第 12 章。所以抓住一个                    

768
08:01:13,840 --> 08:01:16,558
一杯咖啡 一杯茶 随心所欲                    

769
08:01:16,558 --> 08:01:20,878
那就振作起来，我们下一章见                    

770
08:01:20,878 --> 08:01:24,718
你好，欢迎来到这个过滤器课程的第 12 章                    

771
08:01:24,718 --> 08:01:28,080
在这一章中，我很兴奋我们将要谈论                    

772
08:01:28,080 --> 08:01:33,200
一个基本的注册屏幕，直到此时我们一直在真正配置                    

773
08:01:33,200 --> 08:01:36,718
我的意思是，如果我们按时间顺序进行，我们已经介绍了我们已经走了                    

774
08:01:36,718 --> 08:01:40,080
通过这么多章节来谈论飞镖及其基础知识，甚至更多                    

775
08:01:40,080 --> 08:01:44,478
高级主题，例如泛型                    

776
08:01:44,478 --> 08:01:49,440
然后一旦我们这样做了，我们                    

777
08:01:49,440 --> 08:01:53,680
基本上开始学习建立我们的                    

778
08:01:53,680 --> 08:01:56,958
之后还有 iphone 和 android 应用程序                    

779
08:01:56,958 --> 08:02:01,680
对不起 iphone 和 android 应用程序以及证书配置文件和                    

780
08:02:01,680 --> 08:02:06,398
让 scr cpy 工作，所以在此之前有很多关于这些的信息                    

781
08:02:06,398 --> 08:02:10,718
指出这么多小时的信息，你可以回去观看                    

782
08:02:10,718 --> 08:02:14,320
我强烈建议你真的这样做，因为我已经解释过了                    

783
08:02:14,320 --> 08:02:19,040
一切都如此广泛的细节，我觉得                    

784
08:02:19,040 --> 08:02:22,320
一次又一次地解释所有这些事情对双方来说都是浪费时间                    

785
08:02:22,320 --> 08:02:24,320
你和我和                    

786
08:02:24,320 --> 08:02:28,160
在本章中，我们将使用所有这些信息                    

787
08:02:28,160 --> 08:02:31,280
我们已经从前面的章节中学到并开始实际创建一个                    

788
08:02:31,280 --> 08:02:34,478
注册屏幕 在我们的浮动中的一个简单的注册屏幕                    

789
08:02:34,478 --> 08:02:39,600
与我们在                    

790
08:02:39,600 --> 08:02:44,160
如果我没记错的话，请看前一章                    

791
08:02:44,160 --> 08:02:47,840
尚未设置您的 Firebase 应用后端                    

792
08:02:47,840 --> 08:02:51,680
或者至少我的意思是我们还没有真正设置我们喜欢的任何东西                    

793
08:02:51,680 --> 08:02:55,600
好吧，是的，实际上已经设置好了，是的，我们可以说设置，但是我们还没有                    

794
08:02:55,600 --> 08:02:59,520
配置如此详细，就像我们已经设置好了一样                    

795
08:02:59,520 --> 08:03:03,600
如果你想的话，请看那一章                    

796
08:03:03,600 --> 08:03:07,760
在你继续本章之前                    

797
08:03:07,760 --> 08:03:10,718
我要在这里查看我的字幕，并确保我可以向您展示                    

798
08:03:10,718 --> 08:03:14,798
正确的标题现在我们需要在本章中做些什么                    

799
08:03:14,798 --> 08:03:18,718
是开始在我们的注册屏幕上工作，我要做的是                    

800
08:03:18,718 --> 08:03:22,798
为您显示标题，以便您知道我们将要做什么                    

801
08:03:22,798 --> 08:03:25,600
你需要做的第一件事就是带上你的                    

802
08:03:25,600 --> 08:03:29,840
Visual Studio 代码或您选择的编辑器                    

803
08:03:29,840 --> 08:03:33,120
在屏幕上，所以我要这样做，然后我要带上我的                    

804
08:03:33,120 --> 08:03:37,440
使用 scrcpy 镜像在屏幕上的 android 手机                    

805
08:03:37,440 --> 08:03:40,878
然后我看看我能不能把我的脸移到右边让你能看到一点                    

806
08:03:40,878 --> 08:03:46,958
更大的屏幕，我们现在需要做的就是去                    

807
08:03:46,958 --> 08:03:51,040
在这个主要的 dart 文件中，现在删除所有评论                    

808
08:03:51,040 --> 08:03:55,360
如果您来自设计背景或产品所有者，或者像这样                    

809
08:03:55,360 --> 08:03:58,240
在任何不是背景的地方                    

810
08:03:58,240 --> 08:04:01,520
如果您来自这些背景，那么您与软件开发相关                    

811
08:04:01,520 --> 08:04:06,240
可能不知道评论是什么，但是我现在告诉你评论是一块                    

812
08:04:06,240 --> 08:04:09,840
写入源文件中的文本信息片段，例如                    

813
08:04:09,840 --> 08:04:15,200
这个主要的 dart 文件不会转换为实际代码，所以它是                    

814
08:04:15,200 --> 08:04:19,120
通常为其他开发人员或任何人放置在那里的信息                    

815
08:04:19,120 --> 08:04:22,398
正在查看代码，以便他们更好地理解代码                    

816
08:04:22,398 --> 08:04:24,718
可以在 dart 中创建好的评论                    

817
08:04:24,718 --> 08:04:30,558
不同的方式，但我的意思是最常见的方式是                    

818
08:04:30,558 --> 08:04:33,040
如您所见，带有双斜杠                    

819
08:04:33,040 --> 08:04:35,920
这里和一个空格，然后是一些文字                    

820
08:04:35,920 --> 08:04:39,440
所以我现在需要你进入                    

821
08:04:39,440 --> 08:04:42,638
您的主要飞镖文件，我们将立即删除所有这些评论                    

822
08:04:42,638 --> 08:04:47,520
因为他们现在基本上给我们制造了很多噪音                    

823
08:04:47,520 --> 08:04:52,000
所以让我们继续删除所有那些灰线或它们的任何颜色                    

824
08:04:52,000 --> 08:04:54,398
显示在您的屏幕上，它们可能是绿色的                    

825
08:04:54,398 --> 08:04:57,200
取决于你的主题                    

826
08:04:57,200 --> 08:05:00,398
正如我之前提到的，我有东京骑士                    

827
08:05:00,398 --> 08:05:05,280
在 Visual Studio 代码中，因此注释显示为灰色                    

828
08:05:05,280 --> 08:05:09,440
会删除那里的所有评论好吧，就是这样                    

829
08:05:09,440 --> 08:05:15,120
所以，我也这么认为，我不知道是的，似乎也是                    

830
08:05:15,120 --> 08:05:19,120
嗯，是的，我想现在我们已经删除了所有                    

831
08:05:19,120 --> 08:05:23,040
评论所以如果我做命令 s 会很热                    

832
08:05:23,040 --> 08:05:25,600
重新加载，我实际上要谈谈                    

833
08:05:25,600 --> 08:05:29,600
什么是热重载，但如果你已经这样做了，那么你就可以走了                    

834
08:05:29,600 --> 08:05:32,958
会在我的笔记中记下，所以我们已经讨论过了                    

835
08:05:32,958 --> 08:05:38,080
现在要讨论的下一个主题是热重载与现在热重启                    

836
08:05:38,080 --> 08:05:41,680
这两个对你来说非常重要，我认为你应该喜欢                    

837
08:05:41,680 --> 08:05:45,040
在你继续课程的其余部分之前得到这个，我会做我的                    

838
08:05:45,040 --> 08:05:48,718
最好解释一下热重载和硬件启动是什么                    

839
08:05:48,718 --> 08:05:51,600
例如，如果您来自您所拥有的设计背景                    

840
08:05:51,600 --> 08:05:56,240
实例 figma 和你设计你的 um                    

841
08:05:56,240 --> 08:06:00,718
你正在把一些矢量放在屏幕上你正在拖动图像和                    

842
08:06:00,718 --> 08:06:04,160
我可以进入你的 figma 设计并在你做的时候观察你                    

843
08:06:04,160 --> 08:06:08,398
所以我实际上正在查看您的更改，您不必按任何                    

844
08:06:08,398 --> 08:06:12,878
即使您在草稿中，我仍然可以关注发布按钮                    

845
08:06:12,878 --> 08:06:18,080
你，看着你，因为你现在正在设计，未来非常非常                    

846
08:06:18,080 --> 08:06:21,920
然而，也可能在颤动中                    

847
08:06:21,920 --> 08:06:27,600
与 figma 做同样的事情的成本相当高，因为                    

848
08:06:27,600 --> 08:06:32,398
当我更改我的代码时，实际上我将无法看到我的更改                    

849
08:06:32,398 --> 08:06:37,840
除非我告诉颤振，好吧，我已经做了一些改变，在                    

850
08:06:37,840 --> 08:06:42,240
可以热重载的屏幕，例如，如果                    

851
08:06:42,240 --> 08:06:46,478
我进入这里，我说颤振演示主页并从                    

852
08:06:46,478 --> 08:06:49,920
在这里按命令 s 这将保存我的                    

853
08:06:49,920 --> 08:06:54,240
文件反过来会进行热重载                    

854
08:06:54,240 --> 08:06:58,080
所以 command s 你现在可以看到这个标题被改变了                    

855
08:06:58,080 --> 08:07:01,040
从这里开始设置它说我不是颤振演示                    

856
08:07:01,040 --> 08:07:05,920
将它改回命令的热重载，它会说主页                    

857
08:07:05,920 --> 08:07:10,958
现在你也可以避免例如做 command s 而只​​是进入这里                    

858
08:07:10,958 --> 08:07:15,360
你的 Visual Studio 代码或 android Studio，然后说热重载，这样我就可以了                    

859
08:07:15,360 --> 08:07:20,320
现在看看实际上并没有这样做，这很棒，因为我可以看到一点                    

860
08:07:20,320 --> 08:07:24,160
像 blob 在这里你看到这个文件上的圆圈这在 Visual Studio 代码中是                    

861
08:07:24,160 --> 08:07:28,160
尚未保存的文件的指示符                    

862
08:07:28,160 --> 08:07:32,080
所以如果我保存它并且它本身会进行热重载，所以我不必                    

863
08:07:32,080 --> 08:07:35,760
实际上手动按下热重载按钮所以保存然后你可以看到                    

864
08:07:35,760 --> 08:07:41,600
更改立即应用到那里，但是对您的代码的一些更改是                    

865
08:07:41,600 --> 08:07:47,920
将是如此之大，以至于鞋类无法解决从                    

866
08:07:47,920 --> 08:07:52,240
应用程序的先前状态到新状态，我们将来到那些                    

867
08:07:52,240 --> 08:07:56,478
更改现在很难解释，但只知道热重载                    

868
08:07:56,478 --> 08:08:00,798
通常在 99% 左右有效                    

869
08:08:00,798 --> 08:08:05,520
就像我在这里做统计一样，在大多数情况下，热重载的工作原理是                    

870
08:08:05,520 --> 08:08:10,878
可以向您展示您的最新更改，但有时您的更改可能非常剧烈                    

871
08:08:10,878 --> 08:08:14,478
和那么大                    

872
08:08:14,478 --> 08:08:17,520
计算从前一个状态到下一个状态的增量                    

873
08:08:17,520 --> 08:08:22,000
新状态可能是如此之大，以至于颤振无法做到这一点，那么您将                    

874
08:08:22,000 --> 08:08:25,600
必须做热重载然后热重载是                    

875
08:08:25,600 --> 08:08:30,080
在这里抱歉热重启你将不得不做一个热重启对不起                    

876
08:08:30,080 --> 08:08:35,200
所以他们之间有更多的差异，比如在内部关于状态                    

877
08:08:35,200 --> 08:08:38,558
比如你的应用程序的状态以及是否有一个                    

878
08:08:38,558 --> 08:08:42,080
保持你的状态，另一个失去你的状态，所以我不打算说话                    

879
08:08:42,080 --> 08:08:47,120
现在关于这个，因为我们甚至还没有谈论过颤振中的状态，所以我                    

880
08:08:47,120 --> 08:08:51,200
不要认为现在谈论这个有多大意义只要知道                    

881
08:08:51,200 --> 08:08:56,638
在大多数情况下，热重载会显示您的最新更改以及                    

882
08:08:56,638 --> 08:09:00,320
如果您只是执行命令并保存文件就足够了                    

883
08:09:00,320 --> 08:09:05,520
但是热重启它基本上有点像重建你的应用程序                    

884
08:09:05,520 --> 08:09:09,680
新州还好，所以我想我想对你说实话                    

885
08:09:09,680 --> 08:09:15,120
现在已经足够了，所以我们现在需要做的                    

886
08:09:15,120 --> 08:09:19,600
就是看一下                    

887
08:09:19,600 --> 08:09:23,680
重构默认为我们创建的代码                    

888
08:09:23,680 --> 08:09:27,360
正如你在这里看到的，嗯，我的意思是我们真的不知道这些是怎么回事                    

889
08:09:27,360 --> 08:09:32,638
现在一切正常，嗯，你甚至不知道                    

890
08:09:32,638 --> 08:09:37,600
标题我说运行应用程序和主页小部件内的材料应用程序                    

891
08:09:37,600 --> 08:09:41,360
这是什么意思，你不知道，没关系                    

892
08:09:41,360 --> 08:09:45,600
我现在不喜欢用太多细节来混淆我们，但你会                    

893
08:09:45,600 --> 08:09:50,478
现在需要知道的是，让我们进去，我要带上                    

894
08:09:50,478 --> 08:09:53,840
在此版本中记录我将在此处执行的操作                    

895
08:09:53,840 --> 08:09:58,638
我的应用程序的功能只是去输入打印                    

896
08:09:58,638 --> 08:10:01,520
建筑                    

897
08:10:01,520 --> 08:10:05,600
好的和 command s 然后你会看到                    

898
08:10:05,600 --> 08:10:10,320
打印到屏幕上，所以每次我按下命令时                    

899
08:10:10,320 --> 08:10:15,440
整个应用程序正在重新构建，并且有点像                    

900
08:10:15,440 --> 08:10:20,080
资源拥抱，因为                    

901
08:10:20,080 --> 08:10:23,440
如您所见，材料应用程序是整个                    

902
08:10:23,440 --> 08:10:28,240
有点像你的应用程序的整个框架的脚手架，包括上面的栏                    

903
08:10:28,240 --> 08:10:32,718
顶部包括这个白色视图，包括顶部的那个徽章                    

904
08:10:32,718 --> 08:10:36,080
对，就像你在建造                    

905
08:10:36,080 --> 08:10:39,360
每次保存此文件时都不需要构建的东西，因此它是                    

906
08:10:39,360 --> 08:10:44,478
有点像嗯性能的问题，你是否想这样做                    

907
08:10:44,478 --> 08:10:49,840
或者不是，但是在这个呃课程中，我只是我会给你一些建议                    

908
08:10:49,840 --> 08:10:54,160
如何使您的应用程序也运行得更快一点，所以我们要做到这一点                    

909
08:10:54,160 --> 08:10:57,680
需要做的只是告诉颤振，嘿，看起来我们不想构建                    

910
08:10:57,680 --> 08:11:02,878
每次整个应用程序或每次我们的应用程序结构                    

911
08:11:02,878 --> 08:11:06,320
按下命令 s 如何热重载所以                    

912
08:11:06,320 --> 08:11:10,240
你现在的挑战是如果我摆脱                    

913
08:11:10,240 --> 08:11:12,798
我们现在需要做的是你可以看到                    

914
08:11:12,798 --> 08:11:15,440
这里的主要功能是根                    

915
08:11:15,440 --> 08:11:18,558
Flutter 在实际运行您的应用程序时调用的函数，它说                    

916
08:11:18,558 --> 08:11:22,798
好的，我正在运行一个名为我的应用程序的应用程序，如果您查看我的应用程序唯一的事情                    

917
08:11:22,798 --> 08:11:26,718
它确实创建了一个材料应用程序，这就是它所做的一切                    

918
08:11:26,718 --> 08:11:31,440
你现在需要做的是抓住这个材料应用程序所以我只想说                    

919
08:11:31,440 --> 08:11:34,160
mac上的命令x                    

920
08:11:34,160 --> 08:11:37,600
或控制 x 我认为在 windows 和 linux 上                    

921
08:11:37,600 --> 08:11:41,440
抓住它，而不是这个 const 我的应用程序                    

922
08:11:41,440 --> 08:11:48,718
把它贴在那里好吧，然后像这样杀死你的我的应用程序繁荣                    

923
08:11:48,718 --> 08:11:52,638
好的，然后执行 command 并确保一切正常                    

924
08:11:52,638 --> 08:11:56,398
正常工作我只是要做一个热重启                    

925
08:11:56,398 --> 08:12:01,920
你可以看到一切都在正常工作，所以我们在这里所做的确实是                    

926
08:12:01,920 --> 08:12:05,040
实际上让我们看看我的主页是的，这很好                    

927
08:12:05,040 --> 08:12:07,520
嗯，是的                    

928
08:12:07,520 --> 08:12:12,320
我们现在拥有的只是 main 函数和一个叫做 my                    

929
08:12:12,320 --> 08:12:20,478
主页有状态的小部件，所以让你的代码也进入这个状态                    

930
08:12:20,478 --> 08:12:23,680
我会记下我已经谈过的笔记                    

931
08:12:23,680 --> 08:12:28,798
所以接下来我们需要讨论的是无状态与有状态                    

932
08:12:28,798 --> 08:12:31,920
现在状态                    

933
08:12:31,920 --> 08:12:35,360
我的意思是对我来说，我觉得我能够解释这个我需要先                    

934
08:12:35,360 --> 08:12:40,718
解释一下什么是状态                    

935
08:12:40,718 --> 08:12:44,638
五次好了，然后我就走了，我说哦，我想                    

936
08:12:44,638 --> 08:12:49,200
改变这个小标签的标题，我会说你                    

937
08:12:49,200 --> 08:12:53,760
你有而不是你有或                    

938
08:12:53,760 --> 08:12:58,478
是的，让我们将其转换为双引号，因为我们将单个代码放入                    

939
08:12:58,478 --> 08:13:01,600
我会说你按下了按钮                    

940
08:13:01,600 --> 08:13:05,120
这很多次，我会在 windows 中说 command s 或 control s                    

941
08:13:05,120 --> 08:13:11,120
linux to hot reload hot reload 是命令没问题                    

942
08:13:11,120 --> 08:13:16,240
你可以看到你已经多次按下按钮但它一直保持                    

943
08:13:16,240 --> 08:13:20,558
第五，所以如果它重建了这个应用程序或                    

944
08:13:20,558 --> 08:13:24,160
这个小部件或这个你可以看到的东西                    

945
08:13:24,160 --> 08:13:29,200
screen 它是如何保持良好状态的，那是因为                    

946
08:13:29,200 --> 08:13:33,920
正如我之前提到的，热重载有时能够保持你的状态和                    

947
08:13:33,920 --> 08:13:40,798
状态只是数据数据，通常由                    

948
08:13:40,798 --> 08:13:44,958
应用程序或用户或两者，在这种情况下，这是用户的状态                    

949
08:13:44,958 --> 08:13:49,040
正在控制，所以通过按下按钮，他或她现在正在增加这个数字                    

950
08:13:49,040 --> 08:13:54,718
10 可以，一个状态完整的小部件，它可以保留它                    

951
08:13:54,718 --> 08:13:56,958
信息如此                    

952
08:13:56,958 --> 08:14:00,718
你看它有一个叫做计数器的东西                    

953
08:14:00,718 --> 08:14:05,680
它是一个整数，它保持这个数字，所以                    

954
08:14:05,680 --> 08:14:11,600
在这个数字被改变后，它可以重新绘制自己，所以                    

955
08:14:11,600 --> 08:14:15,760
有状态的小部件通常在屏幕上                    

956
08:14:15,760 --> 08:14:20,320
你可以明显看到的东西，比如这个屏幕你的白屏                    

957
08:14:20,320 --> 08:14:22,878
可以看到这里有状态                    

958
08:14:22,878 --> 08:14:30,798
它可以包含关于谁在改变它可以重绘自己的数据                    

959
08:14:30,798 --> 08:14:35,040
本身所以我们有相同的小部件，你可以                    

960
08:14:35,040 --> 08:14:39,840
在我的主页上看到它是无状态小部件，它也可用                    

961
08:14:39,840 --> 08:14:42,398
你看让我们切换它                    

962
08:14:42,398 --> 08:14:49,920
它不一定能够重绘自身或包含任何可变的                    

963
08:14:49,920 --> 08:14:56,080
数据我的意思是对于那些更熟悉的人来说甚至是无状态的小部件                    

964
08:14:56,080 --> 08:15:01,760
有了颤振，你将拥有类似的价值，而不是通知者和建设者，所以甚至是无国籍的                    

965
08:15:01,760 --> 08:15:05,200
可以根据您要执行的操作重绘小部件                    

966
08:15:05,200 --> 08:15:11,200
但它们不能包含可变变量，所以这是一种                    

967
08:15:11,200 --> 08:15:14,318
就像有状态和                    

968
08:15:14,318 --> 08:15:19,360
无状态，因此您可以在这里看到这是一个不是只读的变量，否则                    

969
08:15:19,360 --> 08:15:23,280
这将是最终的所以如果我做这个最终你会看到它说哦你不能                    

970
08:15:23,280 --> 08:15:27,760
将此值重新分配给其他东西，所以只要知道如果您看到状态已满                    

971
08:15:27,760 --> 08:15:32,718
小部件，那么它是一个包含信息的小部件，可以                    

972
08:15:32,718 --> 08:15:35,840
随着用户与小部件交互或                    

973
08:15:35,840 --> 08:15:41,360
随着时间的流逝或小部件认为合适，但是无状态小部件是小部件                    

974
08:15:41,360 --> 08:15:44,798
谁谁拥有谁不包含任何可变的                    

975
08:15:44,798 --> 08:15:50,160
信息片段，不管理任何可变的信息片段                    

976
08:15:50,160 --> 08:15:54,160
内部还好这很多只是有很多                    

977
08:15:54,160 --> 08:15:57,920
谈话我知道你是否不舒服，如果你还没有完成                    

978
08:15:57,920 --> 08:16:01,520
在您之前进行软件开发可能不会这对您和我来说可能没有任何意义                    

979
08:16:01,520 --> 08:16:04,638
在我们继续的时候向你保证，当然你会更多地了解它，所以                    

980
08:16:04,638 --> 08:16:07,360
如果你没有得到这个，别担心                    

981
08:16:07,360 --> 08:16:10,240
开始时                    

982
08:16:10,240 --> 08:16:13,120
所以                    

983
08:16:13,120 --> 08:16:18,878
你现在可以看到让我们看看嗯让我们谈谈我要                    

984
08:16:18,878 --> 08:16:23,040
实际上勾选这个                    

985
08:16:23,040 --> 08:16:30,160
在我的笔记中                    

986
08:16:30,160 --> 08:16:35,120
好的，所以我可以在我的笔记中看到我有 um                    

987
08:16:35,120 --> 08:16:40,000
作为呃我要在这里解释的一部分，我是                    

988
08:16:40,000 --> 08:16:44,000
实际上我已经计划好了我可以看到我的笔记                    

989
08:16:44,000 --> 08:16:48,798
计划在以前的标题之一中，嗯，这里嗯                    

990
08:16:48,798 --> 08:16:52,398
作为这个标题的一部分，我实际上应该完全杀死这个我的                    

991
08:16:52,398 --> 08:16:57,200
主页呃小部件，我应该实际创建一个                    

992
08:16:57,200 --> 08:17:01,680
小部件刚刚调用了主页，所以让我们这样做让我们回到那个                    

993
08:17:01,680 --> 08:17:06,878
标题所以杀了我的主页，现在                    

994
08:17:06,878 --> 08:17:13,280
进入这里并将其更改为主页，所以我们现在需要做的是创建一个                    

995
08:17:13,280 --> 08:17:18,398
非常简单的主页好吧，所以我也要从这里删除这个标题                    

996
08:17:18,398 --> 08:17:22,398
你现在可以看到我们有一个错误告诉我们好吧我不知道主页是什么                    

997
08:17:22,398 --> 08:17:27,840
现在我们需要做的是创建一个呃实际上让我看看我是否打算                    

998
08:17:27,840 --> 08:17:31,520
创建一个无状态是的无状态小部件好的                    

999
08:17:31,520 --> 08:17:35,280
你需要在 Visual Studio 代码中知道的一个很好的捷径，我认为它可能                    

1000
08:17:35,280 --> 08:17:39,760
如果你想创建一个无状态的，也可以在 android studio 中使用                    

1001
08:17:39,760 --> 08:17:43,840
小部件只需输入 stl ，你可以看到它告诉你没关系                    

1002
08:17:43,840 --> 08:17:46,638
你想创建一个很棒的无状态小部件                    

1003
08:17:46,638 --> 08:17:51,760
好的，就在那里，然后你给它主页的名称好吧，所以现在你有一个                    

1004
08:17:51,760 --> 08:17:56,318
主页很棒，我要做一个命令，现在你可以看到这是                    

1005
08:17:56,318 --> 08:17:59,280
颤动的时候还好                    

1006
08:17:59,280 --> 08:18:02,240
我不明白你想做什么你改变了这个主要的一些东西                    

1007
08:18:02,240 --> 08:18:06,638
功能，我不能做热重载所以你必须做热重启所以现在                    

1008
08:18:06,638 --> 08:18:10,000
屏幕有点黑所以                    

1009
08:18:10,000 --> 08:18:14,398
现在我们有了我最初在课程中为本章计划的内容，所以                    

1010
08:18:14,398 --> 08:18:19,200
太好了，让我们现在进入下一点，嗯                    

1011
08:18:19,200 --> 08:18:23,040
所以你可以看到这里的屏幕是黑色的，那是因为这个容器                    

1012
08:18:23,040 --> 08:18:25,920
那里有一个小容器或屏幕上的东西你不能                    

1013
08:18:25,920 --> 08:18:29,920
真的看到因为它只是黑色所以你可以进去说有一个                    

1014
08:18:29,920 --> 08:18:34,000
颜色，你可以说颜色为红色，我只是命令                    

1015
08:18:34,000 --> 08:18:37,360
你现在可以看到屏幕是红色的，所以只要知道屏幕上有东西                    

1016
08:18:37,360 --> 08:18:41,040
屏幕，但你只是看不到它，因为它全是黑色的，所以                    

1017
08:18:41,040 --> 08:18:45,040
使您的应用程序达到实际上像样的地步的方法                    

1018
08:18:45,040 --> 08:18:49,520
对用户来说，你通常必须创建一个叫做脚手架的东西，现在脚手架                    

1019
08:18:49,520 --> 08:18:54,318
顾名思义，它有点像基本的建筑结构                    

1020
08:18:54,318 --> 08:18:58,798
一种应用程序，它可以呈现给普通用户的用户                    

1021
08:18:58,798 --> 08:19:00,958
所以即使你像一个                    

1022
08:19:00,958 --> 08:19:05,520
图形密集型应用程序这个黑色背景可能完全没问题                    

1023
08:19:05,520 --> 08:19:10,080
但在大多数应用程序中，当你运行它们时，你会得到                    

1024
08:19:10,080 --> 08:19:13,680
然后你会得到像顶部的一个栏，告诉你喜欢屏幕的名称                    

1025
08:19:13,680 --> 08:19:17,600
你的标题有点像网页的标题，你也会得到一些像                    

1026
08:19:17,600 --> 08:19:22,000
顶部的状态栏，您可以在这里看到状态栏有点像                    

1027
08:19:22,000 --> 08:19:27,040
黑色，顶部全是白色图标，它会给你一个像宽屏幕一样的地方                    

1028
08:19:27,040 --> 08:19:31,280
您可以与您的内容进行交互，所以我们没有，为了                    

1029
08:19:31,280 --> 08:19:34,558
创建你必须创建一个叫做脚手架的东西，所以                    

1030
08:19:34,558 --> 08:19:38,798
去你的容器这里说脚手架好吧                    

1031
08:19:38,798 --> 08:19:43,280
现在我要按 command s 你会看到这一切然后我们得到这个                    

1032
08:19:43,280 --> 08:19:47,680
这里是白屏，然后我们的状态栏上也有一点色彩，所以                    

1033
08:19:47,680 --> 08:19:50,798
它使它更美观一点                    

1034
08:19:50,798 --> 08:19:54,080
所以我们现在需要做的基本上是                    

1035
08:19:54,080 --> 08:19:59,600
看看我是否计划在这里添加一些我没有的栏标题，让我们                    

1036
08:19:59,600 --> 08:20:04,318
现在就这样做，所以对于我们的脚手架，我们还要添加一个 is 东西                    

1037
08:20:04,318 --> 08:20:09,280
调用了一个应用栏，所以去你的脚手架说应用栏                    

1038
08:20:09,280 --> 08:20:14,718
然后说我创建了一个新的应用栏类实例                    

1039
08:20:14,718 --> 08:20:20,000
在这里有一个名为 title 的属性，正如标题所说的文本                    

1040
08:20:20,000 --> 08:20:22,478
好的，对于文本，我要摆脱                    

1041
08:20:22,478 --> 08:20:25,440
所有这些文档 这里有过多的文档 哪种                    

1042
08:20:25,440 --> 08:20:30,080
of 块屏幕所以和文字只是说                    

1043
08:20:30,080 --> 08:20:33,600
例如注册并使其成为常量                    

1044
08:20:33,600 --> 08:20:39,200
所以在这里放一个逗号，在这里也放一个逗号                    

1045
08:20:39,200 --> 08:20:43,920
所以你在完成后看到你的屏幕有一个漂亮的蓝色条                    

1046
08:20:43,920 --> 08:20:47,920
这里有你的呃申请的标题或者你家的标题                    

1047
08:20:47,920 --> 08:20:51,440
页面，这里有一个白色的画布                    

1048
08:20:51,440 --> 08:20:56,478
您的其余内容要显示，所以现在这里有一些东西                    

1049
08:20:56,478 --> 08:20:59,840
我可以跳过，但我觉得他们解释起来很重要                    

1050
08:20:59,840 --> 08:21:04,478
我现在就要这样做，所以每次你有的时候都会颤抖                    

1051
08:21:04,478 --> 08:21:08,958
例如这里有一个文本你看到对不起有一个应用栏一个应用栏如果                    

1052
08:21:08,958 --> 08:21:13,120
你进入应用栏的源代码让我们再高一点你可以                    

1053
08:21:13,120 --> 08:21:18,638
看到它说我是一个有状态的小部件，所以应用栏本身就是一个小部件                    

1054
08:21:18,638 --> 08:21:22,240
所以我们在这里做的是说我们有一个叫做脚手架的东西让我们                    

1055
08:21:22,240 --> 08:21:26,798
去脚手架它本身是一个有状态的小部件，所以我们说的是主小部件                    

1056
08:21:26,798 --> 08:21:30,160
我们从我们的构建函数返回，你可以看到它应该返回一个小部件                    

1057
08:21:30,160 --> 08:21:34,398
是一个脚手架，它本身就是一个有状态的小部件，它有一个名为 app 的属性                    

1058
08:21:34,398 --> 08:21:38,718
bar 一个应用程序栏它本身是一个有状态的小部件，它又具有一个属性                    

1059
08:21:38,718 --> 08:21:43,280
如果您查看它说的文档，现在将标题称为标题                    

1060
08:21:43,280 --> 08:21:46,478
标题也是小部件所以                    

1061
08:21:46,478 --> 08:21:49,280
让我也让屏幕大一点                    

1062
08:21:49,280 --> 08:21:52,638
像这样，所以你看得更清楚，所以                    

1063
08:21:52,638 --> 08:21:56,240
现在标题是一个小部件，我们说哦，我们将使用文本                    

1064
08:21:56,240 --> 08:22:00,558
小部件如果您查看文本它是什么是无状态小部件它在内部意味着                    

1065
08:22:00,558 --> 08:22:05,680
它声明或它的状态可以改变并且它没有任何可变变量                    

1066
08:22:05,680 --> 08:22:09,840
好吧，哦，我不想改变，所以                    

1067
08:22:09,840 --> 08:22:13,760
如果你看到我们在颤动时在这里做什么，你只是在创建小部件                    

1068
08:22:13,760 --> 08:22:18,318
Flutter 中几乎所有东西都是有状态或无状态的小部件                    

1069
08:22:18,318 --> 08:22:22,160
并且您尝试尝试尽可能多地坚持使用无状态小部件                    

1070
08:22:22,160 --> 08:22:27,600
你可以，我们将更多地讨论有状态和无状态，所以                    

1071
08:22:27,600 --> 08:22:31,120
现在我们已经添加了脚手架并且我已经解释了一些关于这些                    

1072
08:22:31,120 --> 08:22:36,160
我们创建的小部件，我们已经完成了一个命令，就像这里一样                    

1073
08:22:36,160 --> 08:22:40,080
热重载应用程序或此小部件                    

1074
08:22:40,080 --> 08:22:46,318
呃我们接下来需要做的是创建一个登录按钮                    

1075
08:22:46,318 --> 08:22:49,520
所以让我们去创建某种登录                    

1076
08:22:49,520 --> 08:22:52,478
按钮，你可以在这里看到我已经写了                    

1077
08:22:52,478 --> 08:22:56,160
主页上的标题按钮在中心登录                    

1078
08:22:56,160 --> 08:23:01,200
或更准确地说，它实际上可以注册                    

1079
08:23:01,200 --> 08:23:05,440
所以我要改变我要说的注册按钮                    

1080
08:23:05,440 --> 08:23:09,440
和主页中间的按钮注册好                    

1081
08:23:09,440 --> 08:23:14,000
在此处向您显示标题，我将在此处更改我的笔记                    

1082
08:23:14,000 --> 08:23:18,878
很快就好了，所以现在你的任务是创建一个按钮                    

1083
08:23:18,878 --> 08:23:23,280
屏幕 你在脚手架上做得怎么样 你看到脚手架在                    

1084
08:23:23,280 --> 08:23:27,440
那一刻它是顶部那个酒吧的所有者，它是这个的所有者                    

1085
08:23:27,440 --> 08:23:31,440
这里的白色内容所以你需要做的是去看看一个属性                    

1086
08:23:31,440 --> 08:23:34,798
称为身体，身体是                    

1087
08:23:34,798 --> 08:23:39,600
如果我将鼠标移到它本身，它会说好的，给我一个你看到的小部件                    

1088
08:23:39,600 --> 08:23:44,478
当然我可以说我没有小部件 null 也是可以接受的，但在                    

1089
08:23:44,478 --> 08:23:50,240
在这种情况下，我们将创建一个名为 text button 的按钮，因此 text button 是一个                    

1090
08:23:50,240 --> 08:23:53,920
小部件如果您进入源代码，您会看到它是一个                    

1091
08:23:53,920 --> 08:23:59,280
文本按钮按钮样式按钮，这是一个状态完整的小部件，好吧                    

1092
08:23:59,280 --> 08:24:02,558
你基本上是说我正在创建一个按钮，我想允许                    

1093
08:24:02,558 --> 08:24:06,638
用户可以用它做一些事情，所以我们需要做你可以看到的                    

1094
08:24:06,638 --> 08:24:10,878
这里有一点错误说 unpressed 是                    

1095
08:24:10,878 --> 08:24:15,440
你没有提供给我的参数，所以我们需要告诉这个按钮                    

1096
08:24:15,440 --> 08:24:20,160
当这个按钮被按下时，它需要                    

1097
08:24:20,160 --> 08:24:24,080
做某事，这是它的文本按钮类的要求                    

1098
08:24:24,080 --> 08:24:28,398
告诉你我是个按钮你想让我做什么当我                    

1099
08:24:28,398 --> 08:24:33,040
如果您不向我提供 unpressed 参数，则按不按                    

1100
08:24:33,040 --> 08:24:37,040
难道我什至不是按钮吗？我可能只是一个标签，这就是这个错误                    

1101
08:24:37,040 --> 08:24:39,840
就是说，如果您要创建一个按钮，请确保您                    

1102
08:24:39,840 --> 08:24:43,440
处理用户按下时发生的事情                    

1103
08:24:43,440 --> 08:24:48,398
在这里只需输入 unpressed，我就去视觉工作室                    

1104
08:24:48,398 --> 08:24:54,240
为我完成此代码，您可以看到它说好的是一个空函数                    

1105
08:24:54,240 --> 08:24:57,680
具有空参数列表的函数，因此没有参数                    

1106
08:24:57,680 --> 08:25:01,120
然后代码本身是空的                    

1107
08:25:01,120 --> 08:25:06,240
好的，所以在创建该函数之后继续，然后你                    

1108
08:25:06,240 --> 08:25:09,840
看到还有一个你必须处理的说孩子                    

1109
08:25:09,840 --> 08:25:13,360
你看到文本按钮你会说你可能只是假设哦                    

1110
08:25:13,360 --> 08:25:17,840
文本按钮应该有某种字符串参数，说明什么是我的                    

1111
08:25:17,840 --> 08:25:19,680
文字如此                    

1112
08:25:19,680 --> 08:25:24,080
如果我们在这里写 child，flutter 的美妙之处在于它说                    

1113
08:25:24,080 --> 08:25:30,318
child 是一个小部件，因此文本按钮不会对内容做出任何假设                    

1114
08:25:30,318 --> 08:25:33,120
您要在该按钮上显示的内容                    

1115
08:25:33,120 --> 08:25:37,440
它做了什么它说我需要显示一些小部件它可能是一个                    

1116
08:25:37,440 --> 08:25:41,440
图片 它可以是一个图标 它可以是任何东西 它可以是一个事物列表                    

1117
08:25:41,440 --> 08:25:45,040
这不是一个好主意，但你仍然可以这样做                    

1118
08:25:45,040 --> 08:25:48,398
嗯去创建一个子小部件，现在                    

1119
08:25:48,398 --> 08:25:51,680
你已经了解了文本小部件，所以我只想说一个常量文本                    

1120
08:25:51,680 --> 08:25:55,680
小部件，在这里我们只会说注册好                    

1121
08:25:55,680 --> 08:25:58,958
now command s，你会突然看到你                    

1122
08:25:58,958 --> 08:26:03,120
那里有一个注册按钮，所以现在我想要另一个很酷的功能                    

1123
08:26:03,120 --> 08:26:05,920
在visual studio中向您展示，我认为它也可以在android stu中使用                    

1124
08:26:05,920 --> 08:26:11,280
你可以用其他小部件包装你的小部件，而不是 for                    

1125
08:26:11,280 --> 08:26:15,680
例如说我希望文本按钮位于中心然后你                    

1126
08:26:15,680 --> 08:26:20,878
去创建一个中心，如果你知道它也存在，你可以做                    

1127
08:26:20,878 --> 08:26:25,200
mac 上的 command dot 或 command dot 或 windows 和 linux 上的 control dot 和                    

1128
08:26:25,200 --> 08:26:29,440
要包装在其他小部件中的小部件上的 Visual Studio 代码                    

1129
08:26:29,440 --> 08:26:32,958
然后你会得到这个漂亮的菜单                    

1130
08:26:32,958 --> 08:26:36,638
你说你知道你可以用很多不同的东西把它包起来所以我就走了                    

1131
08:26:36,638 --> 08:26:42,000
用 center 发音 wrap 这样你就可以看到 center 是一个小部件，它有                    

1132
08:26:42,000 --> 08:26:47,840
所有中心所做的子属性是它试图居中                    

1133
08:26:47,840 --> 08:26:55,280
水平和垂直它是中心可用空间内的孩子                    

1134
08:26:55,280 --> 08:26:58,878
在这种情况下，小部件本身就是整个可用空间                    

1135
08:26:58,878 --> 08:27:04,398
如您所见，这是整个白色背景，因此中心可以访问                    

1136
08:27:04,398 --> 08:27:09,680
现在整个白色背景，因为 center 是我们的根小部件                    

1137
08:27:09,680 --> 08:27:14,638
身体，这是我们的脚手架目前唯一展示的东西                    

1138
08:27:14,638 --> 08:27:18,160
所以中心然后能够居中对齐这个                    

1139
08:27:18,160 --> 08:27:22,798
文本按钮，所以让我们命令 s，你可以看到注册按钮居中                    

1140
08:27:22,798 --> 08:27:27,280
在可用空间中水平和垂直                    

1141
08:27:27,280 --> 08:27:32,318
既然我已经谈过了，我要把它带到这里                    

1142
08:27:32,318 --> 08:27:37,760
我们在这里要做的非常非常重要所以                    

1143
08:27:37,760 --> 08:27:42,718
我们需要做的是我们现在需要处理文本时                    

1144
08:27:42,718 --> 08:27:47,120
按下按钮，我们将注册一个用户                    

1145
08:27:47,120 --> 08:27:49,520
firebase 现在好了                    

1146
08:27:49,520 --> 08:27:54,240
当我在前面的章节中谈到像 uh dart 时，我们谈到了这个，我们                    

1147
08:27:54,240 --> 08:27:57,280
谈到了同步和异步，我不会进入                    

1148
08:27:57,280 --> 08:28:01,280
关于现在注册的详细信息，对不起，我不打算                    

1149
08:28:01,280 --> 08:28:05,440
详细讨论一下，因为我们之前已经详细讨论过                    

1150
08:28:05,440 --> 08:28:09,360
如果你需要知道我认为同步和异步是                    

1151
08:28:09,360 --> 08:28:14,558
可能在嗯我会看一下我的笔记                    

1152
08:28:14,558 --> 08:28:19,520
它们在第七章中有解释，所以如果你还没有看过章节                    

1153
08:28:19,520 --> 08:28:22,958
第七我强烈建议你这样做，如果你不知道什么同步和                    

1154
08:28:22,958 --> 08:28:25,600
异步是嗯                    

1155
08:28:25,600 --> 08:28:28,878
我们现在需要做的是告诉firebase现在注册用户                    

1156
08:28:28,878 --> 08:28:33,040
向 firebase 注册用户是一项异步任务，因此不会                    

1157
08:28:33,040 --> 08:28:38,160
立即完成，所以我们现在需要做的是告诉颤振                    

1158
08:28:38,160 --> 08:28:42,958
按钮按下是一个异步任务，你需要做的只是把                    

1159
08:28:42,958 --> 08:28:48,160
那里的关键字 async 好的，所以                    

1160
08:28:48,160 --> 08:28:52,160
那就是我的                    

1161
08:28:52,160 --> 08:28:57,440
我谈过的笔记                    

1162
08:28:57,440 --> 08:29:01,440
现在我们需要做的是看看                    

1163
08:29:01,440 --> 08:29:08,080
我为你提供的这个链接 嗯，我要关闭这个 safari 窗口                    

1164
08:29:08,080 --> 08:29:13,600
让我看看我能不能在这个屏幕上给你看                    

1165
08:29:13,600 --> 08:29:16,080
嗯                    

1166
08:29:16,080 --> 08:29:22,318
其他登录方法很棒你可以看到我在这里显示                    

1167
08:29:22,318 --> 08:29:28,080
firebase 允许您启用各种登录方法                    

1168
08:29:28,080 --> 08:29:32,240
呃，为了你的用户，嗯                    

1169
08:29:32,240 --> 08:29:35,440
firebase 不仅限于喜欢 google                    

1170
08:29:35,440 --> 08:29:40,160
您可以看到的服务可以让您启用 facebook 签名                    

1171
08:29:40,160 --> 08:29:45,360
用户或苹果登录推特或电话号码登录等                    

1172
08:29:45,360 --> 08:29:50,478
有多种方法可供您在颤振中启用                    

1173
08:29:50,478 --> 08:29:54,718
应用程序，在这个应用程序中，我们将使用电子邮件和密码签名                    

1174
08:29:54,718 --> 08:29:57,680
里面有关于所有的文档                    

1175
08:29:57,680 --> 08:30:02,080
我提供给你的这个链接中的那些                    

1176
08:30:02,080 --> 08:30:05,360
老实说，我不会把所有的内容都讲一遍                    

1177
08:30:05,360 --> 08:30:09,280
因为信息太多而我们不感兴趣                    

1178
08:30:09,280 --> 08:30:13,120
所有这些，但我仍然相信如果你对 firebase 和                    

1179
08:30:13,120 --> 08:30:18,398
我们将在本课程中使用的 firebase 身份验证非常棒                    

1180
08:30:18,398 --> 08:30:24,638
如果你能看看我在这里为你提供的这个链接                    

1181
08:30:24,638 --> 08:30:28,160
所以我们现在需要做的                    

1182
08:30:28,160 --> 08:30:32,160
也是对的，我在这里写了我需要谈谈                    

1183
08:30:32,160 --> 08:30:37,280
当您启动应用程序并启动时，您会看到 firebase 的匿名用户                    

1184
08:30:37,280 --> 08:30:41,600
firebait if firebase 你基本上启动了整个过程                    

1185
08:30:41,600 --> 08:30:46,240
firebase 你说 firebase start firebase 就在这上面                    

1186
08:30:46,240 --> 08:30:50,958
客户端默认情况下会创建一个称为匿名用户的东西，所以如果                    

1187
08:30:50,958 --> 08:30:54,080
你用你的想法或应用程序与 firebase 交谈，并说出谁是                    

1188
08:30:54,080 --> 08:30:57,600
当前用户，即使您之前没有对 firebase 做过任何事情                    

1189
08:30:57,600 --> 08:31:00,798
你还没有配置它，或者实际上你必须配置它                    

1190
08:31:00,798 --> 08:31:05,520
我们已经完成了，但是如果您还没有调用任何 firebase 函数                    

1191
08:31:05,520 --> 08:31:09,360
在您的应用程序之前，您可以只说 firebase 谁是当前用户                    

1192
08:31:09,360 --> 08:31:13,440
并且firebase只会告诉你这是一个当前用户它是一个匿名用户所以                    

1193
08:31:13,440 --> 08:31:17,120
该用户几乎永远不会为空它永远不会为空或                    

1194
08:31:17,120 --> 08:31:21,760
nil 或任何你喜欢的名字，或者如果你是 python 开发者，你只是                    

1195
08:31:21,760 --> 08:31:25,520
称它为none，这样用户几乎永远不会是none                    

1196
08:31:25,520 --> 08:31:30,478
所以只要知道firebase有一个匿名用户的概念就可以了                    

1197
08:31:30,478 --> 08:31:33,840
我只是要把它记在我们已经讨论过的笔记中                    

1198
08:31:33,840 --> 08:31:37,360
所以下一步我们需要做什么                    

1199
08:31:37,360 --> 08:31:40,638
必须有点喜欢在这里加快速度，因为有这么多                    

1200
08:31:40,638 --> 08:31:43,760
谈谈我们现在需要做的就是                    

1201
08:31:43,760 --> 08:31:47,120
现在创建两个文本字段                    

1202
08:31:47,120 --> 08:31:52,240
电子邮件和另一个密码，然后我们将按下按钮                    

1203
08:31:52,240 --> 08:31:56,160
嗯，在这两个文本字段旁边，所以文本                    

1204
08:31:56,160 --> 08:32:00,478
字段 1 电子邮件文本字段 2 密码，然后将注册按钮作为                    

1205
08:32:00,478 --> 08:32:04,398
现在第三个组件，如果你有这样的组件，你想要                    

1206
08:32:04,398 --> 08:32:09,360
垂直堆叠一个在彼此的顶部，一个接一个，然后你                    

1207
08:32:09,360 --> 08:32:12,798
需要使用一个称为列的好                    

1208
08:32:12,798 --> 08:32:17,440
所以我要在这里做的是到这里去中心，有点像删除                    

1209
08:32:17,440 --> 08:32:20,798
我只想说 mac 中的命令点或 windows 上的控制点                    

1210
08:32:20,798 --> 08:32:25,280
linux，只是说删除这个小部件好吧我不想再居中了                    

1211
08:32:25,280 --> 08:32:30,160
命令的结果注册按钮在左上角，我要做的是我                    

1212
08:32:30,160 --> 08:32:34,718
如果您命令 s，将再次命令并说现在用列换行                    

1213
08:32:34,718 --> 08:32:38,878
你不会直接在屏幕上看到任何东西 没有任何变化                    

1214
08:32:38,878 --> 08:32:44,240
但是为您创建的是一个带有 children 属性的列小部件，它是                    

1215
08:32:44,240 --> 08:32:48,398
它可以显示的小部件列表，所以我们要做的第一件事就是                    

1216
08:32:48,398 --> 08:32:52,958
创建两个文本字段好吧，让我看看这里，然后做                    

1217
08:32:52,958 --> 08:32:57,120
当然是的，我只想说一个文本字段                    

1218
08:32:57,120 --> 08:33:02,240
和另一个文本字段一样                    

1219
08:33:02,240 --> 08:33:05,920
保存你会看到两个文本字段显示在那里所以我实际上可以进入那里                    

1220
08:33:05,920 --> 08:33:11,840
开始输入类似的东西，所以现在我们已经创建了两个文本                    

1221
08:33:11,840 --> 08:33:16,878
屏幕上有列的字段                    

1222
08:33:16,878 --> 08:33:20,638
我要在我的笔记中注明，这里有一张票，所以我们现在已经讨论过了                    

1223
08:33:20,638 --> 08:33:25,680
我们需要做的是抓取显示在这个                    

1224
08:33:25,680 --> 08:33:29,680
获取这些文本字段，当您按下注册按钮时将其传递给                    

1225
08:33:29,680 --> 08:33:33,200
firebase 好的，现在你明白我在告诉你，当你按下按钮时                    

1226
08:33:33,200 --> 08:33:37,520
需要抓取这些文本字段中的文本，但在这个函数中                    

1227
08:33:37,520 --> 08:33:42,478
onpress 你无权访问这些文本字段，好吧，所以你需要通过                    

1228
08:33:42,478 --> 08:33:47,840
来自该文本字段和该文本字段的信息到文本按钮和                    

1229
08:33:47,840 --> 08:33:53,120
做到这一点的方法是使用一种叫做文本控制器的东西                    

1230
08:33:53,120 --> 08:33:56,958
所以文本或文本编辑控制器                    

1231
08:33:56,958 --> 08:34:00,798
文本编辑控制器有点像您传递的代理对象                    

1232
08:34:00,798 --> 08:34:05,520
到您的文本字段和它一直将当前文本写入的文本字段                    

1233
08:34:05,520 --> 08:34:10,080
那个文本编辑控制器和你的文本按钮，然后你可以说                    

1234
08:34:10,080 --> 08:34:14,958
控制器文本可以，这样你就可以了，就像你的文本字段是                    

1235
08:34:14,958 --> 08:34:18,160
坐在这里，你的文本按钮就坐在这里，那么你会有一些东西                    

1236
08:34:18,160 --> 08:34:22,798
中间是您的代理文本编辑控制器                    

1237
08:34:22,798 --> 08:34:27,360
从文本字段中获取最新信息，然后是您的文本                    

1238
08:34:27,360 --> 08:34:30,638
按钮可以读取该信息，所以只要知道文本编辑控制器                    

1239
08:34:30,638 --> 08:34:35,360
有点像代理，现在我们需要管理我们的一些状态                    

1240
08:34:35,360 --> 08:34:39,280
需要管理这个代理对象然后我们需要将我们的主页转换为                    

1241
08:34:39,280 --> 08:34:44,080
有状态的小部件好的，所以进入你的主页命令点并说                    

1242
08:34:44,080 --> 08:34:47,760
转换为有状态的小部件，所以突然有状态的小部件好了                    

1243
08:34:47,760 --> 08:34:53,200
所以现在我们需要做的就是去                    

1244
08:34:53,200 --> 08:34:57,120
创建这两个文本编辑控制器，所以我要进入这里                    

1245
08:34:57,120 --> 08:35:01,120
在这里转到您的主页状态并说                    

1246
08:35:01,120 --> 08:35:05,040
迟到的最后，我们叫他们什么？我有吗？                    

1247
08:35:05,040 --> 08:35:09,600
具体的愿望在这里让我看看我的笔记                    

1248
08:35:09,600 --> 08:35:12,478
不，所以没有真正的欲望                    

1249
08:35:12,478 --> 08:35:16,958
命名所以让我们说迟到的最终文本                    

1250
08:35:16,958 --> 08:35:21,280
控制器，我们在这里称它为电子邮件好吧                    

1251
08:35:21,280 --> 08:35:25,120
另一个我只想说密码                    

1252
08:35:25,120 --> 08:35:29,120
现在在前面的章节中我们还没有谈到迟到，这是什么迟到                    

1253
08:35:29,120 --> 08:35:34,318
黑暗中的关键字告诉你的程序虽然这个打印虽然这个                    

1254
08:35:34,318 --> 08:35:39,680
变量现在没有价值，但我保证之前给它赋值                    

1255
08:35:39,680 --> 08:35:44,000
它被使用所以它有点像它是一个合同所以                    

1256
08:35:44,000 --> 08:35:48,160
迟到的字面意思是我现在还没有准备好我以后会做我没有                    

1257
08:35:48,160 --> 08:35:53,120
准备好为此赋值，所以我们现在需要做的是                    

1258
08:35:53,120 --> 08:35:56,958
嗯是现在创造这些价值                    

1259
08:35:56,958 --> 08:36:00,478
您还需要了解一些关于有状态小部件的知识，因为我们的主页                    

1260
08:36:00,478 --> 08:36:04,000
state 是一个有状态的小部件，它将有两个惊人的                    

1261
08:36:04,000 --> 08:36:09,040
惊人的两个伟大的功能一个叫做初始化状态我                    

1262
08:36:09,040 --> 08:36:13,760
相信和另一个被称为现在已处置的 init state 是一个函数                    

1263
08:36:13,760 --> 08:36:17,760
当它创建你的家时，它会被颤动自动调用                    

1264
08:36:17,760 --> 08:36:23,040
页面，所以它说好的，现在您可以创建所有变量或                    

1265
08:36:23,040 --> 08:36:25,520
你的后期变量一次                    

1266
08:36:25,520 --> 08:36:29,920
现在每当这个主页死掉并超出内存或者它试图                    

1267
08:36:29,920 --> 08:36:33,840
取出内存它还会得到一个名为 dispose 的函数                    

1268
08:36:33,840 --> 08:36:36,958
所以你说过我在合同中                    

1269
08:36:36,958 --> 08:36:39,760
写的是我将为这些电子邮件提供一个价值电子邮件和                    

1270
08:36:39,760 --> 08:36:43,520
密码文本编辑控制器，最好的方法是进入                    

1271
08:36:43,520 --> 08:36:47,120
这个初始化状态函数在这里                    

1272
08:36:47,120 --> 08:36:50,878
并将它们分配给适当的值，所以我                    

1273
08:36:50,878 --> 08:36:56,240
只会说电子邮件是文本编辑控制器，例如                    

1274
08:36:56,240 --> 08:36:58,878
没关系                    

1275
08:36:58,878 --> 08:37:02,718
我将对密码字段做同样的事情                    

1276
08:37:02,718 --> 08:37:07,600
现在您还需要了解，在您创建了这两个之后，您还                    

1277
08:37:07,600 --> 08:37:13,280
需要把它们处理掉，所以进去覆盖你的处理                    

1278
08:37:13,280 --> 08:37:19,920
功能，然后说电子邮件处置和密码                    

1279
08:37:19,920 --> 08:37:24,160
所以很多开发人员忘记了这样做，尤其是像新手一样，所以不要做                    

1280
08:37:24,160 --> 08:37:28,638
那个错误，所以你创建了文本编辑控制器，你也在                    

1281
08:37:28,638 --> 08:37:35,360
负责处理它们现在好了                    

1282
08:37:35,360 --> 08:37:40,318
好的，所以在您创建文本编辑之后我们已经完成了                    

1283
08:37:40,318 --> 08:37:43,520
您需要转到文本字段并分配的控制器                    

1284
08:37:43,520 --> 08:37:46,958
那些控制器到你的文本字段，所以在这里有一个参数叫做                    

1285
08:37:46,958 --> 08:37:52,000
控制器，然后在第二个说电子邮件和您的文本字段                    

1286
08:37:52,000 --> 08:37:55,600
一个是你的密码说控制器                    

1287
08:37:55,600 --> 08:38:00,558
它是密码，所以现在发生的事情是你迷上了这个坐的代理对象                    

1288
08:38:00,558 --> 08:38:03,760
这是您的电子邮件或密码                    

1289
08:38:03,760 --> 08:38:07,040
文本编辑控制器到您坐在这里的文本字段                    

1290
08:38:07,040 --> 08:38:10,478
仍然没有将它连接到您坐在这里的文本按钮，所以这个                    

1291
08:38:10,478 --> 08:38:14,478
链接有点损坏，我们会尽快修复                    

1292
08:38:14,478 --> 08:38:19,040
好的，把它记在我们讨论过的笔记里                    

1293
08:38:19,040 --> 08:38:22,718
所以我们现在需要做的是如果我按下命令 s 你会看到没有                    

1294
08:38:22,718 --> 08:38:26,080
屏幕上可见的变化，但是有一点问题                    

1295
08:38:26,080 --> 08:38:29,520
如您所见，我们的文本字段没有任何提示，他们没有告诉                    

1296
08:38:29,520 --> 08:38:34,240
用户他们期望用户实际输入的内容                    

1297
08:38:34,240 --> 08:38:37,760
我们现在需要做的是在这些文本字段中添加一些东西，称为                    

1298
08:38:37,760 --> 08:38:40,558
提示 提示是一条信息                    

1299
08:38:40,558 --> 08:38:45,280
提供给用户，通常有点像非常微妙                    

1300
08:38:45,280 --> 08:38:49,520
告诉用户此文本字段期望的信息的颜色                    

1301
08:38:49,520 --> 08:38:52,798
他们进入，该提示将自动                    

1302
08:38:52,798 --> 08:38:58,318
用户在该文本字段中输入至少一个字符后立即删除                    

1303
08:38:58,318 --> 08:39:01,920
好的，让我们转到第一个文本字段并说                    

1304
08:39:01,920 --> 08:39:06,000
装饰，我相信这是一个输入装饰                    

1305
08:39:06,000 --> 08:39:11,280
然后说输入装饰好，提示有很多                    

1306
08:39:11,280 --> 08:39:13,840
屏幕上的信息我们什么都看不到                    

1307
08:39:13,840 --> 08:39:19,680
并且有一个提示文本，您可以看到提示文本，它需要一个字符串，所以                    

1308
08:39:19,680 --> 08:39:26,160
在这里说请输入或只是说在此处输入您的电子邮件                    

1309
08:39:26,160 --> 08:39:29,280
你可以看到它暗示这是一个常数，所以我要把它变成一个                    

1310
08:39:29,280 --> 08:39:32,558
常数和一点逗号作为                    

1311
08:39:32,558 --> 08:39:35,680
好吧，您现在可以看到它说在此处输入您的电子邮件                    

1312
08:39:35,680 --> 08:39:40,478
并复制并粘贴此装饰并将其放在下一个文本字段中                    

1313
08:39:40,478 --> 08:39:46,160
所以说在这里输入你的密码                    

1314
08:39:46,160 --> 08:39:50,080
所以让我们在这里输入您的电子邮件在这里输入您的密码                    

1315
08:39:50,080 --> 08:39:52,478
所以嗯                    

1316
08:39:52,478 --> 08:39:56,638
让我也确保那里是正确的，然后把它放在盒子里                    

1317
08:39:56,638 --> 08:39:59,360
嗯，如果你开始在这些字段中输入                    

1318
08:39:59,360 --> 08:40:02,398
您可以看到，一旦您键入内容，提示就会消失，如果您                    

1319
08:40:02,398 --> 08:40:06,240
删除该字符，然后提示也会消失，同样的事情                    

1320
08:40:06,240 --> 08:40:11,920
密码好的，所以我们现在有了                    

1321
08:40:11,920 --> 08:40:16,318
像这里完成的基础工作一样的基础工作，我们需要得到                    

1322
08:40:16,318 --> 08:40:20,478
通过身份验证，因此当您在此处按下此文本按钮时，我们                    

1323
08:40:20,478 --> 08:40:24,798
需要进行身份验证，这意味着我们现在要注册                    

1324
08:40:24,798 --> 08:40:27,840
所以你需要做的是你需要导入                    

1325
08:40:27,840 --> 08:40:32,638
firebase 所以 firebase 是我们的依赖，你可以使用 import 语句                    

1326
08:40:32,638 --> 08:40:36,398
实际上抓取它为firebase创建的内容并将其带入                    

1327
08:40:36,398 --> 08:40:40,478
你的源代码没问题所以你可以在这里看到我们要带来                    

1328
08:40:40,478 --> 08:40:46,798
将 uh firebase off 和 firebase off 部分打包好                    

1329
08:40:46,798 --> 08:40:50,160
now command s 你在屏幕上看不到任何区别，因为                    

1330
08:40:50,160 --> 08:40:55,040
import 语句并没有真正改变你的应用程序的状态                    

1331
08:40:55,040 --> 08:40:58,958
并在导入后                    

1332
08:40:58,958 --> 08:41:01,600
我们需要我也要把它带到这里                    

1333
08:41:01,600 --> 08:41:05,440
我们已经谈过了，所以我们现在需要做的是                    

1334
08:41:05,440 --> 08:41:09,920
按下此按钮，我们将在其中获取您的                    

1335
08:41:09,920 --> 08:41:14,798
这些文本字段中的用户名和密码，所以让我们说最终                    

1336
08:41:14,798 --> 08:41:19,920
用户名或抱歉电子邮件，我会说电子邮件字段文本                    

1337
08:41:19,920 --> 08:41:24,718
我要说最终密码是密码                    

1338
08:41:24,718 --> 08:41:28,080
文本我们要去我们的电子邮件和密码                    

1339
08:41:28,080 --> 08:41:32,478
控制器并抓取他们的文本，这是用户最新的文本                    

1340
08:41:32,478 --> 08:41:35,600
在这些字段中输入好的，所以                    

1341
08:41:35,600 --> 08:41:39,520
在我们完成之后，现在你可以去说 firebase                    

1342
08:41:39,520 --> 08:41:44,398
授权实例                    

1343
08:41:44,398 --> 08:41:48,958
然后你会说用电子邮件和密码创建用户你可以看到这是一个                    

1344
08:41:48,958 --> 08:41:52,080
允许您注册或创建一个                    

1345
08:41:52,080 --> 08:41:56,318
用户作为它的名字表明你有firebase所以                    

1346
08:41:56,318 --> 08:42:01,760
嗯，我会这样做，所以你也可以在这里看到，这东西返回了一个未来                    

1347
08:42:01,760 --> 08:42:05,440
好吧，嗯                    

1348
08:42:05,440 --> 08:42:10,878
所以这不是什么，你可以打电话说嘿，这样做                    

1349
08:42:10,878 --> 08:42:12,798
现在嗯                    

1350
08:42:12,798 --> 08:42:17,440
没有真正等待它，否则它只会说我在这里                    

1351
08:42:17,440 --> 08:42:21,280
未来我是我将来会计算的东西                    

1352
08:42:21,280 --> 08:42:25,920
在那个电话之前不放权，你只会得到未来的实例                    

1353
08:42:25,920 --> 08:42:30,160
你实际上不会得到它正在做的工作你会像一个包装器一样                    

1354
08:42:30,160 --> 08:42:33,520
在工作周围说这是我要做的工作，但如果你                    

1355
08:42:33,520 --> 08:42:37,520
有重量它实际上会执行工作                    

1356
08:42:37,520 --> 08:42:40,878
如果这有任何意义，那么我已经解释了那一章的重量                    

1357
08:42:40,878 --> 08:42:44,878
想想第七章，或者当我们谈论更高级时的任何内容                    

1358
08:42:44,878 --> 08:42:48,798
飞镖中的主题，所以请也看看那一章                    

1359
08:42:48,798 --> 08:42:53,600
嗯做完之后你会看到这个的回归其实就是未来的                    

1360
08:42:53,600 --> 08:42:58,080
用户凭证所以我要做的是我要说最终用户                    

1361
08:42:58,080 --> 08:43:02,638
凭证是这个，然后我要打印它用户                    

1362
08:43:02,638 --> 08:43:06,558
凭证没问题，所以命令                    

1363
08:43:06,558 --> 08:43:11,280
只是在这里热重启以防万一因为我们没有导入所以我是什么                    

1364
08:43:11,280 --> 08:43:16,958
要做在这里输入电子邮件我要说pixelityab.gmail.com                    

1365
08:43:16,958 --> 08:43:20,558
对于密码，我只想说 fubar                    

1366
08:43:20,558 --> 08:43:26,240
低音好吧，让我们把控制台调高，这样我们就可以了                    

1367
08:43:26,240 --> 08:43:29,440
查看我们的应用程序在屏幕上打印的内容                    

1368
08:43:29,440 --> 08:43:33,520
我只想说注册我们会得到一个正确的错误                    

1369
08:43:33,520 --> 08:43:39,520
现在是这样，你可以在这里看到它说没有火力基地                    

1370
08:43:39,520 --> 08:43:44,958
应用默认已创建称为 firebase 初始化应用                    

1371
08:43:44,958 --> 08:43:47,680
所以我的意思是这真的很好                    

1372
08:43:47,680 --> 08:43:52,398
我们得到这个是因为我实际上已经计划让我们解决这个问题                    

1373
08:43:52,398 --> 08:43:59,120
嗯，但在我们继续之前，嗯，我应该解释一下这是什么                    

1374
08:43:59,120 --> 08:44:02,878
这就是为什么会发生这种情况的原因，如果您看到那里有火力基地                    

1375
08:44:02,878 --> 08:44:06,080
记得当我们配置它时，这里为我们创建了一个名为                    

1376
08:44:06,080 --> 08:44:09,760
firebase 选项，里面有很多代码，然后                    

1377
08:44:09,760 --> 08:44:15,360
这里有一个配置，你在这里看到 android 和 ios 为                    

1378
08:44:15,360 --> 08:44:18,798
那么现在firebase抱怨的是你已经创建了这个                    

1379
08:44:18,798 --> 08:44:22,318
配置，但你从来没有真正告诉过我，所以                    

1380
08:44:22,318 --> 08:44:26,558
糟糕的firebase，所以在我们实际进行配置之前我们现在需要做什么                    

1381
08:44:26,558 --> 08:44:29,040
是修复一些你可以立即看到的东西                    

1382
08:44:29,040 --> 08:44:31,840
在不正确的屏幕上                    

1383
08:44:31,840 --> 08:44:36,478
你看到 foo bar bas 是你的密码，它不应该对用户可见，所以当                    

1384
08:44:36,478 --> 08:44:41,040
你正在输入它应该是一个密码字段，同时这个字段                    

1385
08:44:41,040 --> 08:44:45,280
在这里你看到的是一个电子邮件字段，但在哪里添加符号不是                    

1386
08:44:45,280 --> 08:44:49,840
在此处立即可见，因此您需要告诉这些文本字段进行配置                    

1387
08:44:49,840 --> 08:44:54,558
以特定方式使它们实际上适用于电子邮件和密码                    

1388
08:44:54,558 --> 08:44:58,240
注册字段，所以我要摆脱这个栏                    

1389
08:44:58,240 --> 08:45:02,558
右边哦对不起左边，我们需要做的就是提出                    

1390
08:45:02,558 --> 08:45:06,080
下一个主题的下一件事的标题                    

1391
08:45:06,080 --> 08:45:09,600
谈论谈论首先我们要做的是做                    

1392
08:45:09,600 --> 08:45:12,638
此密码文本字段                    

1393
08:45:12,638 --> 08:45:14,798
如此安全                    

1394
08:45:14,798 --> 08:45:18,718
你需要在你的密码字段的装饰中做什么进入                    

1395
08:45:18,718 --> 08:45:23,840
在这里说晦涩难懂，实际上它不在此处的装饰品中                    

1396
08:45:23,840 --> 08:45:28,318
晦涩的文字它是真实的，如果你按 s                    

1397
08:45:28,318 --> 08:45:33,280
你会看到你的文字现在很模糊，你还需要做一个                    

1398
08:45:33,280 --> 08:45:37,680
启用建议 false 然后你也会这样做                    

1399
08:45:37,680 --> 08:45:41,120
自动更正 false 这是三个重要的                    

1400
08:45:41,120 --> 08:45:44,558
现在您可以在此处提供的属性启用                    

1401
08:45:44,558 --> 08:45:48,798
建议通常就像您在文本字段中输入时一样，具体取决于您的                    

1402
08:45:48,798 --> 08:45:52,080
操作系统，它将为您提供建议，例如                    

1403
08:45:52,080 --> 08:45:54,958
这在你不想做的密码字段中                    

1404
08:45:54,958 --> 08:45:58,000
你不想有任何建议，所以这是启用的                    

1405
08:45:58,000 --> 08:46:02,878
建议也自动更正是当您尝试输入某些内容并且您认识您时                    

1406
08:46:02,878 --> 08:46:05,600
所有人都可能知道什么是自动更正，所以我不打算解释它，所以你                    

1407
08:46:05,600 --> 08:46:08,798
根据您的密码密码字段禁用自动更正                    

1408
08:46:08,798 --> 08:46:14,160
感觉所以嗯现在让我们带上这两个属性                    

1409
08:46:14,160 --> 08:46:18,318
也到我们这里的电子邮件字段                    

1410
08:46:18,318 --> 08:46:21,680
好的，我们也要做的是                    

1411
08:46:21,680 --> 08:46:27,520
告诉它这是一封电子邮件，它需要一个电子邮件键盘，所以让我们进入这里                    

1412
08:46:27,520 --> 08:46:32,558
说输入或键盘我认为类型，它被称为                    

1413
08:46:32,558 --> 08:46:36,160
我认为的文本输入类型                    

1414
08:46:36,160 --> 08:46:41,120
然后点电子邮件有电子邮件地址所以                    

1415
08:46:41,120 --> 08:46:45,520
现在保存如果我再去这里你可以看到                    

1416
08:46:45,520 --> 08:46:51,760
有一个广告标志，所以我可以，哦，对不起，你看不到它，所以我会做                    

1417
08:46:51,760 --> 08:46:55,520
这样你就可以真正看到那个标志，这样你就可以在这里看到他们的键盘                    

1418
08:46:55,520 --> 08:46:59,920
然后那里有一个广告牌                    

1419
08:46:59,920 --> 08:47:03,520
所以就是这样，然后建议是                    

1420
08:47:03,520 --> 08:47:09,280
也被禁用，所以当我输入时，我的 um 文本没有任何建议                    

1421
08:47:09,280 --> 08:47:12,160
因为你不想要关于电子邮件字段的建议电子邮件通常就像                    

1422
08:47:12,160 --> 08:47:16,638
疯狂的短信，嗯，通常不是这样，但有时是你                    

1423
08:47:16,638 --> 08:47:21,280
不想要任何建议，好吧，我们已经做了，我想把所有的                    

1424
08:47:21,280 --> 08:47:28,240
这些项目在我的笔记中完成了接下来我们需要做的事情                    

1425
08:47:28,240 --> 08:47:34,080
是要修复我们的firebase应用程序的初始化吗？                    

1426
08:47:34,080 --> 08:47:38,160
我们现在要天真地做，所以我要走了                    

1427
08:47:38,160 --> 08:47:42,398
因为你看到我们仍然有这个错误所以如果我提出这个                    

1428
08:47:42,398 --> 08:47:45,520
清除错误然后说                    

1429
08:47:45,520 --> 08:47:52,958
pixelity a b gmail.com 我说 ubar baz                    

1430
08:47:52,958 --> 08:47:58,000
我说注册我们仍然会收到这个错误，如果没有 Firebase 应用程序是                    

1431
08:47:58,000 --> 08:48:02,718
配置好，所以我们需要做的是实际                    

1432
08:48:02,718 --> 08:48:06,160
在我们做之前注册抱歉初始化firebase                    

1433
08:48:06,160 --> 08:48:10,878
firebase 实例使用电子邮件和密码创建用户                    

1434
08:48:10,878 --> 08:48:15,120
所以我们需要做的就是去这里                    

1435
08:48:15,120 --> 08:48:20,558
并说firebase初始化firebase                    

1436
08:48:20,558 --> 08:48:22,878
应用程序                    

1437
08:48:22,878 --> 08:48:26,160
看看我们有什么                    

1438
08:48:26,160 --> 08:48:32,478
firebase auth 实例或初始化应用程序                    

1439
08:48:32,478 --> 08:48:36,000
我实际上已经忘记了它的语法所以                    

1440
08:48:36,000 --> 08:48:41,280
让我们看看我们是否真的可以通过访问我们的                    

1441
08:48:41,280 --> 08:48:44,638
嗯 Firebase 选项                    

1442
08:48:44,638 --> 08:48:48,080
初始化你可以看到它应该像这样完成                    

1443
08:48:48,080 --> 08:48:52,398
然后我们需要做的是导入firebase选项，就像它显示的那样                    

1444
08:48:52,398 --> 08:48:57,440
这里 firebase 选项，然后等待 firebase.initialize app 就可以了                    

1445
08:48:57,440 --> 08:49:01,840
因此，让我们获取该代码，然后进入我们的主保护文件并                    

1446
08:49:01,840 --> 08:49:08,318
导入 firebase 选项，所以我要去这里说导入                    

1447
08:49:08,318 --> 08:49:13,280
firebase 选项，就在我们之前                    

1448
08:49:13,280 --> 08:49:16,398
做                    

1449
08:49:16,398 --> 08:49:19,440
在这里注册我会做                    

1450
08:49:19,440 --> 08:49:23,200
那里为我们提供的这段代码，所以我要删除评论                    

1451
08:49:23,200 --> 08:49:28,080
command s，我仍然可以看到 firebase 没有被导入，所以我们要走了                    

1452
08:49:28,080 --> 08:49:32,240
通过在此处导入库包 firebase core firebase core 来导入它                    

1453
08:49:32,240 --> 08:49:35,120
我在这里所做的是我基本上利用了内置的东西                    

1454
08:49:35,120 --> 08:49:39,440
视觉工作室代码，以便我自动获取导入语句                    

1455
08:49:39,440 --> 08:49:42,558
所以我要对它做命令点，它说好的                    

1456
08:49:42,558 --> 08:49:46,798
导入这个 dart 文件，这样我就可以利用它了，为什么不呢                    

1457
08:49:46,798 --> 08:49:51,840
可以看到这里导入了firebase core                    

1458
08:49:51,840 --> 08:49:54,878
所以现在我们已经完成了，嗯，我要                    

1459
08:49:54,878 --> 08:50:02,240
按命令 s 我的状态保存在我手机里的 uh 中，让我带上                    

1460
08:50:02,240 --> 08:50:07,440
这里的日志清理它们然后我要按下注册按钮                    

1461
08:50:07,440 --> 08:50:11,760
繁荣呃在这里，我们在这里遇到了一个错误，它                    

1462
08:50:11,760 --> 08:50:15,760
说设备解锁初始化所有firebase api和firebase准备                    

1463
08:50:15,760 --> 08:50:21,440
创建等等，让我们实际看看错误是什么                    

1464
08:50:21,440 --> 08:50:25,840
它正在处理异常请求失败                    

1465
08:50:25,840 --> 08:50:29,280
和无法访问的主机，这可能是                    

1466
08:50:29,280 --> 08:50:33,600
因为我实际上没有正确的互联网连接                    

1467
08:50:33,600 --> 08:50:35,440
电话在这里                    

1468
08:50:35,440 --> 08:50:39,120
所以我要去这里，我要去设置                    

1469
08:50:39,120 --> 08:50:43,440
你看到这些错误真的很棒，因为这些事情确实发生了                    

1470
08:50:43,440 --> 08:50:47,200
我要打开 wi-fi 所以确保它可以连接到                    

1471
08:50:47,200 --> 08:50:50,160
这里有一个有效的无线网络                    

1472
08:50:50,160 --> 08:50:53,600
它已连接，我将返回应用程序                    

1473
08:50:53,600 --> 08:50:58,718
清除日志哦，我的上帝，那里显示了很多东西                    

1474
08:50:58,718 --> 08:51:01,600
那么我要做的就是重复我要说的话                    

1475
08:51:01,600 --> 08:51:04,240
现在注册                    

1476
08:51:04,240 --> 08:51:10,398
现在我们到了我准备好的下一个状态                    

1477
08:51:10,398 --> 08:51:15,280
说你可以在错误中看到它说现在找不到配置                    

1478
08:51:15,280 --> 08:51:20,798
这里发生了什么我没有记下我们讨论过的其他内容                    

1479
08:51:20,798 --> 08:51:24,638
这里发生的部分代码是                    

1480
08:51:24,638 --> 08:51:30,000
我们实际上并没有告诉 firebase 我们将利用                    

1481
08:51:30,000 --> 08:51:34,318
电子邮件和密码签名组合，正如我之前告诉你的那样，有各种                    

1482
08:51:34,318 --> 08:51:40,718
firebase 允许我们注册用户的各种方式                    

1483
08:51:40,718 --> 08:51:45,600
登录嗯你可以做电子邮件和密码组合你可以做facebook你可以                    

1484
08:51:45,600 --> 08:51:48,958
谷歌也许推特也是如此，是的，我想                    

1485
08:51:48,958 --> 08:51:53,680
推特也在那里，所以你需要告诉 firebase 嗯                    

1486
08:51:53,680 --> 08:52:00,080
我们基本上希望允许这种组合好吧                    

1487
08:52:00,080 --> 08:52:03,520
所以现在我已经解释了让我们提出来                    

1488
08:52:03,520 --> 08:52:09,680
safari 或者你最喜欢的浏览器可能是 chrome，让我们去 uh 控制台                    

1489
08:52:09,680 --> 08:52:13,680
firebase google.com 我要把我的浏览器带到屏幕上，这样你也可以                    

1490
08:52:13,680 --> 08:52:17,760
看到它，我要去然后找到我们的                    

1491
08:52:17,760 --> 08:52:22,798
被称为 uh my notes flutter project 的应用程序好吧，那就去吧                    

1492
08:52:22,798 --> 08:52:25,520
到 consolefirebase.google.com 并找到你的                    

1493
08:52:25,520 --> 08:52:29,520
您在上一章中创建的项目单击它                    

1494
08:52:29,520 --> 08:52:33,280
然后像我在这里向您展示的那样进行身份验证                    

1495
08:52:33,280 --> 08:52:36,878
让我们看看                    

1496
08:52:36,878 --> 08:52:41,920
身份验证真正开始                    

1497
08:52:41,920 --> 08:52:45,760
并登录我们需要的是这封电子邮件和                    

1498
08:52:45,760 --> 08:52:49,760
密码组合所以去电子邮件和密码组合并允许它                    

1499
08:52:49,760 --> 08:52:53,920
好的，然后按保存                    

1500
08:52:53,920 --> 08:52:56,958
这就是你所要做的，所以我要                    

1501
08:52:56,958 --> 08:52:59,760
抓住这个屏幕只是把它带到另一个                    

1502
08:52:59,760 --> 08:53:05,200
监视器所以你看不到它清理日志然后说注册                    

1503
08:53:05,200 --> 08:53:09,680
所以你现在可以突然看到你从firebase拿回了用户凭据                    

1504
08:53:09,680 --> 08:53:14,080
所以你现在实际上可以                    

1505
08:53:14,080 --> 08:53:19,360
注册您的应用程序，就像使用 firebase 注册一个真实用户一样                    

1506
08:53:19,360 --> 08:53:23,520
真的很神奇，所以我要点击我讨论过的笔记                    

1507
08:53:23,520 --> 08:53:26,558
这么                    

1508
08:53:26,558 --> 08:53:30,478
但是你看到这有点问题，因为按下                    

1509
08:53:30,478 --> 08:53:34,718
按钮，但我们实际上是在初始化一个应用程序，然后我们正在做                    

1510
08:53:34,718 --> 08:53:38,718
使用电子邮件和密码创建用户如果您有两个或三个会发生什么                    

1511
08:53:38,718 --> 08:53:43,280
屏幕上的按钮都需要 firebase 你不能做 firebase                    

1512
08:53:43,280 --> 08:53:47,600
在其中的每一个中初始化应用程序，因此解决方案是                    

1513
08:53:47,600 --> 08:53:52,398
就像在你之前初始化你的 firebase 应用程序                    

1514
08:53:52,398 --> 08:53:57,200
从你在你的屏幕和你的                    

1515
08:53:57,200 --> 08:54:01,760
电话所以有很好的文档说明如何做                    

1516
08:54:01,760 --> 08:54:05,760
那个，我实际上已经链接到那个，所以我要把它带到这里                    

1517
08:54:05,760 --> 08:54:10,558
所以我们需要做的是利用一种叫做小部件颤动的东西                    

1518
08:54:10,558 --> 08:54:13,520
绑定和                    

1519
08:54:13,520 --> 08:54:19,040
在这里对你说实话是它需要一些火力基地                    

1520
08:54:19,040 --> 08:54:23,200
它需要在一切之前启动它的进程                    

1521
08:54:23,200 --> 08:54:28,718
else 在屏幕上呈现，为了实现这一点，它需要它                    

1522
08:54:28,718 --> 08:54:33,440
需要有某种类似核心颤振引擎的东西才能到位                    

1523
08:54:33,440 --> 08:54:37,120
这样它就可以调用核心屠宰引擎并说我是                    

1524
08:54:37,120 --> 08:54:42,638
完成了我的工作，所以为了做到这一点，那么你需要一个叫做 um 的东西                    

1525
08:54:42,638 --> 08:54:46,718
小部件颤动绑定，所以我要                    

1526
08:54:46,718 --> 08:54:52,080
我会为此调出 um 的标题，我可以显示                    

1527
08:54:52,080 --> 08:54:54,878
你，我就是，这是我给你看的文档                    

1528
08:54:54,878 --> 08:54:57,360
链接在那里                    

1529
08:54:57,360 --> 08:55:02,718
在我们的 in your void 函数中，嗯，在我们真正看到之前                    

1530
08:55:02,718 --> 08:55:06,398
也许我跳过了一点，但我们要做的是尝试修复                    

1531
08:55:06,398 --> 08:55:11,120
这个问题我们正在等待在firebase上初始化应用程序，所以我们                    

1532
08:55:11,120 --> 08:55:14,000
不想在按下按钮时执行此操作，我们实际上想要执行此操作                    

1533
08:55:14,000 --> 08:55:17,760
在其他地方，为了能够在其他地方做到这一点，我们必须                    

1534
08:55:17,760 --> 08:55:23,120
首先照顾这个小部件绑定好的所以在这里你的主要功能                    

1535
08:55:23,120 --> 08:55:27,120
然后说嗯我想我们需要说                    

1536
08:55:27,120 --> 08:55:33,520
小部件颤动绑定点确保像那样初始化                    

1537
08:55:33,520 --> 08:55:37,440
好的，如果您想了解更多信息，我强烈建议您阅读                    

1538
08:55:37,440 --> 08:55:42,080
我在这里提供的这个文档好的                    

1539
08:55:42,080 --> 08:55:47,360
所以现在已经到位了，现在你已经完成了                    

1540
08:55:47,360 --> 08:55:50,718
重启好吧，所以你会失去你的状态                    

1541
08:55:50,718 --> 08:55:53,920
热重启后在这里，没关系                    

1542
08:55:53,920 --> 08:55:58,398
我会把它记在我已经谈过的笔记中                    

1543
08:55:58,398 --> 08:56:02,318
现在你知道这个初始化                    

1544
08:56:02,318 --> 08:56:07,680
应用程序是一个未来，您会看到它是 firebase 应用程序的未来，现在您需要做的是                    

1545
08:56:07,680 --> 08:56:15,360
有点像你想告诉颤振不要在它有之前建立这个专栏                    

1546
08:56:15,360 --> 08:56:19,280
完成了那个未来和                    

1547
08:56:19,280 --> 08:56:25,840
这样做的方法是使用flutter的future builder小部件future builder it                    

1548
08:56:25,840 --> 08:56:29,840
需要一个未来它执行未来，一旦这个                    

1549
08:56:29,840 --> 08:56:34,958
未来成功或失败，它会给你打电话                    

1550
08:56:34,958 --> 08:56:39,600
返回并在该回调中，它要求您实际生成一个您想要的小部件                    

1551
08:56:39,600 --> 08:56:42,478
根据状态向用户显示                    

1552
08:56:42,478 --> 08:56:47,680
那个期货的结果，所以它基本上而不是你必须这样做                    

1553
08:56:47,680 --> 08:56:52,558
每次用户按下你说我不是的按钮时初始化firebase                    

1554
08:56:52,558 --> 08:56:57,840
做任何事情，直到完成，或者如果它出错了                    

1555
08:56:57,840 --> 08:57:01,520
让我知道然后我会给你一个小部件显示给用户，具体取决于                    

1556
08:57:01,520 --> 08:57:05,680
结果还好所以我们要做什么                    

1557
08:57:05,680 --> 08:57:10,478
要去这个身体，现在是一列命令点，然后                    

1558
08:57:10,478 --> 08:57:14,240
让我们看看我们拥有的流构建器，但我们没有未来的构建器，所以我只是                    

1559
08:57:14,240 --> 08:57:19,680
会说带有小部件的命令点换行                    

1560
08:57:19,680 --> 08:57:24,398
我会说未来的建设者好吧，所以我要建立一个你可以看到的未来                    

1561
08:57:24,398 --> 08:57:28,718
它说ok builder是必需的，所以让我们放一个                    

1562
08:57:28,718 --> 08:57:33,040
builder 参数，如果你像我一样忘记了这些语法                    

1563
08:57:33,040 --> 08:57:37,360
您可以在 mac 上的 Visual Studio 代码或命令空间中控制空间                    

1564
08:57:37,360 --> 08:57:42,798
linux 和 windows 来获得帮助，然后你就可以使用这个语法                    

1565
08:57:42,798 --> 08:57:48,718
好的，所以带上你的整个专栏                    

1566
08:57:48,718 --> 08:57:53,680
在这里你看到这个直到没有逗号的列的结尾                    

1567
08:57:53,680 --> 08:57:57,120
然后你把你的孩子带走，把整个东西都带回来，放在这里，然后                    

1568
08:57:57,120 --> 08:58:00,638
把它放在那里就好了                    

1569
08:58:00,638 --> 08:58:07,200
现在你未来的建造者，嗯，它没有真正的未来来表演                    

1570
08:58:07,200 --> 08:58:11,040
所以为了它的未来                    

1571
08:58:11,040 --> 08:58:14,478
让我们看看我想说我们已经谈到了未来                    

1572
08:58:14,478 --> 08:58:16,958
建设者                    

1573
08:58:16,958 --> 08:58:20,878
而我们现在需要做的是从这里抓住这个未来，你看                    

1574
08:58:20,878 --> 08:58:25,760
等待 firebase 初始化应用程序并在不移除重量的情况下抓住未来                    

1575
08:58:25,760 --> 08:58:31,120
重量并把它放在未来建设者的未来                    

1576
08:58:31,120 --> 08:58:34,958
像这样的参数                    

1577
08:58:34,958 --> 08:58:37,040
好的命令                    

1578
08:58:37,040 --> 08:58:40,478
在热重启和                    

1579
08:58:40,478 --> 08:58:44,798
你可以看到屏幕上没有真正发生任何事情，所以                    

1580
08:58:44,798 --> 08:58:49,440
你没有任何区别你基本上没有注意到任何区别                    

1581
08:58:49,440 --> 08:58:52,958
因此，如果一切都按预期进行                    

1582
08:58:52,958 --> 08:58:57,840
嗯，那么我们需要做的就是                    

1583
08:58:57,840 --> 08:59:01,600
嗯，如果一切都按预期工作，那么我们应该能够注册用户                    

1584
08:59:01,600 --> 08:59:07,760
所以我要在这里做的是我要提供完全相同的用户                    

1585
08:59:07,760 --> 08:59:13,600
已经注册然后说注册，你现在会看到我们得到一个错误                    

1586
08:59:13,600 --> 08:59:17,520
让我们看看我能不能带你去那里，它说错误是firebase auth email                    

1587
08:59:17,520 --> 08:59:22,160
已在使用该电子邮件或该电子邮件地址已被其他人使用                    

1588
08:59:22,160 --> 08:59:25,520
帐户，这就是我要的部分                    

1589
08:59:25,520 --> 08:59:29,360
为你调出字幕                    

1590
08:59:29,360 --> 08:59:36,000
所以我们也谈到了                    

1591
08:59:36,000 --> 08:59:38,160
好吧                    

1592
08:59:38,160 --> 08:59:42,840
在我们结束和结束之前我想谈的下一个话题                    

1593
08:59:42,840 --> 08:59:47,760
呃章节是你看到的连接状态                    

1594
08:59:47,760 --> 08:59:50,558
我们告诉未来的建设者执行未来                    

1595
08:59:50,558 --> 08:59:54,718
未来是firebase初始化应用程序好吧这个东西                    

1596
08:59:54,718 --> 08:59:58,398
现在，如果您查看构建器，我们现在从它返回的是                    

1597
08:59:58,398 --> 09:00:02,318
列，但我们完全忽略了这里的参数                    

1598
09:00:02,318 --> 09:00:05,120
传递给您的构建器的第二个参数称为                    

1599
09:00:05,120 --> 09:00:09,120
如您所见，数据类型异步快照的快照                    

1600
09:00:09,120 --> 09:00:14,398
对象的异步快照是该对象现在的状态                    

1601
09:00:14,398 --> 09:00:19,040
所以在这种情况下，那个对象本身实际上是你未来的结果                    

1602
09:00:19,040 --> 09:00:22,478
firebase 应用程序就是这样                    

1603
09:00:22,478 --> 09:00:26,478
它不明白这个快照是你的 firebase 的异步快照                    

1604
09:00:26,478 --> 09:00:30,798
应用程序，但没关系，我们实际上并不需要快照中的 firebase 应用程序                    

1605
09:00:30,798 --> 09:00:36,398
但是，您在此快照中确实需要的一件事是您看到的状态                    

1606
09:00:36,398 --> 09:00:42,160
未来有一个起点它有一条线来处理它的信息和                    

1607
09:00:42,160 --> 09:00:48,240
它有一个终点，它要么成功结束，要么现在失败                    

1608
09:00:48,240 --> 09:00:54,638
快照是您获得未来结果的方式，无论是                    

1609
09:00:54,638 --> 09:01:00,160
它是否开始处理它是否完成或是否失败所以我们需要做什么                    

1610
09:01:00,160 --> 09:01:05,840
在这里做，因为我们正在等待 firebase 初始化应用程序完成它的工作                    

1611
09:01:05,840 --> 09:01:11,200
基本上会说呃我们正在加载只是告诉用户加载并且尽快                    

1612
09:01:11,200 --> 09:01:14,000
快照完成后，我们会说                    

1613
09:01:14,000 --> 09:01:17,920
加载完成                    

1614
09:01:17,920 --> 09:01:21,360
所以让我们这样做让我们进去说                    

1615
09:01:21,360 --> 09:01:25,040
切换快照                    

1616
09:01:25,040 --> 09:01:28,240
我相信它被称为                    

1617
09:01:28,240 --> 09:01:32,798
连接状态正常，然后从Visual Studio代码中获得帮助来完成                    

1618
09:01:32,798 --> 09:01:35,600
所以我要说添加缺失的 case 子句，你可以看到有                    

1619
09:01:35,600 --> 09:01:39,920
这么多不同的情况对                    

1620
09:01:39,920 --> 09:01:44,398
完成等待活动，一切顺利，所以                    

1621
09:01:44,398 --> 09:01:47,600
没有                    

1622
09:01:47,600 --> 09:01:52,958
等待让我们说除了完成之外的其他所有内容，我们将返回                    

1623
09:01:52,958 --> 09:01:57,280
就像只是说正在加载的文字                    

1624
09:01:57,280 --> 09:02:02,160
假设在这里我们删除所有这些好的                    

1625
09:02:02,160 --> 09:02:07,280
在完成语句中，我们说返回整个列                    

1626
09:02:07,280 --> 09:02:10,878
一路到这里                    

1627
09:02:10,878 --> 09:02:15,120
对，然后我们不需要休息，因为我们说返回，然后我们                    

1628
09:02:15,120 --> 09:02:20,160
要说默认默认值是一种特殊情况，它不是                    

1629
09:02:20,160 --> 09:02:24,958
实际上在那个枚举中，但这是一个说明我的其他一切的案例                    

1630
09:02:24,958 --> 09:02:30,080
还没有处理，在这种情况下，我们只说返回文本                    

1631
09:02:30,080 --> 09:02:35,280
加载这样的东西作为一个常数                    

1632
09:02:35,280 --> 09:02:39,680
所以我要重新加载对不起热重启和两个小时                    

1633
09:02:39,680 --> 09:02:42,958
视频发生得如此之快，以至于我们实际上没有看到加载                    

1634
09:02:42,958 --> 09:02:46,798
但至少我们已经处理了这样的情况，例如，如果用户的连接                    

1635
09:02:46,798 --> 09:02:52,000
太慢或他们的设备太慢 当未来结束时，他们会                    

1636
09:02:52,000 --> 09:02:54,958
看到这个专栏我真的要折叠它                    

1637
09:02:54,958 --> 09:02:58,798
如果这个功能还没有完成它还没有完成那么他们会看到这个                    

1638
09:02:58,798 --> 09:03:02,398
文本卸载好，顺便说一句，这就是你实际上可以折叠和                    

1639
09:03:02,398 --> 09:03:06,080
在视觉工作室代码中展开事物所以折叠                    

1640
09:03:06,080 --> 09:03:13,680
像这样折叠展开，这是查看更多代码的好方法，所以                    

1641
09:03:13,680 --> 09:03:18,958
哇，这个视频花了一个小时，就像我预期的那样，有很多信息                    

1642
09:03:18,958 --> 09:03:24,318
嗯，所以我们现在有一个基本的 Firebase 设置                    

1643
09:03:24,318 --> 09:03:28,160
我们已经完成了我们讨论的 Firebase 应用程序的初始化                    

1644
09:03:28,160 --> 09:03:31,520
关于很多小部件实际上我们谈到了专栏                    

1645
09:03:31,520 --> 09:03:36,080
我们的文字专栏谈到了文字未来的建设者                    

1646
09:03:36,080 --> 09:03:39,200
文本字段容器                    

1647
09:03:39,200 --> 09:03:44,558
上帝的应用程序栏有很多东西，所以这是很多内容，如果你                    

1648
09:03:44,558 --> 09:03:48,080
没明白这一切没关系，我们将在                    

1649
09:03:48,080 --> 09:03:52,718
即将到来的章节，但我强烈建议我的意思是如果                    

1650
09:03:52,718 --> 09:03:57,680
你正在看这个课程，如果你只是在看它                    

1651
09:03:57,680 --> 09:04:00,478
如果您是高级开发人员并且                    

1652
09:04:00,478 --> 09:04:04,240
你在看这完全没问题，但如果你在发展                    

1653
09:04:04,240 --> 09:04:09,200
您不是开发人员，或者如果您是初级开发人员或其他人                    

1654
09:04:09,200 --> 09:04:12,398
没有太多flutter开发经验，你真的                    

1655
09:04:12,398 --> 09:04:16,478
试图学习我在这里所说的一切请不要只看这个视频                    

1656
09:04:16,478 --> 09:04:21,680
去自己做这个去写这段代码在我说话的时候暂停视频                    

1657
09:04:21,680 --> 09:04:25,040
我知道我会说得快一点，但这只是为了节省一点时间                    

1658
09:04:25,040 --> 09:04:29,200
暂停视频 在我编写代码时编写代码 在我测试时测试它并查看                    

1659
09:04:29,200 --> 09:04:32,798
自己的结果，因为这就是您将学习的方式，而不仅仅是通过观看                    

1660
09:04:32,798 --> 09:04:36,718
太好了，我们谈了很多                    

1661
09:04:36,718 --> 09:04:42,160
小部件和 Firebase 配置，在下一章中，我们将                    

1662
09:04:42,160 --> 09:04:47,200
谈论登录屏幕和电子邮件验证，并清理我们的                    

1663
09:04:47,200 --> 09:04:51,440
注册屏幕，所以事不宜迟，让我们为                    

1664
09:04:51,440 --> 09:04:56,718
下一章，我会在那里见到你你好，欢迎来到第 13 章                    

1665
09:04:56,718 --> 09:04:59,760
本章我们要讲的flutter课程                    

1666
09:04:59,760 --> 09:05:05,200
关于第 12 章中的登录视图，我可以在这里看到                    

1667
09:05:05,200 --> 09:05:10,080
抱歉，我们谈到了注册流程和                    

1668
09:05:10,080 --> 09:05:13,760
我们实际上谈了很多事情，在那之后我                    

1669
09:05:13,760 --> 09:05:18,878
想也许我们需要再经历一次                    

1670
09:05:18,878 --> 09:05:21,920
时不时地谈论我们谈论的那些小部件                    

1671
09:05:21,920 --> 09:05:26,958
就像一个未来的建设者中心栏文本按钮，我们也谈到了                    

1672
09:05:26,958 --> 09:05:30,718
关于 um text field 文本编辑控制器 so                    

1673
09:05:30,718 --> 09:05:34,160
我们讨论了很多组件，但我们非常喜欢                    

1674
09:05:34,160 --> 09:05:37,200
一个简单的注册流程                    

1675
09:05:37,200 --> 09:05:41,520
实际上并不是一个流程，它只是一个简单的注册屏幕                    

1676
09:05:41,520 --> 09:05:45,440
我是说这不是一个流程，因为它只是一个简单的屏幕，没有                    

1677
09:05:45,440 --> 09:05:48,718
如果您有屏幕，则可以在通常称为流程的任何地方倾斜                    

1678
09:05:48,718 --> 09:05:52,478
这导致了本章现在我们将要讨论的某个地方                    

1679
09:05:52,478 --> 09:05:56,878
关于登录登录视图，我们还将划分逻辑                    

1680
09:05:56,878 --> 09:06:03,120
我们已经在我们当前的主页中创建了一个注册视图，所以                    

1681
09:06:03,120 --> 09:06:06,558
在本章结束时，我们将有两种观点，一种是针对                    

1682
09:06:06,558 --> 09:06:11,758
注册另一个是用于登录好的                    

1683
09:06:11,758 --> 09:06:16,960
所以正如我在这里向你展示的那样，我们有这些逻辑，我的意思是                    

1684
09:06:16,960 --> 09:06:20,800
注册逻辑到位现在我们必须登录，但我们也可以工作                    

1685
09:06:20,800 --> 09:06:23,598
清理代码的一点点，因为                    

1686
09:06:23,598 --> 09:06:26,718
通常我的意思是当你对软件越来越熟悉时                    

1687
09:06:26,718 --> 09:06:30,878
发展你会知道你会有这样的想法流                    

1688
09:06:30,878 --> 09:06:34,320
然后你将开始编码并编写你的代码然后你测试它然后                    

1689
09:06:34,320 --> 09:06:38,238
过了一会儿，你意识到哦，这有点乱，我必须重构                    

1690
09:06:38,238 --> 09:06:42,320
代码，这就是重构的意思，就像你采用已经存在的东西一样                    

1691
09:06:42,320 --> 09:06:46,078
在那里，你让它变得更好，让它更干净更漂亮，所以                    

1692
09:06:46,078 --> 09:06:50,398
这也是我们在本章中要做的                    

1693
09:06:50,398 --> 09:06:55,840
所以我们需要做的第一件事就是创建一个有状态的注册视图小部件                    

1694
09:06:55,840 --> 09:06:58,878
好的，如您所见，这将被使用                    

1695
09:06:58,878 --> 09:07:03,840
作为我们注册视图的基础                    

1696
09:07:03,840 --> 09:07:06,878
所以让我去拿一些东西                    

1697
09:07:06,878 --> 09:07:11,680
我们将在本章中需要第一个是我的 scr                    

1698
09:07:11,680 --> 09:07:14,800
我把它带到屏幕上，这样你也会看到                    

1699
09:07:14,800 --> 09:07:18,480
和 scr cpy 我们在前面的章节中设置了它，所以你应该                    

1700
09:07:18,480 --> 09:07:21,520
已经很舒服了                    

1701
09:07:21,520 --> 09:07:25,520
我要去我们的应用程序这里这是我们的注册视图                    

1702
09:07:25,520 --> 09:07:29,040
created 会把我的脸带到右边，所以我们会看到更多的内容                    

1703
09:07:29,040 --> 09:07:33,200
在屏幕上，然后我也要调出                    

1704
09:07:33,200 --> 09:07:38,320
视觉工作室代码现在出现在另一个屏幕上，但我会带来                    

1705
09:07:38,320 --> 09:07:42,160
它在这里，所以你也会看到我要增加一点尺寸                    

1706
09:07:42,160 --> 09:07:46,480
也有点，所以它变得更容易看到                    

1707
09:07:46,480 --> 09:07:51,278
所以这是我们举东西的地方，嗯，让我提起                    

1708
09:07:51,278 --> 09:07:55,598
像这样做屏幕，这就是我们生活的地方，我们有一个主页                    

1709
09:07:55,598 --> 09:08:00,718
目前注册视图还可以，但我们需要创建一个注册                    

1710
09:08:00,718 --> 09:08:05,758
查看不仅仅是一个主页它被称为主页所以                    

1711
09:08:05,758 --> 09:08:09,122
由于我们需要一个有状态的小部件，我们将在可视化中使用快捷方式                    

1712
09:08:09,122 --> 09:08:13,840
工作室代码为我们创建一个有状态的小部件，它与 s t f 一样                    

1713
09:08:13,840 --> 09:08:19,758
状态已满，所以如果你想创建一个无状态小部件，你会说 stl 好的                    

1714
09:08:19,758 --> 09:08:23,918
所以 stf 在这里我们叫它什么                    

1715
09:08:23,918 --> 09:08:29,360
我们应该这样说注册视图好吗                    

1716
09:08:29,360 --> 09:08:33,200
所以这就是我在这里提到的                    

1717
09:08:33,200 --> 09:08:39,918
将成为我们的基础                    

1718
09:08:39,918 --> 09:08:43,438
这将是我们注册查看所有代码的基础                    

1719
09:08:43,438 --> 09:08:47,040
注册会出现在这里对不起，我正在寻找                    

1720
09:08:47,040 --> 09:08:50,718
在这里只是为了确保我基本上                    

1721
09:08:50,718 --> 09:08:53,680
浏览我的笔记，我在这里有非常详细的笔记，只是确保                    

1722
09:08:53,680 --> 09:08:56,640
你得到我计划让你得到的所有信息所以如果你看到我                    

1723
09:08:56,640 --> 09:08:59,680
看这里只是因为我正在看笔记以确保                    

1724
09:08:59,680 --> 09:09:02,640
嗯，现在我们已经创建了注册视图，目前它还没有                    

1725
09:09:02,640 --> 09:09:06,398
任何东西，所以它只是一个容器和容器的默认颜色和                    

1726
09:09:06,398 --> 09:09:11,520
背景是黑色的，所以让我们在这里进入我们的注册视图                    

1727
09:09:11,520 --> 09:09:14,640
所以让我们在这里转到我们的主要功能，正如你现在所看到的那样                    

1728
09:09:14,640 --> 09:09:18,640
返回主页作为主页，我们在这里要做的只是说                    

1729
09:09:18,640 --> 09:09:22,718
而不是那个返回寄存器视图好吧                    

1730
09:09:22,718 --> 09:09:26,480
那就是我们很可能会在这里遇到问题，你可以看到                    

1731
09:09:26,480 --> 09:09:30,718
什么都没有改变，因为我正在改变主要内部的一些东西，而那不是                    

1732
09:09:30,718 --> 09:09:36,000
真的受到热重载的影响，所以我们必须热重启，所以我要                    

1733
09:09:36,000 --> 09:09:39,598
go how to restart here 你可以看到现在屏幕是黑色的                    

1734
09:09:39,598 --> 09:09:41,520
所以嗯                    

1735
09:09:41,520 --> 09:09:45,598
那部分基本完成了                    

1736
09:09:45,598 --> 09:09:51,680
所以我们现在要做的就是将我们的主页重命名为我们的登录视图                    

1737
09:09:51,680 --> 09:09:56,000
实际上，我们有一个新的注册视图，我们将编写代码                    

1738
09:09:56,000 --> 09:10:00,320
用于或实际将上一个主页中的代码放入注册视图                    

1739
09:10:00,320 --> 09:10:05,360
我们还需要重命名主页，所以我的意思是                    

1740
09:10:05,360 --> 09:10:09,040
很多重命名把东西放在这里和那里，但我们只是在玩一些                    

1741
09:10:09,040 --> 09:10:12,320
名字基本上在这里所以接下来你需要做的就是去                    

1742
09:10:12,320 --> 09:10:16,640
到您的主页，并将其重命名为实现该视觉效果的一种方式                    

1743
09:10:16,640 --> 09:10:21,278
工作室代码是右键单击它，然后说重命名符号，或者我相信它是                    

1744
09:10:21,278 --> 09:10:25,680
也命令 f2                    

1745
09:10:25,680 --> 09:10:30,558
或者实际上对我来说，如果两个重命名但在 macbook pro 上，则为 f2                    

1746
09:10:30,558 --> 09:10:34,878
例如，您不能只按 f2，因为 f2 有另一个功能                    

1747
09:10:34,878 --> 09:10:39,598
所以你需要做的是按功能键盘保持键                    

1748
09:10:39,598 --> 09:10:43,360
键盘，然后按 f2 将弹出重命名对话框，或者您可以                    

1749
09:10:43,360 --> 09:10:47,598
只需右键单击此处并说重命名符号即可                    

1750
09:10:47,598 --> 09:10:53,758
所以将您的主页重命名为登录视图                    

1751
09:10:53,758 --> 09:10:58,800
好的，所以我们现在在这里有登录视图，嗯，我会认为我们已经完成了                    

1752
09:10:58,800 --> 09:11:02,398
重命名你看                    

1753
09:11:02,398 --> 09:11:06,640
现在我们在这里所做的只是喜欢写我们的代码                    

1754
09:11:06,640 --> 09:11:11,438
主飞镖中的所有内容，但这不是正确的做法                    

1755
09:11:11,438 --> 09:11:15,840
尤其是当你的项目变得更大时，你需要确保你                    

1756
09:11:15,840 --> 09:11:19,278
您有责任确保您的代码可读且                    

1757
09:11:19,278 --> 09:11:22,960
你的项目结构是其他人可以理解的，他们也可能是                    

1758
09:11:22,960 --> 09:11:27,200
现在从事同一个项目的机会是，如果您正在观看本课程                    

1759
09:11:27,200 --> 09:11:31,840
你将是唯一一个在源代码上工作的人，所以你不会有                    

1760
09:11:31,840 --> 09:11:35,918
即使有其他人在查看您的代码                    

1761
09:11:35,918 --> 09:11:39,520
你可能是唯一一个查看代码并使用它的人                    

1762
09:11:39,520 --> 09:11:44,640
仍然需要不时地回到项目中修复一些东西                    

1763
09:11:44,640 --> 09:11:49,758
添加一些东西 删除一些东西 所以即使你是唯一工作的人                    

1764
09:11:49,758 --> 09:11:55,360
有了它，您将需要一个干净的源代码来查看，所以如果您来                    

1765
09:11:55,360 --> 09:11:58,640
一个月后回到源代码，你开始添加越来越多的东西                    

1766
09:11:58,640 --> 09:12:02,640
一段时间后到这个主要的飞镖文件它会失去控制所以                    

1767
09:12:02,640 --> 09:12:06,160
您还需要对代码进行重构，以确保它在                    

1768
09:12:06,160 --> 09:12:09,200
干净的状态，所以我们要做的是提出                    

1769
09:12:09,200 --> 09:12:13,438
我们的项目浏览器在这里，您可以看到我们在 lib 中，然后                    

1770
09:12:13,438 --> 09:12:18,078
有一个名为 main dart 的文件，我们需要在这里做的是                    

1771
09:12:18,078 --> 09:12:23,758
将我们的登录视图移动到它自己的文件中，你可以在这里看到我已经写了                    

1772
09:12:23,758 --> 09:12:27,918
我们将把它移到 lib 视图登录视图这个文件不存在于                    

1773
09:12:27,918 --> 09:12:32,160
那一刻，所以你需要创建它你将在这里做什么我的意思是视觉                    

1774
09:12:32,160 --> 09:12:36,960
工作室代码有一个很棒的技巧，你可以做它可以在上面创建一个文件                    

1775
09:12:36,960 --> 09:12:41,520
所有中间文件夹也是如此，而不是去这里                    

1776
09:12:41,520 --> 09:12:46,800
并说新文件夹以创建此视图文件夹，然后在其中创建一个                    

1777
09:12:46,800 --> 09:12:50,398
登录查看您需要做的只是说新文件                    

1778
09:12:50,398 --> 09:12:54,238
然后在那里输入整个路径，所以只需说                    

1779
09:12:54,238 --> 09:12:59,840
视图，然后斜线登录视图点飞镖，这将创建视图文件夹                    

1780
09:12:59,840 --> 09:13:04,398
对你来说太好了                    

1781
09:13:04,398 --> 09:13:09,680
所以我需要在这里做的是获取我们的登录视图代码，如您所见                    

1782
09:13:09,680 --> 09:13:12,320
这里                    

1783
09:13:12,320 --> 09:13:18,640
正如我们在这里有类登录视图，然后将所有代码带入这个新登录                    

1784
09:13:18,640 --> 09:13:22,078
查看我们刚刚创建好的文件，所以我要解决这个问题                    

1785
09:13:22,078 --> 09:13:24,558
在这里粘贴                    

1786
09:13:24,558 --> 09:13:28,878
好的，没关系，我们在这里遇到了很多错误以及原因                    

1787
09:13:28,878 --> 09:13:33,598
这背后是我的意思是我们之前没有谈论过这么多的导入语句                    

1788
09:13:33,598 --> 09:13:38,398
但是import语句是你作为程序员的一种方式                    

1789
09:13:38,398 --> 09:13:42,800
在别人写的代码里不管是google的flutter团队                    

1790
09:13:42,800 --> 09:13:46,320
或者是否是第三方第三方依赖                    

1791
09:13:46,320 --> 09:13:49,598
告诉你的颤抖                    

1792
09:13:49,598 --> 09:13:53,122
这些代码所在的项目                    

1793
09:13:53,122 --> 09:13:55,520
那一刻我的意思是如果你不是来自                    

1794
09:13:55,520 --> 09:13:58,960
你不熟悉的软件工程背景导入                    

1795
09:13:58,960 --> 09:14:03,278
这是嗯，我的意思是我能找到的最接近的类比是                    

1796
09:14:03,278 --> 09:14:06,238
就像你在 figma 中创建的一样                    

1797
09:14:06,238 --> 09:14:10,078
嗯，你正在尝试创建一个实例                    

1798
09:14:10,078 --> 09:14:12,878
您已经创建但 figment 不知道该实例在哪里的设计                    

1799
09:14:12,878 --> 09:14:17,278
所以你会说哦，这是按钮实例的副本                    

1800
09:14:17,278 --> 09:14:20,238
然后figma就像哦，我在哪里可以找到你甚至没有的按钮                    

1801
09:14:20,238 --> 09:14:24,558
创建了它，那么您需要先创建该按钮或将其从                    

1802
09:14:24,558 --> 09:14:27,520
另一个项目并将其放入您的组件中                    

1803
09:14:27,520 --> 09:14:31,438
页面，然后您可以创建它的实例                    

1804
09:14:31,438 --> 09:14:35,918
如果你不喜欢设计和 figma，你可能不明白我刚才说的是什么                    

1805
09:14:35,918 --> 09:14:38,640
说，但我想做的只是成为                    

1806
09:14:38,640 --> 09:14:41,758
在本课程中尽可能包容，以确保任何遵循此课程的人                    

1807
09:14:41,758 --> 09:14:45,438
当然会尝试至少理解位和                    

1808
09:14:45,438 --> 09:14:48,718
我在说什么                    

1809
09:14:48,718 --> 09:14:52,398
回去导入我们现在需要做的是告诉颤振那些                    

1810
09:14:52,398 --> 09:14:57,360
突出显示的代码片段是 Visual Studio 代码中要做的一件事                    

1811
09:14:57,360 --> 09:15:01,122
如果您尝试解决此问题，可以为您提供很大帮助                    

1812
09:15:01,122 --> 09:15:07,200
手工写东西只是在mac上做命令或在linux上控制                    

1813
09:15:07,200 --> 09:15:10,800
Windows 根据您的操作系统按住命令或控制，并且                    

1814
09:15:10,800 --> 09:15:14,640
按点然后你会在这里看到建议                    

1815
09:15:14,640 --> 09:15:19,438
那些缺少的组件可能放置在哪里以及您将要放置什么                    

1816
09:15:19,438 --> 09:15:23,278
这里需要做的只是导入包颤振材料，因为那是                    

1817
09:15:23,278 --> 09:15:28,480
我们正在使用的这些组件实际上放置在哪里，哎呀                    

1818
09:15:28,480 --> 09:15:34,160
我设法在那里点击了错误的错误选项，所以材料繁荣                    

1819
09:15:34,160 --> 09:15:39,360
好吧，我想现在几乎所有的东西都消失了几乎所有的错误                    

1820
09:15:39,360 --> 09:15:42,718
除了这些 firebase 错误外，已经消失了，所以                    

1821
09:15:42,718 --> 09:15:46,558
我们去看看                    

1822
09:15:46,558 --> 09:15:49,598
所以让我们进去吧                    

1823
09:15:49,598 --> 09:15:54,320
现在说firebase核心导入                    

1824
09:15:54,320 --> 09:15:59,520
在这里我们还需要导入未成年人的火力基地选项                    

1825
09:15:59,520 --> 09:16:04,078
所以我认为一切基本上都消失了还有firebase auth                    

1826
09:16:04,078 --> 09:16:07,758
也可以导入它，所以我们现在可以开始了                    

1827
09:16:07,758 --> 09:16:13,918
登录视图但是记住这个登录视图代码真的不是                    

1828
09:16:13,918 --> 09:16:17,520
登录视图 我的意思是，如果您还记得我们在前面编写的代码                    

1829
09:16:17,520 --> 09:16:21,360
在它说的那一刻，这个登录视图的章节                    

1830
09:16:21,360 --> 09:16:25,200
日志视图，但它所做的只是注册你还记得我们有文本字段吗                    

1831
09:16:25,200 --> 09:16:29,840
甚至是说注册的按钮                    

1832
09:16:29,840 --> 09:16:34,078
我们现在需要做的是拖动代码，如您在此处看到的                    

1833
09:16:34,078 --> 09:16:37,918
这里的登录视图我们需要把它带入                    

1834
09:16:37,918 --> 09:16:43,200
注册视图好的，我们现在的注册视图在这里你看                    

1835
09:16:43,200 --> 09:16:47,278
那就让我们试着做一点吧                    

1836
09:16:47,278 --> 09:16:52,320
小心一点，所以在此处获取登录视图中的所有代码                    

1837
09:16:52,320 --> 09:16:56,078
有处置在它的状态                    

1838
09:16:56,078 --> 09:17:01,680
并获取您的电子邮件和密码以及成员变量                    

1839
09:17:01,680 --> 09:17:06,000
从这里切开它们                    

1840
09:17:06,000 --> 09:17:10,718
所以我会在注册视图状态下进入这里                    

1841
09:17:10,718 --> 09:17:16,878
然后将它们粘贴在构建函数之前，这样我们就可以了                    

1842
09:17:16,878 --> 09:17:21,520
回到登录查看dart可以看到这里有一个build函数                    

1843
09:17:21,520 --> 09:17:24,558
这里和                    

1844
09:17:24,558 --> 09:17:28,878
我将直接获取整个构建功能，包括                    

1845
09:17:28,878 --> 09:17:31,122
覆盖和                    

1846
09:17:31,122 --> 09:17:36,078
正如我在这里看到的那样，构建功能就在那里结束了，我要删掉它                    

1847
09:17:36,078 --> 09:17:43,122
也可以，我要去这里替换 um 上的这个覆盖                    

1848
09:17:43,122 --> 09:17:48,800
在所谓的注册视图上，然后将之前的那个粘贴到这里好                    

1849
09:17:48,800 --> 09:17:53,200
所以我们在这里所做的就是确保注册视图                    

1850
09:17:53,200 --> 09:17:57,200
它确实是注册视图，而登录视图目前是空的，所以                    

1851
09:17:57,200 --> 09:18:00,480
你需要做什么你看到这里有一个错误说你可以                    

1852
09:18:00,480 --> 09:18:06,320
有一个用于登录的有状态小部件，但它没有任何构建功能                    

1853
09:18:06,320 --> 09:18:10,320
所以你现在需要创建那个构建函数，当然你可以做到                    

1854
09:18:10,320 --> 09:18:13,200
用手                    

1855
09:18:13,200 --> 09:18:16,160
但我的意思是                    

1856
09:18:16,160 --> 09:18:19,438
不是真的 不是真的                    

1857
09:18:19,438 --> 09:18:23,040
好主意                    

1858
09:18:23,040 --> 09:18:26,480
当然，一开始你可能会说，哦，我                    

1859
09:18:26,480 --> 09:18:30,238
只想学习最好的学习方法就是打字，我完全理解                    

1860
09:18:30,238 --> 09:18:33,680
但是有些事情是有限制的，我也相信                    

1861
09:18:33,680 --> 09:18:36,960
一旦你做了一两次，你就会厌倦这样做，或者                    

1862
09:18:36,960 --> 09:18:40,238
你会厌倦这样做所以我实际上建议这些                    

1863
09:18:40,238 --> 09:18:43,438
您覆盖的功能最好的方法实际上是让您的编辑器                    

1864
09:18:43,438 --> 09:18:47,758
文本编辑器或 ide 为您完成这些事情，所以我要继续                    

1865
09:18:47,758 --> 09:18:52,878
这个错误，只说 mac 上的 command dot 和 linux 和 windows 上的 control dot                    

1866
09:18:52,878 --> 09:19:00,160
并说创建一个缺失的覆盖好的，在这里我们只说返回                    

1867
09:19:00,160 --> 09:19:04,320
好的，这是我们的登录视图，你可以看到                    

1868
09:19:04,320 --> 09:19:06,960
现在我们有                    

1869
09:19:06,960 --> 09:19:11,360
一个注册视图就在这里，然后我们也有                    

1870
09:19:11,360 --> 09:19:14,960
登录视图没问题                    

1871
09:19:14,960 --> 09:19:18,800
那我们走吧                    

1872
09:19:18,800 --> 09:19:22,960
在我们的主要飞镖文件中，我可以看到有一个寄存器，让我们                    

1873
09:19:22,960 --> 09:19:28,320
实际上重启这个热重启好了，所以我们有一个寄存器                    

1874
09:19:28,320 --> 09:19:33,520
我们的登录视图完全是空的，所以                    

1875
09:19:33,520 --> 09:19:38,240
现在我们需要做的基本上是                    

1876
09:19:38,240 --> 09:19:41,120
像嗯                    

1877
09:19:41,120 --> 09:19:45,276
这是我们登录视图的一种工作，因为这就像目标                    

1878
09:19:45,276 --> 09:19:49,200
本章我们需要有一个登录视图及以上                    

1879
09:19:49,200 --> 09:19:52,080
到目前为止，我们一直在做的有点像创建一个寄存器视图                    

1880
09:19:52,080 --> 09:19:55,120
将所有代码包含在一个单独的登录视图中                    

1881
09:19:55,120 --> 09:19:59,840
这是我们之前创建的注册表，所以                    

1882
09:19:59,840 --> 09:20:03,596
我的意思是说我们有一个注册视图                    

1883
09:20:03,596 --> 09:20:06,960
但是我们没有登录视图，我们需要处理登录视图，所以                    

1884
09:20:06,960 --> 09:20:10,320
如果你记得嗯哇我的意思是你实际上不必                    

1885
09:20:10,320 --> 09:20:13,596
记住你可以在这里查看注册视图有两个字段输入你的                    

1886
09:20:13,596 --> 09:20:16,640
在此处发送电子邮件并在此处输入您的密码                    

1887
09:20:16,640 --> 09:20:21,276
这是他们的注册 v 和登录非常相似 什么                    

1888
09:20:21,276 --> 09:20:25,680
注册视图的不同之处在于它创建了这个它基本上是调用                    

1889
09:20:25,680 --> 09:20:30,480
到firebase，上面写着用电子邮件和密码创建用户                    

1890
09:20:30,480 --> 09:20:34,560
但如果你仔细想想，其他一切都非常相似                    

1891
09:20:34,560 --> 09:20:38,400
对此感到抱歉，所以您需要创建您需要制作的                    

1892
09:20:38,400 --> 09:20:41,120
确保在他们两个中都初始化了firebase                    

1893
09:20:41,120 --> 09:20:46,080
您将有两个文本字段电子邮件密码，您将有一个按钮                    

1894
09:20:46,080 --> 09:20:50,160
用于注册和用于登录，所以                    

1895
09:20:50,160 --> 09:20:55,360
老实说，我们可以做的是现在去复制我们的代码                    

1896
09:20:55,360 --> 09:21:00,000
从我们的登录视图中得到的，好吧，我真的忘记了                    

1897
09:21:00,000 --> 09:21:04,160
所以让我们从这里再次复制这段代码                    

1898
09:21:04,160 --> 09:21:09,360
从那里获取所有内容并将其放入我们的登录视图中                    

1899
09:21:09,360 --> 09:21:12,880
并更改此注册按钮以登录                    

1900
09:21:12,880 --> 09:21:16,960
所以现在我们基本上有两个相同视图的副本，一旦它被注册                    

1901
09:21:16,960 --> 09:21:21,596
另一个说登录没问题所以                    

1902
09:21:21,596 --> 09:21:25,596
我们现在能做的就是在这里访问我们的主 dart 文件                    

1903
09:21:25,596 --> 09:21:29,840
而不是返回注册视图，我们可以只返回登录视图                    

1904
09:21:29,840 --> 09:21:34,320
因为我们现在要在登录视图上工作，好吧，我们有一个用户注册了                    

1905
09:21:34,320 --> 09:21:38,960
现在我们需要登录并作为旁注                    

1906
09:21:38,960 --> 09:21:42,880
如果您按照上一章进行操作，您就会知道我们确实做到了                    

1907
09:21:42,880 --> 09:21:48,720
向 firebase 注册一个有效用户，然后                    

1908
09:21:48,720 --> 09:21:52,720
你可以做的是去你的firebase控制台                    

1909
09:21:52,720 --> 09:21:56,160
正如我们现在可以做的那样，我没有为此计划过                    

1910
09:21:56,160 --> 09:21:59,756
但是我们能做些什么呢？console.firebasegoggle.com                    

1911
09:21:59,756 --> 09:22:02,560
确保您已使用您的帐户登录                    

1912
09:22:02,560 --> 09:22:07,520
然后我要去这个呃项目，我们创建了 mynotes 颤振项目                    

1913
09:22:07,520 --> 09:22:12,800
进入那里然后进入身份验证，然后您实际上可以                    

1914
09:22:12,800 --> 09:22:18,480
查看您使用 Flutter 应用程序创建的用户                    

1915
09:22:18,480 --> 09:22:23,596
你实际上正在工作，所以当你在你的中调用这个函数时                    

1916
09:22:23,596 --> 09:22:28,320
注册查看此功能firebase os实例创建用户                    

1917
09:22:28,320 --> 09:22:33,120
该用户的电子邮件和密码确实是在 Firebase 控制台中创建的，所以在这里                    

1918
09:22:33,120 --> 09:22:37,360
你有一个用户你也可以禁用这个用户并做其他事情，但我们是                    

1919
09:22:37,360 --> 09:22:41,120
现在就这样吧                    

1920
09:22:41,120 --> 09:22:45,120
所以你现在需要做的不是注册视图，而是告诉你的主页                    

1921
09:22:45,120 --> 09:22:49,040
呈现登录视图，您只需键入登录视图                    

1922
09:22:49,040 --> 09:22:53,596
如果你只是输入这样的登录视图，你会得到                    

1923
09:22:53,596 --> 09:22:57,756
当然是一个错误，因为登录视图不在范围内，但我相信视觉                    

1924
09:22:57,756 --> 09:23:01,520
工作室代码实际上可以帮助解决这个问题，因为您看到我们还没有导入                    

1925
09:23:01,520 --> 09:23:05,756
登录视图，所以这个主要的 dart 文件不知道什么                    

1926
09:23:05,756 --> 09:23:09,276
登录视图与这里发生的完全相同                    

1927
09:23:09,276 --> 09:23:12,960
你记得如果我们没有这些进口，我们会得到很多错误说                    

1928
09:23:12,960 --> 09:23:17,120
他们我不知道这门课在哪里所以同样的事情正在发生                    

1929
09:23:17,120 --> 09:23:21,436
这个主要的 dart 文件没问题，所以我现在相信 Visual Studio 代码                    

1930
09:23:21,436 --> 09:23:26,320
有点即兴，但我想如果你设置登录视图并按下回车键                    

1931
09:23:26,320 --> 09:23:32,400
它会自动为您导入，让我们看看它在哪里                    

1932
09:23:32,400 --> 09:23:36,240
但如果你不习惯这样做，只需输入登录视图                    

1933
09:23:36,240 --> 09:23:40,560
手动执行我在 mac 上的命令 dot 之前向您展示过的相同操作或                    

1934
09:23:40,560 --> 09:23:45,840
在 windows 和 linux 中控制并说导入好的所以它会导入                    

1935
09:23:45,840 --> 09:23:49,840
现在为您服务，我们有登录视图，如果我                    

1936
09:23:49,840 --> 09:23:54,320
按 command s 或者实际上我们必须进行热重启                    

1937
09:23:54,320 --> 09:23:59,200
您现在看到这里有一个登录按钮                    

1938
09:23:59,200 --> 09:24:03,200
所以我们需要做的是正如你在标题中看到的那样，现在我们                    

1939
09:24:03,200 --> 09:24:07,040
正在记录登录视图 转到您的登录视图                    

1940
09:24:07,040 --> 09:24:11,520
并转到此处按下按钮的位置，您会看到未按下文本按钮                    

1941
09:24:11,520 --> 09:24:17,840
我们需要在这里做的是在我们的 firebase 上调用一个新函数                    

1942
09:24:17,840 --> 09:24:21,916
auth 实例而不是使用电子邮件和密码创建用户，我们将                    

1943
09:24:21,916 --> 09:24:26,000
说firebase auth得到了实例                    

1944
09:24:26,000 --> 09:24:31,916
但是使用电子邮件和密码登录，您可以看到函数签名是                    

1945
09:24:31,916 --> 09:24:35,596
与使用电子邮件和密码创建用户非常相似，因为它需要两个                    

1946
09:24:35,596 --> 09:24:40,960
参数，即电子邮件和密码，都是字符串类型，然后是什么                    

1947
09:24:40,960 --> 09:24:46,320
实际上返回的是用户凭据，你还记得创建用户吗                    

1948
09:24:46,320 --> 09:24:49,276
电子邮件和密码也返回用户凭据，所以                    

1949
09:24:49,276 --> 09:24:55,596
从这个意义上说，在登录和注册之间切换非常简单，所以                    

1950
09:24:55,596 --> 09:24:58,320
使用电子邮件和密码名称获取登录信息                    

1951
09:24:58,320 --> 09:25:01,436
这是我们唯一感兴趣的东西，只需将其粘贴在这里而不是                    

1952
09:25:01,436 --> 09:25:06,160
创建用户好的，只是要保存它                    

1953
09:25:06,160 --> 09:25:11,436
某些原因我的 scrcpy 崩溃了，我不知道为什么                    

1954
09:25:11,436 --> 09:25:14,240
所以没关系，这不是我们计划的                    

1955
09:25:14,240 --> 09:25:18,880
可以做的是去我们的，我可以看到你看到它被中止了，所以我们                    

1956
09:25:18,880 --> 09:25:25,200
可以做的是去我们的终端，我会说 scr cpy 好的                    

1957
09:25:25,200 --> 09:25:28,720
我要把它带到这里的屏幕上                    

1958
09:25:28,720 --> 09:25:33,276
如果你注意到这里我们有一个登录按钮但标题                    

1959
09:25:33,276 --> 09:25:38,000
这里仍然说注册所以让我们去修复它让我们进入应用程序栏并                    

1960
09:25:38,000 --> 09:25:42,480
只是说登录没问题                    

1961
09:25:42,480 --> 09:25:47,840
实际上问题是我也可以看到我的                    

1962
09:25:47,840 --> 09:25:54,000
由于 scrcpy 也崩溃了这个进程的运行，这个应用程序在那个 android 上                    

1963
09:25:54,000 --> 09:25:58,480
手机也崩溃了，所以我的意思是这个项目的颤振实例                    

1964
09:25:58,480 --> 09:26:01,276
目前并没有真正运行，所以我要做的就是去 main                    

1965
09:26:01,276 --> 09:26:07,436
飞镖并说在没有调试的情况下运行，现在它正在启动做一个 gradle                    

1966
09:26:07,436 --> 09:26:12,240
前几章的构建 gradle 记住是针对 android 的                    

1967
09:26:12,240 --> 09:26:16,320
如果它使用的是xcode，它适用于ios，所以                    

1968
09:26:16,320 --> 09:26:20,400
它正在做更大的构建，所以如果一切都按计划进行                    

1969
09:26:20,400 --> 09:26:25,756
那么我们应该在那里得到一个登录标题，而这正在做                    

1970
09:26:25,756 --> 09:26:28,880
它的工作我要去我的笔记，只是确保                    

1971
09:26:28,880 --> 09:26:32,840
我已经谈过我保证我要谈的事情                    

1972
09:26:32,840 --> 09:26:37,596
好吧，它正在安装我们的应用程序，我要删除小部件                    

1973
09:26:37,596 --> 09:26:40,720
检查员，现在你可以看到我们有一个登录名                    

1974
09:26:40,720 --> 09:26:46,560
最重要的是，它按预期工作，所以                    

1975
09:26:46,560 --> 09:26:50,560
正如您在此处的日志记录调用后看到的那样，使用电子邮件登录并                    

1976
09:26:50,560 --> 09:26:54,880
密码 我们现在正在打印                    

1977
09:26:54,880 --> 09:26:59,840
我们可以在这里做的是输入用户的一些信息                    

1978
09:26:59,840 --> 09:27:04,800
不存在好吧，所以我只想说我的个人电子邮件                    

1979
09:27:04,800 --> 09:27:08,960
我会说 foo bar path 然后我会调出                    

1980
09:27:08,960 --> 09:27:12,560
控制台在这里，你会看到调试控制台清除它                    

1981
09:27:12,560 --> 09:27:16,640
嗯，我真的要删除                    

1982
09:27:16,640 --> 09:27:20,320
或者做这样的事情，这样你就可以更好地看到调试控制台                    

1983
09:27:20,320 --> 09:27:25,276
它的全部，我要按下登录按钮好了                    

1984
09:27:25,276 --> 09:27:28,320
然后对此感到抱歉                    

1985
09:27:28,320 --> 09:27:33,680
所以我们现在有了我们需要处理的下一件事                    

1986
09:27:33,680 --> 09:27:35,756
你可以看到                    

1987
09:27:35,756 --> 09:27:40,800
我可能会在这里增加更大的尺寸，这样你会看得更清楚                    

1988
09:27:40,800 --> 09:27:44,640
当我按下登录按钮时，对不起                    

1989
09:27:44,640 --> 09:27:47,680
使用用户                    

1990
09:27:47,680 --> 09:27:52,160
那不存在意味着我们还没有注册那个用户然后我们得到了                    

1991
09:27:52,160 --> 09:27:57,436
这里有一个错误，说未找到用户的firebase，这是有道理的                    

1992
09:27:57,436 --> 09:28:00,720
实际上完全是因为                    

1993
09:28:00,720 --> 09:28:05,120
我们实际上并没有为此用户进行任何注册                    

1994
09:28:05,120 --> 09:28:08,800
所以我们能听到什么 我们能在这里做什么                    

1995
09:28:08,800 --> 09:28:14,560
是去这里，我要把事情恢复过来                    

1996
09:28:14,560 --> 09:28:18,160
有点像他们在这里                    

1997
09:28:18,160 --> 09:28:22,320
好的，所以我们在这里调用这个函数 uh                    

1998
09:28:22,320 --> 09:28:26,160
让我减小尺寸，因为它绝对是巨大的                    

1999
09:28:26,160 --> 09:28:29,916
在此处使用电子邮件和密码签名                    

2000
09:28:29,916 --> 09:28:32,800
嗯，我们需要处理                    

2001
09:28:32,800 --> 09:28:37,200
一个叫做异常的东西，我不认为我们谈论异常是                    

2002
09:28:37,200 --> 09:28:40,800
对你说实话，我在教你飞镖，如果你知道的话                    

2003
09:28:40,800 --> 09:28:44,320
关于例外情况，您可以略过这一点                    

2004
09:28:44,320 --> 09:28:48,400
视频的一部分，但如果您不是软件开发开发人员                    

2005
09:28:48,400 --> 09:28:52,880
以前或软件工程师，那么您可能不知道什么是异常                    

2006
09:28:52,880 --> 09:28:57,276
例外是当事情出错而你没有                    

2007
09:28:57,276 --> 09:29:02,640
从一开始就想那些事                    

2008
09:29:02,640 --> 09:29:05,756
例如，如果您正在与                    

2009
09:29:05,756 --> 09:29:09,840
如果你是软件 如果你是设计师或产品所有者                    

2010
09:29:09,840 --> 09:29:14,240
之前没有做过软件开发的你可能还用过其他的                    

2011
09:29:14,240 --> 09:29:18,720
软件和有时软件崩溃就像 scr cpy 只是崩溃了一些                    

2012
09:29:18,720 --> 09:29:22,640
几分钟前那可能是                    

2013
09:29:22,640 --> 09:29:26,720
创建 scrcpy 的软件开发人员的异常或错误                    

2014
09:29:26,720 --> 09:29:30,640
没有计算在内，所以他们没有计算在内                    

2015
09:29:30,640 --> 09:29:33,840
在这种情况下可能会发生错误                    

2016
09:29:33,840 --> 09:29:37,276
例如，没有处理该应用程序                    

2017
09:29:37,276 --> 09:29:41,360
崩溃这意味着发生了异常并且发生了错误                    

2018
09:29:41,360 --> 09:29:45,120
该程序的开发人员没有考虑到                    

2019
09:29:45,120 --> 09:29:48,720
这是您在颤振应用程序中看到的一个例外                    

2020
09:29:48,720 --> 09:29:52,000
所以firebase说您正在尝试使用不存在的用户登录                    

2021
09:29:52,000 --> 09:29:54,880
所以你想用它做什么我不能在这之后继续我不知道                    

2022
09:29:54,880 --> 09:29:59,520
怎么做 处理异常的方法                    

2023
09:29:59,520 --> 09:30:04,720
flutter or in dart 实际上正在使用 try catch 块，所以我要带上它                    

2024
09:30:04,720 --> 09:30:09,756
此处将用于创建用户凭据的整个代码放在 try 语句中                    

2025
09:30:09,756 --> 09:30:14,080
正如你在这里看到的，然后进去说catch b                    

2026
09:30:14,080 --> 09:30:18,400
括号里的就这样吧                    

2027
09:30:18,400 --> 09:30:22,640
然后我只想说发生的事情                    

2028
09:30:22,640 --> 09:30:26,240
可以用单个代码，所以你现在可以在这里看到我们                    

2029
09:30:26,240 --> 09:30:31,276
有一个 try 块，如此处所示，这条线一直从顶部开始                    

2030
09:30:31,276 --> 09:30:35,596
到这里然后我们有一个 catch 块 try catch 的工作方式是它作为                    

2031
09:30:35,596 --> 09:30:39,680
它的名字表明它试图做你说它需要做的工作                    

2032
09:30:39,680 --> 09:30:45,520
在试验区完成如果发生任何不好的事情，它将进入各种捕获                    

2033
09:30:45,520 --> 09:30:49,276
之后你不能放置的陈述试试看                    

2034
09:30:49,276 --> 09:30:54,640
所以正如你在日志中看到的这个错误                    

2035
09:30:54,640 --> 09:31:01,276
让我们看看我们能不能在这里找到它，它的类型是 firebase auth 呃让我                    

2036
09:31:01,276 --> 09:31:07,040
看到处理异常，但不幸的是我们实际上并没有得到它的类型                    

2037
09:31:07,040 --> 09:31:10,800
我们可以在这里做的是打印一些不好的事情发生然后                    

2038
09:31:10,800 --> 09:31:17,040
打印错误本身没问题，所以我只想说清除日志                    

2039
09:31:17,040 --> 09:31:20,640
command s 然后我要按登录                    

2040
09:31:20,640 --> 09:31:24,880
再次抱歉，你现在可以看到它说                    

2041
09:31:24,880 --> 09:31:31,120
发生了一些不好的事情 firebase auth user not found 然后是一些信息                    

2042
09:31:31,120 --> 09:31:35,756
我们实际上可以说 print e                    

2043
09:31:35,756 --> 09:31:41,276
运行时类型，这样做实际上会给你关于                    

2044
09:31:41,276 --> 09:31:45,680
这是哪类异常，因为您看到了                    

2045
09:31:45,680 --> 09:31:49,360
当您使用颤振以及通常使用软件时                    

2046
09:31:49,360 --> 09:31:52,960
你正在创建软件 你正在编写代码 不同类型的异常                    

2047
09:31:52,960 --> 09:31:57,360
发生并且这些异常有自己的身份每个异常都有自己的                    

2048
09:31:57,360 --> 09:32:02,400
身份是它可能来自的一系列类或不同的地方                    

2049
09:32:02,400 --> 09:32:07,120
在飞镖中，几乎任何东西都可能成为错误，甚至是文本                    

2050
09:32:07,120 --> 09:32:11,040
可能成为错误或枚举可能成为错误，所以                    

2051
09:32:11,040 --> 09:32:14,480
当你来到这个 catch 块时，我会将鼠标移到它上面，你可以看到                    

2052
09:32:14,480 --> 09:32:18,640
在这里它说我什至不知道这是什么这是一个对象所以                    

2053
09:32:18,640 --> 09:32:22,320
它可以是任何东西，但你实际上是在你的                    

2054
09:32:22,320 --> 09:32:26,720
您最感兴趣的缓存块可能发生的异常                    

2055
09:32:26,720 --> 09:32:29,520
firebase 所以因为我们真的不知道这是什么                    

2056
09:32:29,520 --> 09:32:33,276
类型是我们要把它打印到控制台                    

2057
09:32:33,276 --> 09:32:37,436
我们要看看它是什么类型所以让我做                    

2058
09:32:37,436 --> 09:32:41,436
他们中的一点我应该怎么做                    

2059
09:32:41,436 --> 09:32:46,240
这是不是更好的安排，也许这样你就可以看到会发生什么                    

2060
09:32:46,240 --> 09:32:50,720
也许然后我要做什么命令这个热重载                    

2061
09:32:50,720 --> 09:32:55,436
然后去这里按登录按钮，你会看到那个类型                    

2062
09:32:55,436 --> 09:32:59,680
异常是firebase auth异常                    

2063
09:32:59,680 --> 09:33:03,120
所以我们现在需要做的是去我们的代码                    

2064
09:33:03,120 --> 09:33:05,200
并处理                    

2065
09:33:05,200 --> 09:33:10,480
firebase 身份验证异常不仅仅是我们在这里所做的任何异常                    

2066
09:33:10,480 --> 09:33:15,520
因为我们正在捕获任何异常，所以我们想要做的是捕获 firebase                    

2067
09:33:15,520 --> 09:33:19,680
关闭我们缓存块中的异常，我要去                    

2068
09:33:19,680 --> 09:33:25,200
现在就这样做，我会像我们以前那样做                    

2069
09:33:25,200 --> 09:33:28,800
在摆脱控制台以查看更多代码之前                    

2070
09:33:28,800 --> 09:33:32,320
所以你可以做什么你可以在飞镖和专门的缓存块                    

2071
09:33:32,320 --> 09:33:37,596
这意味着你没有捕捉到所有东西，但你告诉黑暗那个样子                    

2072
09:33:37,596 --> 09:33:42,160
在这个特定的 catch 块中，我只对这个例外感兴趣                    

2073
09:33:42,160 --> 09:33:45,840
键入并且您可能已经猜到了                    

2074
09:33:45,840 --> 09:33:51,276
try 块可以伴随多个 catch 块                    

2075
09:33:51,276 --> 09:33:56,160
您可以在此处看到的这个缓存块称为 catch all it catches every                    

2076
09:33:56,160 --> 09:34:01,436
try 块内代码运行时可能发生的异常                    

2077
09:34:01,436 --> 09:34:04,560
但是，如果您对特定的感兴趣                    

2078
09:34:04,560 --> 09:34:09,360
这种情况下的异常 firebase auth exception 我相信哦，我已经清除了它                    

2079
09:34:09,360 --> 09:34:13,680
但我认为这是 firebase off 异常，我将再次运行它                    

2080
09:34:13,680 --> 09:34:17,120
转到登录按钮，您会看到它说 firebase off exception 所以我们                    

2081
09:34:17,120 --> 09:34:21,040
对此特别感兴趣，所以让我们去告诉飞镖我们是                    

2082
09:34:21,040 --> 09:34:23,596
有兴趣我只是我要说                    

2083
09:34:23,596 --> 09:34:28,000
firebase 关闭异常捕获                    

2084
09:34:28,000 --> 09:34:29,680
好的                    

2085
09:34:29,680 --> 09:34:34,560
所以这是捕捉特定异常的格式                    

2086
09:34:34,560 --> 09:34:39,520
使用关键字 on 的 catch 语句，然后将类型编写为运行时类型                    

2087
09:34:39,520 --> 09:34:43,200
或您感兴趣的异常类型的类名                    

2088
09:34:43,200 --> 09:34:47,436
处理得很好，所以在这种情况下，我们在 firebase off 上说                    

2089
09:34:47,436 --> 09:34:51,756
异常吸引人，我们将从那里删除这个捕获                    

2090
09:34:51,756 --> 09:34:55,916
我们要去这里实际上我什至不必削减和                    

2091
09:34:55,916 --> 09:34:59,680
你需要在这里做的只是说打印电子代码                    

2092
09:34:59,680 --> 09:35:03,520
在我告诉你之前，你先保存这个                    

2093
09:35:03,520 --> 09:35:08,000
uc之后我要说什么让我们测试一下让我们说登录和                    

2094
09:35:08,000 --> 09:35:11,360
您会看到该代码已使用或未找到                    

2095
09:35:11,360 --> 09:35:14,400
所以现在我们告诉黑暗我们是                    

2096
09:35:14,400 --> 09:35:19,680
专门捕获firebase auth异常的异常然后这个e是                    

2097
09:35:19,680 --> 09:35:25,276
不再是一个对象，真的让我们看看我们是否可以得到一些帮助，现在它说好的                    

2098
09:35:25,276 --> 09:35:28,960
如果我可以捕获 firebase auth 异常的异常，那么我知道                    

2099
09:35:28,960 --> 09:35:32,480
我可以传递给您的错误属于那种类型                    

2100
09:35:32,480 --> 09:35:36,320
现在您捕获了 Firebase 身份验证，您可以转到此代码                    

2101
09:35:36,320 --> 09:35:38,560
您会看到可以从中读取的不同属性                    

2102
09:35:38,560 --> 09:35:41,756
消息代码 电子邮件凭据等等 好的                    

2103
09:35:41,756 --> 09:35:46,240
所以我们现在对代码感兴趣                    

2104
09:35:46,240 --> 09:35:49,916
正如屏幕底部的标题所示，您会看到我们                    

2105
09:35:49,916 --> 09:35:56,000
需要处理等于未找到用户的电子代码，所以假设电子代码                    

2106
09:35:56,000 --> 09:36:01,840
等于用户未找到然后让我们说打印                    

2107
09:36:01,840 --> 09:36:07,436
用户没有像那样找到其他电子代码哦抱歉实际上我们不会这样做                    

2108
09:36:07,436 --> 09:36:11,520
外面有点像跑在我前面一点                    

2109
09:36:11,520 --> 09:36:15,520
所以我们现在有                    

2110
09:36:15,520 --> 09:36:18,960
找不到电子代码用户然后我们只是说找不到打印用户好吧我是                    

2111
09:36:18,960 --> 09:36:23,276
要清除这里的日志回去看看我们的 cpy 这里我只想说                    

2112
09:36:23,276 --> 09:36:29,436
登录，你会看到它所做的一切，它说用户没有找到好吧                    

2113
09:36:29,436 --> 09:36:32,880
所以这就是我们真的不是我的意思                    

2114
09:36:32,880 --> 09:36:37,840
屏幕左下方的标题显示句柄，但取决于您的                    

2115
09:36:37,840 --> 09:36:42,240
嗯背景你可能期望句柄做不同的事情                    

2116
09:36:42,240 --> 09:36:45,436
为经验丰富的软件工程师处理的软件实际上可能意味着                    

2117
09:36:45,436 --> 09:36:50,160
好吧，做点什么好，告诉他告诉用户，哦，我无法登录                    

2118
09:36:50,160 --> 09:36:54,160
找不到用户或任何原因只是显示一些东西                    

2119
09:36:54,160 --> 09:36:57,840
用户和我们可以这样做，但目前我们没有能力这样做                    

2120
09:36:57,840 --> 09:37:00,640
我们真的不知道如何处理                    

2121
09:37:00,640 --> 09:37:06,480
我们需要做的就是简单地说打印，所以我们只需将它打印到屏幕上                    

2122
09:37:06,480 --> 09:37:10,320
所以这是我们现在的处理方法，好吧，这很简单，它所做的只是                    

2123
09:37:10,320 --> 09:37:14,480
确保不会向用户或应用程序抛出异常                    

2124
09:37:14,480 --> 09:37:18,080
不会崩溃                    

2125
09:37:18,080 --> 09:37:23,840
好的，现在有很多信息，就像这里的标题显示在                    

2126
09:37:23,840 --> 09:37:27,596
登录视图我们还需要处理错误密码                    

2127
09:37:27,596 --> 09:37:33,360
我的意思是你可以在这里看到 e 代码是一个字符串所以这里的任何东西都可以                    

2128
09:37:33,360 --> 09:37:38,800
发生可以由字符串和另一个定义                    

2129
09:37:38,800 --> 09:37:43,276
对不起，其中一个错误实际上是错误的                    

2130
09:37:43,276 --> 09:37:48,640
密码所以让我们在这里测试一下如果代码是                    

2131
09:37:48,640 --> 09:37:54,480
not user not found 只是打印发生了其他事情                    

2132
09:37:54,480 --> 09:37:59,436
然后将错误代码打印到屏幕上                    

2133
09:37:59,436 --> 09:38:05,596
所以我要保存这个然后我会去这里然后                    

2134
09:38:05,596 --> 09:38:09,520
实际上将此电子邮件更改为现有的电子邮件，这是我                    

2135
09:38:09,520 --> 09:38:13,680
注册和密码我相信是 foobar 或                    

2136
09:38:13,680 --> 09:38:16,960
一些clickfu酒吧也许                    

2137
09:38:16,960 --> 09:38:20,480
我要说登录，你可以在这里看到它现在说的是别的东西                    

2138
09:38:20,480 --> 09:38:25,120
发生了错误的密码，所以这可能意味着                    

2139
09:38:25,120 --> 09:38:28,400
好吧，实际上那不是我的密码，这个 foo bar 在我的密码中                    

2140
09:38:28,400 --> 09:38:31,276
我什至不记得那是什么，也许是全巴低音                    

2141
09:38:31,276 --> 09:38:35,200
但这很好，它说其他事情发生在电子代码中，这正是                    

2142
09:38:35,200 --> 09:38:38,640
我们不得不为此感到抱歉                    

2143
09:38:38,640 --> 09:38:43,520
这正是我们需要在这里处理的错误密码所以在你的                    

2144
09:38:43,520 --> 09:38:48,080
else 语句 say else if e 代码                    

2145
09:38:48,080 --> 09:38:52,480
密码错误                    

2146
09:38:52,480 --> 09:38:56,800
然后我们会说打印错误的密码                    

2147
09:38:56,800 --> 09:38:59,916
好吧，男人是                    

2148
09:38:59,916 --> 09:39:05,040
这样就可以清除我要说的日志登录，您会看到消息                    

2149
09:39:05,040 --> 09:39:09,436
错误的密码打印到屏幕上                    

2150
09:39:09,436 --> 09:39:13,520
好的 很多工作                    

2151
09:39:13,520 --> 09:39:17,040
我们现在在登录视图中做了很多工作，但我们还没有真正投入                    

2152
09:39:17,040 --> 09:39:22,160
注册视图中有很多能量，您会看到它们非常相似，因为它们确实                    

2153
09:39:22,160 --> 09:39:25,360
几乎相同的 api 调用与登录另一个的电子邮件和密码                    

2154
09:39:25,360 --> 09:39:29,596
但是，如果我们去我们的主要飞镖，那些注册的                    

2155
09:39:29,596 --> 09:39:34,800
您将在我们的注册视图中看到的文件，我们只是调用 api 和 kind                    

2156
09:39:34,800 --> 09:39:38,720
就像希望最好的一样，这里没有try catch语句，好吧，所以我们                    

2157
09:39:38,720 --> 09:39:43,680
可以做的是看看我们是如何登录的，我们将 api 调用放在                    

2158
09:39:43,680 --> 09:39:48,480
尝试阻止你看到我们需要做的是去主飞镖和我们的注册                    

2159
09:39:48,480 --> 09:39:51,596
在这里查看注册查看状态做同样的事情                    

2160
09:39:51,596 --> 09:39:57,520
事情让我们把它放在一个 try 块中                    

2161
09:39:57,520 --> 09:40:01,040
好的，然后说 catch 或 say on                    

2162
09:40:01,040 --> 09:40:05,120
firebase 关闭异常                    

2163
09:40:05,120 --> 09:40:08,000
这就是我的意思是我不会再解释这个了，因为这正是我们                    

2164
09:40:08,000 --> 09:40:12,720
只是在登录视图中我相信firebase authexception没有                    

2165
09:40:12,720 --> 09:40:17,360
之前确实存在于这个 dart 文件中，但这就是 Visual Studio                    

2166
09:40:17,360 --> 09:40:21,436
当我输入代码并按下回车键自动完成时，代码帮助了我                    

2167
09:40:21,436 --> 09:40:25,276
那么它一定是在某处进口的                    

2168
09:40:25,276 --> 09:40:30,320
或者它可能是firebase auth dart的一部分我相信实际上所以如果我命令                    

2169
09:40:30,320 --> 09:40:34,400
单击它会进入firebase auth，这就是为什么我                    

2170
09:40:34,400 --> 09:40:37,120
它可能不需要导入任何东西，因为它已经被导入了                    

2171
09:40:37,120 --> 09:40:42,000
作为 Firebase 身份验证的一部分                    

2172
09:40:42,000 --> 09:40:45,200
哦，哇，这也有很多信息                    

2173
09:40:45,200 --> 09:40:49,040
现在我们正在处理寄存器视图，让我们转到我们的主视图                    

2174
09:40:49,040 --> 09:40:53,276
dar main 函数在这里，因为我们只看到登录视图让我们切换                    

2175
09:40:53,276 --> 09:40:58,320
这回注册 view 和 command 但这不会                    

2176
09:40:58,320 --> 09:41:01,840
改变你记得的任何东西热重载没有任何影响                    

2177
09:41:01,840 --> 09:41:05,360
改变你它对你改变的任何东西都没有影响                    

2178
09:41:05,360 --> 09:41:08,960
主要功能记得要热重启好                    

2179
09:41:08,960 --> 09:41:13,200
所以热重启现在我们在注册视图中                    

2180
09:41:13,200 --> 09:41:19,276
我们现在需要处理错误的密码                    

2181
09:41:19,276 --> 09:41:24,000
不，这不是登录对不起，现在我们需要处理                    

2182
09:41:24,000 --> 09:41:27,916
这个弱密码所以                    

2183
09:41:27,916 --> 09:41:32,800
当您使用 uh firebase zoom 时，您会注意到它有自己的一套                    

2184
09:41:32,800 --> 09:41:36,880
您也可以稍后为您的安全规则覆盖这些安全规则                    

2185
09:41:36,880 --> 09:41:40,640
服务器，如果你想，例如你可以期待，或者你可以说我的所有用户                    

2186
09:41:40,640 --> 09:41:46,320
密码必须是 18 um 字符长和数字混合                    

2187
09:41:46,320 --> 09:41:49,520
和字母数值等等等等，但是                    

2188
09:41:49,520 --> 09:41:53,756
firebase 上设置了一些默认的安全规则                    

2189
09:41:53,756 --> 09:41:58,880
对于每个用户都需要遵守的凭据，让我们实际看看                    

2190
09:41:58,880 --> 09:42:01,436
在那，让我们                    

2191
09:42:01,436 --> 09:42:05,680
在这里打印，我会说 print e                    

2192
09:42:05,680 --> 09:42:08,960
代码没问题，正如你在标题中看到的那样                    

2193
09:42:08,960 --> 09:42:13,200
在标题中看到有一个等于弱密码的e代码                    

2194
09:42:13,200 --> 09:42:17,200
需要处理所以我要去这里尝试用我的注册用户                    

2195
09:42:17,200 --> 09:42:22,240
个人电子邮件和 b c 的密码 好的，然后我会提出来                    

2196
09:42:22,240 --> 09:42:24,480
控制台清除控制台一点点                    

2197
09:42:24,480 --> 09:42:27,360
我会这样做，这样你会看得更清楚一点                    

2198
09:42:27,360 --> 09:42:34,400
然后我将尝试使用 abc press register 的密码进行注册                    

2199
09:42:34,400 --> 09:42:38,880
这里发生了什么你看到代码是弱密码                    

2200
09:42:38,880 --> 09:42:43,040
正如您所期望的那样，是的，弱密码太弱了，甚至无法使用                    

2201
09:42:43,040 --> 09:42:48,160
在任何地方使用所以嗯                    

2202
09:42:48,160 --> 09:42:52,480
所以我们这里需要做的是处理弱密码                    

2203
09:42:52,480 --> 09:42:57,520
错误基本上我会记下我已经谈过其他一些的笔记                    

2204
09:42:57,520 --> 09:43:02,400
登录主题没问题，所以我们将处理弱密码                    

2205
09:43:02,400 --> 09:43:06,400
我们在登录视图中处理其他错误的方式                    

2206
09:43:06,400 --> 09:43:10,640
然后说如果e代码等于                    

2207
09:43:10,640 --> 09:43:14,240
密码强度低                    

2208
09:43:14,240 --> 09:43:19,680
让我们说打印周密码好吧                    

2209
09:43:19,680 --> 09:43:23,916
我们会说，嗯，这就是现在好吧                    

2210
09:43:23,916 --> 09:43:30,160
我将再次调出 um 调试控制台                    

2211
09:43:30,160 --> 09:43:32,800
再按一下注册按钮                    

2212
09:43:32,800 --> 09:43:37,200
现在你会看到信息让我把它带来，这样你就可以真正看到它                    

2213
09:43:37,200 --> 09:43:42,160
是的，您实际上可以看到它很棒，您可以看到此处打印了弱密码                    

2214
09:43:42,160 --> 09:43:46,640
好吧，那太好了，现在我们走吧，让我带上 let make                    

2215
09:43:46,640 --> 09:43:50,960
屏幕大一点我们接下来要处理的事情                    

2216
09:43:50,960 --> 09:43:56,560
嗯，在这个注册视图中，正如您在此处的标题中看到的那样                    

2217
09:43:56,560 --> 09:44:00,640
您还可能会收到一个名为 email already in use 的错误，所以如果您转到 else                    

2218
09:44:00,640 --> 09:44:03,436
再次声明并打印 e                    

2219
09:44:03,436 --> 09:44:08,160
如果我尝试使用我之前注册的同一电子邮件进行注册                    

2220
09:44:08,160 --> 09:44:12,560
这个用户已经存在，即使我有一个很好的密码                    

2221
09:44:12,560 --> 09:44:16,840
用户所以我要说 fubar bass                    

2222
09:44:16,840 --> 09:44:20,000
1029.所以我们知道错误不会发生                    

2223
09:44:20,000 --> 09:44:23,596
成为密码，就像它实际上是一个很好的密码一样                    

2224
09:44:23,596 --> 09:44:28,720
至少比 fubar baz 和 that 或 abc 好，所以我只想说注册                    

2225
09:44:28,720 --> 09:44:31,120
和                    

2226
09:44:31,120 --> 09:44:36,160
我们在这里没有得到任何价值还是我什至按下了注册按钮                    

2227
09:44:36,160 --> 09:44:39,436
它真的记录了像素 a b                    

2228
09:44:39,436 --> 09:44:42,560
不，我不这么认为                    

2229
09:44:42,560 --> 09:44:48,640
哦，我没有保存文件哎呀，所以是的，我没有保存我的更改，我要说                    

2230
09:44:48,640 --> 09:44:52,880
注册哦，现在它说电子邮件已在使用中，并且                    

2231
09:44:52,880 --> 09:44:55,756
这正是我的意思是这几乎是我们必须正确处理的                    

2232
09:44:55,756 --> 09:45:00,960
因为我们正在打印 e 所以我不必说哦，没有惊喜                    

2233
09:45:00,960 --> 09:45:05,120
在那里，让我们已经处理电子邮件并使用                    

2234
09:45:05,120 --> 09:45:08,880
我将复制这封电子邮件并完全按照原样使用字符串                    

2235
09:45:08,880 --> 09:45:12,320
这里提到了，我要去别的地方说                    

2236
09:45:12,320 --> 09:45:18,880
否则，如果 e 代码等于该字符串，然后说 uh email is                    

2237
09:45:18,880 --> 09:45:22,960
已经使用好了                    

2238
09:45:22,960 --> 09:45:27,840
然后将其保存在那里清除日志按注册按钮                    

2239
09:45:27,840 --> 09:45:34,160
再次，您现在可以看到它说电子邮件已在使用中                    

2240
09:45:34,160 --> 09:45:36,240
所以嗯                    

2241
09:45:36,240 --> 09:45:41,200
让我也看看我的笔记                    

2242
09:45:41,200 --> 09:45:44,480
嗯                    

2243
09:45:44,480 --> 09:45:48,640
我也可以在我在任何地方都看不到的笔记中对你说实话                    

2244
09:45:48,640 --> 09:45:54,880
我们真的在尝试处理呃这些错误，就像实际做的那样                    

2245
09:45:54,880 --> 09:45:59,916
关于他们的一些事情，所以                    

2246
09:45:59,916 --> 09:46:04,560
也许更好的做法是                    

2247
09:46:04,560 --> 09:46:09,276
非常喜欢向用户显示消息或其他内容                    

2248
09:46:09,276 --> 09:46:13,756
我现在有点想知道这是个好主意还是坏主意                    

2249
09:46:13,756 --> 09:46:18,640
对本章的想法，也许只是打印就足够了                    

2250
09:46:18,640 --> 09:46:22,640
你对此并不完全确定，所以                    

2251
09:46:22,640 --> 09:46:27,916
嗯，让我们暂时搁置吧，好吧，我也会去这里确保                    

2252
09:46:27,916 --> 09:46:32,400
我不是，是的，我在，请勿打扰，所以让我们把它留在那封电子邮件中                    

2253
09:46:32,400 --> 09:46:36,560
已经使用完美了，我们就这样吧                    

2254
09:46:36,560 --> 09:46:38,400
现在我们必须处理的下一件事                    

2255
09:46:38,400 --> 09:46:42,800
它还可以写出用户尝试输入无效电子邮件的情况                    

2256
09:46:42,800 --> 09:46:46,400
好吧，让我们在这里写一个 else 语句并说 print                    

2257
09:46:46,400 --> 09:46:50,320
嗯e代码再次保存它                    

2258
09:46:50,320 --> 09:46:55,040
让我们去删除这个添加标志，让它变成无效的电子邮件，然后尝试                    

2259
09:46:55,040 --> 09:47:00,640
按下注册按钮 好的 现在你可以看到 呃 你现在实际上看不到                    

2260
09:47:00,640 --> 09:47:05,120
你可以在日志的底部看到它说无效的电子邮件，这就是代码                    

2261
09:47:05,120 --> 09:47:10,800
对于那个错误，现在让我们处理无效的电子邮件吧                    

2262
09:47:10,800 --> 09:47:16,800
所以我要去这里说如果我们调用无效电子邮件的电子代码然后                    

2263
09:47:16,800 --> 09:47:22,160
我们会说打印输入的无效电子邮件并保存                    

2264
09:47:22,160 --> 09:47:26,400
所以清除日志点击注册按钮，现在你会                    

2265
09:47:26,400 --> 09:47:31,840
看到无效的电子邮件输入好了                    

2266
09:47:31,840 --> 09:47:35,680
我的意思是这真的是我们所要做的                    

2267
09:47:35,680 --> 09:47:40,640
现在我们的错误处理和我们正在进行的我                    

2268
09:47:40,640 --> 09:47:42,880
说实话我还有一点时间去弄清楚                    

2269
09:47:42,880 --> 09:47:46,800
我们是否真的要处理这些事情，我的意思是                    

2270
09:47:46,800 --> 09:47:50,320
如果我们需要显示一些错误                    

2271
09:47:50,320 --> 09:47:56,560
用户还好，我们可能需要这样做，但这有点复杂，比如                    

2272
09:47:56,560 --> 09:47:59,680
取决于我们想如何处理它，我们是否想向                    

2273
09:47:59,680 --> 09:48:03,276
用户你想向用户敬酒吗？                    

2274
09:48:03,276 --> 09:48:06,400
还是我们想向用户显示另一个屏幕，这有点像                    

2275
09:48:06,400 --> 09:48:10,880
现在连我都不清楚，所以也许我们会解决这些问题                    

2276
09:48:10,880 --> 09:48:16,640
正如我们在接下来的章节中继续介绍的那样                    

2277
09:48:16,640 --> 09:48:19,276
所以                    

2278
09:48:19,276 --> 09:48:24,000
现在我可以在这里看到登录                    

2279
09:48:24,000 --> 09:48:28,480
我们已经讨论过这个以及我们需要做什么                    

2280
09:48:28,480 --> 09:48:34,720
为了能够继续接下来的章节                    

2281
09:48:34,720 --> 09:48:40,800
实际上是为了确保我们登录到你看到的应用程序                    

2282
09:48:40,800 --> 09:48:44,640
我们处理过注册视图 我们处理过登录视图                    

2283
09:48:44,640 --> 09:48:48,400
我们在这里尝试了很多不同的组合来注册新用户                    

2284
09:48:48,400 --> 09:48:51,520
登录所以我个人目前不知道是否                    

2285
09:48:51,520 --> 09:48:56,640
此应用程序 firebase 实例实际上有一个登录用户，如果                    

2286
09:48:56,640 --> 09:49:01,276
你熟悉 python django 或 flask 或者如果你正在做 nodejs 或                    

2287
09:49:01,276 --> 09:49:04,400
后端开发之类的任何开发                    

2288
09:49:04,400 --> 09:49:09,040
您可以是登录用户，但最终仍处于登录视图中                    

2289
09:49:09,040 --> 09:49:14,240
因此，如果您将登录登录用户发送到登录视图并不意味着该用户                    

2290
09:49:14,240 --> 09:49:17,680
没有登录，这意味着用户是                    

2291
09:49:17,680 --> 09:49:22,080
已登录，但可能希望以其他用户身份登录，因此                    

2292
09:49:22,080 --> 09:49:25,520
我们的应用程序也有一个注册屏幕和一个登录视图，但我                    

2293
09:49:25,520 --> 09:49:28,960
个人不知道目前应用的状态是什么                    

2294
09:49:28,960 --> 09:49:32,080
登录还是我们没有登录，因为我们有点像玩                    

2295
09:49:32,080 --> 09:49:37,200
这里有不同的观点，好吧，所以现在这很重要，因为在                    

2296
09:49:37,200 --> 09:49:42,080
下一章我可以在第 14 章中看到我们将使用                    

2297
09:49:42,080 --> 09:49:45,276
嗯，我们正在努力分离应用程序                    

2298
09:49:45,276 --> 09:49:48,640
从登录和注册屏幕初始化，因为您可以在                    

2299
09:49:48,640 --> 09:49:52,560
当我们拥有这个未来的建设者时                    

2300
09:49:52,560 --> 09:49:57,120
初始化firebase，它正在做很多工作，快照留在                    

2301
09:49:57,120 --> 09:50:01,276
完成等等，我们在两个视图登录视图中做同样的事情，                    

2302
09:50:01,276 --> 09:50:04,400
注册视图所以我们需要做的有点像                    

2303
09:50:04,400 --> 09:50:07,520
分离该逻辑并确保我们显示正确的                    

2304
09:50:07,520 --> 09:50:11,276
查看取决于是的应用程序的状态是什么，在我们可以之前                    

2305
09:50:11,276 --> 09:50:15,276
然后继续或开始我们需要确保用户                    

2306
09:50:15,276 --> 09:50:22,000
当前用户已经登录好了，让我们去我们的 um                    

2307
09:50:22,000 --> 09:50:27,040
此处的主要飞镖和登录已显示登录视图，所以我真的不是你                    

2308
09:50:27,040 --> 09:50:30,960
无需担心这部分导入登录视图                    

2309
09:50:30,960 --> 09:50:36,000
你现在需要做的是确保我们不是注册视图                    

2310
09:50:36,000 --> 09:50:39,840
显示登录视图并记住现在我们正在保存一些东西                    

2311
09:50:39,840 --> 09:50:44,160
更改主函数中的某些内容，因此不会进行热重载                    

2312
09:50:44,160 --> 09:50:50,000
工作，所以你需要做热重启，所以我们将进入那个登录视图                    

2313
09:50:50,000 --> 09:50:55,840
然后让我们在这里输入有效的详细信息，所以我要说 pixelityab.gmail.com                    

2314
09:50:55,840 --> 09:51:00,720
我认为密码是老实说最好的                    

2315
09:51:00,720 --> 09:51:06,000
我要按下登录按钮，然后我们得到了                    

2316
09:51:06,000 --> 09:51:12,240
该用户的凭据哇，这是很多信息，我                    

2317
09:51:12,240 --> 09:51:16,960
明白了，所以我们现在需要做什么，我要走了                    

2318
09:51:16,960 --> 09:51:21,276
在我的笔记中记一些东西是                    

2319
09:51:21,276 --> 09:51:25,200
正如我提到的，我们需要为下一章做我的意思是我们已经完成了                    

2320
09:51:25,200 --> 09:51:28,720
说实话，这一章我们已经谈了很多，比如异常处理                    

2321
09:51:28,720 --> 09:51:32,240
将登录视图与注册视图分开，但我们的注册视图是                    

2322
09:51:32,240 --> 09:51:35,276
仍然在主要飞镖中，我们要我们要                    

2323
09:51:35,276 --> 09:51:39,120
很快解决这个问题，但你需要知道之前做什么                    

2324
09:51:39,120 --> 09:51:42,080
您继续下一章，并确保您正在显示                    

2325
09:51:42,080 --> 09:51:46,640
用户的登录视图，并且您实际上正在使用有效的登录                    

2326
09:51:46,640 --> 09:51:51,680
用户名和密码，这可确保正在运行的 firebase 实例                    

2327
09:51:51,680 --> 09:51:56,960
这个应用程序现在将在 ios 上本地缓存该信息是                    

2328
09:51:56,960 --> 09:52:01,596
将该信息缓存在称为钥匙串的安全存储中                    

2329
09:52:01,596 --> 09:52:05,360
android 我认为它被称为共享偏好或类似的东西                    

2330
09:52:05,360 --> 09:52:09,520
以便信息现在将安全地存储在该电话上                    

2331
09:52:09,520 --> 09:52:13,360
对我来说这是一部安卓手机                    

2332
09:52:13,360 --> 09:52:17,040
当我重新启动应用程序时，如果我喜欢关闭我的                    

2333
09:52:17,040 --> 09:52:21,040
电话重新启动电话操作系统回来该信息已经                    

2334
09:52:21,040 --> 09:52:25,756
保存在该电话上，因此我的用户可以正常登录                    

2335
09:52:25,756 --> 09:52:29,360
所以只要确保在你继续下一章之前你已经                    

2336
09:52:29,360 --> 09:52:33,200
首先注册用户并且您已经从该用户登录                    

2337
09:52:33,200 --> 09:52:38,800
您的应用程序，这样信息就可以缓存在应用程序中                    

2338
09:52:38,800 --> 09:52:43,436
好很多资料在下一章                    

2339
09:52:43,436 --> 09:52:48,480
我们将把应用程序初始化与登录和                    

2340
09:52:48,480 --> 09:52:53,040
注册屏幕 我们只需执行几个步骤                    

2341
09:52:53,040 --> 09:52:58,560
在那一章里                    

2342
09:52:58,560 --> 09:53:02,720
所以我认为那一章实际上不会那么长                    

2343
09:53:02,720 --> 09:53:07,756
所以拿一杯茶咖啡，不管你想要什么巧克力，不管它是什么，                    

2344
09:53:07,756 --> 09:53:13,040
我会在下一章见到你你好，欢迎来到第 14 章                    

2345
09:53:13,040 --> 09:53:16,240
正如您在上一章中看到的，我们在 Flutter 课程中                    

2346
09:53:16,240 --> 09:53:21,916
处理登录视图现在我们有一个登录视图和一个注册视图                    

2347
09:53:21,916 --> 09:53:25,916
你还看到的是我们做了一些非常简单的                    

2348
09:53:25,916 --> 09:53:29,360
各种场景的错误处理，例如                    

2349
09:53:29,360 --> 09:53:34,560
呃邮箱已经注册了弱密码嗯                    

2350
09:53:34,560 --> 09:53:38,720
无效的电子邮件 密码错误或密码错误 i                    

2351
09:53:38,720 --> 09:53:42,880
认为它被称为所以现在我们有两个视图                    

2352
09:53:42,880 --> 09:53:47,360
嗯，我们有，但我们有两个主要问题要解决                    

2353
09:53:47,360 --> 09:53:50,720
注册或注册认为                    

2354
09:53:50,720 --> 09:53:55,596
我们创造了仍然生活在我们的                    

2355
09:53:55,596 --> 09:54:00,000
main.dart 文件，另一个问题是标题                    

2356
09:54:00,000 --> 09:54:04,880
这里显示的是小部件正在执行应用程序初始化                    

2357
09:54:04,880 --> 09:54:09,276
如果您从代码中记得有这个 firebase 初始化                    

2358
09:54:09,276 --> 09:54:13,200
我们必须做的 api 调用，因为                    

2359
09:54:13,200 --> 09:54:17,200
登录视图和注册视图非常相似，它们都是                    

2360
09:54:17,200 --> 09:54:21,360
做firebase的初始化                    

2361
09:54:21,360 --> 09:54:24,000
我们在这一章要做的是                    

2362
09:54:24,000 --> 09:54:28,320
将这些 um 初始化和                    

2363
09:54:28,320 --> 09:54:32,400
让它们成为我们需要做的第一件事，所以我们只是                    

2364
09:54:32,400 --> 09:54:35,040
有一个将要发生的初始化                    

2365
09:54:35,040 --> 09:54:38,960
我们还要做的是将寄存器视图放在它自己的文件中                    

2366
09:54:38,960 --> 09:54:42,960
所以这一章将是一个与其他章节不同的快速章节                    

2367
09:54:42,960 --> 09:54:46,080
我认为对你说实话有点令人耳目一新，否则所有章节                    

2368
09:54:46,080 --> 09:54:49,680
会很长很详细                    

2369
09:54:49,680 --> 09:54:55,360
所以说让我们然后嗯                    

2370
09:54:55,360 --> 09:54:59,596
那么让我们从我们要做的第一件事开始吧                    

2371
09:54:59,596 --> 09:55:02,640
这基本上是将寄存器视图移动到                    

2372
09:55:02,640 --> 09:55:05,840
意见 注册 意见 好的 我去看看我能不能提出来                    

2373
09:55:05,840 --> 09:55:10,640
Visual Studio Code 嗯，我们之前是如何离开它的                    

2374
09:55:10,640 --> 09:55:15,276
我将提出 scrcpy 哪个                    

2375
09:55:15,276 --> 09:55:19,680
我的安卓手机现在正在运行我们的颤振应用吗                    

2376
09:55:19,680 --> 09:55:24,000
所以让我们按照标题说的做吧，我要把屏幕做一点点                    

2377
09:55:24,000 --> 09:55:28,480
更大，以便您看得更清楚然后转到您的项目呃或资源管理器                    

2378
09:55:28,480 --> 09:55:31,436
这里是visual studio core 如果你使用的是android studio，你可以去                    

2379
09:55:31,436 --> 09:55:34,960
navigator 那里也有类似的 android studio 或者如果                    

2380
09:55:34,960 --> 09:55:38,720
您使用的 sublime 与左侧完全相同                    

2381
09:55:38,720 --> 09:55:43,596
您可以看到项目结构，然后转到 lib，然后像我们一样查看                    

2382
09:55:43,596 --> 09:55:47,276
那里的登录视图让我们创建一个名为注册视图的视图，因此右键单击此处                    

2383
09:55:47,276 --> 09:55:53,200
并说新文件，我要说注册 mu dot dart                    

2384
09:55:53,200 --> 09:55:58,960
好的，那么我们必须像问题所说的那样回到我们的主 dart 文件并                    

2385
09:55:58,960 --> 09:56:03,756
从这里抓取这个注册视图组所有的注册视图，包括                    

2386
09:56:03,756 --> 09:56:08,320
它的注册视图状态抓住了所有这些                    

2387
09:56:08,320 --> 09:56:12,800
在mac中剪切它你用命令x来做，在windows和linux中我认为你做                    

2388
09:56:12,800 --> 09:56:16,960
控制x，所以嗯，我剪掉了，然后我会带来                    

2389
09:56:16,960 --> 09:56:21,200
正如您在上一章中看到的那样，它进入注册视图                    

2390
09:56:21,200 --> 09:56:23,840
这些事情通常会引起很多头痛                    

2391
09:56:23,840 --> 09:56:27,520
为你的编辑，因为我的意思是它不是                    

2392
09:56:27,520 --> 09:56:30,400
让您头疼，因为我们可以轻松地为我们修复它，这不是问题，但是                    

2393
09:56:30,400 --> 09:56:32,960
只是编辑器不明白所有这些类在哪里                    

2394
09:56:32,960 --> 09:56:36,960
位于所以我之前已经解释过                    

2395
09:56:36,960 --> 09:56:40,400
在此之前的确切前一章，所以我不会再解释它所以                    

2396
09:56:40,400 --> 09:56:44,800
让我们在 Visual Studio 代码中说命令点，然后说要修复的导入材料                    

2397
09:56:44,800 --> 09:56:48,480
所有有状态的小部件问题和所有类的所有事情                    

2398
09:56:48,480 --> 09:56:53,040
存放在 flotter 包中的材料 dart 中 好的                    

2399
09:56:53,040 --> 09:56:55,596
然后我们还有其他问题，例如firebase，所以                    

2400
09:56:55,596 --> 09:57:01,756
命令 dot import firebase core 修复该命令 dot import firebase options                    

2401
09:57:01,756 --> 09:57:05,360
这就是那个问题，我们也会有                    

2402
09:57:05,360 --> 09:57:11,200
我相信要导入firebase，这也已经解决了，所以现在我们                    

2403
09:57:11,200 --> 09:57:14,800
在这里有一个完美的注册视图，嗯                    

2404
09:57:14,800 --> 09:57:19,520
如果你现在在我们的主要飞镖中看到这里有很多东西是                    

2405
09:57:19,520 --> 09:57:23,596
进口的不是不再需要的                    

2406
09:57:23,596 --> 09:57:28,160
所以让我们删除那些你可以看到这些东西实际上是                    

2407
09:57:28,160 --> 09:57:32,080
你可能会说好吧，我怎么能找到所有这些问题，就像有很多                    

2408
09:57:32,080 --> 09:57:35,596
这里有问题，但如果我没有回到我不会看到的主 dart 文件                    

2409
09:57:35,596 --> 09:57:39,916
他们以及解决这个问题的方法是真正提出你的                    

2410
09:57:39,916 --> 09:57:44,720
问题查看here，你会看到有很多问题表明                    

2411
09:57:44,720 --> 09:57:49,120
你可以去修复那些你看到的打印语句在这里然后                    

2412
09:57:49,120 --> 09:57:54,240
未使用的导入，你可以清理它们                    

2413
09:57:54,240 --> 09:57:57,680
这就是你如何使用问题窗口                    

2414
09:57:57,680 --> 09:58:02,640
我要手动做，现在删除这个并删除这个，所以我们有一个干净的                    

2415
09:58:02,640 --> 09:58:06,160
void main function here 好吧，我要做一个热重启，以确保                    

2416
09:58:06,160 --> 09:58:12,240
一切都按预期工作然后我们在这里有登录视图                    

2417
09:58:12,240 --> 09:58:18,560
所以我们现在需要做的下一件事就是我实际上要去做的笔记                    

2418
09:58:18,560 --> 09:58:22,560
我的笔记，并确保我已经谈到了前一点                    

2419
09:58:22,560 --> 09:58:26,960
所以接下来我们需要做的是创建一个专门的主页                    

2420
09:58:26,960 --> 09:58:32,080
应用程序初始化，取决于用户是登录还是登录                    

2421
09:58:32,080 --> 09:58:35,916
out 或者如果用户已通过验证，那么它将显示正确的                    

2422
09:58:35,916 --> 09:58:40,000
屏幕上的小部件没关系，所以只是为了解释一下                    

2423
09:58:40,000 --> 09:58:45,120
是我的意思是你我可以说你在这里看到你的主要功能                    

2424
09:58:45,120 --> 09:58:48,640
当你的应用程序运行你它运行你告诉它去登录视图                    

2425
09:58:48,640 --> 09:58:52,320
但是为什么我们说去登录视图                    

2426
09:58:52,320 --> 09:58:57,520
为什么我们说去注册视图我们现在没有逻辑说                    

2427
09:58:57,520 --> 09:59:01,200
您是否已登录然后显示登录视图，或者如果您不喜欢我并显示                    

2428
09:59:01,200 --> 09:59:04,080
注册表，这就是我们要做的                    

2429
09:59:04,080 --> 09:59:08,400
主页好吧，所以想象一下主页是                    

2430
09:59:08,400 --> 09:59:13,200
您的应用程序可以管理的不同路线，所以说哦，如果这样                    

2431
09:59:13,200 --> 09:59:18,000
如果该条件显示另一个屏幕，则执行此操作                    

2432
09:59:18,000 --> 09:59:23,120
我们需要一个主页并且方便地命名为主页我的意思是很多其他的                    

2433
09:59:23,120 --> 09:59:27,596
人们可能会尝试将其称为其他名称，例如路线页面或其他                    

2434
09:59:27,596 --> 09:59:30,640
但是现在我们将使用主页，因为它很容易                    

2435
09:59:30,640 --> 09:59:35,360
为大家理解所以让我们进入这里                    

2436
09:59:35,360 --> 09:59:40,160
并说我们想要一个无状态的小部件 stl，我们要去                    

2437
09:59:40,160 --> 09:59:44,560
称它为主页好吧，然后我会按 Escape 所以现在我们有一个                    

2438
09:59:44,560 --> 09:59:50,080
在我们的主 dart 文件中称为主页的无状态小部件                    

2439
09:59:50,080 --> 09:59:54,880
现在我们需要做的然后在那之后                    

2440
09:59:54,880 --> 09:59:59,680
我们需要进入我们的主 dart 文件，而不是说登录视图，让我们只是                    

2441
09:59:59,680 --> 10:00:03,840
说主页好，如果我按命令记住这不会                    

2442
10:00:03,840 --> 10:00:07,596
立即生效，因为不考虑热重载                    

2443
10:00:07,596 --> 10:00:10,640
它改变了这里的主要功能，所以你必须做一个热重启，所以你会看到                    

2444
10:00:10,640 --> 10:00:13,840
现在黑屏还好所以                    

2445
10:00:13,840 --> 10:00:16,640
就是这样                    

2446
10:00:16,640 --> 10:00:20,720
所以我们现在需要做的是                    

2447
10:00:20,720 --> 10:00:24,240
基本上有一些脚手架在我们的                    

2448
10:00:24,240 --> 10:00:27,120
主页，因为我们不想只向用户显示一个空屏幕                    

2449
10:00:27,120 --> 10:00:28,880
可以，然后呢                    

2450
10:00:28,880 --> 10:00:34,480
让我们进入我们的容器而不是说我们返回一个脚手架                    

2451
10:00:34,480 --> 10:00:37,916
前几章讲过脚手架，就不解释了                    

2452
10:00:37,916 --> 10:00:42,320
再次，让我们去创建一个应用栏                    

2453
10:00:42,320 --> 10:00:48,080
我们还谈到了产权账户文本并说主页                    

2454
10:00:48,080 --> 10:00:50,480
好的                    

2455
10:00:50,480 --> 10:00:55,436
在 mac 中使用 command s 或在 linux 和 windows 中使用 control s 来保存这个文件并                    

2456
10:00:55,436 --> 10:01:00,480
您会看到更改立即生效                    

2457
10:01:00,480 --> 10:01:04,720
好吧，我们说的主页需要什么                    

2458
10:01:04,720 --> 10:01:10,160
主页需要初始化 firebase 它需要首先这样做                    

2459
10:01:10,160 --> 10:01:14,880
我们可以在两个寄存器视图中摆脱这个代码你会看到这个代码未来                    

2460
10:01:14,880 --> 10:01:19,200
builder firebase 初始化应用程序，然后连接状态完成等等等等                    

2461
10:01:19,200 --> 10:01:22,640
我们的登录视图中有完全相同的代码，所以                    

2462
10:01:22,640 --> 10:01:26,640
在我们要开发的每个视图中都有很多代码要编写                    

2463
10:01:26,640 --> 10:01:29,520
这个应用程序不会有这么多的浏览量，可能有六七次浏览，但是                    

2464
10:01:29,520 --> 10:01:34,400
我们仍然不想在每个视图中初始化应用程序并做一个未来的构建器                    

2465
10:01:34,400 --> 10:01:38,880
这只是很多代码，所以这就是我们的                    

2466
10:01:38,880 --> 10:01:46,640
主页会好起来的，所以让我们这样做吧，我们去抓                    

2467
10:01:46,640 --> 10:01:51,520
这个代码呃对不起                    

2468
10:01:51,520 --> 10:01:55,680
让我们与未来的构建者一起获取这段代码，几乎可能是整个                    

2469
10:01:55,680 --> 10:02:00,560
从我们的登录视图构建功能没问题，所以转到您的登录视图获取整个                    

2470
10:02:00,560 --> 10:02:06,160
构建函数直到它的结尾，这就是这个括号好的结尾                    

2471
10:02:06,160 --> 10:02:08,480
括号 关闭您的登录视图 关闭您的                    

2472
10:02:08,480 --> 10:02:13,360
如果你想注册视图然后去替换小部件的整个覆盖                    

2473
10:02:13,360 --> 10:02:18,400
使用您刚刚剪切的代码构建您的主页，或者                    

2474
10:02:18,400 --> 10:02:22,000
抱歉从登录视图复制粘贴在这里                    

2475
10:02:22,000 --> 10:02:26,880
现在我们不希望主页有任何相关的逻辑                    

2476
10:02:26,880 --> 10:02:29,120
和嗯                    

2477
10:02:29,120 --> 10:02:33,916
这个主页的文本字段是我们将用它来做一些更崇高的事情                    

2478
10:02:33,916 --> 10:02:37,916
所以你不需要所有的文本字段和                    

2479
10:02:37,916 --> 10:02:41,680
和所有这些专栏和呃你的文字                    

2480
10:02:41,680 --> 10:02:45,360
按钮，所以去这里你正在创建                    

2481
10:02:45,360 --> 10:02:50,800
连接状态的列完成并从                    

2482
10:02:50,800 --> 10:02:54,880
返回，所以如果我折叠它，你会看到那是整个返回，我要走了                    

2483
10:02:54,880 --> 10:02:58,240
实际删除它哎呀它没有删除整个代码                    

2484
10:02:58,240 --> 10:03:00,800
好的，所以我要从退货开始手工完成                    

2485
10:03:00,800 --> 10:03:05,756
一直到这里                    

2486
10:03:05,756 --> 10:03:09,436
专栏结束没问题                    

2487
10:03:09,436 --> 10:03:13,040
而不是那个专栏，我们要做什么                    

2488
10:03:13,040 --> 10:03:18,560
只是返回一个文字，上面写着                    

2489
10:03:18,560 --> 10:03:22,320
好吧，就这样，如果firebase                    

2490
10:03:22,320 --> 10:03:26,480
初始化完成它只是会说完成，让我们也改变文本                    

2491
10:03:26,480 --> 10:03:30,000
在这里，现在我们已经完成了，你可以看到我们                    

2492
10:03:30,000 --> 10:03:33,120
由于我删除了firebase，仍然有一些问题没有被导入                    

2493
10:03:33,120 --> 10:03:35,520
那些嗯嗯                    

2494
10:03:35,520 --> 10:03:39,756
以前导入，所以我现在要修复 firebase 上的命令点并说                    

2495
10:03:39,756 --> 10:03:44,080
在默认的firebase选项或控制点上导入该和命令点                    

2496
10:03:44,080 --> 10:03:49,680
取决于是否在您的 linux 上，无论您是在 linux 还是 mac 上                    

2497
10:03:49,680 --> 10:03:54,480
windows 导入 firebase 选项                    

2498
10:03:54,480 --> 10:03:57,680
好的，现在你会看到我们有一个只显示单词的主页                    

2499
10:03:57,680 --> 10:04:01,596
在这里做一次我们未来的连接状态                    

2500
10:04:01,596 --> 10:04:06,320
这是firebase的初始化应用程序实际上已经完成了热重载                    

2501
10:04:06,320 --> 10:04:11,520
你会看到 hotdog sorry done 也显示 hot done                    

2502
10:04:11,520 --> 10:04:14,160
嗯嗯                    

2503
10:04:14,160 --> 10:04:18,480
我会把它记在我已经谈过的笔记中                    

2504
10:04:18,480 --> 10:04:21,200
好的，接下来我们需要做的就是                    

2505
10:04:21,200 --> 10:04:26,480
章是确保用户不为空                    

2506
10:04:26,480 --> 10:04:32,080
并且用户也经过验证，因此在一些罕见的情况下                    

2507
10:04:32,080 --> 10:04:36,000
firebase，例如当您尚未初始化 firebase 应用程序时                    

2508
10:04:36,000 --> 10:04:42,000
使用初始化应用程序存储在 firebase um 中的用户                    

2509
10:04:42,000 --> 10:04:45,200
firebase 代码或在 firebits 的实例中                    

2510
10:04:45,200 --> 10:04:49,120
在你的应用程序中运行实际上可能是空的，我们已经讨论过                    

2511
10:04:49,120 --> 10:04:53,436
null 在我们之前讨论过飞镖的章节中，它是基础知识，所以你                    

2512
10:04:53,436 --> 10:04:56,240
可以回到那些章节并观看那些所以我不打算解释什么                    

2513
10:04:56,240 --> 10:04:59,916
null 再次出现，但很快 null 只是简单地说                    

2514
10:04:59,916 --> 10:05:03,680
在这种情况下没有值 没有用户所以                    

2515
10:05:03,680 --> 10:05:07,916
我们在应用程序中需要做的是确保                    

2516
10:05:07,916 --> 10:05:09,840
那一个                    

2517
10:05:09,840 --> 10:05:13,436
应用程序中的当前用户是用户                    

2518
10:05:13,436 --> 10:05:19,040
um non-null 意味着它应该存在并且用户的电子邮件                    

2519
10:05:19,040 --> 10:05:22,160
应该验证好所以                    

2520
10:05:22,160 --> 10:05:27,040
您可能会问为什么用户的电子邮件很重要                    

2521
10:05:27,040 --> 10:05:29,436
验证了原因                    

2522
10:05:29,436 --> 10:05:32,960
我的意思也是在我说为什么用户的电子邮件很重要之前                    

2523
10:05:32,960 --> 10:05:37,916
验证也许让我们先谈谈电子邮件验证是什么                    

2524
10:05:37,916 --> 10:05:42,080
无论您是否已经在许多在线服务中看到它，如果                    

2525
10:05:42,080 --> 10:05:46,160
例如，您访问一个网站，即使它是一个购物网站，或者                    

2526
10:05:46,160 --> 10:05:49,520
亚马逊或任何 ebay，如果你说好的，我想注册一个新用户，你                    

2527
10:05:49,520 --> 10:05:54,000
说好这是我的电子邮件地址这是我选择的密码                    

2528
10:05:54,000 --> 10:05:57,276
一旦你这样做，你将登录到网站                    

2529
10:05:57,276 --> 10:06:00,400
如果此电子邮件不存在，他们会说好的                    

2530
10:06:00,400 --> 10:06:04,480
我会允许你注册这个但是你真的不能这样做                    

2531
10:06:04,480 --> 10:06:07,680
有这么多的网站，你可以搜索的东西，但你可能无法                    

2532
10:06:07,680 --> 10:06:11,756
买东西，除非你有                    

2533
10:06:11,756 --> 10:06:15,436
验证了您的电子邮件，这意味着一旦您注册亚马逊                    

2534
10:06:15,436 --> 10:06:19,276
例如，它会向您发送一封电子邮件到您选择的电子邮件                    

2535
10:06:19,276 --> 10:06:23,916
注册，通常会在该电子邮件中有一个链接，并说谢谢                    

2536
10:06:23,916 --> 10:06:28,960
在 amazon 或 ebay 注册用户单击此链接以验证您的电子邮件                    

2537
10:06:28,960 --> 10:06:32,880
您可能已经看到过这样的电子邮件地址                    

2538
10:06:32,880 --> 10:06:35,916
你可以去你的收件箱并搜索验证，你可能会                    

2539
10:06:35,916 --> 10:06:42,640
找到很多电子邮件，要求您使用该服务验证您的帐户，所以嗯                    

2540
10:06:42,640 --> 10:06:45,756
现在让我们现在讨论什么是电子邮件验证让我们谈谈                    

2541
10:06:45,756 --> 10:06:50,400
为什么它很重要让我们说我是用户并且我想使用它                    

2542
10:06:50,400 --> 10:06:53,680
我们正在开发的应用程序，所以我想在其中记一些笔记                    

2543
10:06:53,680 --> 10:06:59,680
然后我会去并在我不拥有的电子邮件下注册自己                    

2544
10:06:59,680 --> 10:07:03,680
好吧，让我们说然后我注册我的                    

2545
10:07:03,680 --> 10:07:08,080
你的电子邮件地址和我选择的密码，因为你还没有注册                    

2546
10:07:08,080 --> 10:07:12,080
您的电子邮件地址还带有服务图标并在您前面并注册您的                    

2547
10:07:12,080 --> 10:07:16,080
服务的电子邮件地址，现在我只需登录                    

2548
10:07:16,080 --> 10:07:19,680
记住我没有登录你的电子邮件我正在登录这个应用程序                    

2549
10:07:19,680 --> 10:07:24,320
你现在的电子邮件现在我已经收到了那封电子邮件所以如果你那时                    

2550
10:07:24,320 --> 10:07:28,240
谁是您的电子邮件地址的合法所有者来到此应用程序和                    

2551
10:07:28,240 --> 10:07:32,800
说哦，我是 foobarbaz gmail.com，我想用这个注册一个帐户                    

2552
10:07:32,800 --> 10:07:36,400
应用程序，它说哎呀，电子邮件地址已经被占用了，所以你会                    

2553
10:07:36,400 --> 10:07:39,520
就像那是我的电子邮件地址是怎么回事                    

2554
10:07:39,520 --> 10:07:43,596
这就是电子邮件验证的重要性，我们需要在我们的                    

2555
10:07:43,596 --> 10:07:47,520
应用程序是为了确保每当有人来注册一个                    

2556
10:07:47,520 --> 10:07:51,596
用户使用他们选择的电子邮件地址和密码，然后我们                    

2557
10:07:51,596 --> 10:07:56,960
将使用 firebase 向该电子邮件地址发送一封真实的电子邮件并说                    

2558
10:07:56,960 --> 10:08:03,040
嘿，你刚刚在这里注册了一个用户，确保你点击这个链接                    

2559
10:08:03,040 --> 10:08:08,880
说 verify blah blah 用我们的应用程序或用实际验证您的用户                    

2560
10:08:08,880 --> 10:08:13,756
我们的文件与我们的应用程序 firebase 实例位于 firebase cloud all                    

2561
10:08:13,756 --> 10:08:18,080
对，所以我们现在需要做的就是进去                    

2562
10:08:18,080 --> 10:08:20,560
这里处于连接状态完成你看到                    

2563
10:08:20,560 --> 10:08:26,480
然后让我们检查当前用户好吗让我们看看这个当前用户是否真的                    

2564
10:08:26,480 --> 10:08:31,040
已登录到应用程序，所以假设 firebase                    

2565
10:08:31,040 --> 10:08:34,720
嗯，然后让我们说                    

2566
10:08:34,720 --> 10:08:38,800
firebase 应用程序我相信它被称为实例                    

2567
10:08:38,800 --> 10:08:42,800
让我们看看有实例                    

2568
10:08:42,800 --> 10:08:47,756
changelog firebase 好吧，让我们看看我们是否真的可以                    

2569
10:08:47,756 --> 10:08:51,200
谷歌一起好吧，所以这对你也有好处                    

2570
10:08:51,200 --> 10:08:56,240
正确的基础颤振获取当前用户我们可能最终会得到一些                    

2571
10:08:56,240 --> 10:09:00,480
有点堆栈溢出，我们将看看我们如何                    

2572
10:09:00,480 --> 10:09:04,880
实际检索当前用户，您可以看到这里的响应来自                    

2573
10:09:04,880 --> 10:09:08,960
用户名相当的用户                    

2574
10:09:08,960 --> 10:09:15,040
dissu kurt jr 我很抱歉，如果我在扼杀这个名字，但你可以看到                    

2575
10:09:15,040 --> 10:09:18,480
它在这里为您提供，上面写着 firebaseos.instance                    

2576
10:09:18,480 --> 10:09:22,480
并使用该实例，然后您可以获得当前用户，所以让我们做同样的事情                    

2577
10:09:22,480 --> 10:09:27,436
这里的事情让我们说点实例的firebase                    

2578
10:09:27,436 --> 10:09:30,480
然后当前用户还可以                    

2579
10:09:30,480 --> 10:09:34,720
我要去掉左边的这个屏幕，这是我们的项目浏览器                    

2580
10:09:34,720 --> 10:09:39,756
在我们返回完成的文本之前，我将在此处打印此声明                    

2581
10:09:39,756 --> 10:09:44,560
所以我会调出调试控制台清除调试控制台，我要说                    

2582
10:09:44,560 --> 10:09:49,040
command 没问题，因为我们做了很多改变                    

2583
10:09:49,040 --> 10:09:52,720
在这里你看到我们在这里创建了一个主页很多东西所以我们需要做什么                    

2584
10:09:52,720 --> 10:09:56,480
只是做一个热重启，在这种情况下基本上是颤抖的                    

2585
10:09:56,480 --> 10:10:01,276
真正了解我们在主页中所做的更改，所以                    

2586
10:10:01,276 --> 10:10:05,916
有太多的变化，它无法处理，所以热重启是                    

2587
10:10:05,916 --> 10:10:09,756
补救措施现在你可以在这里看到我们打印的                    

2588
10:10:09,756 --> 10:10:13,200
当前用户 我将这样做，以便您可以看到更多                    

2589
10:10:13,200 --> 10:10:16,800
我将提出一个输出                    

2590
10:10:16,800 --> 10:10:19,916
一点点我将大大增加尺寸，这样你就可以看到                    

2591
10:10:19,916 --> 10:10:22,880
它也更好，并且                    

2592
10:10:22,880 --> 10:10:26,640
我将突出显示实际打印的部分，所以这就是                    

2593
10:10:26,640 --> 10:10:30,640
firebase 或者这是为我们打印的打印语句，这是                    

2594
10:10:30,640 --> 10:10:35,040
由 firebase 创建的用户凭据和                    

2595
10:10:35,040 --> 10:10:38,240
如果你记得上一章我说过，在你之前确保                    

2596
10:10:38,240 --> 10:10:43,436
来到本章你有一个登录用户，这就是我的原因                    

2597
10:10:43,436 --> 10:10:47,596
我希望我们的应用程序中的 firebase 实例已经                    

2598
10:10:47,596 --> 10:10:51,680
知道您已登录，以便在我们打印您当前的用户凭据时                    

2599
10:10:51,680 --> 10:10:55,200
然后你可以看到它说这里是电子邮件地址                    

2600
10:10:55,200 --> 10:10:59,840
然后有一个名为 email 验证为 false 的属性，它说你是                    

2601
10:10:59,840 --> 10:11:03,436
匿名用户 false 并且如果您记得其中之一                    

2602
10:11:03,436 --> 10:11:07,276
之前的章节我谈到了 Firebase 设置                    

2603
10:11:07,276 --> 10:11:11,436
匿名用户是尚未真正登录应用程序的用户                    

2604
10:11:11,436 --> 10:11:13,840
Firebase 足够智能                    

2605
10:11:13,840 --> 10:11:17,756
了解任何访问您的应用程序但尚未登录的用户                    

2606
10:11:17,756 --> 10:11:21,680
之前 or 并且他们的登录信息未保存在钥匙串中或                    

2607
10:11:21,680 --> 10:11:26,400
在 android 上共享首选项，然后该用户默认为匿名匿名                    

2608
10:11:26,400 --> 10:11:31,276
所以如果你没有采取上一章的最后一个动作                    

2609
10:11:31,276 --> 10:11:35,040
并且您没有使用当前用户登录应用程序                    

2610
10:11:35,040 --> 10:11:38,560
那么你在这里实际上是匿名的，所以这个标志会显示为真                    

2611
10:11:38,560 --> 10:11:41,916
但既然我们已经完成了我们已经登录到应用程序，那么您将                    

2612
10:11:41,916 --> 10:11:45,916
看到我们的凭据被打印到屏幕上                    

2613
10:11:45,916 --> 10:11:49,916
现在这是我感兴趣的部分，已通过电子邮件验证                    

2614
10:11:49,916 --> 10:11:56,000
它说的是假的，所以我们在这里要做的是说                    

2615
10:11:56,000 --> 10:12:01,040
带上用户，所以我们说最终用户是当前实例的 firebase                    

2616
10:12:01,040 --> 10:12:04,400
用户我要在这里把尺寸缩小一点，好的                    

2617
10:12:04,400 --> 10:12:08,960
我要把屏幕做得更大一点，这样你就能看得更清楚                    

2618
10:12:08,960 --> 10:12:12,640
然后让我们在这里创建一个 if 语句                    

2619
10:12:12,640 --> 10:12:17,200
让我们说我们要说我有什么计划让我们只是                    

2620
10:12:17,200 --> 10:12:23,276
说如果用户通过电子邮件验证，那么我们就去                    

2621
10:12:23,276 --> 10:12:27,916
说打印您是经过验证的用户                    

2622
10:12:27,916 --> 10:12:33,596
否则我们会说你需要打印                    

2623
10:12:33,596 --> 10:12:37,360
首先验证您的电子邮件                    

2624
10:12:37,360 --> 10:12:40,800
所以你看到这里是因为我很高兴                    

2625
10:12:40,800 --> 10:12:44,640
实际上我们看到了这个错误，你可以看到整个错误                    

2626
10:12:44,640 --> 10:12:47,276
它说我如何在这里滚动它说                    

2627
10:12:47,276 --> 10:12:50,960
无法无条件访问属性电子邮件验证，因为                    

2628
10:12:50,960 --> 10:12:56,640
接收者可以为空尝试使用问号点制作访问条件                    

2629
10:12:56,640 --> 10:13:01,916
或者向目标添加一个空检查所以这就是说如果你去这个                    

2630
10:13:01,916 --> 10:13:06,880
用户把你的鼠标移到上面，呃，如果我能做到的话，哦不                    

2631
10:13:06,880 --> 10:13:12,080
在这里你会看到它说用户是可选用户所以firebase做了什么                    

2632
10:13:12,080 --> 10:13:15,360
这是说您可以使用的当前用户属性                    

2633
10:13:15,360 --> 10:13:19,840
看到这里是一个可选的用户，意思是如果出现问题并且                    

2634
10:13:19,840 --> 10:13:23,436
firebase 无法实际计算您当前的用户                    

2635
10:13:23,436 --> 10:13:27,360
例如，如果您禁用匿名用户，您实际上可以这样做                    

2636
10:13:27,360 --> 10:13:31,120
然后会说firebase会说哎呀                    

2637
10:13:31,120 --> 10:13:34,240
空用户 用户缺席 我不知道这是谁                    

2638
10:13:34,240 --> 10:13:38,480
用户就是这样，firebase api告诉你                    

2639
10:13:38,480 --> 10:13:42,080
应用程序，如果您使用的是我的 api，那么您需要处理这种情况                    

2640
10:13:42,080 --> 10:13:45,916
不能只问我电子邮件是否经过验证，因为用户实际上可能                    

2641
10:13:45,916 --> 10:13:50,720
为 null 用户可能不存在，所以这里有一个很好的建议                    

2642
10:13:50,720 --> 10:13:54,800
在这里看到说您可以使用问题有条件地访问该属性                    

2643
10:13:54,800 --> 10:13:58,800
标记点语法所以让我们做那个问号                    

2644
10:13:58,800 --> 10:14:03,200
完成，但当你这样做时，你会发现你会遇到另一个问题                    

2645
10:14:03,200 --> 10:14:08,320
它说好的，你要我比较一个可选的                    

2646
10:14:08,320 --> 10:14:10,720
布尔值                    

2647
10:14:10,720 --> 10:14:14,880
一个实际的布尔值，因为请记住您的 if 条件需要解析为                    

2648
10:14:14,880 --> 10:14:20,480
对或错所以嗯所以在这种情况下你可以做的是                    

2649
10:14:20,480 --> 10:14:24,000
要么创建一个叫做的东西，例如，如果一个中间变量你                    

2650
10:14:24,000 --> 10:14:29,120
可以说最终电子邮件已验证                    

2651
10:14:29,120 --> 10:14:33,840
你会说这等于用户对电子邮件验证字段的可选访问权限                    

2652
10:14:33,840 --> 10:14:38,160
或假，你看这是我们已经问过的问号问号                    

2653
10:14:38,160 --> 10:14:41,436
当我们谈到黑暗的基础知识时谈到了                    

2654
10:14:41,436 --> 10:14:46,240
您在这里所说的是取这个问号运算符的左侧                    

2655
10:14:46,240 --> 10:14:51,120
问号，它是一个空感知运算符，你说如果左边                    

2656
10:14:51,120 --> 10:14:56,080
存在 取它 否则取右边的值 好的 所以现在如果你移动                    

2657
10:14:56,080 --> 10:15:00,800
将鼠标悬停在电子邮件上验证您会看到它是一个布尔值                    

2658
10:15:00,800 --> 10:15:05,120
完美，所以你可以这样做或摆脱这个中间变量                    

2659
10:15:05,120 --> 10:15:08,720
您在这里创建的，实际上只是将完全相同的代码放入您的 if                    

2660
10:15:08,720 --> 10:15:12,800
声明，这将完全像它在那里所做的那样，所以让我们继续吧                    

2661
10:15:12,800 --> 10:15:16,240
少了一行代码                    

2662
10:15:16,240 --> 10:15:21,840
代码行少了，也许嗯，好吧                    

2663
10:15:21,840 --> 10:15:25,520
如果用户的电子邮件已验证或 false 为 true                    

2664
10:15:25,520 --> 10:15:30,240
这意味着如果用户的电子邮件验证可以被解读为真实或                    

2665
10:15:30,240 --> 10:15:37,200
假，如果你不能使用假，如果等式本身是真的，那么                    

2666
10:15:37,200 --> 10:15:41,520
用户已验证，否则用户未经过验证，因此                    

2667
10:15:41,520 --> 10:15:46,000
让我们在那里执行命令 让我们打开我们的控制台，我要去                    

2668
10:15:46,000 --> 10:15:49,840
稍微改变一下屏幕布局，让你看得更清楚                    

2669
10:15:49,840 --> 10:15:53,276
你可以在这里看到它说你需要验证你的电子邮件我实际上清理了                    

2670
10:15:53,276 --> 10:15:56,400
屏幕一点点，然后再次命令 s，这样你会看到少一点                    

2671
10:15:56,400 --> 10:16:00,480
屏幕上的信息，你可以看到我们在这里得到的打印声明                    

2672
10:16:00,480 --> 10:16:05,040
打印说是的，你还没有验证你的电子邮件，你需要做                    

2673
10:16:05,040 --> 10:16:09,200
这首先可以有很多信息，但可能更少                    

2674
10:16:09,200 --> 10:16:13,040
与其他章节相比，老实说，这就是我们要谈的全部内容                    

2675
10:16:13,040 --> 10:16:15,916
关于本章我只想展示                    

2676
10:16:15,916 --> 10:16:20,960
或者向你展示那个或者实际上首先解释什么是电子邮件验证                    

2677
10:16:20,960 --> 10:16:25,520
为什么它很重要，我们将使用电子邮件验证                    

2678
10:16:25,520 --> 10:16:28,480
我们在我们的应用程序中，您很快就会看到                    

2679
10:16:28,480 --> 10:16:34,400
以及如何从 firebase 用户那里实际读取该属性                    

2680
10:16:34,400 --> 10:16:38,560
太好了，这就是本章的全部内容了                    

2681
10:16:38,560 --> 10:16:42,240
下一章会有点不同，你可能真的期待                    

2682
10:16:42,240 --> 10:16:46,480
本章的继续，你会认为我们会跳到右边                    

2683
10:16:46,480 --> 10:16:51,120
进入电子邮件验证，但我故意放了一点                    

2684
10:16:51,120 --> 10:16:54,640
在我们的流程中暂停，因为这是你会做的事情                    

2685
10:16:54,640 --> 10:16:58,160
作为软件开发人员有时必须这样做，如果你看到了什么                    

2686
10:16:58,160 --> 10:17:02,400
不正确的东西不起作用                    

2687
10:17:02,400 --> 10:17:05,680
那么你需要尽快解决它，这就是                    

2688
10:17:05,680 --> 10:17:10,080
我们将在下一章解决你可能遇到的问题                    

2689
10:17:10,080 --> 10:17:13,596
如果您是经验丰富的软件开发人员或者可能没有考虑过                    

2690
10:17:13,596 --> 10:17:17,916
是我们只是在我们的电脑上写代码                    

2691
10:17:17,916 --> 10:17:23,680
此代码很容易被恶意程序、病毒删除，或者如果                    

2692
10:17:23,680 --> 10:17:28,480
我们的电脑出了点问题，这一切都可能消失，你会输                    

2693
10:17:28,480 --> 10:17:31,276
你写的所有东西，如果你不是来自软件                    

2694
10:17:31,276 --> 10:17:35,596
工程背景那你可能不知道 git 和 github 是什么                    

2695
10:17:35,596 --> 10:17:37,916
现在我不会吓唬你说实话                    

2696
10:17:37,916 --> 10:17:41,596
和你在一起，这不是什么可怕的事情，但是嗯                    

2697
10:17:41,596 --> 10:17:44,720
我们需要做的只是确保我们有我们的代码的备份和                    

2698
10:17:44,720 --> 10:17:48,240
这只是常识，即使你是设计师，即使你是                    

2699
10:17:48,240 --> 10:17:53,200
音乐制作人，即使你是个软弱的人，如果你的产品所有者是谁                    

2700
10:17:53,200 --> 10:17:58,000
或产品经理，你可能知道无论你做什么工作都需要                    

2701
10:17:58,000 --> 10:18:02,240
安全地保存在某个地方，所以如果你有一个视频文件，你不只是去                    

2702
10:18:02,240 --> 10:18:05,200
把它放在你的电脑上，你可能会备份它，如果你                    

2703
10:18:05,200 --> 10:18:09,596
与 figma 合作，该文件已在云中共享，很抱歉没有                    

2704
10:18:09,596 --> 10:18:12,800
共享它已经存储在云中，所以                    

2705
10:18:12,800 --> 10:18:18,960
你很少会处理那些不是                    

2706
10:18:18,960 --> 10:18:23,120
安全地存储在某种云中，即使您正在工作                    

2707
10:18:23,120 --> 10:18:28,240
有一份文件，现在也有分享，对不起，有                    

2708
10:18:28,240 --> 10:18:30,800
用于存储文档的云解决方案                    

2709
10:18:30,800 --> 10:18:34,480
安全地在云端，所以我的意思是                    

2710
10:18:34,480 --> 10:18:38,480
几乎总是在您处理用户生成的文档或源代码时                    

2711
10:18:38,480 --> 10:18:41,680
在这种情况下，您需要确保它安全地存储在云中                    

2712
10:18:41,680 --> 10:18:44,720
这就是我们在下一章要做的，所以我们要谈谈                    

2713
10:18:44,720 --> 10:18:48,880
关于 git 和 github，我们将设置我们的 gpg 密钥                    

2714
10:18:48,880 --> 10:18:53,120
或 pgp 键你想说什么，我们实际上要潜水                    

2715
10:18:53,120 --> 10:18:57,276
深入了解 git 及其实际含义以及为什么会这样                    

2716
10:18:57,276 --> 10:19:03,040
很好，为什么软件开发人员经常谈论 git，你可能知道                    

2717
10:19:03,040 --> 10:19:06,720
这门课你可能不知道这门课                    

2718
10:19:06,720 --> 10:19:12,320
是关于颤振，但我忍不住把这一章放进去                    

2719
10:19:12,320 --> 10:19:15,756
因为我相信如果你不是软件开发人员，如果你来自                    

2720
10:19:15,756 --> 10:19:20,720
另一个背景，那么我有责任告诉你                    

2721
10:19:20,720 --> 10:19:25,520
关于 git 和 github 以及为什么我喜欢如何使用它很重要                    

2722
10:19:25,520 --> 10:19:29,040
获取 github 的非常简单的任务，所以嗯                    

2723
10:19:29,040 --> 10:19:32,320
所以让我们为下一章做好准备，这将是                    

2724
10:19:32,320 --> 10:19:36,880
少一点编码这不是真的我们根本没有几乎根本不去                    

2725
10:19:36,880 --> 10:19:41,120
为了处理源代码，我们主要使用 git 和 github                    

2726
10:19:41,120 --> 10:19:44,800
所以说我会结束这个                    

2727
10:19:44,800 --> 10:19:50,400
下一章再见                    

2728
10:19:50,400 --> 10:19:54,000
前几章的字母课程我们谈了很多                    

2729
10:19:54,000 --> 10:19:58,320
关于设置我们的项目，所以到目前为止我们一直在努力设置                    

2730
10:19:58,320 --> 10:20:02,880
我们还创建了登录和注册视图的项目和基础知识                    

2731
10:20:02,880 --> 10:20:07,040
在我们的颤振应用程序中，当我自己开发这门课程时，我必须                    

2732
10:20:07,040 --> 10:20:11,120
我写了很多代码然后我需要                    

2733
10:20:11,120 --> 10:20:15,120
确保它存放在我可以随时去的地方                    

2734
10:20:15,120 --> 10:20:19,040
回到即使我在我的电脑上丢失了这些我可以回到的信息                    

2735
10:20:19,040 --> 10:20:23,756
那个地方然后检索那个代码所以嗯                    

2736
10:20:23,756 --> 10:20:26,400
如果您是软件开发人员 如果您是经验丰富的软件开发人员                    

2737
10:20:26,400 --> 10:20:30,000
从以前开始，您就知道 git 和 github 是什么，并且您使用起来很舒服                    

2738
10:20:30,000 --> 10:20:34,000
他们并且您知道如何使用 gpg 设置您的安全密钥                    

2739
10:20:34,000 --> 10:20:37,680
那么你可以放心地跳过这一章，但如果你是设计师产品                    

2740
10:20:37,680 --> 10:20:42,160
不知道 git 和 github 是什么的所有者产品经理或                    

2741
10:20:42,160 --> 10:20:45,596
也许需要一些帮助来设置这些东西                    

2742
10:20:45,596 --> 10:20:50,480
那么这对你来说是一个很好的章节，否则你可以快速浏览                    

2743
10:20:50,480 --> 10:20:52,480
结束了                    

2744
10:20:52,480 --> 10:20:56,000
让我们快速谈谈 git 和                    

2745
10:20:56,000 --> 10:21:00,640
github 是以及为什么我们需要它们                    

2746
10:21:00,640 --> 10:21:03,436
例如我在开发这门课程时的代码，那么你就是                    

2747
10:21:03,436 --> 10:21:08,560
编写大量代码，我的意思是本质上有价值，因为                    

2748
10:21:08,560 --> 10:21:13,276
当您编写                    

2749
10:21:13,276 --> 10:21:18,720
代码你花了一些时间和精力和精力写了代码，所以它很                    

2750
10:21:18,720 --> 10:21:22,720
一条重要信息让您丢失，并取决于                    

2751
10:21:22,720 --> 10:21:25,680
你正在从事的项目类型，例如这个项目我花了                    

2752
10:21:25,680 --> 10:21:31,040
甚至花了很多时间来开发项目的想法并将其组合在一起                    

2753
10:21:31,040 --> 10:21:33,916
所以当我在整理课程的想法和                    

2754
10:21:33,916 --> 10:21:38,400
写下我必须在每个视频中解释的所有点点滴滴                    

2755
10:21:38,400 --> 10:21:43,596
对这些想法做了很多备份，因为我没有这样做                    

2756
10:21:43,596 --> 10:21:47,520
我是不是把所有东西都放在一张纸或其他东西上，或者只是                    

2757
10:21:47,520 --> 10:21:53,520
甚至我电脑上的一个数字文档如果我丢失了一个文档那么好吧                    

2758
10:21:53,520 --> 10:21:58,080
我会失去它，我必须从头开始                    

2759
10:21:58,080 --> 10:22:01,840
这与您的代码相同 [音乐]                    

2760
10:22:01,840 --> 10:22:07,200
所以你需要使用两个名为 git 和 github 的服务来                    

2761
10:22:07,200 --> 10:22:10,080
存储您的代码                    

2762
10:22:10,080 --> 10:22:14,560
放在一个安全的地方，以便您以后可以随时取回它                    

2763
10:22:14,560 --> 10:22:22,480
所以让我们快速谈谈什么是 git 以及为什么需要这个 um                    

2764
10:22:22,480 --> 10:22:28,080
所以关于 gitz 你需要知道的是 git 是一个                    

2765
10:22:28,080 --> 10:22:35,276
电脑上的一个软件，它可以让你                    

2766
10:22:35,276 --> 10:22:40,320
管理您对代码所做的各种更改                    

2767
10:22:40,320 --> 10:22:45,840
基础，例如我们的项目在不同时间跟踪那些日期                    

2768
10:22:45,840 --> 10:22:50,720
进行了更改 进行更改的人和更改本身                    

2769
10:22:50,720 --> 10:22:54,720
它还能够为您提供您最近之间的差异                    

2770
10:22:54,720 --> 10:22:59,840
更改以及已经提供的内容或已经提供的内容                    

2771
10:22:59,840 --> 10:23:06,400
提交到这个 git 存储库中 git 存储库的真正含义是什么                    

2772
10:23:06,400 --> 10:23:09,756
一个桶最初是一个空桶                    

2773
10:23:09,756 --> 10:23:15,200
那里什么都没有，当您与源代码交互时，您会喜欢                    

2774
10:23:15,200 --> 10:23:19,200
好的，现在我想把我写的这个源代码变成一个桶，然后                    

2775
10:23:19,200 --> 10:23:23,520
围绕您的源代码创建了一个存储桶，称为 git 存储库                    

2776
10:23:23,520 --> 10:23:28,960
它会跟踪您正在进行的所有更改或                    

2777
10:23:28,960 --> 10:23:33,916
使用相同源代码的其他任何人都在对代码进行处理                    

2778
10:23:33,916 --> 10:23:39,276
将允许您将这些更改的快照保存在                    

2779
10:23:39,276 --> 10:23:44,160
在您选择的特定时间，如果您是您的设计师并且您是                    

2780
10:23:44,160 --> 10:23:48,000
已经与 figma 合作，例如 figma                    

2781
10:23:48,000 --> 10:23:52,640
在您认为合适的时候自动保存您的工作，因此您永远不会有                    

2782
10:23:52,640 --> 10:23:57,120
按下保存按钮，如果你看过的话，还有 figma                    

2783
10:23:57,120 --> 10:24:03,360
它会跟踪它有一个版本历史，所以你可以从字面上去 figma                    

2784
10:24:03,360 --> 10:24:07,520
并说好吧，我已经完成了我的工作，我想实际提交我的更改                    

2785
10:24:07,520 --> 10:24:10,160
版本历史，我想给它一个名字                    

2786
10:24:10,160 --> 10:24:14,080
大多数设计师不这样做，他们立法必须保存他们的工作                    

2787
10:24:14,080 --> 10:24:18,640
自动地，通过那个 figma 只是说这是您更改的时间表                    

2788
10:24:18,640 --> 10:24:22,160
在这个时候你这样做了这个时候你这样做了                    

2789
10:24:22,160 --> 10:24:26,480
即使你是一名设计师，你也隐含地使用了一种叫做 a                    

2790
10:24:26,480 --> 10:24:30,720
版本控制，在这种情况下是 figma                    

2791
10:24:30,720 --> 10:24:34,000
但是当你来到我们正在合作的软件开发世界时                    

2792
10:24:34,000 --> 10:24:38,080
你的颤振应用程序那里没有 figma 并且你正在使用 raw                    

2793
10:24:38,080 --> 10:24:42,880
代码，因此您将进入 Visual Studio 代码或 sublime 或任何文本编辑器                    

2794
10:24:42,880 --> 10:24:47,200
您正在使用 android studio 作为 id 或其他                    

2795
10:24:47,200 --> 10:24:51,276
然后没有服务坐在那里说哦，你做了一些改变让                    

2796
10:24:51,276 --> 10:24:54,560
我让我帮你把它保存在某种应用程序中                    

2797
10:24:54,560 --> 10:24:59,200
或云解决方案，因此允许您执行此操作的系统                    

2798
10:24:59,200 --> 10:25:03,520
您的计算机称为 git，因此 git 是一个允许您跟踪的软件                    

2799
10:25:03,520 --> 10:25:07,756
您对源代码所做的更改                    

2800
10:25:07,756 --> 10:25:11,360
所以我可以在这里看到，在我们继续之前，我们实际上要谈一谈                    

2801
10:25:11,360 --> 10:25:15,040
关于 git 的一点点等等                    

2802
10:25:15,040 --> 10:25:19,680
我要在这里做什么我要在这里添加一点lib并即兴创作                    

2803
10:25:19,680 --> 10:25:22,800
我要去这里把屏幕做得大一点我要                    

2804
10:25:22,800 --> 10:25:27,276
调出终端，您在该屏幕上看不到它，因为它在                    

2805
10:25:27,276 --> 10:25:31,436
另一个屏幕，所以让我增加尺寸并带来                    

2806
10:25:31,436 --> 10:25:35,916
它在这里，所以你也看到它，所以我要去这里进行我的开发                    

2807
10:25:35,916 --> 10:25:43,200
文件夹，我要去我的项目和                    

2808
10:25:43,200 --> 10:25:47,200
让我们想想去                    

2809
10:25:47,200 --> 10:25:52,400
做一个文件夹我会说 git 好的                    

2810
10:25:52,400 --> 10:25:56,480
我应该称它为 git 还是让我们实际创建一个名为                    

2811
10:25:56,480 --> 10:26:02,240
测试好吧让我们开始测试然后它是一个                    

2812
10:26:02,240 --> 10:26:07,276
空文件夹，您现在可以看到，我们要做的是                    

2813
10:26:07,276 --> 10:26:12,480
现在要告诉 git 哪个是安装在我的计算机上的软件                    

2814
10:26:12,480 --> 10:26:16,560
告诉它好吧突然我想把这里的这个空目录变成                    

2815
10:26:16,560 --> 10:26:20,640
一个叫做存储库的东西记得它会是一个桶然后那个                    

2816
10:26:20,640 --> 10:26:25,360
在我们继续之前，现在跟踪当前目录中的更改                    

2817
10:26:25,360 --> 10:26:29,276
哦，对不起，也许你还需要实际安装                    

2818
10:26:29,276 --> 10:26:32,640
如果您不是来自软件开发人员，请在您的计算机上安装 git                    

2819
10:26:32,640 --> 10:26:36,640
背景你可能甚至没有在你的电脑上安装 git 所以我                    

2820
10:26:36,640 --> 10:26:40,960
将在此处打开一个浏览器窗口并说安装                    

2821
10:26:40,960 --> 10:26:43,840
所以                    

2822
10:26:43,840 --> 10:26:49,276
如果我谷歌安装 git 你会看到有类似的信息                    

2823
10:26:49,276 --> 10:26:53,680
如果你能在你的电脑上安装 git                    

2824
10:26:53,680 --> 10:27:01,120
在 Macintosh 上，你已经安装了 xcode                    

2825
10:27:01,120 --> 10:27:05,916
如果你在 Windows 上已经预装了 gits 我相信你                    

2826
10:27:05,916 --> 10:27:09,436
实际上我必须在我旁边有一台 Windows 机器                    

2827
10:27:09,436 --> 10:27:14,320
每天使用，我相信对于 Windows，您必须像个人一样安装 git                    

2828
10:27:14,320 --> 10:27:19,120
手动所以让我们说安装 git windows                    

2829
10:27:19,120 --> 10:27:24,800
呃 得到下载包 得到时间让人们安装 git                    

2830
10:27:24,800 --> 10:27:29,120
哎呀，我的 ipad 出于某种原因在这里断开了连接，所以我要                    

2831
10:27:29,120 --> 10:27:32,240
然后有些困难，嗯                    

2832
10:27:32,240 --> 10:27:38,480
让我们看看现在在 linux 上安装 git 好吗                    

2833
10:27:38,480 --> 10:27:42,000
我相信实际上有一个很好的软件包可以在 Windows 上使用它                    

2834
10:27:42,000 --> 10:27:45,680
我回到这里 Windows 上的安装程序你可以在这里看到                    

2835
10:27:45,680 --> 10:27:49,360
去吧，我也会稍微增加屏幕尺寸，所以你                    

2836
10:27:49,360 --> 10:27:54,320
可以在这里看到更好一点，上面写着 go to https get scm com                    

2837
10:27:54,320 --> 10:27:58,240
下载win所以我要去这里它会开始下载所以                    

2838
10:27:58,240 --> 10:28:01,520
我只想说取消，因为现在我在 Macintosh 中，所以这里是                    

2839
10:28:01,520 --> 10:28:04,880
您可以在哪里下载 git 并将其安装在您的计算机上                    

2840
10:28:04,880 --> 10:28:08,160
如果你在 Windows 机器上并且你有我做的 linux 子系统                    

2841
10:28:08,160 --> 10:28:12,960
我的 Windows 机器，那么你可能真的想使用 sudo apt 下载 git                    

2842
10:28:12,960 --> 10:28:15,276
嗯关于那个                    

2843
10:28:15,276 --> 10:28:18,720
linux 子系统，但有可能是 linux 子系统                    

2844
10:28:18,720 --> 10:28:22,080
在 windows 上已经附带了 git，所以你不需要做任何事情我                    

2845
10:28:22,080 --> 10:28:25,120
如果 git 是当时的绝对核心组件之一，我不会感到惊讶                    

2846
10:28:25,120 --> 10:28:28,320
附带 linux 嗯                    

2847
10:28:28,320 --> 10:28:32,320
所以这适用于 Macintosh，如果你在 Macintosh 上并且你没有                    

2848
10:28:32,320 --> 10:28:36,320
无论出于何种原因，xcode                    

2849
10:28:36,320 --> 10:28:41,120
那么你可能还需要单独下载git所以我们回到这里看看                    

2850
10:28:41,120 --> 10:28:45,840
如果你在这里说mac os，你怎么能做到呢？                    

2851
10:28:45,840 --> 10:28:49,436
有几种安装方式 get on mac 用户可能会安装 xcode 命令                    

2852
10:28:49,436 --> 10:28:54,240
我们已经做过的线工具，所以如果你没有它在奴隶制中，它会                    

2853
10:28:54,240 --> 10:28:58,640
提示您安装它，否则您可以进入这里获取                    

2854
10:28:58,640 --> 10:29:03,360
semcom 下载 mac 然后你可以做 brew install git                    

2855
10:29:03,360 --> 10:29:07,040
所以如果这是你想要做的，那么你首先必须实际安装                    

2856
10:29:07,040 --> 10:29:09,120
自制所以                    

2857
10:29:09,120 --> 10:29:13,596
进入这个链接并说自制安装基本上只是按照它说的做                    

2858
10:29:13,596 --> 10:29:18,880
在这里你看到有命令然后去安装                    

2859
10:29:18,880 --> 10:29:24,720
git 使用自制软件，如果你在 linux 上，那么 sudo apt                    

2860
10:29:24,720 --> 10:29:28,000
安装 git 我想如果你正在安装，也许你甚至不需要 sudo                    

2861
10:29:28,000 --> 10:29:33,436
对于当前用户，所以只是 apt app 是获取还是安装我忘记了，但是                    

2862
10:29:33,436 --> 10:29:38,080
这里也有关于 linux 的信息                    

2863
10:29:38,080 --> 10:29:42,160
应用安装是的                    

2864
10:29:42,160 --> 10:29:45,840
是的，我的意思是我假设你有点像基于 debian 的发行版                    

2865
10:29:45,840 --> 10:29:50,880
好吧，否则这里有信息如何安装它，否则                    

2866
10:29:50,880 --> 10:29:54,000
好吧，那是很多信息，之前                    

2867
10:29:54,000 --> 10:29:57,596
我们继续我只是要尝试确保我已连接回我的                    

2868
10:29:57,596 --> 10:30:02,480
呃到我的笔记本电脑到我的 ipad 因为在                    

2869
10:30:02,480 --> 10:30:06,560
我的 ipad 我保留了我必须提供给的所有信息                    

2870
10:30:06,560 --> 10:30:10,400
你是按时间顺序排列的，所以对我来说很重要                    

2871
10:30:10,400 --> 10:30:14,720
实际上把我的笔记放在那里，所以我要尝试连接到我的 ipad 和                    

2872
10:30:14,720 --> 10:30:18,400
是的，没关系                    

2873
10:30:18,400 --> 10:30:21,360
所以现在你已经我假设你已经                    

2874
10:30:21,360 --> 10:30:26,160
安装了 git 我假设如果你说哪个 git 就完成了                    

2875
10:30:26,160 --> 10:30:30,320
那么在这种情况下它会告诉我用户正在获取它                    

2876
10:30:30,320 --> 10:30:34,400
如果你在 Windows 上安装，老实说我不知道​​命令                    

2877
10:30:34,400 --> 10:30:39,360
在 Windows 上知道它是否像安装了 git 但在 Windows 上所有你                    

2878
10:30:39,360 --> 10:30:43,120
必须做的就是输入 git 如果你看到了                    

2879
10:30:43,120 --> 10:30:47,916
它抛出一个错误它说git不可用或者你没有安装                    

2880
10:30:47,916 --> 10:30:53,520
git 如果你已经安装了 git 可能 git 不在当前路径中，所以你会                    

2881
10:30:53,520 --> 10:30:57,436
必须去调整你的环境变量才能得到 git 和                    

2882
10:30:57,436 --> 10:31:01,680
互联网上有很多信息，所以我们现在不打算关注                    

2883
10:31:01,680 --> 10:31:05,200
如何安装 git，因为这就像它自己的课程                    

2884
10:31:05,200 --> 10:31:07,520
也许，但如果你按照说明                    

2885
10:31:07,520 --> 10:31:11,200
在我刚刚展示的网站上提供了你应该能够走得更远                    

2886
10:31:11,200 --> 10:31:15,120
所以我假设现在安装了 git                    

2887
10:31:15,120 --> 10:31:19,040
我们的电脑，你可以在这里看到我们在一个名为 testing 的文件夹中，所以如果我说                    

2888
10:31:19,040 --> 10:31:23,360
测试在哪里，你可以看到这就是现在我们想要做的                    

2889
10:31:23,360 --> 10:31:26,800
就是说测试例如是我们将所有的项目                    

2890
10:31:26,800 --> 10:31:30,480
代码没问题，所以会有我们要在这里写的信息                    

2891
10:31:30,480 --> 10:31:35,840
在这个 um 这个文件夹里会有一些 dart 文件会有一些                    

2892
10:31:35,840 --> 10:31:40,640
png 和 jpeg 文件会有我们的应用程序图标所有这些东西                    

2893
10:31:40,640 --> 10:31:44,240
我们想安全地存储它                    

2894
10:31:44,240 --> 10:31:51,040
你可能想做的第一件事就是基本上告诉 git 这个当前                    

2895
10:31:51,040 --> 10:31:57,120
目录本身就是一个 git 的存储库，所以存储桶记住                    

2896
10:31:57,120 --> 10:32:00,160
存储桶将自己包裹在目录周围，所以                    

2897
10:32:00,160 --> 10:32:03,596
如果我现在得到这个目录的内容，你可以看到它是                    

2898
10:32:03,596 --> 10:32:08,320
完全为空，但如果你想创建一个 git 存储桶或 git 存储库                    

2899
10:32:08,320 --> 10:32:13,120
围绕这个目录，你只需要说 git init dots                    

2900
10:32:13,120 --> 10:32:16,960
好的，你现在会看到这里说                    

2901
10:32:16,960 --> 10:32:20,720
在此文件夹中初始化 amt git 存储库                    

2902
10:32:20,720 --> 10:32:24,320
所以现在如果我得到这个文件夹的内容，你会看到有一个新的                    

2903
10:32:24,320 --> 10:32:29,120
名为 dot git 的目录和 dot git 目录是 git 基本上保存的地方                    

2904
10:32:29,120 --> 10:32:33,840
跟踪其内部，例如对该目录的更改等                    

2905
10:32:33,840 --> 10:32:37,680
保存时保存的内容是谁                    

2906
10:32:37,680 --> 10:32:42,240
保存了工作等，所以现在你已经完成了，现在你已经创建了一个 git                    

2907
10:32:42,240 --> 10:32:47,360
存储库基本上围绕这个空目录，您可以发出各种 diff git                    

2908
10:32:47,360 --> 10:32:50,400
命令，例如其状态                    

2909
10:32:50,400 --> 10:32:54,800
这将为您提供此 um 的当前状态                    

2910
10:32:54,800 --> 10:32:58,880
在这个 uh 目录上，你可以尽快看到这里                    

2911
10:32:58,880 --> 10:33:03,840
当我们突然创建了一个带有 git 的 git 存储库时，我的终端                    

2912
10:33:03,840 --> 10:33:08,640
在这里改了提示说一下子测试不只是测试                    

2913
10:33:08,640 --> 10:33:12,800
不再，但它实际上是一个 git 目录，我们在一个名为的分支上                    

2914
10:33:12,800 --> 10:33:15,436
现在主要                    

2915
10:33:15,436 --> 10:33:18,960
我现在不想谈论分支，但只知道有                    

2916
10:33:18,960 --> 10:33:21,840
嗯，是的，让我们不谈论分支                    

2917
10:33:21,840 --> 10:33:25,360
现在，因为我打算稍后再做，所以                    

2918
10:33:25,360 --> 10:33:28,800
所以，但我们要讨论的是这里的这条小信息，它说不                    

2919
10:33:28,800 --> 10:33:34,880
现在在 git 中提交，只要你在工作                    

2920
10:33:34,880 --> 10:33:38,720
不只是自动保存你的工作，你需要告诉 git                    

2921
10:33:38,720 --> 10:33:43,120
保存您的工作以及保存工作的那些点                    

2922
10:33:43,120 --> 10:33:47,840
提交它提交它的名字表明你正在提交你的工作你说我                    

2923
10:33:47,840 --> 10:33:52,640
致力于此，我想保存它，这就是我的意思是它可以被调用                    

2924
10:33:52,640 --> 10:33:55,916
保存但保存可能是                    

2925
10:33:55,916 --> 10:33:59,436
嗯，可能是                    

2926
10:33:59,436 --> 10:34:04,160
读起来更像是一个动词，比如哦，我现在要保存它还是它是什么，但是                    

2927
10:34:04,160 --> 10:34:08,480
如果我说这是我的承诺，那么推断可能会更容易一些                    

2928
10:34:08,480 --> 10:34:13,276
哦，这是您保存并承诺的一条信息                    

2929
10:34:13,276 --> 10:34:16,800
我想也许这就是它被称为委员会的原因我不确定                    

2930
10:34:16,800 --> 10:34:20,560
所以这些提交是一个时间点                    

2931
10:34:20,560 --> 10:34:24,800
有权访问此存储库的人保存了他们的工作，所以只是                    

2932
10:34:24,800 --> 10:34:30,320
请记住，这是一个提交，如果我们在这里看到状态显示还没有提交                    

2933
10:34:30,320 --> 10:34:34,000
因为从字面上看，你没有告诉现在要保存我们现在的样子                    

2934
10:34:34,000 --> 10:34:37,200
要做的是打开 Visual Studio 代码，所以我要带你来                    

2935
10:34:37,200 --> 10:34:40,720
在这里工作室代码，你可以看到它是一个空文件夹                    

2936
10:34:40,720 --> 10:34:44,160
我要在这里创建一个文件，让我们打电话                    

2937
10:34:44,160 --> 10:34:48,200
嗯，我们就叫这个吧                    

2938
10:34:48,200 --> 10:34:54,160
info.txt 所以只是文本文件，所以这是一个空文件，我只是                    

2939
10:34:54,160 --> 10:34:57,840
在这里输入 hello 也增加一点大小，这样你就可以看到                    

2940
10:34:57,840 --> 10:34:59,756
这样更好                    

2941
10:34:59,756 --> 10:35:03,756
现在如果我在这里说 git status 你可以突然看到它并没有说不                    

2942
10:35:03,756 --> 10:35:10,400
提交但它很好，基本上它说爸爸，但它也说轨道文件和                    

2943
10:35:10,400 --> 10:35:16,560
它现在将信息文本放在这里让我然后解释什么吸引文件                    

2944
10:35:16,560 --> 10:35:21,520
并且 on track file 是一个 track 文件是一个你之前告诉 git 的文件                    

2945
10:35:21,520 --> 10:35:26,240
所以它正在跟踪对该文件所做的更改                    

2946
10:35:26,240 --> 10:35:31,360
on track file 是一个你之前还没有告诉过的文件，所以它说 oh                    

2947
10:35:31,360 --> 10:35:34,960
这是一个你正在用它做某事的文件，但我什至不会看                    

2948
10:35:34,960 --> 10:35:38,480
我不会跟踪它，因为你不知道你没有告诉我                    

2949
10:35:38,480 --> 10:35:40,640
这样做                    

2950
10:35:40,640 --> 10:35:45,276
嗯，我的意思是，一个文件基本上可以在里面                    

2951
10:35:45,276 --> 10:35:49,916
git 中的三个状态现在你已经学习了其中两个，要么被跟踪，要么在                    

2952
10:35:49,916 --> 10:35:55,680
跟踪，但它也可能处于另一种状态，我将很快向您展示                    

2953
10:35:55,680 --> 10:35:58,640
所以现在你可以看到这里有一条消息                    

2954
10:35:58,640 --> 10:36:02,880
它说让我把终端带到这里一点点，这样你就可以了                    

2955
10:36:02,880 --> 10:36:08,000
完整查看终端，它说使用 git add 然后是                    

2956
10:36:08,000 --> 10:36:12,320
文件以包含将要提交的内容，所以让我们这样做，我只是                    

2957
10:36:12,320 --> 10:36:17,360
要说 git add info txt 现在我要说 git status 和                    

2958
10:36:17,360 --> 10:36:21,276
突然之间，您会明白这是一个新文件                    

2959
10:36:21,276 --> 10:36:26,480
committing 提交这个名为 info text 的文件，但你可以看到                    

2960
10:36:26,480 --> 10:36:30,480
它仍然说你没有提交任何东西，但它说改变是                    

2961
10:36:30,480 --> 10:36:34,240
提交，突然间这个文件是绿色的                    

2962
10:36:34,240 --> 10:36:38,400
记得我说过一个文件在被跟踪时可以处于三种状态，这意味着 git                    

2963
10:36:38,400 --> 10:36:42,800
不知道它被跟踪，这意味着它确实知道它或者它可以                    

2964
10:36:42,800 --> 10:36:47,520
上演所以如果你在这里看到这个文件是绿色的                    

2965
10:36:47,520 --> 10:36:51,916
它说要提交的更改，所以阶段是                    

2966
10:36:51,916 --> 10:36:56,960
你已经对文件进行了更改，并且你已经告诉 git 你想要                    

2967
10:36:56,960 --> 10:37:00,160
提交但你还没有提交                    

2968
10:37:00,160 --> 10:37:04,720
现在你可能会问好吧，为什么我会有不应该的文件                    

2969
10:37:04,720 --> 10:37:09,276
如果您有一些信息，例如，如果您在某些项目中提交                    

2970
10:37:09,276 --> 10:37:13,756
与其他 10 位开发人员合作，您正在制作一些                    

2971
10:37:13,756 --> 10:37:17,756
测试，您正在源代码所在的目录中编写一些代码                    

2972
10:37:17,756 --> 10:37:21,756
代码放置在但你没有真正准备好使用该文件但你                    

2973
10:37:21,756 --> 10:37:25,040
不想将其提交到其他人都可以看到的分支中，那么您可以                    

2974
10:37:25,040 --> 10:37:29,596
说哦我不打算提交这不是暂存文件我什至还没准备好                    

2975
10:37:29,596 --> 10:37:33,360
用于暂存它并将其放入提交中，所以在这种情况下你不会去                    

2976
10:37:33,360 --> 10:37:36,800
把它添加到暂存区好吧，所以记住                    

2977
10:37:36,800 --> 10:37:40,640
现在你已经完成了你刚才说的 git add 你可以提交它并且                    

2978
10:37:40,640 --> 10:37:45,436
提交字面意思是你将把这项工作保存在 git 中                    

2979
10:37:45,436 --> 10:37:48,480
这样做的方法是使用 git commits                    

2980
10:37:48,480 --> 10:37:53,916
然后您将在此处使用破折号 m 提供消息，然后引用                    

2981
10:37:53,916 --> 10:37:58,000
标记好，所以在这里你会写一条消息，将附加到你的                    

2982
10:37:58,000 --> 10:38:02,720
整个提交，所以我们将在这里做的事情说                    

2983
10:38:02,720 --> 10:38:08,560
让我们说添加新的信息 txt 文件来娱乐好吧                    

2984
10:38:08,560 --> 10:38:12,800
然后我就按回车键，在这里看到它说一个文件更改和                    

2985
10:38:12,800 --> 10:38:17,756
一个插入，它会说是的，它已经创建了这个文件，所以我                    

2986
10:38:17,756 --> 10:38:23,040
现在要清除我的终端，我们要执行 git status                    

2987
10:38:23,040 --> 10:38:27,120
突然间关于没有提交的消息消失了，所有这一切                    

2988
10:38:27,120 --> 10:38:30,960
就是你在一个叫做 main 的分支上，没有什么可做的                    

2989
10:38:30,960 --> 10:38:33,756
提交好吧                    

2990
10:38:33,756 --> 10:38:37,916
如果您想查看刚刚提交的提交，您会怎么做？                    

2991
10:38:37,916 --> 10:38:41,120
你想看看当时的评论是什么                    

2992
10:38:41,120 --> 10:38:45,120
如果你可以说 git log 和 git blog 将显示                    

2993
10:38:45,120 --> 10:38:49,276
所有提交的所有提交以及提交者，您将                    

2994
10:38:49,276 --> 10:38:53,520
还可以看到制作日期和提交信息，你呢                    

2995
10:38:53,520 --> 10:39:00,400
记得我们说过 git commit dash m 所以这是 get 中提供的消息                    

2996
10:39:00,400 --> 10:39:04,480
命令然后保存在存储库中好吗                    

2997
10:39:04,480 --> 10:39:07,040
这就是消息，这就是电子邮件                    

2998
10:39:07,040 --> 10:39:11,596
基本上做了那个承诺的人                    

2999
10:39:11,596 --> 10:39:16,080
现在我跳过了一点，嗯                    

3000
10:39:16,080 --> 10:39:20,160
                   

