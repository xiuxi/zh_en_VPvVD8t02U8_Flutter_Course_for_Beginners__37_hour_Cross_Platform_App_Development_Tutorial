1
04:48:21,040 --> 04:48:24,479
are not loading okay so

2
04:48:24,479 --> 04:48:28,000
please place that inside the exception handling of your

3
04:48:28,000 --> 04:48:33,511
um auth event login

4
04:48:33,511 --> 04:48:36,799
okay a lot of code a lot of code

5
04:48:36,799 --> 04:48:39,119
um now as you can see the caption that says

6
04:48:39,119 --> 04:48:44,000
fix fix up auth state logged out we have to emit the auth state logged

7
04:48:44,000 --> 04:48:48,799
out and fix up exception handler as well so

8
04:48:48,799 --> 04:48:52,400
let's find out our auth event logged out and we have a lot of errors in here

9
04:48:52,400 --> 04:48:57,119
right now as you can see so it would actually be better

10
04:48:57,119 --> 04:49:01,040
if we kind of like nuked this code in here and wrote it

11
04:49:01,040 --> 04:49:03,279
from scratch so i'm just going to say try

12
04:49:03,279 --> 04:49:07,360
and then we'll say on exception catch e

13
04:49:07,360 --> 04:49:10,799
so that's it and then when there's an exception

14
04:49:10,799 --> 04:49:14,479
during logged out logging out what we're going to just say we're going to say

15
04:49:14,479 --> 04:49:20,231
well you are logged out but an exception happened all right so let's just say um

16
04:49:20,231 --> 04:49:23,360
we immediate hans

17
04:49:23,360 --> 04:49:28,000
no actually off state logged out

18
04:49:28,000 --> 04:49:32,080
there is an exception and we're not loading okay so that's what you need to

19
04:49:32,080 --> 04:49:37,912
also place inside your code so that's for the emit

20
04:49:37,912 --> 04:49:40,959
now for trying what do we actually have to do we have

21
04:49:40,959 --> 04:49:44,400
to tell our provider to log out oops

22
04:49:44,400 --> 04:49:49,040
not login log out all right

23
04:49:49,040 --> 04:49:52,720
and then we also have to emit the new states that we're going to say you're

24
04:49:52,720 --> 04:49:56,231
logged out and then there is no exception so i'm just going to grab this

25
04:49:56,231 --> 04:50:00,720
code from there and place it in here and say there is no exception like that

26
04:50:00,720 --> 04:50:03,831
okay and it says well this can now be a cons

27
04:50:03,831 --> 04:50:09,360
so i'm gonna make it a const just like that

28
04:50:09,360 --> 04:50:12,319
so the next thing that we have to do is to

29
04:50:12,319 --> 04:50:16,319
clean up our routing because you see the more and more we're blockifying the

30
04:50:16,319 --> 04:50:20,231
entire process inside our application the less we need different different

31
04:50:20,231 --> 04:50:25,599
screens to actually do routing manually because routing is going to be handled

32
04:50:25,599 --> 04:50:29,912
by our block listeners and things like that okay

33
04:50:29,912 --> 04:50:35,040
so let's go ahead and as the caption indicates in our routes dart file we're

34
04:50:35,040 --> 04:50:39,912
gonna remove all routes except for create or update node route so let's

35
04:50:39,912 --> 04:50:42,720
open routes actually before we do that i'm going to

36
04:50:42,720 --> 04:50:46,871
close all the files in here just to make sure everything's saved then go to route

37
04:50:46,871 --> 04:50:51,912
start and remove everything except for

38
04:50:51,912 --> 04:50:56,551
that last route

39
04:50:56,551 --> 04:51:00,720
all right excuse me let's now go now that we've

40
04:51:00,720 --> 04:51:04,159
done that we have to go to our main dart file

41
04:51:04,159 --> 04:51:08,551
excuse me again and we're gonna clean up our routing in

42
04:51:08,551 --> 04:51:12,080
here as you can see we have those four routes now that we've removed let's just

43
04:51:12,080 --> 04:51:18,799
remove them from main dark file as well and save your file please

44
04:51:18,799 --> 04:51:22,479
so what we need also is as the caption captioning case we should show the

45
04:51:22,479 --> 04:51:26,720
register view if auth state is registering okay

46
04:51:26,720 --> 04:51:31,759
so in main dart show register view if off state is registering so i'm gonna

47
04:51:31,759 --> 04:51:36,231
bring up my notes as well in here so let's go ahead and see what we have

48
04:51:36,231 --> 04:51:39,912
we have auth state logged out what we have what we also have to have in here

49
04:51:39,912 --> 04:51:45,680
we have to create another else statement and say if state is off

50
04:51:45,680 --> 04:51:52,231
of state registering and open your curly brackets um

51
04:51:52,231 --> 04:51:57,680
on curly bracket missing and in here we just say return cons register view okay

52
04:51:57,680 --> 04:52:01,191
just like that

53
04:52:01,191 --> 04:52:05,599
all right that was a lot of work that we've done and now if you then look at

54
04:52:05,599 --> 04:52:10,319
your files in here you shouldn't you basically shouldn't have any errors okay

55
04:52:10,319 --> 04:52:14,720
so before testing this all because there were just so much stuff that we've done

56
04:52:14,720 --> 04:52:19,279
and we've also changed our main function it just makes sense to do a hot restart

57
04:52:19,279 --> 04:52:23,279
okay so i did a hot restart let me just

58
04:52:23,279 --> 04:52:28,080
resize my visual studio code so we see our trusty

59
04:52:28,080 --> 04:52:31,279
scrcpy in here so

60
04:52:31,279 --> 04:52:37,439
now this is the login view uh if you look at our login view dart file uh if

61
04:52:37,439 --> 04:52:41,831
you have a look at what we did when the login button is tapped we're literally

62
04:52:41,831 --> 04:52:44,000
telling our

63
04:52:44,000 --> 04:52:49,279
auth block to do this thing in here log in all right so we're sending a new

64
04:52:49,279 --> 04:52:55,680
event to it so if something happens to that and things don't work as well then

65
04:52:55,680 --> 04:52:59,511
it says user not found wrong credentials authentication error then we should

66
04:52:59,511 --> 04:53:02,000
probably actually get an error displayed on the

67
04:53:02,000 --> 04:53:06,231
screen so let's test this and you can see it says authentication error so

68
04:53:06,231 --> 04:53:11,360
that's in here okay so that's that seems to be working very well

69
04:53:11,360 --> 04:53:15,439
and it would be really good if you could actually test this um

70
04:53:15,439 --> 04:53:20,080
our loading dialogue and see if it works so i'm gonna write

71
04:53:20,080 --> 04:53:25,439
foobar bads in here and say login we saw that loading so that was our

72
04:53:25,439 --> 04:53:30,400
loading dialog that was this logic right here so it's it's really cool actually

73
04:53:30,400 --> 04:53:35,599
how it's working let's go in here and say log out and log out and then we come

74
04:53:35,599 --> 04:53:40,159
to the login screen so this is all working so well

75
04:53:40,159 --> 04:53:43,360
and you could and if you want to see your loading screen a little bit more

76
04:53:43,360 --> 04:53:47,279
and like if you're in the process of debugging it you could always go to your

77
04:53:47,279 --> 04:53:50,959
um office block in here

78
04:53:50,959 --> 04:53:56,799
and inside when you're asked to log in you could actually a wait so you could

79
04:53:56,799 --> 04:54:01,119
just do like this a weight future delayed and you could

80
04:54:01,119 --> 04:54:06,639
say duration and you could say seconds three something like this okay

81
04:54:06,639 --> 04:54:10,551
so this is gonna await like it's just gonna wait three seconds before it

82
04:54:10,551 --> 04:54:15,191
continues so let me just save that and enter some information in here say

83
04:54:15,191 --> 04:54:19,279
google okay it's our gmail and then say

84
04:54:19,279 --> 04:54:24,159
login oops that didn't work so well

85
04:54:24,159 --> 04:54:27,360
i don't know why that didn't work so well even though this is an async

86
04:54:27,360 --> 04:54:30,720
function could this need hot restarting maybe

87
04:54:30,720 --> 04:54:33,759
maybe let me do

88
04:54:33,759 --> 04:54:37,511
log out in here and enter foo barba sorry

89
04:54:37,511 --> 04:54:44,159
avant np gmail.com foo barbas and then login there we go now it's waiting more

90
04:54:44,159 --> 04:54:48,479
than three seconds kind of then it goes to the application so i would say that

91
04:54:48,479 --> 04:54:53,279
is working very well so we can now remove this weight in here okay

92
04:54:53,279 --> 04:54:57,831
and maybe do a hot restart as well

93
04:54:57,831 --> 04:55:02,000
wow that that was a lot of work we did but

94
04:55:02,000 --> 04:55:05,511
that's what you do with software development sometimes you break things

95
04:55:05,511 --> 04:55:09,040
to make them better you have to break sometimes the code that you have in

96
04:55:09,040 --> 04:55:13,191
order to build up something better we didn't really break things but we

97
04:55:13,191 --> 04:55:17,439
what we kind of did we basically removed a lot of old old

98
04:55:17,439 --> 04:55:22,799
code in order to make it and work better with block and

99
04:55:22,799 --> 04:55:27,119
i'm in this course my goal is to make you a software developer using flutter

100
04:55:27,119 --> 04:55:30,319
i'm not just going to show you the right thing to do from the beginning we're

101
04:55:30,319 --> 04:55:34,551
going to gradually make things better a software developer also is not going to

102
04:55:34,551 --> 04:55:37,680
be depending on their experience they're not going to do the exact right thing

103
04:55:37,680 --> 04:55:42,400
from point one or point zero they're they're gonna make experiments

104
04:55:42,400 --> 04:55:45,511
they're gonna google a lot of things look at stack overflow find the right

105
04:55:45,511 --> 04:55:49,040
way to do things get inspiration maybe from like another product that's kind of

106
04:55:49,040 --> 04:55:53,279
doing something similar and develop things one step at a time make it better

107
04:55:53,279 --> 04:55:57,439
so that's the reason we're in chapter 40 something right now and

108
04:55:57,439 --> 04:56:00,400
we've just gotten to this point otherwise we would have done this from

109
04:56:00,400 --> 04:56:04,799
chapter zero for chapter one so thank you for sticking uh

110
04:56:04,799 --> 04:56:08,000
through us sticking around throughout this chapter and coming to this point

111
04:56:08,000 --> 04:56:11,360
that we are right now so as this tradition we're gonna now commit our

112
04:56:11,360 --> 04:56:15,912
code and tag it so let me do some reshuffling of the screen go to terminal

113
04:56:15,912 --> 04:56:19,599
in here minimize scr cpy

114
04:56:19,599 --> 04:56:24,959
make the screen bigger and like that and i'm gonna shuffle the

115
04:56:24,959 --> 04:56:30,080
screen as well so you see things better so let's go ahead and have a look at our

116
04:56:30,080 --> 04:56:34,400
git status ginormous amount of things we've done everything is modified and

117
04:56:34,400 --> 04:56:38,159
there's a new file added so let's say git add all

118
04:56:38,159 --> 04:56:42,479
and let's get commit as step 25

119
04:56:42,479 --> 04:56:46,319
because if you have a look at our logs the previous chapter was step 24 so now

120
04:56:46,319 --> 04:56:50,159
we're at step 25. so let's then push our changes now that

121
04:56:50,159 --> 04:56:54,639
we've committed and then we're going to say git tag

122
04:56:54,639 --> 04:56:58,959
and we're going to say step 25 as well so and then we're going to

123
04:56:58,959 --> 04:57:02,959
push our tags as well if you look at our tags now we have step

124
04:57:02,959 --> 04:57:07,119
24 and then somewhere in here we should have step 25 as well as you can see here

125
04:57:07,119 --> 04:57:10,400
great so congratulations for getting through this

126
04:57:10,400 --> 04:57:14,159
chapter was one of the jumpiest chapters i would say in this entire course and

127
04:57:14,159 --> 04:57:17,759
that we moved so much from file to file so if you made it through then

128
04:57:17,759 --> 04:57:21,040
congratulations um

129
04:57:21,040 --> 04:57:25,759
so what we need to work on in the next chapter is our broken loading screen i

130
04:57:25,759 --> 04:57:30,319
know it's a little bit of an anti-climax in that we just work on our loading

131
04:57:30,319 --> 04:57:34,319
screen so we should be kind of proud however there is a problem with this

132
04:57:34,319 --> 04:57:36,959
loading screen and that is because we're using

133
04:57:36,959 --> 04:57:43,279
navigator of context and then we're popping remember popping inside

134
04:57:43,279 --> 04:57:48,639
executing pop invoking the pop function on your navigator and actually i can

135
04:57:48,639 --> 04:57:52,479
show you the code without going into too much details so

136
04:57:52,479 --> 04:57:56,479
let's have a look at our uh loading dialogue

137
04:57:56,479 --> 04:58:00,000
see at the bottom of this loading dialogue we're doing navigator off pop

138
04:58:00,000 --> 04:58:05,912
this doesn't necessarily pop this dialog it pops the current view on the

139
04:58:05,912 --> 04:58:10,639
navigator so even if our dialog is not displayed on the screen saying navigator

140
04:58:10,639 --> 04:58:16,231
of is gonna confuse the navigation stack in flutter so we're gonna have a look at

141
04:58:16,231 --> 04:58:20,319
that and fixing that actually in the next chapter so grab some tea coffee

142
04:58:20,319 --> 04:58:23,831
chocolate whatever you want to and i'll see you in the next chapter hello and

143
04:58:23,831 --> 04:58:27,119
welcome to chapter 43 of this flutter course

144
04:58:27,119 --> 04:58:30,959
we are now very very close to actually being able to release our application to

145
04:58:30,959 --> 04:58:35,360
the app store there are just a few things left sorry app store and play

146
04:58:35,360 --> 04:58:42,159
store and we have a few things left um to do before we can actually do that and

147
04:58:42,159 --> 04:58:45,511
um one of the most important things we need to take care of are loading screens

148
04:58:45,511 --> 04:58:49,119
in our application and if you remember from what we've done so

149
04:58:49,119 --> 04:58:53,040
far we've been working with block we've been working with our auth service and

150
04:58:53,040 --> 04:58:58,639
we've created an auth block and we also have loading state in some

151
04:58:58,639 --> 04:59:02,871
of our off states actually i can't call it loading state

152
04:59:02,871 --> 04:59:08,400
we have loading property on some of our off states so when our off block returns

153
04:59:08,400 --> 04:59:12,959
a state depending on which state it is then we can actually see whether it has

154
04:59:12,959 --> 04:59:17,912
it is loading property or not and we've been working with loading

155
04:59:17,912 --> 04:59:21,831
dialogue so far and there are just simple dialogues that we're displaying

156
04:59:21,831 --> 04:59:26,159
on the screen with a column with a circular progress indicator and we also

157
04:59:26,159 --> 04:59:30,080
have a size box just to separate the loading

158
04:59:30,080 --> 04:59:34,080
indicator from a text that we're displaying on the screen

159
04:59:34,080 --> 04:59:37,831
this has been working okay so far but as i mentioned in at the end of the

160
04:59:37,831 --> 04:59:41,119
previous chapter we have a bit of a problem in that

161
04:59:41,119 --> 04:59:44,479
if you remember from the code actually i can bring it on the screen so you can

162
04:59:44,479 --> 04:59:47,680
have a look here let's go to our loading dialog

163
04:59:47,680 --> 04:59:52,959
loading dialog at the end of this if you remember we return a function

164
04:59:52,959 --> 04:59:59,040
and which in turn upon calling which we pop our navigation navigator

165
04:59:59,040 --> 05:00:02,720
however as you can see there is no transaction in here meaning that the

166
05:00:02,720 --> 05:00:07,511
navigator can't necessarily know that what it is popping at the moment is in

167
05:00:07,511 --> 05:00:11,599
fact our loading dialogue and this problem is actually quite big

168
05:00:11,599 --> 05:00:15,439
in that you could for instance have a loading dialog on the screen and then

169
05:00:15,439 --> 05:00:18,479
while that loading dialog is being displayed you could display another

170
05:00:18,479 --> 05:00:22,871
screen and push that screen in your navigation stack and then if you then

171
05:00:22,871 --> 05:00:26,639
try to dismiss your loading dialogue what you will dismiss in fact is the

172
05:00:26,639 --> 05:00:29,599
second screen that you displayed in the stack so

173
05:00:29,599 --> 05:00:34,080
this process is not transaction based in that you're playing literally with the

174
05:00:34,080 --> 05:00:39,599
navigate in navigation stack in flutter and that's not such a wise thing to do

175
05:00:39,599 --> 05:00:43,912
so what we want to do in this chapter is to clean up our loading screens in the

176
05:00:43,912 --> 05:00:49,191
application and make sure that they are using overlays instead of

177
05:00:49,191 --> 05:00:54,479
normal dialogs so now i named overlays and it is a good

178
05:00:54,479 --> 05:00:58,871
time then to explain what overlays are and why they're good especially for

179
05:00:58,871 --> 05:01:04,159
loading screens um as you know normal screens that you display on on

180
05:01:04,159 --> 05:01:06,720
the mobile telephone for instance or on the

181
05:01:06,720 --> 05:01:10,639
web or on a desktop with flutter there it

182
05:01:10,639 --> 05:01:14,479
basically placed inside a navigation stack so the navigation stack is there

183
05:01:14,479 --> 05:01:18,159
to keep track of which screen is displayed and then which screens you can

184
05:01:18,159 --> 05:01:22,959
remove from that stack and so they have a hierarchy however if

185
05:01:22,959 --> 05:01:27,831
you want to display something on top of the navigation stack independent of the

186
05:01:27,831 --> 05:01:31,511
navigation stack and the various changes that could happen to the navigation

187
05:01:31,511 --> 05:01:36,319
stack you could use and you probably actually should use overlays either

188
05:01:36,319 --> 05:01:39,912
directly or using other material components that are provided by flutter

189
05:01:39,912 --> 05:01:44,479
that in turn use overlays so overlays as their name indicates they

190
05:01:44,479 --> 05:01:48,231
have they have the ability to place themselves over other content that is

191
05:01:48,231 --> 05:01:52,231
currently displayed on the screen so there and that makes them the perfect

192
05:01:52,231 --> 05:01:55,511
candidate for loading screens for instance because loading screens are

193
05:01:55,511 --> 05:01:59,599
usually displayed on top of the current content that the user is looking at so

194
05:01:59,599 --> 05:02:04,400
in this chapter we're going to focus on using overlays to improve the state of

195
05:02:04,400 --> 05:02:08,551
our loading screens in the application so

196
05:02:08,551 --> 05:02:10,871
um now before we actually get started

197
05:02:10,871 --> 05:02:15,680
writing the uh our loading screen um what we need to talk about is a

198
05:02:15,680 --> 05:02:20,159
controller uh as its name indicates a controller is an object usually that you

199
05:02:20,159 --> 05:02:23,759
can pass from a

200
05:02:23,759 --> 05:02:27,439
a function to another and using this controller usually an

201
05:02:27,439 --> 05:02:31,279
object that receives that controller is able to control either the contents or

202
05:02:31,279 --> 05:02:36,159
the behavior of the object that is being displayed on the screen for

203
05:02:36,159 --> 05:02:39,680
instance so imagine a scenario where you have a

204
05:02:39,680 --> 05:02:43,439
loading screen already appearing on the mobile device

205
05:02:43,439 --> 05:02:48,080
and you're telling the user wait while i'm logging you in now imagine that you

206
05:02:48,080 --> 05:02:52,080
want to kick off another process while that is ongoing and you want to display

207
05:02:52,080 --> 05:02:55,680
a loading screen again to the user while the previous loading screen is already

208
05:02:55,680 --> 05:02:58,400
displayed on the screen so

209
05:02:58,400 --> 05:03:01,680
a typical way of doing that would be for instance to dismiss the first loading

210
05:03:01,680 --> 05:03:04,000
screen show a new loading screen with the new

211
05:03:04,000 --> 05:03:08,080
content and when you get rid of the second loading screen then you can

212
05:03:08,080 --> 05:03:12,639
display the first loading screen again as that process is ongoing however this

213
05:03:12,639 --> 05:03:16,639
is quite a bit of a it is quite a bit of a race in that you

214
05:03:16,639 --> 05:03:20,551
have to know the previous context what loading screen was displayed before what

215
05:03:20,551 --> 05:03:24,159
loading screen you're displaying now if there was a

216
05:03:24,159 --> 05:03:27,912
loading screen before you have to display it again so it's not so scalable

217
05:03:27,912 --> 05:03:30,959
in that you will personally then be responsible for keeping track of the

218
05:03:30,959 --> 05:03:34,319
state of your loading screen so what we're going to do in this chapter is to

219
05:03:34,319 --> 05:03:38,959
create a loading screen that is a that is able to be controlled and its text

220
05:03:38,959 --> 05:03:42,551
and contents is going to be controlled using a controller object

221
05:03:42,551 --> 05:03:45,191
so upon creating that loading screen we're

222
05:03:45,191 --> 05:03:49,191
then gonna get a loading screen controller

223
05:03:49,191 --> 05:03:53,599
and this loading controller is gonna allow us to one dismiss the current

224
05:03:53,599 --> 05:03:57,360
loading screen that is displayed on the screen if any and then secondly it's

225
05:03:57,360 --> 05:04:01,511
going to allow us to update the contents of the loading screen

226
05:04:01,511 --> 05:04:06,319
so without further ado we could actually start by having a look at creating this

227
05:04:06,319 --> 05:04:10,551
loading controller and or loading screen controller and then we're going to use

228
05:04:10,551 --> 05:04:14,799
this loading screen controller where we create our loading screen so as usual

229
05:04:14,799 --> 05:04:18,159
i'm going to do some reshuffling on the screen so

230
05:04:18,159 --> 05:04:22,799
let me make the code bigger here and then the font a little smaller

231
05:04:22,799 --> 05:04:28,400
and let's then actually here i i'm pretty sure that we don't need scr cpy

232
05:04:28,400 --> 05:04:32,400
because um we're not gonna have a look at how that

233
05:04:32,400 --> 05:04:35,439
loading screen looks which looks like right now we're gonna write quite a bit

234
05:04:35,439 --> 05:04:38,400
of code and then we're gonna put it into you so

235
05:04:38,400 --> 05:04:41,680
i'm gonna make visual studio code full screen in here

236
05:04:41,680 --> 05:04:46,959
and i'm going to get rid of this bottom bar here

237
05:04:46,959 --> 05:04:51,119
okay so as the caption indicates what we're going to do now is to go ahead and

238
05:04:51,119 --> 05:04:55,360
create our loading screen controller under lib helpers

239
05:04:55,360 --> 05:05:00,479
loading loading screen controller and let's go in here and have a look at lib

240
05:05:00,479 --> 05:05:04,159
and we can see we have lib utility service access you know constant views

241
05:05:04,159 --> 05:05:07,511
but we don't have helpers so i'm gonna right click on live and just say new

242
05:05:07,511 --> 05:05:12,400
file and then i'm going to say helpers and so that you can also see it here

243
05:05:12,400 --> 05:05:16,319
helpers and loading and then loading screen

244
05:05:16,319 --> 05:05:19,119
controller so that's going to create the

245
05:05:19,119 --> 05:05:22,231
intermediate folders for us as well so you can see

246
05:05:22,231 --> 05:05:27,279
now we're under lip helpers loading loading screen controller okay

247
05:05:27,279 --> 05:05:31,511
so what we need here as i mentioned before is the ability for us to be able

248
05:05:31,511 --> 05:05:35,831
to control two things to close the loading screen and also update its

249
05:05:35,831 --> 05:05:41,191
contents so let's go ahead and define these type def so let's just say type f

250
05:05:41,191 --> 05:05:46,000
and we're going to call it close loading screen and this is just a

251
05:05:46,000 --> 05:05:48,639
boolean function

252
05:05:48,639 --> 05:05:52,551
that indicates whether the loading screen could actually be closed or not

253
05:05:52,551 --> 05:05:56,231
okay so it's just a function definition for now there is no implementation of

254
05:05:56,231 --> 05:06:03,040
that function yet so let's also go and create a type f

255
05:06:03,040 --> 05:06:07,119
and we're going to say update loading screen

256
05:06:07,119 --> 05:06:11,360
and this is a void function and actually a bool function which will also indicate

257
05:06:11,360 --> 05:06:15,912
whether the text could be updated and we just say text so what we're saying in

258
05:06:15,912 --> 05:06:19,439
here we will have two functions that will conform to this

259
05:06:19,439 --> 05:06:22,551
interface basically soon as you'll soon see okay

260
05:06:22,551 --> 05:06:26,639
excuse me let's then go ahead and create a class

261
05:06:26,639 --> 05:06:31,279
and we call it loading screen indicator or sorry controller

262
05:06:31,279 --> 05:06:36,000
and let's mark this as immutable as well and for this we need material so

263
05:06:36,000 --> 05:06:40,400
um actually foundation would do as well so let's just go in foundation and in

264
05:06:40,400 --> 05:06:44,871
here i'm actually going to say show immutable just like that so we just need

265
05:06:44,871 --> 05:06:50,080
the immutable part of the foundation um package in here

266
05:06:50,080 --> 05:06:54,080
okay so that's the definition of our loading screen controller so what it

267
05:06:54,080 --> 05:07:00,551
does is that it basically it takes in a closed loading screen as a parameter and

268
05:07:00,551 --> 05:07:02,959
we say um close

269
05:07:02,959 --> 05:07:06,720
and we also say final update loading screen

270
05:07:06,720 --> 05:07:09,831
updates just like that and i'm going to get help from visual studio code to

271
05:07:09,831 --> 05:07:14,319
complete this as a constant constructor and i'm going to make these parameters

272
05:07:14,319 --> 05:07:19,912
also required so these things we've talked about so much before so that's

273
05:07:19,912 --> 05:07:24,159
why i'm kind of jumping over them as fast as possible hot reload is not

274
05:07:24,159 --> 05:07:28,551
working so well right now it's just because the application on scrcpy is not

275
05:07:28,551 --> 05:07:32,159
on the screen and that's why hot reload isn't working so well so i'm going to

276
05:07:32,159 --> 05:07:36,639
just jump to the application and now hot reload works and then i'm going to put

277
05:07:36,639 --> 05:07:41,119
scr cpy on another screen so it doesn't bother us so much

278
05:07:41,119 --> 05:07:45,831
okay so that's our controller so we're then gonna work on creating a

279
05:07:45,831 --> 05:07:49,439
function that can display the loading screen and that function itself is gonna

280
05:07:49,439 --> 05:07:53,279
return a loading screen controller to you so that's the beauty of that

281
05:07:53,279 --> 05:07:57,759
function using the controller then you can close the loading screen or update

282
05:07:57,759 --> 05:08:01,912
it so you can see that these two are basically functions that the call side

283
05:08:01,912 --> 05:08:07,040
can accept and call in order to close and update the loading screen

284
05:08:07,040 --> 05:08:10,871
respectively

285
05:08:10,871 --> 05:08:14,959
all right that was the loading screen controller what we need to do now is to

286
05:08:14,959 --> 05:08:20,639
work on the loading screen itself so um let's go ahead as the caption

287
05:08:20,639 --> 05:08:25,439
indicates we're gonna go to lib helpers loading in this folder

288
05:08:25,439 --> 05:08:29,759
and we're going to create a new file inside loading and let's just call it

289
05:08:29,759 --> 05:08:33,040
that loading screen

290
05:08:33,040 --> 05:08:37,119
start and inside loading screen we're just

291
05:08:37,119 --> 05:08:41,119
going to create a loading screen class okay

292
05:08:41,119 --> 05:08:43,592
and we're going to make our loading screen

293
05:08:43,592 --> 05:08:47,592
a singleton and since we've done singleton twice before i'm just going to

294
05:08:47,592 --> 05:08:51,511
basically paste the pattern in here so we don't have to write this

295
05:08:51,511 --> 05:08:56,231
boring code again but this is a pattern that we've done so far twice as i

296
05:08:56,231 --> 05:09:01,040
mentioned before so you should basically know how it works so we have a private

297
05:09:01,040 --> 05:09:04,479
constructor then we have a factory constructor which is public which in

298
05:09:04,479 --> 05:09:10,720
turn uses a static final variable which in turn calls the private

299
05:09:10,720 --> 05:09:14,639
initializer so it's just a bit of a we could actually

300
05:09:14,639 --> 05:09:19,279
do it like this in so this is in order basically so when someone calls our

301
05:09:19,279 --> 05:09:22,799
loading screen constructor factory constructor from outside in turn calls

302
05:09:22,799 --> 05:09:30,000
this and this in turn calls this so it's a it's a layer base it's three layers

303
05:09:30,000 --> 05:09:33,439
okay so what we're going to do in here we're also going to keep pulling up our

304
05:09:33,439 --> 05:09:37,680
loading screen controller and so let's go ahead and send loading screen

305
05:09:37,680 --> 05:09:40,319
controller as you can see it's going to also import it for me so i'm just going

306
05:09:40,319 --> 05:09:43,680
to say loading screen controller and let's just say it's optional

307
05:09:43,680 --> 05:09:49,360
because we might not actually have it and um then what we're gonna do in here

308
05:09:49,360 --> 05:09:53,191
we're gonna have a function called show as i can see

309
05:09:53,191 --> 05:09:56,319
and um then we're gonna have a few more

310
05:09:56,319 --> 05:10:01,831
functions there that are gonna allow us to control basically our loading screen

311
05:10:01,831 --> 05:10:05,040
and i wonder which one is actually best to

312
05:10:05,040 --> 05:10:07,191
um best to

313
05:10:07,191 --> 05:10:11,040
work with first it could be that we should be working

314
05:10:11,040 --> 05:10:15,119
for instance with the show overlay function so let's go ahead

315
05:10:15,119 --> 05:10:19,439
and do that so let's say that we are going to have a function on our loading

316
05:10:19,439 --> 05:10:25,831
screen um class and we're calling it show overlay so and this show overlay is

317
05:10:25,831 --> 05:10:30,159
then in turn going to return an instance of loading screen controller so let's go

318
05:10:30,159 --> 05:10:33,360
ahead and start writing that so loading screen controller

319
05:10:33,360 --> 05:10:38,871
and we say show overlay and this function has a two required

320
05:10:38,871 --> 05:10:43,191
parameters so i'm going to put curly bracket in here a curly bracket in here

321
05:10:43,191 --> 05:10:47,680
and let's just say we need a build context so build contacts and

322
05:10:47,680 --> 05:10:52,400
it's going to auto import from material so that's great build context

323
05:10:52,400 --> 05:10:55,680
and require parameter build context and i'm just going to call it context and

324
05:10:55,680 --> 05:11:00,871
then upon you wanting to show an overlay you also have to specify its text so

325
05:11:00,871 --> 05:11:03,191
because what we're saying in here is that an

326
05:11:03,191 --> 05:11:07,360
overlay can't be displayed without an actual text in it okay and remember

327
05:11:07,360 --> 05:11:11,439
we're using the word overlay but in this case our loading screen is going to have

328
05:11:11,439 --> 05:11:16,319
a custom overlay with some material components like a column and button etc

329
05:11:16,319 --> 05:11:20,871
etc okay so show overlay in this case means show the loading screen with this

330
05:11:20,871 --> 05:11:25,191
text okay so we call it that and then let's go

331
05:11:25,191 --> 05:11:30,479
ahead and basically say this is a string of text just like that okay

332
05:11:30,479 --> 05:11:34,400
and perfect so that's fine so now what we're

333
05:11:34,400 --> 05:11:39,439
going to create now is um we're going to create a stream controller

334
05:11:39,439 --> 05:11:41,912
that will then

335
05:11:41,912 --> 05:11:46,799
new strings that are provided by this controller remember we created this

336
05:11:46,799 --> 05:11:50,720
thing so if someone updates the loading screen text we're going to put those

337
05:11:50,720 --> 05:11:55,191
strings inside a stream controller so let's go ahead and create a final

338
05:11:55,191 --> 05:12:00,000
if i can spell so we'll say this is a stream controller

339
05:12:00,000 --> 05:12:06,720
control controller of string okay we just create that and it can't find

340
05:12:06,720 --> 05:12:11,279
stream controller so i'm just going to say import lib dart async so that's

341
05:12:11,279 --> 05:12:16,799
another import um right here which you might have to do by hand if you don't

342
05:12:16,799 --> 05:12:20,551
have visual studio code or if you're not using for instance a text editor or id

343
05:12:20,551 --> 05:12:24,479
that can also import things for you stream controller is available in dart

344
05:12:24,479 --> 05:12:27,831
async so then the first thing we're going to

345
05:12:27,831 --> 05:12:32,000
do is to add the current text into

346
05:12:32,000 --> 05:12:36,159
our stream controller so this text parameter that was provided to us we're

347
05:12:36,159 --> 05:12:39,360
going to put it inside the stream controller okay

348
05:12:39,360 --> 05:12:43,040
so what we need to do is basically

349
05:12:43,040 --> 05:12:47,119
use a new function that we haven't used before which is called overlay of

350
05:12:47,119 --> 05:12:50,551
context so if i look at if you look at the return

351
05:12:50,551 --> 05:12:55,360
of this it will return something called an overlay state and it says the state

352
05:12:55,360 --> 05:13:00,319
from the closest instance of this class that encloses the given context so we

353
05:13:00,319 --> 05:13:05,439
need this state in order to be able to display our overlay so let's just grab

354
05:13:05,439 --> 05:13:09,511
this overlay of context and put it inside a state

355
05:13:09,511 --> 05:13:13,912
like this and then what we're going to do is

356
05:13:13,912 --> 05:13:17,439
since overlays are kind of displayed on top of everything else that's on the

357
05:13:17,439 --> 05:13:21,511
screen they don't have intrinsic sizes as such so if you're using with if

358
05:13:21,511 --> 05:13:24,231
you're using for instance material components such as

359
05:13:24,231 --> 05:13:27,759
various widgets inside your flutter application if you create different

360
05:13:27,759 --> 05:13:32,551
containers buttons they have some sort of intrinsic size in them however with

361
05:13:32,551 --> 05:13:35,912
overlays you kind of have to grab like the

362
05:13:35,912 --> 05:13:39,759
state of the current screen and what components are displayed on and

363
05:13:39,759 --> 05:13:43,279
available with the available height so we need

364
05:13:43,279 --> 05:13:48,000
some sort of a size to basically base our overlay on top of

365
05:13:48,000 --> 05:13:52,319
so let's go ahead and grab our render box

366
05:13:52,319 --> 05:13:56,799
and i'm going to say using this context and we're going to get find render

367
05:13:56,799 --> 05:13:59,592
object

368
05:13:59,592 --> 05:14:04,959
like this as a renderer box okay so there's lots of documentation available

369
05:14:04,959 --> 05:14:09,191
about what render box is but it is kind of like low level and i'm not gonna go

370
05:14:09,191 --> 05:14:13,191
into so much details about that but let's go actually have a look a little

371
05:14:13,191 --> 05:14:17,511
bit here as you can see it's a render object and it is quite low level as i

372
05:14:17,511 --> 05:14:21,511
mentioned inside rendering box and what it will do it will allow you to

373
05:14:21,511 --> 05:14:26,720
basically extract the available size that our overlay can

374
05:14:26,720 --> 05:14:31,191
have on the screen so let's go ahead and create a final size in here and say

375
05:14:31,191 --> 05:14:36,799
render box about size okay so that's that

376
05:14:36,799 --> 05:14:42,159
then what we need to do we actually need to now create our overlay so our overlay

377
05:14:42,159 --> 05:14:46,000
and you may think oh this is the overlay because we call it overlay here well

378
05:14:46,000 --> 05:14:49,592
it's not really because the overlay is like the over um

379
05:14:49,592 --> 05:14:55,040
in in this context that's overlay of is the state of the

380
05:14:55,040 --> 05:15:00,080
parent overlay uh context so uh what you are going to create in your

381
05:15:00,080 --> 05:15:06,080
application is actually called overlay entry so um but when when we say we're

382
05:15:06,080 --> 05:15:11,912
going to create an overlay what we actually mean is an overlay entry okay

383
05:15:11,912 --> 05:15:15,680
so let's go ahead and create an overlay entry in here so we're gonna say final

384
05:15:15,680 --> 05:15:21,040
overlay is overlay entry just like that and then we have a builder function

385
05:15:21,040 --> 05:15:24,400
now i'm gonna get visual studio code to complete this it needs a context all

386
05:15:24,400 --> 05:15:29,912
right so let's go in here now overlays they don't have a parent like a

387
05:15:29,912 --> 05:15:33,831
scaffold or anything so if you don't wrap your

388
05:15:33,831 --> 05:15:37,191
like this component that you return from your builder which should be a widget

389
05:15:37,191 --> 05:15:40,720
let's go in here you can see it's a widget if you don't wrap this inside

390
05:15:40,720 --> 05:15:46,080
some sort of a material component such as scaffold or material itself your

391
05:15:46,080 --> 05:15:49,439
overlay is going to have horrible styling because it's not going to have

392
05:15:49,439 --> 05:15:53,680
any default system styling so excuse me what we're going to do in here we're

393
05:15:53,680 --> 05:15:58,959
going to return a material component and material is going to allow you if

394
05:15:58,959 --> 05:16:02,159
you look here as a documentation of material it says

395
05:16:02,159 --> 05:16:04,720
creates a piece of letter

396
05:16:04,720 --> 05:16:08,720
i mean okay um but what it basically means it is actually let's have a look

397
05:16:08,720 --> 05:16:11,439
at this code maybe that makes more sense so

398
05:16:11,439 --> 05:16:16,080
uh is a stateful widget so it will create a stateful widget for you which

399
05:16:16,080 --> 05:16:19,680
has some default styling so you can put your components in there and they'll be

400
05:16:19,680 --> 05:16:25,511
style according to the system skin okay so let's say that we are going to give

401
05:16:25,511 --> 05:16:29,279
the material which is going to cover the entire screen this material component

402
05:16:29,279 --> 05:16:32,400
that we're returning here is going to cover the entire screen remember so

403
05:16:32,400 --> 05:16:36,871
let's first paint the entire screen with kind of like a dark color as you know

404
05:16:36,871 --> 05:16:41,040
when you display like errors or dialogues to the screen to the user

405
05:16:41,040 --> 05:16:44,080
usually what they do is like they paint the background the entire background

406
05:16:44,080 --> 05:16:48,231
kind of like a dark color so then they can display their dialogue in the middle

407
05:16:48,231 --> 05:16:50,479
of the screen and kind of give it kind of

408
05:16:50,479 --> 05:16:54,159
like um some sort of a

409
05:16:54,159 --> 05:16:58,080
elevation so it kind of it pops out of the screen a little bit so what we're

410
05:16:58,080 --> 05:17:01,439
going to do in here we're going to say color the color of our material uh

411
05:17:01,439 --> 05:17:08,959
staple widget in here is colors black with alpha of 150 okay

412
05:17:08,959 --> 05:17:14,080
and then the child of our material then it's gonna be a center okay so that's

413
05:17:14,080 --> 05:17:18,551
what we're gonna create here so let's then go in here and what we're

414
05:17:18,551 --> 05:17:22,400
going to do is the child of this is going to be container so i'm just going

415
05:17:22,400 --> 05:17:28,159
to create a container here and then put a semicolon there and it's happy now

416
05:17:28,159 --> 05:17:33,511
so then our content container is gonna place some constraints off on our

417
05:17:33,511 --> 05:17:37,680
overlay so it's gonna say for instance that its max width and height should be

418
05:17:37,680 --> 05:17:41,119
a certain value so we haven't used this before but we're gonna now use something

419
05:17:41,119 --> 05:17:45,040
called constraints in here and you can see the value of constraints is of type

420
05:17:45,040 --> 05:17:50,159
box constraints so let's say constraints and then we say box constraints okay so

421
05:17:50,159 --> 05:17:55,912
we're going to start with max width so then we're going to say size width

422
05:17:55,912 --> 05:18:01,439
multiplied by zero at that eight and what we're basically saying here saying

423
05:18:01,439 --> 05:18:03,759
that this this dialogue that we're displaying to

424
05:18:03,759 --> 05:18:08,319
the user is going to consume at most eighty percent of the available widths

425
05:18:08,319 --> 05:18:12,159
on the screen so this is our way of creating some margins to the right and

426
05:18:12,159 --> 05:18:15,592
left for those of you who are web developers and are like know about

427
05:18:15,592 --> 05:18:19,119
margin um and even if you're a web even if you're

428
05:18:19,119 --> 05:18:22,639
a designer you'll probably know already about margin so what we're saying is

429
05:18:22,639 --> 05:18:27,759
that this container needs to wrap itself around its contents but if the contents

430
05:18:27,759 --> 05:18:31,040
grow it's gonna go at most eighty percent

431
05:18:31,040 --> 05:18:36,231
of the available width and this width is coming from our render box okay

432
05:18:36,231 --> 05:18:40,231
so that's that and we're gonna do the same thing with max height so we're

433
05:18:40,231 --> 05:18:46,231
going to say size height multiplied 0.8 and then we're going to give it a min

434
05:18:46,231 --> 05:18:52,000
width of size with multiply 0.5 so we're going to say at least it should it

435
05:18:52,000 --> 05:18:57,279
should grab um half of the screen width okay

436
05:18:57,279 --> 05:19:00,080
then let's give it some decoration so we're going to say this is box

437
05:19:00,080 --> 05:19:05,040
decoration so let's go in here and so this is just to give it some um

438
05:19:05,040 --> 05:19:09,360
border so uh usually dialogues or in this case an overlay that we're

439
05:19:09,360 --> 05:19:13,831
displaying to use or they have some sort of a border so it creates this kind of

440
05:19:13,831 --> 05:19:18,319
like a beautiful elevation so if this is the dark background in here which we

441
05:19:18,319 --> 05:19:25,040
created with black of alpha 150 then we have an arc basically overlaying here or

442
05:19:25,040 --> 05:19:29,119
overlay um we call it here as you can see overlay entry then the overlay entry

443
05:19:29,119 --> 05:19:32,319
will be placed here but it will have some border around it to

444
05:19:32,319 --> 05:19:35,912
separate it from the background okay so this is just a technique to separate our

445
05:19:35,912 --> 05:19:40,319
overlay from the background so we're going to say the border is

446
05:19:40,319 --> 05:19:45,191
color white our sorry color is white and then we're

447
05:19:45,191 --> 05:19:50,479
going to say it has a border radius f and border radius

448
05:19:50,479 --> 05:19:54,680
all these documentations on the screen are just driving me crazy and border

449
05:19:54,680 --> 05:20:02,400
radius.circular and let's just give it a circle value of 10 in here okay

450
05:20:02,400 --> 05:20:07,040
sometimes documentation is just in the way

451
05:20:07,040 --> 05:20:10,400
so let's stand in here as you can see now we have an empty container we should

452
05:20:10,400 --> 05:20:14,639
never do that so let's go in here and just create a child for it so the child

453
05:20:14,639 --> 05:20:19,592
in here is going to be a padding so um or maybe we could just say single

454
05:20:19,592 --> 05:20:24,871
child scroll view for now and then i'm gonna embed the single

455
05:20:24,871 --> 05:20:28,799
child scroll view inside padding that's that's my preferred way of doing this so

456
05:20:28,799 --> 05:20:32,551
just like that and let's just give it padding of 16 for now okay

457
05:20:32,551 --> 05:20:36,551
so the reason that the child of this padding that we created here is a single

458
05:20:36,551 --> 05:20:41,831
child scroll view is as you remember we said the max height of our overlay entry

459
05:20:41,831 --> 05:20:45,680
is 80 of the available height on the screen

460
05:20:45,680 --> 05:20:49,360
that's all great and but what if

461
05:20:49,360 --> 05:20:53,040
your just your application display on a very small screen and

462
05:20:53,040 --> 05:20:58,551
then you're displaying a lot of text well if you don't put your contents in

463
05:20:58,551 --> 05:21:03,439
the entire contents of your material widget inside a single child scroll view

464
05:21:03,439 --> 05:21:07,759
then your content is going to be basically chopped so the users are not

465
05:21:07,759 --> 05:21:12,400
going to see the content in its entirety and what single chat scroll view does is

466
05:21:12,400 --> 05:21:17,360
that it tries to not scroll its contents if the content has enough space to be

467
05:21:17,360 --> 05:21:22,479
displayed on the container but if the contents overflows the container's

468
05:21:22,479 --> 05:21:27,191
height for instance then it's going to allow the user to scroll on that

469
05:21:27,191 --> 05:21:31,592
container so it it works perfectly trust me

470
05:21:31,592 --> 05:21:35,680
so let's go in here and then go and inside the single chart scroll view

471
05:21:35,680 --> 05:21:39,511
create a child and in here we're going to have a column

472
05:21:39,511 --> 05:21:44,720
and our main axis size is going to be main axis

473
05:21:44,720 --> 05:21:48,639
main axis size of minimum because remember if you don't give a main

474
05:21:48,639 --> 05:21:52,159
exercise a minimum pure column your column is going to grab as much space as

475
05:21:52,159 --> 05:21:56,639
it can so it's just going to expand as much as it can and if you say main

476
05:21:56,639 --> 05:22:00,959
exercise is minimum it's just gonna basically try to

477
05:22:00,959 --> 05:22:05,119
hug its contents as much as it can

478
05:22:05,119 --> 05:22:10,479
and then we're gonna say main access alignment is main access alignment of

479
05:22:10,479 --> 05:22:19,040
center so it's also going to place its contents vertically in the center okay

480
05:22:19,040 --> 05:22:23,511
then what we're going to do in here in column children so let's go in here and

481
05:22:23,511 --> 05:22:29,439
say children then let's create a size box um and give it a height of 10 so

482
05:22:29,439 --> 05:22:35,439
we're creating some top margin from um from top of the column so this is

483
05:22:35,439 --> 05:22:39,360
saying that we have a column we're going to put some stuff in it but give it 10

484
05:22:39,360 --> 05:22:42,400
points of emptiness on top so it just creates a

485
05:22:42,400 --> 05:22:46,231
little bit of a margin okay and look i fully understand that this is a lot of

486
05:22:46,231 --> 05:22:50,159
abstract stuff it would be a lot nicer if you could actually see this on the

487
05:22:50,159 --> 05:22:52,551
screen but sometimes when you're programming

488
05:22:52,551 --> 05:22:55,831
especially in flutter since it's so declarative then you have to kind of use

489
05:22:55,831 --> 05:22:59,592
your imagination on how this thing is actually going to look like on the

490
05:22:59,592 --> 05:23:01,759
screen so

491
05:23:01,759 --> 05:23:06,799
you could do a lot of experiments and test this for your for yourself and just

492
05:23:06,799 --> 05:23:10,000
maybe just even do this don't do anything more than this just use a size

493
05:23:10,000 --> 05:23:13,279
block on the size box on the screen and just display it overlay and see how it

494
05:23:13,279 --> 05:23:19,119
looks like that also works okay and right after this let's go and create

495
05:23:19,119 --> 05:23:23,912
a our const of circular progress indicator

496
05:23:23,912 --> 05:23:27,511
so that's going to be a little indicator that sits there and displays that

497
05:23:27,511 --> 05:23:31,040
something is loading and then we're going to give it another

498
05:23:31,040 --> 05:23:35,759
size box with a height of maybe this time actually 20 and so this creates a

499
05:23:35,759 --> 05:23:39,511
little bit more spacing and then what we're doing in here we

500
05:23:39,511 --> 05:23:44,000
want to create a text and but that text could change because

501
05:23:44,000 --> 05:23:47,592
that text is placed inside the stream controller so we're not going to use a

502
05:23:47,592 --> 05:23:51,040
stream builder so let's say stream builder

503
05:23:51,040 --> 05:23:54,080
like this and our stream

504
05:23:54,080 --> 05:23:57,360
itself is this text um

505
05:23:57,360 --> 05:24:00,831
right that we created up

506
05:24:00,831 --> 05:24:05,439
there so what we need to do basically is to grab the stream from the stream

507
05:24:05,439 --> 05:24:09,831
controller and use it inside our stream builder and then i'm going to help from

508
05:24:09,831 --> 05:24:15,831
visual studio coding here and say that the builder function should be like

509
05:24:15,831 --> 05:24:20,159
and if you remember we could use a really handy

510
05:24:20,159 --> 05:24:25,279
getter on our snapshot that says has data so let's say return or sorry um you

511
05:24:25,279 --> 05:24:31,592
say if snapshot has data then we're going to return a text in here okay

512
05:24:31,592 --> 05:24:36,871
and the text basically is it's the text of the text widget is going to be the

513
05:24:36,871 --> 05:24:41,759
snapshots data as string we know that it is a string

514
05:24:41,759 --> 05:24:45,912
and also we are going to give it a text alignment of text align in the center

515
05:24:45,912 --> 05:24:50,080
okay so that's that part and let's put a

516
05:24:50,080 --> 05:24:53,592
comma in there as well and also we're we're getting this error

517
05:24:53,592 --> 05:24:58,000
right now because we're not returning a widget in all the available paths inside

518
05:24:58,000 --> 05:25:01,360
this builder and we have to put an else statement in here

519
05:25:01,360 --> 05:25:07,279
and otherwise we just can return a container as you can see in here okay so

520
05:25:07,279 --> 05:25:11,191
since we have to return something we could just return an empty container for

521
05:25:11,191 --> 05:25:14,551
now i mean you could also solve this in

522
05:25:14,551 --> 05:25:19,759
another way for instance say okay if the snapshot has data i'm going to return a

523
05:25:19,759 --> 05:25:24,231
text like this or otherwise i'm going to return a text

524
05:25:24,231 --> 05:25:28,551
like an empty text like this you could also try to do that but right

525
05:25:28,551 --> 05:25:34,231
now we're just leaving it as returning a container okay

526
05:25:34,231 --> 05:25:36,959
so that's that part

527
05:25:36,959 --> 05:25:41,759
now we created our up until this point so if i

528
05:25:41,759 --> 05:25:45,279
do this and fold this that we created in here which

529
05:25:45,279 --> 05:25:49,119
is our overlay we've just created the overlay that doesn't mean that we're

530
05:25:49,119 --> 05:25:53,912
displaying it so the way to display an overlay is to use that overlay of which

531
05:25:53,912 --> 05:26:00,871
created an overlay state and say insert overlay okay so this actually adds our

532
05:26:00,871 --> 05:26:07,680
overlay to the entire overlay state that flutter manages on the screen so

533
05:26:07,680 --> 05:26:12,400
so now we've done that so what we need to do then upon upon this happening we

534
05:26:12,400 --> 05:26:16,159
need to take our return statement and that's why

535
05:26:16,159 --> 05:26:20,159
we're seeing a red basically loading screen dart file here

536
05:26:20,159 --> 05:26:24,000
in visual studio code depending depending on your editor or id that

537
05:26:24,000 --> 05:26:27,511
you're using you may or may not see this screen as having an error but if you

538
05:26:27,511 --> 05:26:31,831
scroll up in here it basically tells you that well you're not returning what you

539
05:26:31,831 --> 05:26:35,511
said you should return so let's go in here and create an instance of loading

540
05:26:35,511 --> 05:26:38,551
screen um controller

541
05:26:38,551 --> 05:26:41,680
okay and we have to take care of the close

542
05:26:41,680 --> 05:26:45,592
and we have to also take care of the update but let's take care of closed

543
05:26:45,592 --> 05:26:50,159
first so it's an empty function and the only thing it should do is to

544
05:26:50,159 --> 05:26:53,680
have a look at our stream controller and close that

545
05:26:53,680 --> 05:26:57,439
and then we have we go to our overlay that we just created and basically

546
05:26:57,439 --> 05:27:03,279
remove it from the screen and also we just say yeah we returned

547
05:27:03,279 --> 05:27:07,191
through from this okay and now we're getting an error in here saying update

548
05:27:07,191 --> 05:27:10,479
it's not provided so let's go ahead and create update as well and if you

549
05:27:10,479 --> 05:27:15,360
remember from update uh what it does it actually takes the string as a parameter

550
05:27:15,360 --> 05:27:18,319
in itself so in here the only thing we have to do is

551
05:27:18,319 --> 05:27:22,159
to add that to our stream controller so i just noticed that you can't see the

552
05:27:22,159 --> 05:27:26,231
code sorry about that so let's add that and just return true and

553
05:27:26,231 --> 05:27:30,000
to be honest with you you could just say well let's just not return any value in

554
05:27:30,000 --> 05:27:33,592
here you could do that as well but i created these

555
05:27:33,592 --> 05:27:38,871
um function signatures so that you can also indicate an error to the call site

556
05:27:38,871 --> 05:27:42,159
so you may try to get rid of these

557
05:27:42,159 --> 05:27:45,119
yeah let's go ahead and do that if you want to but i'm just going to leave it

558
05:27:45,119 --> 05:27:49,759
like this in case we want to extend this functionality in the future so that we

559
05:27:49,759 --> 05:27:54,231
can return false if things go wrong okay

560
05:27:54,231 --> 05:28:00,400
all right that was the uh let's say that was our show overlay function so that's

561
05:28:00,400 --> 05:28:04,720
perfect so let's then go ahead and create a

562
05:28:04,720 --> 05:28:08,479
function in here that we're going to call also height now we have show let's

563
05:28:08,479 --> 05:28:14,551
go create hide okay so let's just say void hide like this

564
05:28:14,551 --> 05:28:18,231
and what we're gonna do in here we're gonna take our controller like this and

565
05:28:18,231 --> 05:28:22,551
if it's there we're just gonna say close okay remember close the way it was

566
05:28:22,551 --> 05:28:25,680
implemented it closes the stream controller for text

567
05:28:25,680 --> 05:28:29,439
and it also removes the overlay and returns true so that's gonna if there is

568
05:28:29,439 --> 05:28:33,279
a controller available on the screen then it's gonna return that okay sorry

569
05:28:33,279 --> 05:28:36,871
it's gonna close that

570
05:28:36,871 --> 05:28:40,871
so um and also we're just gonna say controller is null

571
05:28:40,871 --> 05:28:45,279
all right so and the point for us is that to show

572
05:28:45,279 --> 05:28:49,279
to use this function internally remember this this function is going to return

573
05:28:49,279 --> 05:28:54,799
this loading screen controller which we are soon going to place inside this

574
05:28:54,799 --> 05:28:58,159
controller variable at the moment control variable is always basically

575
05:28:58,159 --> 05:29:01,592
null all right

576
05:29:01,592 --> 05:29:05,831
all right that's great stuff so now we've taken our taking care of hide so

577
05:29:05,831 --> 05:29:11,191
now that we have hide let's go and create show so we say show and then we

578
05:29:11,191 --> 05:29:15,191
need two parameters in here two required parameters so let's say

579
05:29:15,191 --> 05:29:19,831
required build context build context context

580
05:29:19,831 --> 05:29:24,000
and then we say required string text okay so anybody calling this function

581
05:29:24,000 --> 05:29:27,592
has to provide these two parameters and they're very familiar because they are

582
05:29:27,592 --> 05:29:31,912
the parameters needed by show overlay okay

583
05:29:31,912 --> 05:29:37,040
so let's go in here and we say if we have a controller um if we can actually

584
05:29:37,040 --> 05:29:41,511
use this controller's update function in here so like this

585
05:29:41,511 --> 05:29:47,592
and we pass the text in here or false so now you probably are like starting to

586
05:29:47,592 --> 05:29:51,680
see why i'm returning true from this function and that's because well if you

587
05:29:51,680 --> 05:29:55,511
don't have a controller then you can't update it okay

588
05:29:55,511 --> 05:30:00,080
so this basically what it does it makes the

589
05:30:00,080 --> 05:30:03,360
code you have to write shorter because otherwise you'd have to do like this if

590
05:30:03,360 --> 05:30:05,912
controller not null

591
05:30:05,912 --> 05:30:09,912
then you would have to update but in here we're just saying either update the

592
05:30:09,912 --> 05:30:12,871
controller's text or

593
05:30:12,871 --> 05:30:17,592
else like this okay so if we could update the controller's x we

594
05:30:17,592 --> 05:30:20,959
just return because that means well we already have a controller on the screen

595
05:30:20,959 --> 05:30:26,000
a an overlay controller so we could update its text so show should just

596
05:30:26,000 --> 05:30:30,871
return right after that it shouldn't display a new um overlay otherwise we

597
05:30:30,871 --> 05:30:34,959
create and we basically create a new overlay using this show overlay and

598
05:30:34,959 --> 05:30:39,592
assign it to our controller our property on top so we say this is

599
05:30:39,592 --> 05:30:45,119
equal to show orally with that context and text

600
05:30:45,119 --> 05:30:50,231
all right fantastic so that's pretty much all we have to do and for our

601
05:30:50,231 --> 05:30:54,080
loading screen.dart file so we could just save this and i'm just going to

602
05:30:54,080 --> 05:30:58,400
save this file as well and close it

603
05:30:58,400 --> 05:31:03,119
so let's talk a little bit about our um off

604
05:31:03,119 --> 05:31:07,279
state and if you remember from our off state

605
05:31:07,279 --> 05:31:11,831
and for instance here we have off state logged out and that has a has is loading

606
05:31:11,831 --> 05:31:15,912
um property in here but if you look at for instance needs verification or

607
05:31:15,912 --> 05:31:21,592
logged in etc etc they don't have is loading so

608
05:31:21,592 --> 05:31:28,319
what if we added is loading to a higher level here to our off state so any off

609
05:31:28,319 --> 05:31:32,720
state in our application could potentially be in the loading state as

610
05:31:32,720 --> 05:31:38,231
well so that means registering could be loading logging could be loading whoever

611
05:31:38,231 --> 05:31:43,119
wants to could have loading and that's exactly what we're gonna do

612
05:31:43,119 --> 05:31:47,191
now so i'm going to go to my notes as well so off state

613
05:31:47,191 --> 05:31:51,759
let's go ahead and add these parameters that we have at the bottom of

614
05:31:51,759 --> 05:31:55,759
the screen to our off state okay so i'm going to say final um

615
05:31:55,759 --> 05:32:01,360
bool is loading and also let's say final string

616
05:32:01,360 --> 05:32:05,592
loading text something like this

617
05:32:05,592 --> 05:32:09,279
and then let's just undefine class build sorry about that i

618
05:32:09,279 --> 05:32:14,080
just programmed so many different languages um at final and they're so so

619
05:32:14,080 --> 05:32:17,511
different every language is kind of like they have their own data types and

620
05:32:17,511 --> 05:32:21,759
typescript has their own lowercase data types uppercase etc

621
05:32:21,759 --> 05:32:25,360
it's just a mishmash of various different types i just wish we could get

622
05:32:25,360 --> 05:32:29,279
along and have like one standard for all data types at least the primary data

623
05:32:29,279 --> 05:32:33,360
types in our applications but that's just wishful thinking maybe i

624
05:32:33,360 --> 05:32:38,479
digress let's go ahead and add these parameters to our off state

625
05:32:38,479 --> 05:32:42,400
and let's go ahead and do this make these required parameters so we say it's

626
05:32:42,400 --> 05:32:47,759
it should uh this should be provided is loading but the loading text doesn't

627
05:32:47,759 --> 05:32:52,080
need to be provided we'll always have a default we'll say please wait a moment

628
05:32:52,080 --> 05:32:57,191
like this uh and we should close this have i not

629
05:32:57,191 --> 05:33:00,479
closed this so like that okay

630
05:33:00,479 --> 05:33:06,479
so that's adding these two parameters to our um auth state and loading text

631
05:33:06,479 --> 05:33:11,191
always has a default string okay

632
05:33:11,191 --> 05:33:16,159
so let's go ahead to auth state uninitialized and add is loading in here

633
05:33:16,159 --> 05:33:20,479
so let's say required bool is loading so now that we've done

634
05:33:20,479 --> 05:33:24,720
that we should actually you see now what we're getting in here is saying that

635
05:33:24,720 --> 05:33:28,551
wait you're not calling your super because it's a super has this is loading

636
05:33:28,551 --> 05:33:31,592
parameter in here that you need to provide because it's required but you're

637
05:33:31,592 --> 05:33:35,279
not doing that so let's go ahead and actually add that parameter to our cells

638
05:33:35,279 --> 05:33:38,959
as well and say is loading and what we're doing here which is

639
05:33:38,959 --> 05:33:46,959
called super and we say is loading is is loading as is provided to us okay

640
05:33:46,959 --> 05:33:51,912
so that's for uninitialized um now let's go to registering and do

641
05:33:51,912 --> 05:33:56,720
the same thing in in there so we're going to say for registering we actually

642
05:33:56,720 --> 05:34:02,479
have exception required so let's make this required and also make

643
05:34:02,479 --> 05:34:06,551
is loading required so it is loading like that

644
05:34:06,551 --> 05:34:12,231
okay and let's call super is loading is is loading like this

645
05:34:12,231 --> 05:34:17,511
all right perfect that's also done and for

646
05:34:17,511 --> 05:34:22,231
registering let's go to auth states logged in at the moment

647
05:34:22,231 --> 05:34:26,479
we're getting taking the user and you see i'm making these parameters

648
05:34:26,479 --> 05:34:29,592
required because if you don't make them required as soon

649
05:34:29,592 --> 05:34:33,040
as you go to two parameters three parameters for creating a cons for

650
05:34:33,040 --> 05:34:36,479
constructing an object using this initializer then

651
05:34:36,479 --> 05:34:39,439
things start to get messy because they're not named parameters otherwise

652
05:34:39,439 --> 05:34:44,400
so passing three unnamed parameters to an initializer to me is just it's just a

653
05:34:44,400 --> 05:34:48,720
little bit difficult to understand so that's why we're making them required

654
05:34:48,720 --> 05:34:52,551
okay so let's go in here and make this also

655
05:34:52,551 --> 05:34:56,479
required name parameter required if i can spell

656
05:34:56,479 --> 05:35:01,360
and this user and then i'm gonna say required uh bool

657
05:35:01,360 --> 05:35:07,511
is uh required bull is loading all right

658
05:35:07,511 --> 05:35:12,319
like that and then let's call super is loading with is loading all right

659
05:35:12,319 --> 05:35:19,831
so that's for off state logged in now we need to also think about off

660
05:35:19,831 --> 05:35:24,231
state needs a verification and we're just gonna take is loading in there as

661
05:35:24,231 --> 05:35:27,912
well so let's go ahead and say needs

662
05:35:27,912 --> 05:35:31,119
verification also has a required parameter

663
05:35:31,119 --> 05:35:34,871
bool is loading and we're gonna do the same thing super is loading it is

664
05:35:34,871 --> 05:35:39,511
loading so all we're doing is that we're making sure that every state has and is

665
05:35:39,511 --> 05:35:44,551
loading and that is loading is passed to the super class called off state all

666
05:35:44,551 --> 05:35:48,551
right and then we need to take care of also

667
05:35:48,551 --> 05:35:52,159
our off state logged out so and

668
05:35:52,159 --> 05:35:55,040
you see at the moment we have a little problem in here and it says don't

669
05:35:55,040 --> 05:35:59,592
overwrite fields thank you dart and that means basically it's loading is already

670
05:35:59,592 --> 05:36:03,279
implemented on the super class so we could just safely remove it from here

671
05:36:03,279 --> 05:36:08,479
okay and then we say bool is loading and actually required bull

672
05:36:08,479 --> 05:36:14,871
actually like that and also we take in a string of um our

673
05:36:14,871 --> 05:36:18,799
loading text like this

674
05:36:18,799 --> 05:36:22,000
um so now that that is like that we're just

675
05:36:22,000 --> 05:36:25,680
gonna call super and say is loading is equal to is loading and then loading

676
05:36:25,680 --> 05:36:33,759
text is loading text just like that okay and then put a comma at the end of this

677
05:36:33,759 --> 05:36:37,759
perfect all right so that is basically saying that we may want to customize the

678
05:36:37,759 --> 05:36:41,831
off state logged out loading text because we're taking it in and then

679
05:36:41,831 --> 05:36:46,159
passing it up to the super whereas the others are not allowing us at the moment

680
05:36:46,159 --> 05:36:49,592
to customize their loading text so that's why we have

681
05:36:49,592 --> 05:36:53,360
string loading text only for off state locked out and not for the other classes

682
05:36:53,360 --> 05:36:56,159
all right

683
05:36:56,159 --> 05:36:58,551
um okay

684
05:36:58,551 --> 05:37:01,759
so that's that so we've already basically taken care of this caption as

685
05:37:01,759 --> 05:37:08,720
well so we've added loading text to our auth state logged out okay

686
05:37:08,720 --> 05:37:14,959
so now we need to save this file and just go back to our off block in here

687
05:37:14,959 --> 05:37:18,871
and you can see now we have a little bit of a problem in here so let me also go

688
05:37:18,871 --> 05:37:22,720
to my notes so i can bring up my notes off block

689
05:37:22,720 --> 05:37:25,279
so we have our um

690
05:37:25,279 --> 05:37:29,191
auth state uninitialized in here and what we need to do is say when the

691
05:37:29,191 --> 05:37:33,759
application opens when you the absolute initial state of the

692
05:37:33,759 --> 05:37:37,439
application should be in the loading state so we should say it's loading true

693
05:37:37,439 --> 05:37:41,360
okay so that's that part we taking care of

694
05:37:41,360 --> 05:37:45,279
that so i need to what we need to do now is

695
05:37:45,279 --> 05:37:50,551
to take care of as you say update off state logged out in off block so

696
05:37:50,551 --> 05:37:55,040
let's go and find logged out

697
05:37:55,040 --> 05:38:00,639
and we can have a look in here let's see if we have logged out anywhere yes and

698
05:38:00,639 --> 05:38:05,279
it says add is loading true to off state logged out while loading

699
05:38:05,279 --> 05:38:10,551
so um i'm gonna have a look here and see if we can actually find that so that's

700
05:38:10,551 --> 05:38:14,080
for instance um here

701
05:38:14,080 --> 05:38:17,912
and that's fine and then what we're gonna do in here we're gonna say loading

702
05:38:17,912 --> 05:38:22,319
text and let's say please wait while i log

703
05:38:22,319 --> 05:38:25,831
you in something like this okay

704
05:38:25,831 --> 05:38:30,720
that's off state logged out that's the first thing that we have to do and let's

705
05:38:30,720 --> 05:38:34,799
see where else we're using off state logged out and sorry

706
05:38:34,799 --> 05:38:40,319
here yes and that's fine that's fine

707
05:38:40,319 --> 05:38:45,831
so maybe that was the only place that we actually had to update our log state uh

708
05:38:45,831 --> 05:38:50,000
off state logged out i don't think we have anywhere else that

709
05:38:50,000 --> 05:38:55,360
off state logged out has to be set to true except for when we're actually

710
05:38:55,360 --> 05:38:59,360
logging you in so and i believe that we've done that now

711
05:38:59,360 --> 05:39:04,959
so off state logged out is there with is loading true there so that's that's the

712
05:39:04,959 --> 05:39:09,439
only thing we have to do okay the next thing that we have to do is to

713
05:39:09,439 --> 05:39:15,360
add is loading to other states in off block so let's start from where we're

714
05:39:15,360 --> 05:39:20,871
getting all these errors so we have excuse me off event initialize so i'm

715
05:39:20,871 --> 05:39:26,479
going to find that in my notes in here and in these cases when we're emitting

716
05:39:26,479 --> 05:39:30,159
auth state needs verification we should just say is loading false because you

717
05:39:30,159 --> 05:39:33,040
see when we actually end up in this state

718
05:39:33,040 --> 05:39:36,319
we're not loading anything we've already done the work that we were supposed to

719
05:39:36,319 --> 05:39:41,360
do so and that's sufficient basically in here

720
05:39:41,360 --> 05:39:45,511
so here we have the user so now this is a required parameter named parameter so

721
05:39:45,511 --> 05:39:48,959
it has its user and then we're going to say it's loading

722
05:39:48,959 --> 05:39:52,871
and in here we're going to say false as well so command here to make the code

723
05:39:52,871 --> 05:39:57,912
look a little bit better and let's then go ahead in here which is

724
05:39:57,912 --> 05:40:02,720
our off event login and we have

725
05:40:02,720 --> 05:40:07,119
this problem at the end which is off state needs verification

726
05:40:07,119 --> 05:40:11,119
and when we've emitted this off state needs verification is loading is also

727
05:40:11,119 --> 05:40:14,959
false so pretty much is loading is false almost everywhere

728
05:40:14,959 --> 05:40:18,639
except for when we're actually loading something

729
05:40:18,639 --> 05:40:22,400
which is for instance uh let's see here

730
05:40:22,400 --> 05:40:26,231
when we're actually logging in for instance okay so when we have the user

731
05:40:26,231 --> 05:40:29,592
in here we say user is a required parameter and is loading is false as

732
05:40:29,592 --> 05:40:33,912
well coma to make it work also

733
05:40:33,912 --> 05:40:38,080
and just looking up and down this file i can see we also have a problem off event

734
05:40:38,080 --> 05:40:41,759
register so let's go to auth event register

735
05:40:41,759 --> 05:40:47,279
excuse me and let's just say auth needs verification is loading is false as well

736
05:40:47,279 --> 05:40:51,592
and in here we have an exception name parameter i believe and they require

737
05:40:51,592 --> 05:40:55,360
parameter and then we say is loading is false as well so just a comma in there

738
05:40:55,360 --> 05:41:00,231
to get the formatting working and that is working as it should so we

739
05:41:00,231 --> 05:41:04,871
shouldn't have any errors basically in our offline at this point all right

740
05:41:04,871 --> 05:41:08,959
so then i'm gonna close that file so

741
05:41:08,959 --> 05:41:12,231
what we need to do as the captioning case we need to go to our login view and

742
05:41:12,231 --> 05:41:14,799
remove everything that has anything to do with

743
05:41:14,799 --> 05:41:21,279
loading so let's go to a login view and in here

744
05:41:21,279 --> 05:41:24,551
uh login view

745
05:41:24,551 --> 05:41:28,400
and at the moment you can see we have this closed dialog close dialog handle

746
05:41:28,400 --> 05:41:32,799
all that stuff so we shouldn't do any of that so now you see the point of what

747
05:41:32,799 --> 05:41:36,720
we've done is for our application to be able to handle

748
05:41:36,720 --> 05:41:42,319
the loading dialog just in one place loading dialogue should be handled in

749
05:41:42,319 --> 05:41:46,720
one place in the entire application that's what we're trying to do we

750
05:41:46,720 --> 05:41:51,831
shouldn't have loading states and loading like handling loading and or any

751
05:41:51,831 --> 05:41:56,000
dialogues and that has anything to do with loading in various views inside our

752
05:41:56,000 --> 05:41:59,279
application so that's what we're trying to get to okay so let's first go to this

753
05:41:59,279 --> 05:42:02,231
close dialogue handle and remove that because we're not going to need that

754
05:42:02,231 --> 05:42:06,319
anymore and then let's go in here and remove all this code inside your login

755
05:42:06,319 --> 05:42:10,400
view dot dart file that has anything to do with loading so now you should just

756
05:42:10,400 --> 05:42:16,551
have exception handling all right oh now let's go to um

757
05:42:16,551 --> 05:42:23,759
our main dart file and here have a look at what we have you can

758
05:42:23,759 --> 05:42:28,000
see at the moment we have a block builder inside the main widget of home

759
05:42:28,000 --> 05:42:32,871
page in in our build function we have a block builder but what we want is to

760
05:42:32,871 --> 05:42:36,231
issue some side effects when the state

761
05:42:36,231 --> 05:42:40,080
changes to something that has a loading in it okay so you see this state at the

762
05:42:40,080 --> 05:42:44,871
moment is off state but inside there this state could have is loading set to

763
05:42:44,871 --> 05:42:49,680
true so how do we handle that remember block builder is not supposed to have

764
05:42:49,680 --> 05:42:54,479
any side effects that's the job of the block listener

765
05:42:54,479 --> 05:42:58,319
however we need the block builder we actually need to return something in

766
05:42:58,319 --> 05:43:01,831
here we need to return different views depending on the current

767
05:43:01,831 --> 05:43:06,159
state but we also need a block listener so how do we do this how do we fix this

768
05:43:06,159 --> 05:43:10,799
well the the solution is using a block consumer

769
05:43:10,799 --> 05:43:14,720
so a block consumer i've mentioned this before the block consumer

770
05:43:14,720 --> 05:43:18,639
builds on top of a block builder and a block listener so it allows you to do

771
05:43:18,639 --> 05:43:22,231
both things at the same time so if you ever end up in a situation or

772
05:43:22,231 --> 05:43:25,759
application where you want a builder a blog builder and you want a blog

773
05:43:25,759 --> 05:43:31,119
listener block listener at the same time there is where you need a blog consumer

774
05:43:31,119 --> 05:43:35,360
okay so let's go in here and say that in our

775
05:43:35,360 --> 05:43:38,959
main file i'm going to go to my notes as well

776
05:43:38,959 --> 05:43:42,871
and i'm just going to say excuse me in here

777
05:43:42,871 --> 05:43:48,319
we don't have a block builder instead we have a block

778
05:43:48,319 --> 05:43:52,959
consumer and now we have listener in here and

779
05:43:52,959 --> 05:43:57,912
let's grab hold of this so what we're going to do in here is say if

780
05:43:57,912 --> 05:44:01,511
state is loading

781
05:44:01,511 --> 05:44:05,040
then what we're going to say is we're going to say loading screen and it also

782
05:44:05,040 --> 05:44:09,511
imported for me okay and then we're gonna say show

783
05:44:09,511 --> 05:44:14,551
okay we have the context already and then we either take the state's loading

784
05:44:14,551 --> 05:44:21,360
text or we say please wait in a moment so if the state's loading text is not

785
05:44:21,360 --> 05:44:24,799
available we just use a default one in here

786
05:44:24,799 --> 05:44:29,191
so if the state is not loading we just say loading screen

787
05:44:29,191 --> 05:44:33,759
dot height all right so that's that so now that we've done this this is pretty

788
05:44:33,759 --> 05:44:37,592
much like the last building block that we have to build inside this um inside

789
05:44:37,592 --> 05:44:41,439
this application for now so i'm just going to close this main dart file and

790
05:44:41,439 --> 05:44:45,680
resize the screen let's go ahead and bring up scrcpy

791
05:44:45,680 --> 05:44:50,231
and if i dare i'm gonna hot restart the application entirely because we've done

792
05:44:50,231 --> 05:44:55,680
so much new work and let's go ahead in uh just for

793
05:44:55,680 --> 05:45:00,720
experiment i'm gonna go into what is it loading okay i'm just gonna

794
05:45:00,720 --> 05:45:04,080
go into our provider

795
05:45:04,080 --> 05:45:08,479
in firebase auth provider inside this login

796
05:45:08,479 --> 05:45:12,400
if you remember from before it user

797
05:45:12,400 --> 05:45:17,511
login in here like this we could basically have a

798
05:45:17,511 --> 05:45:22,400
little bit of a delay so because otherwise we may not actually see the

799
05:45:22,400 --> 05:45:26,551
our little uh overlay so i'm just gonna first not do that and try to log in

800
05:45:26,551 --> 05:45:31,759
normally so fubar bass you saw did you see our little overlay

801
05:45:31,759 --> 05:45:34,799
there so i'm going to log out now and see if we can see it

802
05:45:34,799 --> 05:45:38,231
what we didn't but if i try to now put a little bit of

803
05:45:38,231 --> 05:45:41,360
a delay in here so i'm just going to say await

804
05:45:41,360 --> 05:45:43,592
um future

805
05:45:43,592 --> 05:45:49,191
delayed the rate const duration seconds three

806
05:45:49,191 --> 05:45:55,119
and just hot restart the application and then i'm going to say

807
05:45:55,119 --> 05:45:59,831
my normal credentials foo bar and press the login button and this is

808
05:45:59,831 --> 05:46:04,000
our overlay right and it has the ability for you to

809
05:46:04,000 --> 05:46:08,720
actually update its text as it's displayed on the screen so

810
05:46:08,720 --> 05:46:12,720
then yes everything is actually working as it should so now we have an overlay

811
05:46:12,720 --> 05:46:17,119
we don't have our loading dialog anymore so you could safely basically go and say

812
05:46:17,119 --> 05:46:21,119
well i want to get a complete rid of the loading dialog so i'm going to leave

813
05:46:21,119 --> 05:46:25,279
that up to you as now that we did we don't need the

814
05:46:25,279 --> 05:46:29,119
loading dialogue so what we achieved in this chapter is actually huge because we

815
05:46:29,119 --> 05:46:34,871
now have a loading um screen that is independent of the entire application

816
05:46:34,871 --> 05:46:39,680
and it's in just one place that's the goal we don't have many different places

817
05:46:39,680 --> 05:46:43,680
in our application that are handling the loading dialogue okay

818
05:46:43,680 --> 05:46:48,479
so let's go ahead and make sure we're not going to lose our code our precious

819
05:46:48,479 --> 05:46:52,159
code that we've written so far so i'm gonna rid of i'm gonna get rid of scr

820
05:46:52,159 --> 05:46:57,680
cpy increase the size of the screen and let's go as we usually do and commit

821
05:46:57,680 --> 05:47:02,959
and tag our code so if you look at our logs the previous commit was step 25

822
05:47:02,959 --> 05:47:04,959
let's add

823
05:47:04,959 --> 05:47:08,871
everything and say git commit step

824
05:47:08,871 --> 05:47:12,639
26 i'm going to push these changes and

825
05:47:12,639 --> 05:47:17,831
let's just say git tag step 26 as well

826
05:47:17,831 --> 05:47:22,871
and then get push tags if i can spell

827
05:47:22,871 --> 05:47:26,871
but if you look at our logs now so we have step 26 in here and if i scroll a

828
05:47:26,871 --> 05:47:32,479
little bit step 25 is before it and all the tags are also available in here you

829
05:47:32,479 --> 05:47:38,551
can see 25 and 26 available right there all right so we've done what we promised

830
05:47:38,551 --> 05:47:41,912
to do at the beginning of this chapter and we created a great overlay that we

831
05:47:41,912 --> 05:47:47,831
can reuse in the in the application and just show and hide only in one place

832
05:47:47,831 --> 05:47:52,319
so what we need to do now is the very exciting stuff in that we're getting

833
05:47:52,319 --> 05:47:56,639
really close to being complete with our application so we have login register

834
05:47:56,639 --> 05:48:00,551
verification email verification we have loading in

835
05:48:00,551 --> 05:48:04,799
screens we have sharing deleting it's just we have pretty much everything for

836
05:48:04,799 --> 05:48:08,400
application but we still have some little bits and

837
05:48:08,400 --> 05:48:12,551
pieces left to make the application more useful because remember when you create

838
05:48:12,551 --> 05:48:16,479
your application and send it to apple and google for review there's actually

839
05:48:16,479 --> 05:48:20,871
going to be real people who sit there and interact with your application to

840
05:48:20,871 --> 05:48:25,759
see if they can make sense of it so we need to clean the ui up so that it's a

841
05:48:25,759 --> 05:48:29,592
little bit more user friendly and that's exactly what we're going to take care of

842
05:48:29,592 --> 05:48:33,040
in the next chapter so i'll see you there hello everyone and welcome to

843
05:48:33,040 --> 05:48:38,639
chapter 44 of the swata course in previous chapters we've been basically

844
05:48:38,639 --> 05:48:42,799
working quite a lot with block and we've been making sure that our applications

845
05:48:42,799 --> 05:48:46,551
loading screen is working so we have one place in the entire application that

846
05:48:46,551 --> 05:48:51,360
we're taking care of the loading screens and we also have wrapped our whole

847
05:48:51,360 --> 05:48:56,400
authentication process inside a block and we're very now close to being able

848
05:48:56,400 --> 05:49:00,080
to release our application to the app store apple's app store and google's

849
05:49:00,080 --> 05:49:02,159
play store so

850
05:49:02,159 --> 05:49:05,592
this is usually what we do as software developers

851
05:49:05,592 --> 05:49:10,959
just before releasing our product or we basically go and clean it up as we say

852
05:49:10,959 --> 05:49:16,080
so we put some final touches to it so even if you're a designer you usually do

853
05:49:16,080 --> 05:49:20,231
that probably like if you're working with figma or you're working with sketch

854
05:49:20,231 --> 05:49:24,231
you first are like designing your product and then before you present it

855
05:49:24,231 --> 05:49:28,159
to the product owner or the developers you probably put some final touches to

856
05:49:28,159 --> 05:49:34,319
it so um that's what we're gonna do in this chapter and we have um a few things

857
05:49:34,319 --> 05:49:38,319
also left to do which have nothing really to do with the final touches to

858
05:49:38,319 --> 05:49:43,119
the ui it's mainly to do with the products functionality and we'll talk

859
05:49:43,119 --> 05:49:47,040
about that first so if you think about it what we have at

860
05:49:47,040 --> 05:49:51,439
the moment is um an application that a user can register

861
05:49:51,439 --> 05:49:55,191
they can't send an email verification they can log in and they can go into the

862
05:49:55,191 --> 05:49:59,592
list of notes that they have they can create notes delete notes and edit and

863
05:49:59,592 --> 05:50:04,551
share notes however we haven't really exposed a functionality for a user to be

864
05:50:04,551 --> 05:50:09,360
able to reset their password so imagine a process imagine an application

865
05:50:09,360 --> 05:50:14,231
where you've created it created a user in the application and you forgot your

866
05:50:14,231 --> 05:50:18,319
password and there's absolutely no way for you to get back into the product or

867
05:50:18,319 --> 05:50:22,000
the software and because you just don't know your password so you

868
05:50:22,000 --> 05:50:25,439
may then have to personally contact the application developer and say could you

869
05:50:25,439 --> 05:50:30,799
reset my password so it's a very very difficult process to do manually and you

870
05:50:30,799 --> 05:50:34,080
shouldn't really do that so what we're going to do

871
05:50:34,080 --> 05:50:37,831
we're going to do in this chapter is not only to do final ui touches but also

872
05:50:37,831 --> 05:50:44,080
we're going to create a password reset functionality into our application

873
05:50:44,080 --> 05:50:48,159
so let's get started with that i'm going to do some screen reshuffling in here as

874
05:50:48,159 --> 05:50:51,592
you can see in the cache we're going to go delete all users in firebase console

875
05:50:51,592 --> 05:50:54,871
and also all their data so

876
05:50:54,871 --> 05:50:58,551
i'm going to bring up console firebase.com and i'm going to bring it

877
05:50:58,551 --> 05:51:03,360
to the main screen in here let's find our application i believe

878
05:51:03,360 --> 05:51:06,479
it's this one and i'm then gonna go in here

879
05:51:06,479 --> 05:51:12,159
to a firebase date the firestore database and let's start by

880
05:51:12,159 --> 05:51:17,912
going in here and deleting these documents so let's say delete

881
05:51:17,912 --> 05:51:21,279
document and we have four documents so it's nothing

882
05:51:21,279 --> 05:51:24,551
so difficult to do just one at a time we delete these

883
05:51:24,551 --> 05:51:30,231
documents okay here here and those are our documents gone so you

884
05:51:30,231 --> 05:51:32,959
could just keep your collection i think it's best because our application at the

885
05:51:32,959 --> 05:51:36,479
moment is assuming that there is a node collection available

886
05:51:36,479 --> 05:51:41,831
if you remember from our node service so that's that part we deleted the data

887
05:51:41,831 --> 05:51:45,759
but we haven't really deleted the user so let's go off to authentication

888
05:51:45,759 --> 05:51:49,592
section of your firebase

889
05:51:49,592 --> 05:51:52,799
and in here i'm just gonna say delete account

890
05:51:52,799 --> 05:51:57,511
and let's just delete this account as well so now we're basically starting off

891
05:51:57,511 --> 05:52:01,191
fresh so no users and no data in the entire

892
05:52:01,191 --> 05:52:06,080
and back end all right so that's that part let's do that i'm

893
05:52:06,080 --> 05:52:09,360
going to then bring up our source coding here

894
05:52:09,360 --> 05:52:12,551
let's see so here

895
05:52:12,551 --> 05:52:17,511
we have our my notes application as we've called it

896
05:52:17,511 --> 05:52:21,191
so that's visual studio code i'm going to resize it a little bit and then i'm

897
05:52:21,191 --> 05:52:25,831
going to bring up scrcpy as well which has our app running at the moment and

898
05:52:25,831 --> 05:52:28,639
the application thinks at the moment that we're logged in

899
05:52:28,639 --> 05:52:32,159
because it hasn't really communicated with the back end yet so i'm gonna just

900
05:52:32,159 --> 05:52:37,279
do a hot restart in here and this is this is the problem that you'll

901
05:52:37,279 --> 05:52:41,592
sometimes actually notice in the in your application in that

902
05:52:41,592 --> 05:52:45,360
firebase isn't gonna immediately understand that this user doesn't exist

903
05:52:45,360 --> 05:52:49,759
on the back end anymore so if you delete a user from your firebase backend it

904
05:52:49,759 --> 05:52:53,831
doesn't necessarily mean that it's immediately going to be reflected to the

905
05:52:53,831 --> 05:52:58,231
application so let's see what happens in here if i then log out with this user

906
05:52:58,231 --> 05:53:03,191
like this and then try to log in with a user that used to exist in the

907
05:53:03,191 --> 05:53:06,080
application but i just deleted it foo barbado

908
05:53:06,080 --> 05:53:09,592
and let's see what happens in here and now you can see we see we say user not

909
05:53:09,592 --> 05:53:14,231
found okay we're gonna clean up that message as well soon in this chapter

910
05:53:14,231 --> 05:53:18,000
so good we have a clean slate now so we have no users and no data in the

911
05:53:18,000 --> 05:53:20,720
application um

912
05:53:20,720 --> 05:53:26,639
so what we need to do now is to start by defining our events and states for

913
05:53:26,639 --> 05:53:31,119
forgotten password okay so if user says hey i forgot my password we have to have

914
05:53:31,119 --> 05:53:34,720
an event so that we can send that event

915
05:53:34,720 --> 05:53:38,799
to our um off block

916
05:53:38,799 --> 05:53:42,639
so you can see in here we have to go to auth event dark file and add an auth

917
05:53:42,639 --> 05:53:47,279
event for god password okay so let's go ahead and do that so i'm

918
05:53:47,279 --> 05:53:52,159
going to open off event dark file and perhaps

919
05:53:52,159 --> 05:53:56,551
over log out in here we're just going to say class i'm going to increase the size

920
05:53:56,551 --> 05:54:01,680
in here as well obviously better class um off as we've said in the notes

921
05:54:01,680 --> 05:54:06,080
here off event forgot password extends off

922
05:54:06,080 --> 05:54:12,159
event okay just like that and in here we need to grab the user's

923
05:54:12,159 --> 05:54:15,912
email so we say email like that and i'm gonna create a

924
05:54:15,912 --> 05:54:19,119
constructor for this as well just like that

925
05:54:19,119 --> 05:54:26,159
and let's just make this or here with curly brackets okay

926
05:54:26,159 --> 05:54:29,912
all right so it's a name parameter now um and we just said auth event forgot

927
05:54:29,912 --> 05:54:32,479
password

928
05:54:32,479 --> 05:54:37,759
fantastic so that's that part um then we also need to go and define a state

929
05:54:37,759 --> 05:54:42,400
because when a user presses a button for instance saying i forgot my password

930
05:54:42,400 --> 05:54:47,191
then our off block is going to produce that state and say hey application that

931
05:54:47,191 --> 05:54:51,360
your state right now is forgot password and then in the main dart file as you'll

932
05:54:51,360 --> 05:54:55,912
soon see we will go and edit and add that state to our state handling as you

933
05:54:55,912 --> 05:55:00,319
can see in your main dart file the moment we have all these states but

934
05:55:00,319 --> 05:55:05,279
we're going to add a new state that says else if state is off state forgot

935
05:55:05,279 --> 05:55:11,360
password then display a forgot password view which we're also gonna develop soon

936
05:55:11,360 --> 05:55:14,799
so as the caption indicates let's go and

937
05:55:14,799 --> 05:55:20,639
let's go to the file off state dart file and i'm going to do that in my notes as

938
05:55:20,639 --> 05:55:24,639
well after registering it really doesn't matter where you place that code i'm

939
05:55:24,639 --> 05:55:28,080
just going to place it here after registering

940
05:55:28,080 --> 05:55:34,479
and just say off state forgot password

941
05:55:34,479 --> 05:55:39,680
and off state

942
05:55:39,680 --> 05:55:42,479
um and then we have to also take care of

943
05:55:42,479 --> 05:55:44,959
this so

944
05:55:44,959 --> 05:55:48,720
what should the state actually indicate to the application

945
05:55:48,720 --> 05:55:53,119
let's say that when you're in the forgot password view which we're soon gonna

946
05:55:53,119 --> 05:55:56,319
develop um there could be two things that you

947
05:55:56,319 --> 05:56:02,479
wanna convey to the user in that screen either the user has just landed so there

948
05:56:02,479 --> 05:56:06,319
are actually three three states that that screen can have

949
05:56:06,319 --> 05:56:10,720
either the user has just landed on that screen meaning that there is no errors

950
05:56:10,720 --> 05:56:15,191
nothing we haven't done anything so it's just a clean slate so that's the default

951
05:56:15,191 --> 05:56:18,639
state of off state forgot password so nothing

952
05:56:18,639 --> 05:56:23,119
okay however what if the user has actually

953
05:56:23,119 --> 05:56:25,360
pressed the um

954
05:56:25,360 --> 05:56:29,279
send reminder email because you see the way we're going to handle for a password

955
05:56:29,279 --> 05:56:33,279
is we're going to actually ask firebase and say firebase this user forgot their

956
05:56:33,279 --> 05:56:37,680
password with this email send a reminder email to them or send some kind of like

957
05:56:37,680 --> 05:56:41,592
an email to them that they can't actually reset their password

958
05:56:41,592 --> 05:56:47,040
so upon user pressing that button to send a reminder email to their email

959
05:56:47,040 --> 05:56:50,720
address um a few things can happen

960
05:56:50,720 --> 05:56:55,511
actually two things that we're going to handle one is that well

961
05:56:55,511 --> 05:57:00,000
we tried to send an email but it didn't succeed so kind of an exception so

962
05:57:00,000 --> 05:57:03,040
that's the second state remember no state

963
05:57:03,040 --> 05:57:07,191
second state is there's an exception and there's a third state that there was no

964
05:57:07,191 --> 05:57:11,759
exception but we've actually sent the email so three things we have to handle

965
05:57:11,759 --> 05:57:15,592
okay so the default state with no values is

966
05:57:15,592 --> 05:57:19,912
state number one nothing has happened state number two would be actually

967
05:57:19,912 --> 05:57:25,279
having an optional accept exception here

968
05:57:25,279 --> 05:57:28,720
and the third state is um bull

969
05:57:28,720 --> 05:57:33,592
has sent email like this okay

970
05:57:33,592 --> 05:57:36,551
so let me go ahead and create a constructor for these i'm not gonna

971
05:57:36,551 --> 05:57:39,831
explain this again because we've talked about this quite a lot and i'm gonna

972
05:57:39,831 --> 05:57:43,279
make these required parameters okay just like that

973
05:57:43,279 --> 05:57:49,511
and put a semicolon at the end and in here we're just gonna call em

974
05:57:49,511 --> 05:57:54,400
we're gonna call super but remember from super off states has a constructor here

975
05:57:54,400 --> 05:58:00,551
that has to provide is loading okay so in in this case let's just actually take

976
05:58:00,551 --> 05:58:05,191
a bull is loading as well as a parameter in here

977
05:58:05,191 --> 05:58:10,400
and then we're gonna pass is loading to our super as well just like that

978
05:58:10,400 --> 05:58:12,871
all right

979
05:58:12,871 --> 05:58:15,191
so when we're actually working with this

980
05:58:15,191 --> 05:58:18,799
auth state for that password we can actually give it is loading parameter

981
05:58:18,799 --> 05:58:23,680
and that's going to get delegated back to off state so our main dart file is

982
05:58:23,680 --> 05:58:27,912
going to be able to display a loading screen if is loading is true if you

983
05:58:27,912 --> 05:58:31,439
remember from main dart file we have this beautiful

984
05:58:31,439 --> 05:58:35,592
block consumer with the listener that that looks at any off state and as long

985
05:58:35,592 --> 05:58:40,720
as this auth states is loading parameter is true or that auth states is loading

986
05:58:40,720 --> 05:58:46,000
variable or property is true then it shows the loading screen

987
05:58:46,000 --> 05:58:49,439
all right perfect so now we've taken care of off state so we didn't make any

988
05:58:49,439 --> 05:58:54,000
changes in main dart file yet okay

989
05:58:54,000 --> 05:58:59,119
all right what we need to do is now go to our um auth provider dart file and

990
05:58:59,119 --> 05:59:04,959
define an interface function for sending a reminder email so

991
05:59:04,959 --> 05:59:09,279
i'm gonna go and do that right now auth provider

992
05:59:09,279 --> 05:59:13,191
i'm gonna do it here as well off provider

993
05:59:13,191 --> 05:59:16,479
okay so let's go ahead and define a function

994
05:59:16,479 --> 05:59:20,639
that every auth provider including our firebase auth provider has to conform to

995
05:59:20,639 --> 05:59:26,551
okay so let's say this is a future point and we call it send password

996
05:59:26,551 --> 05:59:32,231
reset like that and we have a required string parameter to email just like that

997
05:59:32,231 --> 05:59:35,511
so this is now defined after defining this you'll understand

998
05:59:35,511 --> 05:59:39,912
now soon that we have a few errors because auth service conforms to auth

999
05:59:39,912 --> 05:59:43,119
provider and so does firebase auth provider but

1000
05:59:43,119 --> 05:59:48,799
we're gonna fix these soon okay so as the caption indicates let's go to

1001
05:59:48,799 --> 05:59:53,592
firebase auth provider in here and actually implement that so i'm gonna go

1002
05:59:53,592 --> 05:59:57,360
to firebase off

1003
05:59:57,360 --> 06:00:02,000
provider in my notes and i'm also going to go here on the

1004
06:00:02,000 --> 06:00:07,360
screen and say um firebase off provider and you'll see an error in

1005
06:00:07,360 --> 06:00:10,080
here in visual studio code you can actually get help from visual studio

1006
06:00:10,080 --> 06:00:14,000
code to complete that missing overwrite for us you can see create one missing

1007
06:00:14,000 --> 06:00:17,592
override and this is basically saying that you're conforming to auth provider

1008
06:00:17,592 --> 06:00:21,439
but you're not actually overwriting all the functions that boss provider wants

1009
06:00:21,439 --> 06:00:25,279
you to override okay so if you're working with vim or if you're working

1010
06:00:25,279 --> 06:00:30,000
with sublime that doesn't for instance have dart's um

1011
06:00:30,000 --> 06:00:34,720
plugin then you may have to override that function yourself but the signature

1012
06:00:34,720 --> 06:00:37,912
of that function is very easy you can just go to auth provider and grab this

1013
06:00:37,912 --> 06:00:41,912
function and just put a override before it okay so that's

1014
06:00:41,912 --> 06:00:46,319
completely fine as well but since i'm working with and this is asking me to

1015
06:00:46,319 --> 06:00:49,191
save this file but there's pretty much nothing that i did in this file already

1016
06:00:49,191 --> 06:00:52,319
okay so since i have visual studio code i can

1017
06:00:52,319 --> 06:00:55,592
ask it to create the missing override for me and it's gonna probably create it

1018
06:00:55,592 --> 06:00:59,191
right at the bottom in here okay so that's fine

1019
06:00:59,191 --> 06:01:05,439
so let's put this whole thing into a catch block so i'm just gonna say catch

1020
06:01:05,439 --> 06:01:09,831
like this all right and then if anything happens

1021
06:01:09,831 --> 06:01:14,479
during this process of sending a password reset email to the user we're

1022
06:01:14,479 --> 06:01:21,279
just gonna throw a generic auth exception in here okay so

1023
06:01:21,279 --> 06:01:25,680
then um and also if you're wondering about this syntax this is just like you

1024
06:01:25,680 --> 06:01:31,119
ignoring an incoming variable in swift and in rust and some other languages

1025
06:01:31,119 --> 06:01:35,592
like python you could also do something like this that you ignore an incoming

1026
06:01:35,592 --> 06:01:40,720
variable using underscore but in dart it's not really you ignoring ignoring

1027
06:01:40,720 --> 06:01:43,680
the variable it's you naming the variable

1028
06:01:43,680 --> 06:01:48,959
underscore but i try to sometimes use this just to indicate that hey i don't

1029
06:01:48,959 --> 06:01:53,279
care about this variable okay but just know that internally you're not ignoring

1030
06:01:53,279 --> 06:01:59,592
it you're just naming it underscore okay so let's go in here and and now ask our

1031
06:01:59,592 --> 06:02:04,319
provider so um so we just say await since we're in firebase auth provider we

1032
06:02:04,319 --> 06:02:09,191
can actually say wait firebase off oh and we have to mark this function as

1033
06:02:09,191 --> 06:02:14,000
async otherwise we can't use a weight and then instance and then there's a

1034
06:02:14,000 --> 06:02:18,400
function called send password reset email and it it says to which email and

1035
06:02:18,400 --> 06:02:22,639
we're gonna say to this email okay

1036
06:02:22,639 --> 06:02:27,119
all right so that's our catch in there but we also have to have another catch

1037
06:02:27,119 --> 06:02:31,511
that is that catches firebase off exception as we're doing in many other

1038
06:02:31,511 --> 06:02:36,159
places so let's have a look um here for instance okay so let's go

1039
06:02:36,159 --> 06:02:40,551
before this catch and say on firebase off exception

1040
06:02:40,551 --> 06:02:46,159
catch e something like that and then curly brackets and curly

1041
06:02:46,159 --> 06:02:51,511
brackets close so i'm going to bring this code up so we see better

1042
06:02:51,511 --> 06:02:55,439
so there are two things that we have to handle two codes that we have to handle

1043
06:02:55,439 --> 06:02:58,720
as you can see we're handling a few codes in here for instance user not

1044
06:02:58,720 --> 06:03:02,400
found wrong password and these things are basically

1045
06:03:02,400 --> 06:03:05,680
i haven't really found the correct documentation for these things like

1046
06:03:05,680 --> 06:03:10,000
where firebase has documented that these errors are going to happen with these

1047
06:03:10,000 --> 06:03:14,080
codes it's mainly that i found them out through experience just like trying

1048
06:03:14,080 --> 06:03:18,400
different things and seeing that things fail and upon failing i caught their

1049
06:03:18,400 --> 06:03:22,159
error code and now i know which error codes i had to actually have to handle

1050
06:03:22,159 --> 06:03:24,959
but if you search on google i'm pretty sure you're gonna find some good

1051
06:03:24,959 --> 06:03:28,720
documentation about a firebase and the google team are great at documenting

1052
06:03:28,720 --> 06:03:32,720
things so so one error that we have to handle is

1053
06:03:32,720 --> 06:03:36,400
called firebase auth invalid email and the other one call is called firebase

1054
06:03:36,400 --> 06:03:41,831
off user not found so let's first grab the um error code so i'm just going

1055
06:03:41,831 --> 06:03:45,439
to say switch e code in here because remember

1056
06:03:45,439 --> 06:03:49,191
any firebase auth exception that comes from firebase has a code of type string

1057
06:03:49,191 --> 06:03:53,592
as you can see here and that's that string that we're interested in so let's

1058
06:03:53,592 --> 06:03:58,080
handle firebase auth invalid email for now okay

1059
06:03:58,080 --> 06:04:02,799
and then in this case we're just going to say throw um invalid email off

1060
06:04:02,799 --> 06:04:07,680
exception oops we already have this defined from before

1061
06:04:07,680 --> 06:04:11,831
okay in our off exceptions here dark file you

1062
06:04:11,831 --> 06:04:14,400
see and the other case that we have to

1063
06:04:14,400 --> 06:04:18,551
handle is called firebase auth user not found so it's a

1064
06:04:18,551 --> 06:04:23,831
user it's like anyone asking for a reminder email for their password and

1065
06:04:23,831 --> 06:04:27,680
that user just doesn't exist in the database so then we have to handle that

1066
06:04:27,680 --> 06:04:31,360
case as well it's called user not found just like that okay and then we're gonna

1067
06:04:31,360 --> 06:04:36,080
throw a user not found off exception

1068
06:04:36,080 --> 06:04:40,159
in any other case of firebase authexception we're just going to throw

1069
06:04:40,159 --> 06:04:43,592
generic off exception just like that okay

1070
06:04:43,592 --> 06:04:48,159
and we're going to save this file

1071
06:04:48,159 --> 06:04:52,080
fantastic so we fixed firebase auth provider but if you look at your project

1072
06:04:52,080 --> 06:04:55,912
explorer you still have a problem in auth service because if you remember

1073
06:04:55,912 --> 06:04:59,912
auth service also implements auth provider but it delegates all its

1074
06:04:59,912 --> 06:05:06,479
responsibility to its auth provider so let's go into our auth service and

1075
06:05:06,479 --> 06:05:10,319
implement the send password reset functionality so i'm just going to go in

1076
06:05:10,319 --> 06:05:13,759
here and get a visual studio code to complete

1077
06:05:13,759 --> 06:05:17,592
this with command dot on mac or control dot and linux and windows and just say

1078
06:05:17,592 --> 06:05:23,040
create one missing override okay and in here i'm making this an arrow function

1079
06:05:23,040 --> 06:05:27,040
because i believe every other function we've done in here is an error function

1080
06:05:27,040 --> 06:05:29,831
since all these functions inside all servers

1081
06:05:29,831 --> 06:05:33,759
as i've stated before basically delegate their functionality

1082
06:05:33,759 --> 06:05:38,000
to the provider which is given to it inside its

1083
06:05:38,000 --> 06:05:40,871
constructor so let's go ahead and create an error

1084
06:05:40,871 --> 06:05:44,720
function and in here just delegate this to the provider and we just say provider

1085
06:05:44,720 --> 06:05:46,831
send email

1086
06:05:46,831 --> 06:05:52,959
verification and in here we just say um send password resets actually called

1087
06:05:52,959 --> 06:06:00,159
sorry provider send password reset to email to email just like that

1088
06:06:00,159 --> 06:06:03,040
all right and let's just save this file then um

1089
06:06:03,040 --> 06:06:04,959
[Music] so

1090
06:06:04,959 --> 06:06:09,592
what we need to do now is to actually handle our auth event for

1091
06:06:09,592 --> 06:06:13,680
god password in the off box so i understand there's lots of like

1092
06:06:13,680 --> 06:06:17,040
jargons that are flying around here so you may just be a bit confused about

1093
06:06:17,040 --> 06:06:21,360
okay what are we actually doing so what we need to do now is you see

1094
06:06:21,360 --> 06:06:24,639
soon what we're going to do is to create a little button in here

1095
06:06:24,639 --> 06:06:28,639
and say forgot password so when the user

1096
06:06:28,639 --> 06:06:32,319
lands in the login screen they may be like okay this is my email but i

1097
06:06:32,319 --> 06:06:35,439
actually forgot my password so they have to have a forgot password button

1098
06:06:35,439 --> 06:06:38,871
somewhere here upon them pressing that button

1099
06:06:38,871 --> 06:06:43,511
in the login view we're gonna send this event to our off block so if you

1100
06:06:43,511 --> 06:06:47,511
remember from our off event so i'm going to go back here you don't have to go

1101
06:06:47,511 --> 06:06:52,159
here if you go to our off events you can see we have an auth event forgot

1102
06:06:52,159 --> 06:06:56,400
password so the goal is for our user and for

1103
06:06:56,400 --> 06:07:00,871
for our user interface to send this events to the auth block and then off

1104
06:07:00,871 --> 06:07:06,319
block is going to calculate its state based on that okay

1105
06:07:06,319 --> 06:07:12,639
so let's go now into our auth block file here as you can see

1106
06:07:12,639 --> 06:07:17,279
and i'm going to do that here in my code as well and we're going to go

1107
06:07:17,279 --> 06:07:19,912
and implement um

1108
06:07:19,912 --> 06:07:27,191
this functionality here forgot password like this and let's go and say on off

1109
06:07:27,191 --> 06:07:30,551
event forgot password just like that and you

1110
06:07:30,551 --> 06:07:35,191
now should be quite used to this syntax emit

1111
06:07:35,191 --> 06:07:39,592
and this is going to be asynchronous function and just uh curly brackets just

1112
06:07:39,592 --> 06:07:43,439
like that so this is like the bare bones of handling

1113
06:07:43,439 --> 06:07:48,080
an event in your block okay now we're handling off event for a

1114
06:07:48,080 --> 06:07:52,639
god password so what we're gonna do in here is we're just gonna say

1115
06:07:52,639 --> 06:07:57,119
uh by default we're emitting a constant

1116
06:07:57,119 --> 06:08:02,231
off state for a god password exception is null has sent email is

1117
06:08:02,231 --> 06:08:06,231
false and it's loading is false so what we're

1118
06:08:06,231 --> 06:08:10,551
basically saying in here is saying by the user pressing the forgot password

1119
06:08:10,551 --> 06:08:15,759
button what we're doing is saying yeah go to the forgot password screen

1120
06:08:15,759 --> 06:08:20,080
that's all that's all we're saying okay because then our main dart file is gonna

1121
06:08:20,080 --> 06:08:23,279
handle this it's gonna say okay if this date is forgot password i'm just gonna

1122
06:08:23,279 --> 06:08:28,479
go to the forgot password screen okay so then what we're gonna do is we're

1123
06:08:28,479 --> 06:08:33,680
gonna extract the user's email from this event if there is an email in there it

1124
06:08:33,680 --> 06:08:39,680
means that the user was in the fargot password screen and actually press the

1125
06:08:39,680 --> 06:08:45,360
button to send a forgot password email to themselves okay so

1126
06:08:45,360 --> 06:08:49,592
if that's not the case then we know that all the user did is just to go to that

1127
06:08:49,592 --> 06:08:55,040
screen so there is no email to handle so let's just say final and if i can spell

1128
06:08:55,040 --> 06:08:59,511
oops final email is event email and we say if

1129
06:08:59,511 --> 06:09:03,831
email is null then we just return meaning that yeah the user it seems like

1130
06:09:03,831 --> 06:09:09,511
the user just wanted to go to the forgot password screen okay

1131
06:09:09,511 --> 06:09:13,360
so that's that's that now if that is not the case so let's just

1132
06:09:13,360 --> 06:09:18,479
put a comment in here user just wants to go to forgot password

1133
06:09:18,479 --> 06:09:22,479
screen and if we end up in here in line 21 for

1134
06:09:22,479 --> 06:09:30,319
me user wants to actually send a forgot password email okay and in this case

1135
06:09:30,319 --> 06:09:35,040
let's just emit the exact same state as we did before but in this case we're

1136
06:09:35,040 --> 06:09:40,159
saying loading okay remember our main dart file is going to catch all

1137
06:09:40,159 --> 06:09:43,511
the states that have loading and actually display our loading screen or

1138
06:09:43,511 --> 06:09:48,231
the loading um overlay okay so that's that part

1139
06:09:48,231 --> 06:09:51,119
but then what we're gonna do is let's just go in here

1140
06:09:51,119 --> 06:09:56,159
and we have to actually say in here do a try catching here so we say cat on

1141
06:09:56,159 --> 06:09:59,680
exception catch

1142
06:09:59,680 --> 06:10:03,912
like that and since we're in our off block we have

1143
06:10:03,912 --> 06:10:08,799
access to our provider so let's say we wait for the provider to send a password

1144
06:10:08,799 --> 06:10:15,511
reset to the email just like that okay and then we have to enable two variables

1145
06:10:15,511 --> 06:10:23,040
in here we just say boolean did send password or set bits and email

1146
06:10:23,040 --> 06:10:27,680
and just like that and we also have an optional exception

1147
06:10:27,680 --> 06:10:32,959
like this so the goal is we have a try and catch block in here and in the try

1148
06:10:32,959 --> 06:10:36,000
we just say yeah this email was sent successfully

1149
06:10:36,000 --> 06:10:39,511
because yeah if you don't end up in the catch block meaning that there's there

1150
06:10:39,511 --> 06:10:42,799
was no error then the email was actually sent

1151
06:10:42,799 --> 06:10:47,360
successfully and we will also say the exception is basically null so we don't

1152
06:10:47,360 --> 06:10:50,871
have to worry about any of those uh

1153
06:10:50,871 --> 06:10:55,040
functionalities um after this point but remember we are

1154
06:10:55,040 --> 06:11:00,799
basically saving these two variables in here so that after the try and catch

1155
06:11:00,799 --> 06:11:06,400
block we can actually emit an aust state for a password with those variables so

1156
06:11:06,400 --> 06:11:10,479
this thing is going to go in here in oh the documentation it's going to go in

1157
06:11:10,479 --> 06:11:14,479
here and this thing is going to go in here

1158
06:11:14,479 --> 06:11:18,000
okay and it's loading is going to be false so that's why we're basically

1159
06:11:18,000 --> 06:11:22,551
storing them in here so in the positive case in the happy path as we call it

1160
06:11:22,551 --> 06:11:25,592
we're going to say did send email is true

1161
06:11:25,592 --> 06:11:30,319
and we're gonna say exception is no okay and in this case that's an email it's

1162
06:11:30,319 --> 06:11:36,000
gonna be false and exception is gonna be e all right so we store those

1163
06:11:36,000 --> 06:11:42,159
and let's just then copy this state from above and let's just paste it in here

1164
06:11:42,159 --> 06:11:46,959
so in this case we say hey the exception is the exception if any

1165
06:11:46,959 --> 06:11:50,319
um invalid oh yeah it can't be constant if

1166
06:11:50,319 --> 06:11:54,319
it's a variable so um let me bring it here again so you can see exception is

1167
06:11:54,319 --> 06:12:00,000
the exception like that it has sent email is going to be it send

1168
06:12:00,000 --> 06:12:03,040
email and um

1169
06:12:03,040 --> 06:12:08,479
is loading is false so that's it now we are emitting that state to the

1170
06:12:08,479 --> 06:12:11,279
application

1171
06:12:11,279 --> 06:12:15,119
all right so after all of this you see if and now

1172
06:12:15,119 --> 06:12:18,871
that we've handled that event and the state in our offload we also have to

1173
06:12:18,871 --> 06:12:23,040
display some sort of a dialogue to the user so if you're on the reset password

1174
06:12:23,040 --> 06:12:28,400
um screen and you enter you've entered your email and you say hey send me a

1175
06:12:28,400 --> 06:12:32,639
reset um password email after you've done that we're then going

1176
06:12:32,639 --> 06:12:36,799
to display a little dialogue to you and say hey okay we did that we've sent any

1177
06:12:36,799 --> 06:12:40,231
error an email to you go check your email so

1178
06:12:40,231 --> 06:12:43,680
we basically need a dialogue and if you remember we have a generic dialogue

1179
06:12:43,680 --> 06:12:47,831
already so we're just going to reuse that okay so let's go ahead as the

1180
06:12:47,831 --> 06:12:51,040
caption at the bottom of the screen in the case go and create a file under lib

1181
06:12:51,040 --> 06:12:56,479
utilities dialogues called password reset email sends dialog

1182
06:12:56,479 --> 06:13:02,959
so um let's let's go ahead and do that under i'm gonna close this file as well

1183
06:13:02,959 --> 06:13:06,959
have a look at what we have in here and we have utilities

1184
06:13:06,959 --> 06:13:10,799
excuse me dialogs i'm going to create a new file in here

1185
06:13:10,799 --> 06:13:14,400
and just going to call it password reset

1186
06:13:14,400 --> 06:13:20,720
and email send dialogue dot dart okay and so that's the file and we're just

1187
06:13:20,720 --> 06:13:24,080
gonna say this is a future void um show

1188
06:13:24,080 --> 06:13:29,680
password uh reset sent dialogue all right so it's

1189
06:13:29,680 --> 06:13:33,439
a function that just needs a build context

1190
06:13:33,439 --> 06:13:37,040
and we're going to get an error here simply because um i believe

1191
06:13:37,040 --> 06:13:40,231
oh visual studio code imported build context for me automatically that was

1192
06:13:40,231 --> 06:13:45,592
fantastic okay so we're just gonna return show generic

1193
06:13:45,592 --> 06:13:49,759
dialogue okay and you can see this is also gonna be auto imported we've

1194
06:13:49,759 --> 06:13:54,799
already had this function from before so let me put a comma here and a

1195
06:13:54,799 --> 06:14:00,000
semicolon at the end just to get the um dart formatter to format my code and i'm

1196
06:14:00,000 --> 06:14:04,400
just going to in here say this is a generic void function okay

1197
06:14:04,400 --> 06:14:08,959
and for title we're just going to say password reset like that with a capital

1198
06:14:08,959 --> 06:14:13,360
r and the content is also string we can say we have now sent

1199
06:14:13,360 --> 06:14:17,040
you a password a reset

1200
06:14:17,040 --> 06:14:20,720
link so like this please check your

1201
06:14:20,720 --> 06:14:24,959
email for more information something like that okay and you can

1202
06:14:24,959 --> 06:14:28,639
change the string if you want and for the options it's an error

1203
06:14:28,639 --> 06:14:33,592
function that has to return a map and it has only one button with the value of

1204
06:14:33,592 --> 06:14:38,319
null and that's it okay

1205
06:14:38,319 --> 06:14:43,191
all right so that's our show password reset sends dialog um

1206
06:14:43,191 --> 06:14:47,592
now what we have to do we also have to develop the actual view for password

1207
06:14:47,592 --> 06:14:50,799
reset so as the caption at the bottom of the

1208
06:14:50,799 --> 06:14:53,592
screen indicates we're gonna go to lib views

1209
06:14:53,592 --> 06:14:58,319
and we're gonna go here you see lib views and under views we're gonna create

1210
06:14:58,319 --> 06:15:01,912
a view called forgot password view so let me go ahead and do that forgot

1211
06:15:01,912 --> 06:15:08,319
password view dot dart okay and i'm gonna go into my notes as well i

1212
06:15:08,319 --> 06:15:13,360
forgot the password view okay but we're gonna create a stateful widget

1213
06:15:13,360 --> 06:15:16,799
in here so that's actually quite a bit of code that we have to we have to write

1214
06:15:16,799 --> 06:15:20,871
but we're gonna take care of that so it's not a problem so let's go to forgot

1215
06:15:20,871 --> 06:15:24,639
password view and the first thing i'm going to do is to create a stateful

1216
06:15:24,639 --> 06:15:28,639
widget with stf in visual studio code i'm just going to call forgot password

1217
06:15:28,639 --> 06:15:33,592
view just like that and since we need a text field on the

1218
06:15:33,592 --> 06:15:38,159
screen and so that the user can enter their uh email address just like we're

1219
06:15:38,159 --> 06:15:43,759
doing in the login view let's go ahead and create a text editing controller but

1220
06:15:43,759 --> 06:15:46,479
before all of that we also have to import materials so that we get rid of

1221
06:15:46,479 --> 06:15:50,080
all these errors that are on the screen right now so let's go in here and just

1222
06:15:50,080 --> 06:15:53,439
create a text editing controller so late final

1223
06:15:53,439 --> 06:15:57,759
text editing controller and let's just call it controller

1224
06:15:57,759 --> 06:16:00,400
and you remember this pattern from before so i don't have to explain it

1225
06:16:00,400 --> 06:16:04,159
again so we go into init state inside in its state we create the

1226
06:16:04,159 --> 06:16:07,759
controller so we say it's a text editing controller oops

1227
06:16:07,759 --> 06:16:11,831
text editing controller and

1228
06:16:11,831 --> 06:16:15,680
in dispose we just dispose of it basically so controller dot displays

1229
06:16:15,680 --> 06:16:18,799
okay so that's just a boilerplate there's nothing

1230
06:16:18,799 --> 06:16:23,191
magical happening in here we're just preparing that view okay

1231
06:16:23,191 --> 06:16:27,759
so what we need to do also in here we're going to create inside this build

1232
06:16:27,759 --> 06:16:32,720
function we're going to return a block listener because

1233
06:16:32,720 --> 06:16:37,191
based on the various states of auth state forgot password so let's go to

1234
06:16:37,191 --> 06:16:41,592
auth state or god password here based on various

1235
06:16:41,592 --> 06:16:46,639
states of this we may have to show or hide different things for instance

1236
06:16:46,639 --> 06:16:51,119
if um if we know that the has sent email

1237
06:16:51,119 --> 06:16:56,959
boolean flag is true then we're gonna basically clear the text fields value

1238
06:16:56,959 --> 06:17:02,231
using the controller's clear function and we're also going to display that

1239
06:17:02,231 --> 06:17:06,080
dialogue that we just wrote has sent email

1240
06:17:06,080 --> 06:17:09,040
blah blah dialogue

1241
06:17:09,040 --> 06:17:14,319
it was a long name it was let's see in our dialogues

1242
06:17:14,319 --> 06:17:19,360
uh where is it in our dialogues if i can find it it should be under utilities

1243
06:17:19,360 --> 06:17:22,720
dialogues and then we we should be called a password recent email sends

1244
06:17:22,720 --> 06:17:26,080
dialogue okay so we're going to display that

1245
06:17:26,080 --> 06:17:32,231
and that is why we need a listener so inside this build in here what we're

1246
06:17:32,231 --> 06:17:36,551
going to do is just going to say we return um a block listener and this

1247
06:17:36,551 --> 06:17:41,912
needs to be auto imported as you can see and this block listener actually listens

1248
06:17:41,912 --> 06:17:46,400
for off block which also needs to be auto imported so there's lots of imports

1249
06:17:46,400 --> 06:17:50,720
and if you don't have a good text editor like visual studio code unfortunately

1250
06:17:50,720 --> 06:17:55,119
you'll have to import all these by hand and that's just a huge time waste direct

1251
06:17:55,119 --> 06:17:59,759
oxy so i don't usually give advice but um

1252
06:17:59,759 --> 06:18:05,119
my advice here at least because i think it's so important is to get yourself a

1253
06:18:05,119 --> 06:18:09,279
good text editor because it makes development a lot easier if you have

1254
06:18:09,279 --> 06:18:13,912
like visual studio code so we have off block and then the second

1255
06:18:13,912 --> 06:18:17,831
and generic parameter is off state which also needs to be auto imported so

1256
06:18:17,831 --> 06:18:21,511
there's if you look at the top of the file there's quite a few um imports

1257
06:18:21,511 --> 06:18:25,912
already that i didn't have to do manually and so we have a listener let's

1258
06:18:25,912 --> 06:18:30,000
get help from visual studio to complete the listener and we also have a little

1259
06:18:30,000 --> 06:18:34,799
um let's see we have a child in our block listener that we can return so in

1260
06:18:34,799 --> 06:18:39,759
here for now let's just say we return a scaffold as a constant all right so

1261
06:18:39,759 --> 06:18:43,759
but we can now work on our listener first

1262
06:18:43,759 --> 06:18:47,191
so inside the listener the only thing we're the only state that we're

1263
06:18:47,191 --> 06:18:50,551
interested in because this is going to return any off state to us as they

1264
06:18:50,551 --> 06:18:56,400
change we're only interested in um if state if i can spell

1265
06:18:56,400 --> 06:19:01,592
is off state forgot password so that's the only state we're interested in

1266
06:19:01,592 --> 06:19:05,912
and then we say if state has sent email then we're going to control go to

1267
06:19:05,912 --> 06:19:10,720
controller and say clear and then we're gonna await on and

1268
06:19:10,720 --> 06:19:16,159
displaying the dialogue so async and then we're gonna say await

1269
06:19:16,159 --> 06:19:21,279
and i forgot the name of our huge file in here again utilities dialogs and

1270
06:19:21,279 --> 06:19:24,871
password reset email so i'm going to grab this the name of this function at

1271
06:19:24,871 --> 06:19:27,912
least okay so i grab the name of that function

1272
06:19:27,912 --> 06:19:32,479
paste it in here and get visual studio code to auto import it for me okay

1273
06:19:32,479 --> 06:19:36,231
and in here the only thing we have to do is just to pass the context in there so

1274
06:19:36,231 --> 06:19:40,000
if the email was sent the password reset was sent and we're going to say clear

1275
06:19:40,000 --> 06:19:44,080
the text on the screen on the controller and then show the dialog telling the

1276
06:19:44,080 --> 06:19:49,360
user hey we sent an email to you okay however if there's

1277
06:19:49,360 --> 06:19:53,119
um exception like this

1278
06:19:53,119 --> 06:19:57,191
then what we're gonna do is to display an error to the user so we're just gonna

1279
06:19:57,191 --> 06:20:01,592
say await show error dialog

1280
06:20:01,592 --> 06:20:04,871
and i think that also got auto imported again

1281
06:20:04,871 --> 06:20:07,511
you see so then we're going to say error dialog

1282
06:20:07,511 --> 06:20:13,119
with that context and then we're going to say we could not process

1283
06:20:13,119 --> 06:20:17,439
your request please make sure that you are a

1284
06:20:17,439 --> 06:20:25,279
registered user or something like that um and we can say

1285
06:20:25,279 --> 06:20:28,159
please make sure that you're a registered user

1286
06:20:28,159 --> 06:20:32,551
or if not and a user

1287
06:20:32,551 --> 06:20:37,912
um or or if not register a user now by

1288
06:20:37,912 --> 06:20:42,551
going back one step okay so this is just some text i mean you

1289
06:20:42,551 --> 06:20:45,191
don't have to write this text it's just basically saying that if you're in the

1290
06:20:45,191 --> 06:20:47,912
forgot password screen and you're saying that hey i

1291
06:20:47,912 --> 06:20:51,279
forgot my password it's my email if we can't find that email if there's an

1292
06:20:51,279 --> 06:20:53,592
exception for instance then

1293
06:20:53,592 --> 06:20:58,080
um we're gonna display this message and say hey you may not be a registered user

1294
06:20:58,080 --> 06:21:02,159
do you want to go back and register yourself

1295
06:21:02,159 --> 06:21:05,279
so and remember in here you could be you

1296
06:21:05,279 --> 06:21:08,720
could try to be more fine-grained because remember our exceptions in here

1297
06:21:08,720 --> 06:21:12,551
off state exception in the case of auth state forgot password

1298
06:21:12,551 --> 06:21:17,360
if you go to our off block um off block

1299
06:21:17,360 --> 06:21:21,759
in this case remember the exceptions come from the send password reset so

1300
06:21:21,759 --> 06:21:24,799
this send password reset if you go to our

1301
06:21:24,799 --> 06:21:28,799
firebase auth provider send password reset oh my god where did

1302
06:21:28,799 --> 06:21:31,360
i end up um no

1303
06:21:31,360 --> 06:21:36,400
firebase auth provider in this case those exceptions could be

1304
06:21:36,400 --> 06:21:41,511
invalid email or user not found so you could actually try to be clean and in

1305
06:21:41,511 --> 06:21:45,511
your auth sorry in your forgot password view and actually check what kind of

1306
06:21:45,511 --> 06:21:49,511
exception that is so i actually think it's it's better if you do that i'm not

1307
06:21:49,511 --> 06:21:53,360
going to do that in for the sake of just saving some time but you may decide to

1308
06:21:53,360 --> 06:21:57,680
go ahead and do that and i encourage you actually excuse me

1309
06:21:57,680 --> 06:22:03,511
to do something like that if you want to

1310
06:22:03,511 --> 06:22:07,439
so what we need to do now um

1311
06:22:07,439 --> 06:22:11,680
is we've done the listener so that's really good but in the child we actually

1312
06:22:11,680 --> 06:22:16,720
have to create um we have to create a um proper scaffold

1313
06:22:16,720 --> 06:22:20,231
so let's go ahead and remove the consonant

1314
06:22:20,231 --> 06:22:22,871
in here because at the end we're not going to end up with a constant scaffold

1315
06:22:22,871 --> 06:22:26,080
it's very rare that you'd end up with a constant scaffold

1316
06:22:26,080 --> 06:22:29,439
and in the app bar i'm just going to say we have an app bar

1317
06:22:29,439 --> 06:22:33,592
in here and it has a title and the title is just

1318
06:22:33,592 --> 06:22:39,680
going to be constant text and we're just gonna say forgot password

1319
06:22:39,680 --> 06:22:42,479
okay some commas in there to get the

1320
06:22:42,479 --> 06:22:46,720
formatting correctly and in the body we're gonna

1321
06:22:46,720 --> 06:22:50,551
create a column this is what i usually like to do create

1322
06:22:50,551 --> 06:22:54,479
a column and then i'm going to wrap it in some padding like this and let's just

1323
06:22:54,479 --> 06:22:58,959
say padding of 16 as well okay

1324
06:22:58,959 --> 06:23:01,592
so then

1325
06:23:01,592 --> 06:23:05,680
that's that's basically our main focus in here so we need to work on

1326
06:23:05,680 --> 06:23:10,551
a little column in your forgot password view

1327
06:23:10,551 --> 06:23:14,159
so now we have that as the first child of the column we're going to add a

1328
06:23:14,159 --> 06:23:18,639
little const of text in here and to tell the user actually what they

1329
06:23:18,639 --> 06:23:20,959
should do in this screen so let's just say

1330
06:23:20,959 --> 06:23:25,831
and i'm going to grab the text that i had prepared from before

1331
06:23:25,831 --> 06:23:30,479
and paste it in here so i don't have to actually write this thing again so uh

1332
06:23:30,479 --> 06:23:37,119
let's see why is it complaining what is the actual error um too many

1333
06:23:37,119 --> 06:23:40,400
positional arguments okay i've messed up something in here

1334
06:23:40,400 --> 06:23:44,639
right of course because in the column i added actually didn't say children

1335
06:23:44,639 --> 06:23:49,831
so let me remove this children inside the children first i'm

1336
06:23:49,831 --> 06:23:53,831
going to put this text okay so if you have the same problem like me it's

1337
06:23:53,831 --> 06:23:57,759
because you place the text right inside the column and that's not okay we have

1338
06:23:57,759 --> 06:24:01,680
to put it inside children property of the column okay

1339
06:24:01,680 --> 06:24:04,871
and we're going to create a text field right after this where the user can

1340
06:24:04,871 --> 06:24:11,119
actually enter their email address so let's say text um text field

1341
06:24:11,119 --> 06:24:15,831
and in here let's see yeah but we don't have a comma at the end of

1342
06:24:15,831 --> 06:24:19,191
this either so i'm going to put a comma in here okay text field so the screen

1343
06:24:19,191 --> 06:24:22,799
looks a little bit scary right now it's just because it thinks that it has to be

1344
06:24:22,799 --> 06:24:27,360
a constant but it's not a constant so these little warnings are gonna soon

1345
06:24:27,360 --> 06:24:31,360
disappear okay so let's say keyboard type and it's a

1346
06:24:31,360 --> 06:24:35,511
text input type so i'm gonna say text input type

1347
06:24:35,511 --> 06:24:41,592
email address okay autocorrect on email fields always has

1348
06:24:41,592 --> 06:24:44,799
to be false okay you don't want autocorrect on email fields it's very

1349
06:24:44,799 --> 06:24:47,912
annoying and we autofocus as well so that when

1350
06:24:47,912 --> 06:24:53,119
the user ends up on that screen the textville is automatically focused on

1351
06:24:53,119 --> 06:24:56,799
and then we put a controller and after this the problem with the constants is

1352
06:24:56,799 --> 06:25:01,040
gonna go away so that's fantastic um and then let's

1353
06:25:01,040 --> 06:25:06,720
just go and create a little decoration with a hint so we just say const

1354
06:25:06,720 --> 06:25:11,759
input decoration and we're going to say hint text is

1355
06:25:11,759 --> 06:25:16,479
your email address like this okay

1356
06:25:16,479 --> 06:25:19,592
so that's that part now we've created the text field

1357
06:25:19,592 --> 06:25:24,080
after this we actually need to have a text button we actually need two of them

1358
06:25:24,080 --> 06:25:27,119
so i'm going to say text button [Music]

1359
06:25:27,119 --> 06:25:30,319
like this and inside the text button on the first

1360
06:25:30,319 --> 06:25:34,551
one it's going to it's going to be the actual cta call to action meaning that

1361
06:25:34,551 --> 06:25:37,759
when the users enter their email address then they're going to press this button

1362
06:25:37,759 --> 06:25:40,959
and this upon pressing this button we're going to send

1363
06:25:40,959 --> 06:25:46,319
the email to them okay so let's say i'm pressed and this is an empty function

1364
06:25:46,319 --> 06:25:50,871
just like this for now and its child is just going to be const of text

1365
06:25:50,871 --> 06:25:55,279
and we're gonna send send me password reset link

1366
06:25:55,279 --> 06:25:59,759
like this so that's the first i'm gonna copy this

1367
06:25:59,759 --> 06:26:04,479
text button actually and paste it again right after that and in here we're just

1368
06:26:04,479 --> 06:26:06,799
gonna say back to

1369
06:26:06,799 --> 06:26:11,511
login the login page and in here we actually have this functionality from

1370
06:26:11,511 --> 06:26:17,040
before in our auth blog so let's just go inside this and say context read or off

1371
06:26:17,040 --> 06:26:21,831
block from the context and then we're gonna add an event in here and say off

1372
06:26:21,831 --> 06:26:28,639
event login so actually sorry log out

1373
06:26:28,639 --> 06:26:32,551
so this is gonna send the user to the login page okay so that's the second

1374
06:26:32,551 --> 06:26:36,959
button handle already and in the first button let's just grab

1375
06:26:36,959 --> 06:26:41,279
the user's email so let's just say email is controller

1376
06:26:41,279 --> 06:26:43,592
text and

1377
06:26:43,592 --> 06:26:47,360
in here we're then going to tell the off block that it has to send a password

1378
06:26:47,360 --> 06:26:51,592
reset to this email so we're just going to say context dot read off block from

1379
06:26:51,592 --> 06:26:55,831
the context and we're going to add and we're going to say off

1380
06:26:55,831 --> 06:27:00,551
event forgot password

1381
06:27:00,551 --> 06:27:06,959
and the email is email just like that all right

1382
06:27:06,959 --> 06:27:10,080
well that's it actually in this case maybe

1383
06:27:10,080 --> 06:27:14,080
yeah it's cleaner not to have a comma in there because if i put a comma then it

1384
06:27:14,080 --> 06:27:17,360
formats a code like this but without having formats like this which to me in

1385
06:27:17,360 --> 06:27:22,871
my opinion is a little bit cleaner okay so i think now we've implemented that so

1386
06:27:22,871 --> 06:27:27,279
this screen should be ready our forgot password view

1387
06:27:27,279 --> 06:27:31,119
so as a caption now at the bottom of the screen in the case we need to go and

1388
06:27:31,119 --> 06:27:36,551
look for the off state for god password and return for god password view in main

1389
06:27:36,551 --> 06:27:40,240
dark file so i'm gonna go to main dark file um

1390
06:27:40,240 --> 06:27:44,000
[Music] so let's let me close this and close

1391
06:27:44,000 --> 06:27:48,000
this and let's go to main dart file and we are handling already quite a lot of

1392
06:27:48,000 --> 06:27:52,799
states and right after here login view excuse me

1393
06:27:52,799 --> 06:27:57,360
let's then say else if state is off state for a god

1394
06:27:57,360 --> 06:28:01,439
password just like that curly brackets

1395
06:28:01,439 --> 06:28:04,400
and in here then we're going to say return

1396
06:28:04,400 --> 06:28:09,680
const forgot password view and this is going to be also imported as well okay

1397
06:28:09,680 --> 06:28:14,479
so that's it oh um

1398
06:28:14,479 --> 06:28:20,000
that's that's that part uh our forgot password

1399
06:28:20,000 --> 06:28:23,191
and what we also need to do is to make sure

1400
06:28:23,191 --> 06:28:29,511
inside our login view so let's go into our login view now

1401
06:28:29,511 --> 06:28:34,000
we need to have a little button in here that allows the user to go to the

1402
06:28:34,000 --> 06:28:38,400
foreground password view so we're gonna add that in here so i'm just gonna

1403
06:28:38,400 --> 06:28:42,000
create another text button so copy the text button that you have at the bottom

1404
06:28:42,000 --> 06:28:46,639
and paste it in between in here okay and in this text right now we're just going

1405
06:28:46,639 --> 06:28:51,912
to say i forgot my password like this and in here let's just send off event

1406
06:28:51,912 --> 06:28:55,831
for that password okay

1407
06:28:55,831 --> 06:29:00,400
so now if i press the command s button to hot reload you can see i forgot my

1408
06:29:00,400 --> 06:29:04,799
password displayed here and we press it and at the moment actually nothing is

1409
06:29:04,799 --> 06:29:08,799
happening it's probably because we changed our main dart file and we

1410
06:29:08,799 --> 06:29:13,680
haven't done hot reload so sorry hot restart so i do a hot restart now and i

1411
06:29:13,680 --> 06:29:16,959
say i forgot my password you can see we end up in this screen that we just

1412
06:29:16,959 --> 06:29:21,040
developed and then you have the avail ability to send a

1413
06:29:21,040 --> 06:29:27,191
um reminder email and if you say back to login page then logout is sent and you

1414
06:29:27,191 --> 06:29:31,360
end up in here okay so that is working now

1415
06:29:31,360 --> 06:29:34,720
um now what we need to do also in a login

1416
06:29:34,720 --> 06:29:38,720
view dart in here so let's go to login view dart

1417
06:29:38,720 --> 06:29:43,439
and have a look at how we're handling this user not found at the moment and we

1418
06:29:43,439 --> 06:29:47,119
have just user not found but if you think about it there is going to be

1419
06:29:47,119 --> 06:29:52,319
people from both apple and google who will test your application when you send

1420
06:29:52,319 --> 06:29:56,639
it to app store and uh google play store so just saying user

1421
06:29:56,639 --> 06:30:00,400
not found is a little bit it's i don't want to say it's wrong but

1422
06:30:00,400 --> 06:30:06,319
it's just not fully encompassing what could what the problem

1423
06:30:06,319 --> 06:30:08,551
could actually be so

1424
06:30:08,551 --> 06:30:12,551
saying user not found is like the bare minimum of what we could convey to our

1425
06:30:12,551 --> 06:30:16,479
user so let's just make that better by having a little bit better

1426
06:30:16,479 --> 06:30:20,959
text in here so i'm just going to write this text that i had from before so we

1427
06:30:20,959 --> 06:30:24,639
it's better just to say cannot find a user with the entered credentials okay

1428
06:30:24,639 --> 06:30:30,159
just a little bit better message as now that we're we've basically done

1429
06:30:30,159 --> 06:30:34,799
the forgot password where we're going into the cleanup state so we're adding

1430
06:30:34,799 --> 06:30:38,959
some final ui touches to our application to make it look better so as the caption

1431
06:30:38,959 --> 06:30:42,799
indicates let's go into login view and add a padding in here you see we just

1432
06:30:42,799 --> 06:30:47,511
have a column and it kind of looks like edge to edge it's not so professional so

1433
06:30:47,511 --> 06:30:51,831
let's just add a padding in here i'm just going to say wrap with padding

1434
06:30:51,831 --> 06:30:55,912
and we're just going to say padding of 16 in here okay so it looks a little bit

1435
06:30:55,912 --> 06:30:59,040
nicer in my opinion at least looks cleaner okay even if you're doing

1436
06:30:59,040 --> 06:31:02,959
website development you're inherited um

1437
06:31:02,959 --> 06:31:07,191
for instance elements on the screen they have like your user agent has some

1438
06:31:07,191 --> 06:31:11,191
padding already or margins built in to inherited widgets it's our inherited

1439
06:31:11,191 --> 06:31:15,040
element so um unless you go and change your css so

1440
06:31:15,040 --> 06:31:20,159
this is kind of us adding that um padding in our elements in the flutter

1441
06:31:20,159 --> 06:31:23,759
application so the next thing that we need to do in

1442
06:31:23,759 --> 06:31:26,799
here you can see in the login page at the moment it's just on the top says

1443
06:31:26,799 --> 06:31:30,479
login and enter your email blah blah but it doesn't actually give the user any

1444
06:31:30,479 --> 06:31:33,912
instructions you see here in the i forgot my password we're giving the user

1445
06:31:33,912 --> 06:31:38,080
some instructions on what he or she has to do but in the login page we're not so

1446
06:31:38,080 --> 06:31:42,400
let's go ahead and remedy that and just add a text on top of the screen i'm

1447
06:31:42,400 --> 06:31:46,479
going to paste that text from what i had before inside the children of this

1448
06:31:46,479 --> 06:31:50,720
column and we're just saying please log into your account blah blah

1449
06:31:50,720 --> 06:31:54,799
and you'll see now that appear here just makes it look a little bit nicer in my

1450
06:31:54,799 --> 06:31:58,551
opinion and

1451
06:31:58,551 --> 06:32:03,831
we've already now fixed this and going from the login view to our

1452
06:32:03,831 --> 06:32:08,400
forgot password we've already added that in here as you can see so this element

1453
06:32:08,400 --> 06:32:10,959
at the bottom of the screen this caption is already addressed we don't have to do

1454
06:32:10,959 --> 06:32:15,191
anything special about that now let's go to

1455
06:32:15,191 --> 06:32:20,000
register view as you can see our have you broken the register view not

1456
06:32:20,000 --> 06:32:24,159
registered yet i can see that that button at the moment isn't working so

1457
06:32:24,159 --> 06:32:29,439
let's see what we've broken event should register okay

1458
06:32:29,439 --> 06:32:34,231
and inside our off block event should register i can see we

1459
06:32:34,231 --> 06:32:37,759
haven't even handled off event should register so

1460
06:32:37,759 --> 06:32:40,799
that's we need to definitely do that right now

1461
06:32:40,799 --> 06:32:45,191
so let's go to off block and um

1462
06:32:45,191 --> 06:32:51,119
have a look at handling our um i'm gonna remove this caption right now

1463
06:32:51,119 --> 06:32:55,279
because that's not what we're working on right now so let's go to our off block

1464
06:32:55,279 --> 06:33:00,319
i'm going to maybe actually add that so um

1465
06:33:00,319 --> 06:33:04,000
as a caption so that it is clear

1466
06:33:04,000 --> 06:33:09,759
what we're working on right now okay so let's go to our auth block and say on

1467
06:33:09,759 --> 06:33:14,959
this event and let's just say event and emit

1468
06:33:14,959 --> 06:33:19,680
just like that and what we're doing in here is to say

1469
06:33:19,680 --> 06:33:25,119
we're now emitting constant off state registering

1470
06:33:25,119 --> 06:33:29,592
okay and there is no exception and there is no loading so false just like that

1471
06:33:29,592 --> 06:33:34,000
okay and a comma here to get the formatting working so now let's press

1472
06:33:34,000 --> 06:33:37,592
hot restart because remember you're changing your auth block which is being

1473
06:33:37,592 --> 06:33:42,720
provided in your in to your entire application in the main dart file so

1474
06:33:42,720 --> 06:33:47,360
main dart here so you can see in here it's the

1475
06:33:47,360 --> 06:33:51,831
block provider that is basically creating the off block so if you change

1476
06:33:51,831 --> 06:33:54,799
anything in your off block you may actually have to do a hot restart okay

1477
06:33:54,799 --> 06:33:58,799
for those changes to take effect for app for entire applications so not

1478
06:33:58,799 --> 06:34:02,551
registered yet pressing it goes to the register view okay

1479
06:34:02,551 --> 06:34:06,639
so as the next point that we have to handle here is to add some padding to

1480
06:34:06,639 --> 06:34:10,720
our register view as you can see in here our register view

1481
06:34:10,720 --> 06:34:13,279
at the moment looks like this we have the register button and already

1482
06:34:13,279 --> 06:34:17,912
registered button buttons right here but we don't have any padding around our

1483
06:34:17,912 --> 06:34:20,799
register view so let's go ahead and take care of that so i'm going to go to

1484
06:34:20,799 --> 06:34:23,680
register view here and

1485
06:34:23,680 --> 06:34:27,912
let's go ahead then and wrap this column that is

1486
06:34:27,912 --> 06:34:31,191
at the moment in here and just say wrap it with padding as the caption at the

1487
06:34:31,191 --> 06:34:34,720
bottom of the screen says we're going to add a padding of 16. so

1488
06:34:34,720 --> 06:34:39,040
you can see now we have some padding in there and soon just like in the login

1489
06:34:39,040 --> 06:34:42,319
view we're going to add some text to the top of the register view so what we need

1490
06:34:42,319 --> 06:34:46,720
to do is just to ensure that deleting that their text inside this column is

1491
06:34:46,720 --> 06:34:50,959
actually pat it's and it's basically sticking to the left side of the column

1492
06:34:50,959 --> 06:34:54,720
because by default all the components that you place inside your column are

1493
06:34:54,720 --> 06:35:00,551
vertically aligned and no sorry they're horizontally aligned in the main axis of

1494
06:35:00,551 --> 06:35:03,592
your of your um

1495
06:35:03,592 --> 06:35:07,592
column so if you that's what i mean like if the column what i mean is that the

1496
06:35:07,592 --> 06:35:12,959
column is expanding to the entire space uh real state and then all the

1497
06:35:12,959 --> 06:35:16,479
components that you're placing inside your column they're horizontally aligned

1498
06:35:16,479 --> 06:35:20,400
in inside the column so that's actually a better way of probably

1499
06:35:20,400 --> 06:35:24,319
saying it so and what we need to do in here let's just go and say uh inside the

1500
06:35:24,319 --> 06:35:27,511
column as you can see in the caption at the bottom screen we're going to say

1501
06:35:27,511 --> 06:35:31,119
cross axis alignment we're going to say cross axis alignment

1502
06:35:31,119 --> 06:35:35,511
start if i save this and go back to the register viewer you're seeing this in

1503
06:35:35,511 --> 06:35:40,720
here basically like that and what we're going to do then is to um

1504
06:35:40,720 --> 06:35:46,959
is to add a title to our column so i've already added that before so let me

1505
06:35:46,959 --> 06:35:50,871
bring that up so uh

1506
06:35:50,871 --> 06:35:55,439
i'm going to add a little title to the first item inside the register view so

1507
06:35:55,439 --> 06:35:59,592
it looks like this but we also now that we've done that i mean we want our text

1508
06:35:59,592 --> 06:36:02,479
field to be left aligned that's why we added this cross access alignment but

1509
06:36:02,479 --> 06:36:06,159
we've kind of messed up the alignment of our buttons in here so we need to kind

1510
06:36:06,159 --> 06:36:11,912
of wrap them inside centers so what we could do is to inside you see we

1511
06:36:11,912 --> 06:36:16,231
have two elements in here but we don't want to wrap both of them in their own

1512
06:36:16,231 --> 06:36:20,319
centers so what we could do is just to say wrap um this

1513
06:36:20,319 --> 06:36:24,551
text button inside a column then we put the other text button also

1514
06:36:24,551 --> 06:36:31,279
inside the column right here and then we will wrap this column

1515
06:36:31,279 --> 06:36:37,040
inside a center so wrap this column then inside a center just like that

1516
06:36:37,040 --> 06:36:40,720
so if you go back to our register view now we have a nice little layout

1517
06:36:40,720 --> 06:36:45,191
displayed there so we've taken care of that we've taken

1518
06:36:45,191 --> 06:36:49,279
care of the title of our application and what we also need to do is to make

1519
06:36:49,279 --> 06:36:52,639
sure when we come to the register view um

1520
06:36:52,639 --> 06:36:58,000
that we are auto focusing on our uh text field in here

1521
06:36:58,000 --> 06:37:03,439
so let's go inside the effects if the first text field and um

1522
06:37:03,439 --> 06:37:07,680
and right after auto correcting here we're gonna say um

1523
06:37:07,680 --> 06:37:11,592
autofocus true so when i press save in here and i

1524
06:37:11,592 --> 06:37:14,799
go to the register screen you can see that the keyboard pops up automatically

1525
06:37:14,799 --> 06:37:20,639
auto focusing on the first email field right there

1526
06:37:20,639 --> 06:37:25,592
okay now we also have a little problem in here and that is

1527
06:37:25,592 --> 06:37:29,759
that we haven't fixed our tests as you can see in here

1528
06:37:29,759 --> 06:37:33,439
implement send password reset and mock auth provider

1529
06:37:33,439 --> 06:37:37,511
and throw i can see there's a spelling error in the caption i'm going to fix

1530
06:37:37,511 --> 06:37:40,959
that right away um

1531
06:37:40,959 --> 06:37:44,319
like that i apologize for that um

1532
06:37:44,319 --> 06:37:50,159
and that is here so let's go and fix our test so i want you to please go to us

1533
06:37:50,159 --> 06:37:54,720
testing here and you'll see that we have an error here telling us in mock auth

1534
06:37:54,720 --> 06:37:58,319
provider saying that we haven't implemented the last function that we

1535
06:37:58,319 --> 06:38:01,759
just added to our off provider called send password reset

1536
06:38:01,759 --> 06:38:06,959
so let's go in here and just ask it to oops ask it to

1537
06:38:06,959 --> 06:38:11,912
create that missing override and what we're going to do for this

1538
06:38:11,912 --> 06:38:15,912
exercise at the moment is just we're gonna leave this as it is on implemented

1539
06:38:15,912 --> 06:38:20,000
error and i actually encourage you to go and do an implementation for the send

1540
06:38:20,000 --> 06:38:23,040
password reset you may for instance do some

1541
06:38:23,040 --> 06:38:28,799
mock and password reset do some future uh delayed a weight on it and change

1542
06:38:28,799 --> 06:38:32,319
some states in your provider if you want to you're more welcome to do that so you

1543
06:38:32,319 --> 06:38:36,159
could just take this as an exercise but we're just going to leave it like this

1544
06:38:36,159 --> 06:38:40,159
for now but i highly encourage you to actually write some tests for this as

1545
06:38:40,159 --> 06:38:43,680
well so we've now done quite a lot of work

1546
06:38:43,680 --> 06:38:47,360
we've done quite a lot of reshuffling things around what we could do is just

1547
06:38:47,360 --> 06:38:51,360
to have a look at the entire app and see how it kind of looks like so i'm gonna

1548
06:38:51,360 --> 06:38:55,191
do a hot restart and we end up in here you can see our

1549
06:38:55,191 --> 06:39:00,231
login screen works fine and if we try to log in with a user that

1550
06:39:00,231 --> 06:39:05,040
doesn't exist in the application anymore so i could just type any password and

1551
06:39:05,040 --> 06:39:09,439
say login and we get our updated screen that says cannot find a user

1552
06:39:09,439 --> 06:39:13,439
then i can actually go and register that user the text field is autofocus that we

1553
06:39:13,439 --> 06:39:17,759
fixed so foobar who barbaz

1554
06:39:17,759 --> 06:39:21,680
register this user and we can see that we get this verify

1555
06:39:21,680 --> 06:39:26,400
email we sent you an email verification we also have to clean this view up soon

1556
06:39:26,400 --> 06:39:31,759
because i believe that this is not a part of this a particular chapter at the

1557
06:39:31,759 --> 06:39:36,551
moment that we clean this up but we're gonna we're gonna clean it up soon

1558
06:39:36,551 --> 06:39:42,319
um so the verification email should have been sent now so if i go to my mail

1559
06:39:42,319 --> 06:39:46,720
application i'll just see if i can somehow bring it up so

1560
06:39:46,720 --> 06:39:50,319
i can see that

1561
06:39:50,319 --> 06:39:56,639
have i received any email from firebase yes and that email is available here i

1562
06:39:56,639 --> 06:40:01,759
can bring it to the screen as you can see there is a link on it so

1563
06:40:01,759 --> 06:40:05,680
i'm gonna tap this link and this will then verify my user

1564
06:40:05,680 --> 06:40:10,720
if we then go to our firebase so if i say console firebase if

1565
06:40:10,720 --> 06:40:14,479
we go to the console of our application now we should see that user generated

1566
06:40:14,479 --> 06:40:18,871
here inside authentication so that user is right here and is

1567
06:40:18,871 --> 06:40:23,912
verified user so we can just press the restart button and log in with that user

1568
06:40:23,912 --> 06:40:27,191
so if i say foo bar bas

1569
06:40:27,191 --> 06:40:30,551
log in and we see our dialog and there are no notes so i'm just going to create

1570
06:40:30,551 --> 06:40:36,231
my first note in here and it's sitting there thinking

1571
06:40:36,231 --> 06:40:41,759
and then i'm gonna say hello world all right that's my first note gonna go out

1572
06:40:41,759 --> 06:40:47,592
let's go to the console again and to our application and have a look at

1573
06:40:47,592 --> 06:40:52,231
our fire firestore database and make sure that that note was actually created

1574
06:40:52,231 --> 06:40:57,680
and i can see that was actually created here hello world with that user id nvic

1575
06:40:57,680 --> 06:41:01,040
if i go to authentication i can see nvic is actually

1576
06:41:01,040 --> 06:41:05,912
and indeed that user so it seems to be working we have quite a

1577
06:41:05,912 --> 06:41:09,511
bit of work still left we have worked with the

1578
06:41:09,511 --> 06:41:13,831
with some margins we have worked with icons app name etc before we can submit

1579
06:41:13,831 --> 06:41:16,551
it and these are things that we're going to take care of in the coming chapters

1580
06:41:16,551 --> 06:41:19,592
but we've got we've come basically a good bit forward

1581
06:41:19,592 --> 06:41:23,279
so we're almost there but not really really there so

1582
06:41:23,279 --> 06:41:27,360
but no worries we're going to fix those soon and let me do some screen

1583
06:41:27,360 --> 06:41:32,080
reshuffling in here and let's have a look at the committing of our work which

1584
06:41:32,080 --> 06:41:35,360
is something that we usually do at the end of every chapter so

1585
06:41:35,360 --> 06:41:39,360
i'm going to minimize scr cpy increase the size of visual studio code so you

1586
06:41:39,360 --> 06:41:45,191
see my screen better let's go in here to the terminal and have a look at this

1587
06:41:45,191 --> 06:41:51,592
shell in here and say git status and and yes we have

1588
06:41:51,592 --> 06:41:55,191
a few files that are on track which are new which is our forgot password view

1589
06:41:55,191 --> 06:41:59,040
which is new and password reset email sent dialog which is new

1590
06:41:59,040 --> 06:42:04,000
and quite a lot of files that have been updated in here so let's just say git

1591
06:42:04,000 --> 06:42:08,799
add all and also git commit step 27 all right

1592
06:42:08,799 --> 06:42:14,231
hit status and we have to push our changes also

1593
06:42:14,231 --> 06:42:18,231
so after we've done that let's also tag as is tradition at the end of every

1594
06:42:18,231 --> 06:42:23,279
chapter we're going to tag this and push our tags

1595
06:42:23,279 --> 06:42:27,119
and after doing that we can say git status as you can see there's nothing to

1596
06:42:27,119 --> 06:42:31,592
commit in here and nothing to push again as a tradition at the end of every

1597
06:42:31,592 --> 06:42:35,279
chapter we talk about what we need to discuss in the coming chapter

1598
06:42:35,279 --> 06:42:38,720
so this is the exciting part at the moment we've been working a lot with the

1599
06:42:38,720 --> 06:42:43,119
application code itself but we haven't really done anything to make it ready

1600
06:42:43,119 --> 06:42:48,231
really for release the app store and the play store google play store and there

1601
06:42:48,231 --> 06:42:52,080
are a lot of things that we have to do such as screenshots we have to prepare

1602
06:42:52,080 --> 06:42:54,551
for each respective store and we also have

1603
06:42:54,551 --> 06:42:57,759
to prepare the app icon the app name etc so

1604
06:42:57,759 --> 06:43:00,799
lots of work to do and that's the kind of thing that we're going to take care

1605
06:43:00,799 --> 06:43:05,511
of in the next chapter so i'll see you there hello and welcome to chapter 45 of

1606
06:43:05,511 --> 06:43:09,511
the slatter course in previous chapters we've been talking quite a bit about our

1607
06:43:09,511 --> 06:43:13,191
authentication and authentication block and then in the previous chapter we made

1608
06:43:13,191 --> 06:43:16,400
our application a little bit more ready for releasing in the app store and

1609
06:43:16,400 --> 06:43:20,720
google play store but we still have quite a bit left and these are like some

1610
06:43:20,720 --> 06:43:24,639
of the final touches that we're gonna put on our application before we can

1611
06:43:24,639 --> 06:43:27,040
release it in their respective app stores

1612
06:43:27,040 --> 06:43:30,720
um so what we're gonna do specifically in this chapter as you can see in the

1613
06:43:30,720 --> 06:43:33,592
caption at the bottom of the screen we're gonna take care of our app icons

1614
06:43:33,592 --> 06:43:37,279
and the app name and i'm gonna take you through the process which works very

1615
06:43:37,279 --> 06:43:41,912
well and has always worked for me so i'm going to show you how to grab

1616
06:43:41,912 --> 06:43:46,551
free icons bring them into your application and also be able to kind of

1617
06:43:46,551 --> 06:43:51,119
like automate that process you don't have to generate the icons by hand

1618
06:43:51,119 --> 06:43:55,831
so to begin with we have to talk about what app icons are so so far we've been

1619
06:43:55,831 --> 06:43:59,759
just kind of like running our application and just looking at what is

1620
06:43:59,759 --> 06:44:03,831
inside the app itself we haven't really have we haven't had the time to actually

1621
06:44:03,831 --> 06:44:08,400
look what's the application how the application is represented from

1622
06:44:08,400 --> 06:44:12,720
the user's perspective on the operating system so

1623
06:44:12,720 --> 06:44:16,720
if i bring up scr cpy in the middle of the screen

1624
06:44:16,720 --> 06:44:20,080
and then i bring this application and the um

1625
06:44:20,080 --> 06:44:23,680
all the apps up in this android phone for instance this you can see is our

1626
06:44:23,680 --> 06:44:29,040
application right here so if i change the screen and

1627
06:44:29,040 --> 06:44:32,639
a little bit here so you see better so you can see our

1628
06:44:32,639 --> 06:44:36,639
notes application is right here and it has a default icon so every application

1629
06:44:36,639 --> 06:44:40,959
on both android and ios and pretty much in every operating system has its own

1630
06:44:40,959 --> 06:44:46,479
icon so flutter allows you or flutter provides a default icon for all the

1631
06:44:46,479 --> 06:44:50,080
applications that you create with flutter create so you have a default

1632
06:44:50,080 --> 06:44:52,871
icon that is displayed for your application but

1633
06:44:52,871 --> 06:44:56,720
this is just a default flutter icon as i'm mentioning so we need to have our

1634
06:44:56,720 --> 06:45:00,400
own icon that the operating system can display to the user

1635
06:45:00,400 --> 06:45:04,639
in order to represent our application amongst all the other applications that

1636
06:45:04,639 --> 06:45:08,231
are installed on that target operating system

1637
06:45:08,231 --> 06:45:12,479
so that's for the icons and then what we have to talk about is what splash

1638
06:45:12,479 --> 06:45:16,479
screens are so splash screen is this little screen that the operating system

1639
06:45:16,479 --> 06:45:22,080
displays on the screen and as soon as you open an application so i'm wondering

1640
06:45:22,080 --> 06:45:24,959
if there's any application for instance here that i can

1641
06:45:24,959 --> 06:45:28,959
open up in order for us to see a splash screen so let's for instance go here to

1642
06:45:28,959 --> 06:45:34,231
the clock application and as i saw here let me just bring it up again so if i

1643
06:45:34,231 --> 06:45:40,231
kill the clock application by going here and then i go to the clock

1644
06:45:40,231 --> 06:45:43,511
application again you can see that there is a black screen just

1645
06:45:43,511 --> 06:45:47,759
displays instantaneously and then just disappears that is the splash screen and

1646
06:45:47,759 --> 06:45:50,871
or in this case you could actually see it's the lack of its flat screen because

1647
06:45:50,871 --> 06:45:54,319
there's no splash screen apparently for the clock application and let's go to

1648
06:45:54,319 --> 06:45:57,360
calculator and this application opens up so fast it

1649
06:45:57,360 --> 06:46:00,720
probably doesn't even have a splash screen but what essentially his flash

1650
06:46:00,720 --> 06:46:04,959
screen is is a screen as its name indicate that gets displayed to the user

1651
06:46:04,959 --> 06:46:11,831
just very fast while flutter is loading its binary to display to the to

1652
06:46:11,831 --> 06:46:17,360
um the user so there are two stages for flutter to actually show a splash screen

1653
06:46:17,360 --> 06:46:21,511
one is when the application binary is being loaded by the operating system and

1654
06:46:21,511 --> 06:46:26,231
then there is another stage when the flutter engine is being loaded to be

1655
06:46:26,231 --> 06:46:30,639
basically kicking off your applications process basically but i'm not going to

1656
06:46:30,639 --> 06:46:33,439
go into too much details about that but just know that splashbearing is a screen

1657
06:46:33,439 --> 06:46:37,680
that the operating system displays the user while it's loading the application

1658
06:46:37,680 --> 06:46:42,159
so if for instance your application is being loaded or is being displayed for

1659
06:46:42,159 --> 06:46:47,360
the first time on an android telephone version that has very old hardware

1660
06:46:47,360 --> 06:46:50,479
because there are thousands and thousands of android devices out there

1661
06:46:50,479 --> 06:46:54,720
then the operating system may actually take a lot of time in order to load your

1662
06:46:54,720 --> 06:46:59,191
binary and that time it will and during that time it will display a splash

1663
06:46:59,191 --> 06:47:05,119
screen so we're going to fix both the app icon and a splash screen soon

1664
06:47:05,119 --> 06:47:08,551
so let's now talk about where you can actually find some icons so if you're a

1665
06:47:08,551 --> 06:47:11,759
designer and if you're comfortable with figma or sketch for instance then you

1666
06:47:11,759 --> 06:47:16,000
can go and design your own app icon you're more welcome to do that i can i

1667
06:47:16,000 --> 06:47:21,040
feel free with figma i'm not a sketch user but i can design my like icons in

1668
06:47:21,040 --> 06:47:24,159
figma but that's not what we're going to do in this chapter we're actually going

1669
06:47:24,159 --> 06:47:28,799
to go to this website as i'm showing you here stockio.com and grab some free

1670
06:47:28,799 --> 06:47:32,799
icons so if i minimize scrcpy here and bring up a

1671
06:47:32,799 --> 06:47:38,479
safari window let's just say stock io.com you can't see that right

1672
06:47:38,479 --> 06:47:43,831
now i'll bring it to the screen like that and you can see you can hear

1673
06:47:43,831 --> 06:47:47,360
go to for instance icons and then there's a search functionality where you

1674
06:47:47,360 --> 06:47:51,680
can search for the type of icons that you're interested in these icons are not

1675
06:47:51,680 --> 06:47:56,639
really free sometimes they're actually they need to be paid for however you can

1676
06:47:56,639 --> 06:48:02,551
also find um cheap or even free icons that you can use in your application but

1677
06:48:02,551 --> 06:48:06,799
it's very important that you attribute the author work the way they ask you to

1678
06:48:06,799 --> 06:48:11,759
do that and i'll talk about that soon so for our application we're actually

1679
06:48:11,759 --> 06:48:15,759
going to grab this particular icon so it's called stock io we're going to go

1680
06:48:15,759 --> 06:48:18,479
to free icon in here

1681
06:48:18,479 --> 06:48:23,040
and say sticky note file icon okay so that's the icon

1682
06:48:23,040 --> 06:48:27,511
we are going to use for our application and and you can go ahead and do the same

1683
06:48:27,511 --> 06:48:32,159
thing i mean it's not that the app store is gonna like google play store and apps

1684
06:48:32,159 --> 06:48:35,439
are not gonna set us like they're not gonna stop you from releasing your

1685
06:48:35,439 --> 06:48:40,871
application just because your icon is the same icon as someone else's app

1686
06:48:40,871 --> 06:48:44,231
so they're not gonna basically check that really unless your

1687
06:48:44,231 --> 06:48:47,759
icon represents a very well-known app for instance if you

1688
06:48:47,759 --> 06:48:50,551
add the facebook icon to your application then the people who are

1689
06:48:50,551 --> 06:48:53,759
reviewing your application are going to know that immediately and recognize it

1690
06:48:53,759 --> 06:48:57,119
and then they're going to flag it and perhaps reject your application but this

1691
06:48:57,119 --> 06:49:01,511
is such a generic icon that i don't think anybody is going to basically

1692
06:49:01,511 --> 06:49:06,551
have anything to say about it if someone else has used this already in one of the

1693
06:49:06,551 --> 06:49:10,159
hundreds and thousands of applications that are available in in those

1694
06:49:10,159 --> 06:49:16,959
respective stores so what we need to do here go and say free download as an svg

1695
06:49:16,959 --> 06:49:20,159
so i just did that so let's go in here and

1696
06:49:20,159 --> 06:49:24,159
have a look at that excuse me

1697
06:49:24,159 --> 06:49:28,159
so i'm going to bring it up here and you can see it's an svg and that's been

1698
06:49:28,159 --> 06:49:32,551
downloaded on my computer right now so i'm gonna um

1699
06:49:32,551 --> 06:49:36,551
basically talk now a little bit about attribution

1700
06:49:36,551 --> 06:49:40,799
so as you can see here in the information that is provided here on the

1701
06:49:40,799 --> 06:49:44,551
screen i'm going to increase the size so you see it better it says free for

1702
06:49:44,551 --> 06:49:48,871
personal and commercial use that's that means even if your application is free

1703
06:49:48,871 --> 06:49:52,319
or paid for in this in this flutter course we're

1704
06:49:52,319 --> 06:49:54,959
going to release our application as a free application of course but if even

1705
06:49:54,959 --> 06:49:58,959
if it's for a commercial use you're allowed to use this icon but it says

1706
06:49:58,959 --> 06:50:04,080
with attribution to stock io.com so what we should do if we're a good

1707
06:50:04,080 --> 06:50:09,279
citizens of the internet land then when you basically upload your application to

1708
06:50:09,279 --> 06:50:13,592
the app store and google play store as i'll show you later we will actually

1709
06:50:13,592 --> 06:50:19,511
write a little sentence and attribute the um stock io.com website and even

1710
06:50:19,511 --> 06:50:24,551
maybe say icon is provided by stockion.com and even place the entire

1711
06:50:24,551 --> 06:50:28,479
url of that icon um

1712
06:50:28,479 --> 06:50:32,479
inside our application description when we submit it to the respective app store

1713
06:50:32,479 --> 06:50:36,159
so be very careful about this because there are actually artists that are

1714
06:50:36,159 --> 06:50:40,319
creating these icons for you so even if you

1715
06:50:40,319 --> 06:50:44,159
see that it's free you may be attempted to just say yeah i forget about i'm just

1716
06:50:44,159 --> 06:50:46,871
gonna put it there i'm not gonna attribute the author but if you think

1717
06:50:46,871 --> 06:50:50,159
about it it's just one line of text that you're going to write in your

1718
06:50:50,159 --> 06:50:54,231
application description it's worth it because someone has actually sat there

1719
06:50:54,231 --> 06:50:57,119
spent quite a lot of time designing this icon so it's just

1720
06:50:57,119 --> 06:51:00,159
good karma to make sure that we follow these

1721
06:51:00,159 --> 06:51:03,279
attributions apps that are provided in the website where you download your

1722
06:51:03,279 --> 06:51:08,000
icons okay so now we have this svg icon so if i

1723
06:51:08,000 --> 06:51:13,191
bring my finder here so we just have one file in here but as you'll soon see when

1724
06:51:13,191 --> 06:51:16,720
we submit our application to app store and play store google play store we have

1725
06:51:16,720 --> 06:51:20,871
to provide various icon sizes all right so and

1726
06:51:20,871 --> 06:51:24,720
it's not that you have to provide the various icon sizes to the app store but

1727
06:51:24,720 --> 06:51:28,400
when you build your application you actually have to provide these different

1728
06:51:28,400 --> 06:51:33,360
icon sizes to the operating system for instance if the user is loading your

1729
06:51:33,360 --> 06:51:38,400
application on a very old iphone without a retina display which i highly doubt

1730
06:51:38,400 --> 06:51:42,479
now nowadays almost all ios devices have a retina display

1731
06:51:42,479 --> 06:51:47,040
then that user with that phone that phone particularly cannot display very

1732
06:51:47,040 --> 06:51:51,040
high resolution images so it needs to grab a particular

1733
06:51:51,040 --> 06:51:54,159
app icon resolution however if you run your

1734
06:51:54,159 --> 06:52:00,231
app for instance on an iphone 13 pro max then that device can actually

1735
06:52:00,231 --> 06:52:05,592
display a high resolution image so using this svg file we have to create

1736
06:52:05,592 --> 06:52:10,000
and slice it up so that we have various icon sizes to provide for various

1737
06:52:10,000 --> 06:52:12,831
operating systems and device configurations

1738
06:52:12,831 --> 06:52:16,400
so that's what we're going to do but we're not going to do that by hand we're

1739
06:52:16,400 --> 06:52:21,040
going to use a tool in here called app icon dot co so let's go in app icon dot

1740
06:52:21,040 --> 06:52:24,159
co and this is a great free tool that you

1741
06:52:24,159 --> 06:52:31,831
can use and you can just basically drag your svg file in this

1742
06:52:31,831 --> 06:52:36,871
target and it will generate your icons for you so let's go ahead and do that

1743
06:52:36,871 --> 06:52:40,551
i'm going to drag this svg in here just like this

1744
06:52:40,551 --> 06:52:46,000
all right and you can see that i can generate the icons for the destinations

1745
06:52:46,000 --> 06:52:49,759
that i'm interested in our application doesn't support watch os at the moment

1746
06:52:49,759 --> 06:52:53,439
and we're not a mac os application so at the moment we're just saying iphone and

1747
06:52:53,439 --> 06:52:59,759
ipad and for android okay so let's just generate these icons and

1748
06:52:59,759 --> 06:53:03,912
if i go in here i can see that there was a zip file generated in here so let's

1749
06:53:03,912 --> 06:53:07,831
just unzip this file and have a look at it and you see that there's a folder

1750
06:53:07,831 --> 06:53:13,511
called app icons so it has android app store assets etc in

1751
06:53:13,511 --> 06:53:16,479
here okay

1752
06:53:16,479 --> 06:53:19,592
so now that we have these icons generated here as a caption indicates we

1753
06:53:19,592 --> 06:53:22,871
have to add them to our application so how do we do that do we go ahead and

1754
06:53:22,871 --> 06:53:26,231
like add these by hand no but there is

1755
06:53:26,231 --> 06:53:30,479
actually better way of doing this so i'll explain it to you right now

1756
06:53:30,479 --> 06:53:35,040
there is a package called flutter launcher icons that can take care of

1757
06:53:35,040 --> 06:53:39,592
this for you so instead of you having to place these icons manually inside your

1758
06:53:39,592 --> 06:53:42,871
application binary or inside your application source code for instance

1759
06:53:42,871 --> 06:53:47,759
visual studio code or android studio it can do that for you so let's go to pub

1760
06:53:47,759 --> 06:53:50,639
dev i'm getting rid of this dialog here as

1761
06:53:50,639 --> 06:53:56,159
well and let's search for flutter launcher icons okay

1762
06:53:56,159 --> 06:53:59,912
and we found it right here and you can see that it is provided by the flutter

1763
06:53:59,912 --> 06:54:04,871
community right there and there is information on how you should actually

1764
06:54:04,871 --> 06:54:08,000
configure this and we'll get there soon so

1765
06:54:08,000 --> 06:54:12,000
uh but what we first need to do

1766
06:54:12,000 --> 06:54:15,831
uh is to bring this into

1767
06:54:15,831 --> 06:54:20,799
our application so this uh plugin

1768
06:54:20,799 --> 06:54:23,831
so let's go to installing in here and

1769
06:54:23,831 --> 06:54:28,639
you'll see here that it says dart pub and with flutter we want to do

1770
06:54:28,639 --> 06:54:33,439
this basically father pub at flutter launcher icons okay so let's go ahead in

1771
06:54:33,439 --> 06:54:37,511
our application so i'm going to bring our application in here and

1772
06:54:37,511 --> 06:54:40,799
let's go to terminal so let me bring this up a little bit

1773
06:54:40,799 --> 06:54:46,000
and let's just paste that command in here um boof

1774
06:54:46,000 --> 06:54:49,511
all right so that is just going to add flutter launcher icons to our

1775
06:54:49,511 --> 06:54:52,551
application

1776
06:54:52,551 --> 06:54:57,040
and so that's the adding of it so if you go to pop spec yaml now and have a look

1777
06:54:57,040 --> 06:55:00,231
at our yaml file you can see that there's this flutter launcher icons

1778
06:55:00,231 --> 06:55:03,912
added right here okay then what we need to do is to create some sort of a

1779
06:55:03,912 --> 06:55:08,799
configuration file for this plugin and to understand how it should generate our

1780
06:55:08,799 --> 06:55:11,912
icons for us you can see if we go back in here

1781
06:55:11,912 --> 06:55:14,720
you can see that there's some information about that if you read the

1782
06:55:14,720 --> 06:55:18,159
readme file it actually asks you actually to generate a file called

1783
06:55:18,159 --> 06:55:22,080
flutter launcher icons yaml and that's exactly what we're going to do in here

1784
06:55:22,080 --> 06:55:26,000
so let's go to the root folder of our application so if i

1785
06:55:26,000 --> 06:55:29,360
collapse every folder in here so make sure that you're

1786
06:55:29,360 --> 06:55:35,119
in the root folder of your application and then i'm just gonna say new file

1787
06:55:35,119 --> 06:55:38,799
and let's just add flutter launcher icons okay

1788
06:55:38,799 --> 06:55:44,479
and in here they basically say add this assets icon etc etc so

1789
06:55:44,479 --> 06:55:50,159
let me just bring this here copy this information as it is

1790
06:55:50,159 --> 06:55:55,439
stated there and place it there but we also have to add a new um

1791
06:55:55,439 --> 06:56:01,680
and basically key in here called remove alpha ios and we have to set this to

1792
06:56:01,680 --> 06:56:06,231
true and this is a key that i don't know if it's actually documented so let's

1793
06:56:06,231 --> 06:56:11,360
have a look at the documentation in here let's see version scores change log

1794
06:56:11,360 --> 06:56:16,231
installing it's not really documented unfortunately

1795
06:56:16,231 --> 06:56:20,231
but there may be inside the git repository for this application like

1796
06:56:20,231 --> 06:56:24,231
there may be some good documentation to be honest with you change log

1797
06:56:24,231 --> 06:56:29,439
examples um flavors could there be anything in there

1798
06:56:29,439 --> 06:56:33,279
production no unfortunately but i will just explain

1799
06:56:33,279 --> 06:56:37,439
what this key basically does what it does is an ios

1800
06:56:37,439 --> 06:56:42,319
as an operating system it doesn't allow alpha channel transparency channel on

1801
06:56:42,319 --> 06:56:46,799
its icons on its app icons so what you need to do is to get rid of

1802
06:56:46,799 --> 06:56:50,400
that so when we generate our icons we're going to tell this plugin that hey when

1803
06:56:50,400 --> 06:56:55,191
you're generating the ios icons remove the alpha channel and for you designers

1804
06:56:55,191 --> 06:56:58,639
out there you already know what alpha channel is okay

1805
06:56:58,639 --> 06:57:02,871
so it's just a transparency layer all right so what we need to do now is

1806
06:57:02,871 --> 06:57:09,831
to grab our icon the downloaded icon and place it inside assets icon icon.png

1807
06:57:09,831 --> 06:57:13,511
okay so as you can see in here let's see if you have an assets folder and we

1808
06:57:13,511 --> 06:57:18,720
don't so let's go ahead and say new file oops a new folder

1809
06:57:18,720 --> 06:57:23,191
and i'm going to say assets and then we're gonna call it icon okay

1810
06:57:23,191 --> 06:57:27,439
just like that and let's go then and bring that app

1811
06:57:27,439 --> 06:57:32,159
store png file that is right here and just place it inside the folder that we

1812
06:57:32,159 --> 06:57:35,680
just created so it's a huge file okay and that's okay

1813
06:57:35,680 --> 06:57:39,439
so now that we've done that and you'll be wondering okay where why is it under

1814
06:57:39,439 --> 06:57:44,319
assets icon and that's because in this launcher configuration we said that that

1815
06:57:44,319 --> 06:57:49,831
icon should be there you see icon png so what we need to do now is just to rename

1816
06:57:49,831 --> 06:57:55,279
this file to icon.png just to make sure that this

1817
06:57:55,279 --> 06:58:02,080
package can find it under assets icon icon ph png as it's specified here okay

1818
06:58:02,080 --> 06:58:06,479
so in order to then generate your icons you just have to run this for

1819
06:58:06,479 --> 06:58:10,400
this command right here so i'm gonna i'm gonna go to terminal

1820
06:58:10,400 --> 06:58:14,231
let's see uh terminal is actually right here it's ginormous

1821
06:58:14,231 --> 06:58:19,592
um let's go here terminals and i'm then going to clean the terminal get rid of

1822
06:58:19,592 --> 06:58:25,831
the left hand side bar i'm going to say flutter pump run flutter launcher icons

1823
06:58:25,831 --> 06:58:30,000
and main just like that

1824
06:58:30,000 --> 06:58:34,159
that is going to basically do its job have a look at um the configuration and

1825
06:58:34,159 --> 06:58:38,720
then it's going to generate our icons for us

1826
06:58:38,720 --> 06:58:42,871
so in order to test this we actually need to make a clean build and this is a

1827
06:58:42,871 --> 06:58:45,912
little bit of a pain in the neck and that's completely okay it's just because

1828
06:58:45,912 --> 06:58:49,592
we change something dramatic in our application and then we need to just

1829
06:58:49,592 --> 06:58:52,871
make sure that we stop the running of our application so i can see now this

1830
06:58:52,871 --> 06:58:56,720
particular application at the moment isn't running in scrcpy so that's really

1831
06:58:56,720 --> 06:59:00,080
good as you can note here this is the icon of

1832
06:59:00,080 --> 06:59:03,912
our application right now without us having launched it again

1833
06:59:03,912 --> 06:59:11,119
so let's just do as the caption indicates we're gonna do flutter clean

1834
06:59:11,119 --> 06:59:14,959
and after cleaning is done we're just going to say flutter

1835
06:59:14,959 --> 06:59:19,439
pop get in order to grab all our dependencies again

1836
06:59:19,439 --> 06:59:23,511
and i can see that you can't actually see what i typed there but that's what i

1837
06:59:23,511 --> 06:59:27,040
typed flutter pup get as you can see here

1838
06:59:27,040 --> 06:59:30,871
and it grabbed all the dependencies again and what i'm going to do is just

1839
06:59:30,871 --> 06:59:34,639
going to go to main dart file in here and

1840
06:59:34,639 --> 06:59:38,551
just run the application but before doing that i'm just going to also make

1841
06:59:38,551 --> 06:59:42,551
sure that flutter select device has selected the correct device which is my

1842
06:59:42,551 --> 06:59:46,639
android app and which is my android phone and just gonna say run without

1843
06:59:46,639 --> 06:59:50,871
debugging it could actually help if you removed

1844
06:59:50,871 --> 06:59:54,400
your application as well so just to make sure that that

1845
06:59:54,400 --> 06:59:59,279
application is completely deleted from the phone so it's completely gone now

1846
06:59:59,279 --> 07:00:04,159
and really all we have to do is just right now wait for this gradle task to

1847
07:00:04,159 --> 07:00:09,279
complete its work so i'm just gonna let it do its work and um

1848
07:00:09,279 --> 07:00:12,159
let's just wait for it all right

1849
07:00:12,159 --> 07:00:17,119
now you can see that our application is running on uh scr cpy which is an actual

1850
07:00:17,119 --> 07:00:22,720
real phone in here so if i now go back here and bring up all the apps installed

1851
07:00:22,720 --> 07:00:27,191
on this device you can see we have this application running right there my notes

1852
07:00:27,191 --> 07:00:31,040
and it has this little icon here and this is another application that i've

1853
07:00:31,040 --> 07:00:35,040
had from before so i can just uninstall that safely and we just go to our

1854
07:00:35,040 --> 07:00:39,680
application in here you can see it is as we left it last time but the important

1855
07:00:39,680 --> 07:00:44,319
thing is that there is a new icon basically provided here

1856
07:00:44,319 --> 07:00:47,119
so that's really good now we've tested that

1857
07:00:47,119 --> 07:00:51,119
on android so the testing of android is actually done so you don't need this

1858
07:00:51,119 --> 07:00:53,511
caption at the bottom of the screen i should have brought up brought it up a

1859
07:00:53,511 --> 07:00:57,831
little bit earlier and what we need to do is just to run our application on ios

1860
07:00:57,831 --> 07:01:02,720
as well so i'm going to stop the the execution of the application on android

1861
07:01:02,720 --> 07:01:07,511
and i'm just going to say flutter select device and iphone 13 pro which is a

1862
07:01:07,511 --> 07:01:12,551
simulator and then i'm just gonna say run and this is also gonna perhaps take

1863
07:01:12,551 --> 07:01:17,279
some time because usually i run my applications on the android telephone as

1864
07:01:17,279 --> 07:01:22,871
you've seen with scrcpy i usually don't run with an ios simulator or a device

1865
07:01:22,871 --> 07:01:28,080
when i'm developing with flutter and but it is always good practice to do

1866
07:01:28,080 --> 07:01:34,159
that so now it's doing the xcode build and let's just wait for it to finish

1867
07:01:34,159 --> 07:01:38,639
okay and now we can see that our application is also running on ios so

1868
07:01:38,639 --> 07:01:42,080
what we can do in here is just to send the app to the background and then you

1869
07:01:42,080 --> 07:01:48,080
can see that we have our my notes application right here and the icon that

1870
07:01:48,080 --> 07:01:53,592
we basically created for our app so that seems to be working as well

1871
07:01:53,592 --> 07:01:57,279
what we need to talk about now is our app name and as you can see in the

1872
07:01:57,279 --> 07:01:59,592
caption at the bottom of the screen since we need to update the app name

1873
07:01:59,592 --> 07:02:04,231
it's not so nice as it is now and right now it's just saying my notes with a

1874
07:02:04,231 --> 07:02:10,080
lowercase and and capital m and all in one word so it's not as it should be so

1875
07:02:10,080 --> 07:02:13,511
let's go ahead and fix this and the way to do that is that you have to do it in

1876
07:02:13,511 --> 07:02:16,871
two places one for ios and one for android so we're going to take care of

1877
07:02:16,871 --> 07:02:21,119
ios first so in visual studio code i'm going to jump into a file called info

1878
07:02:21,119 --> 07:02:26,871
key list and this is the info p list is like basically an ios applications and

1879
07:02:26,871 --> 07:02:30,319
kind of configuration place which you can configure a few things for

1880
07:02:30,319 --> 07:02:36,319
application like permissions etc and if you go to this uh file ios runner slash

1881
07:02:36,319 --> 07:02:40,231
info p list so let's go in there and then there is a key in here called core

1882
07:02:40,231 --> 07:02:45,191
foundation bundle name so let's see if you can find a bundle name

1883
07:02:45,191 --> 07:02:49,279
cf bundle name at the moment it says my notes in here so we need to fix this

1884
07:02:49,279 --> 07:02:54,479
just to call it basically my notes like this

1885
07:02:54,479 --> 07:02:57,040
okay and let's see if there's any other place

1886
07:02:57,040 --> 07:03:01,191
in here we can also see that there is a bundle display name which we may also

1887
07:03:01,191 --> 07:03:05,279
have to fix so let's just call it my

1888
07:03:05,279 --> 07:03:08,159
this and to be honest with you we don't maybe

1889
07:03:08,159 --> 07:03:12,159
actually have to change the bundle name i would say maybe changing the bundle

1890
07:03:12,159 --> 07:03:16,551
name is not so good so let's not do the bundle name actually

1891
07:03:16,551 --> 07:03:21,040
i'm going to change the caption and just call it changing the bundle display name

1892
07:03:21,040 --> 07:03:25,040
because i would say a bundle name and bundle display name are two completely

1893
07:03:25,040 --> 07:03:28,551
different things the bundle name is like the binary name of the application and

1894
07:03:28,551 --> 07:03:32,400
the bundled display name is what the user sees on the screen so let's not do

1895
07:03:32,400 --> 07:03:36,400
the bundle name and let's just change the bundle display name in here and just

1896
07:03:36,400 --> 07:03:41,279
call it my notes okay so after doing that we could try to

1897
07:03:41,279 --> 07:03:44,871
stop the application in here and then run it again

1898
07:03:44,871 --> 07:03:49,360
um it may take effect it depends kind of on

1899
07:03:49,360 --> 07:03:55,191
how flutter is gonna trigger these changes with xcode build and how xcode

1900
07:03:55,191 --> 07:03:58,720
build is going to interpret our changes sometimes

1901
07:03:58,720 --> 07:04:02,639
it might actually be necessary for you to do another clean

1902
07:04:02,639 --> 07:04:06,871
and then run the application again on that target platform so that's just a

1903
07:04:06,871 --> 07:04:11,119
bit unfortunate when you change like huge changes when you make you changes

1904
07:04:11,119 --> 07:04:15,511
to the applications structure and i could see now that my notes was

1905
07:04:15,511 --> 07:04:19,831
actually taking the fed effect right now so we don't have to do any flutter clean

1906
07:04:19,831 --> 07:04:24,231
so that's really good then what we need to do also is to

1907
07:04:24,231 --> 07:04:29,759
update the app name on android and we do that by going to android app src main

1908
07:04:29,759 --> 07:04:35,279
and we could just do that right now so let's go to android manifest xml

1909
07:04:35,279 --> 07:04:40,231
and you can see here is android app src main i'm going to go in there and then

1910
07:04:40,231 --> 07:04:43,191
i'm going to find this key in here android label and just

1911
07:04:43,191 --> 07:04:48,080
change it to my notes all right so let's just do that and then i'm going

1912
07:04:48,080 --> 07:04:52,231
to go here just to a flutter select device run it on my android phone then

1913
07:04:52,231 --> 07:04:57,831
i'm just going to stop the ios execution and just go to run run without debugging

1914
07:04:57,831 --> 07:05:03,511
so that you can try to run the application on this android phone so if

1915
07:05:03,511 --> 07:05:08,720
everything works as expected then we should have our mynotes application

1916
07:05:08,720 --> 07:05:13,360
right here with the correct uh icon and then we should also have the

1917
07:05:13,360 --> 07:05:17,680
correct label alright so let's just send this to the background

1918
07:05:17,680 --> 07:05:20,871
let's go in here and have a look at our application you can see now it says my

1919
07:05:20,871 --> 07:05:26,639
notes the right icon and also um yeah the application is running as it should

1920
07:05:26,639 --> 07:05:30,231
and if you go back to our ios application then we can see the name is

1921
07:05:30,231 --> 07:05:36,000
also correct and the right icon so we could actually say that we've

1922
07:05:36,000 --> 07:05:39,439
already tested things on ios they seem to be working so if i bring up the

1923
07:05:39,439 --> 07:05:41,912
simulator the app is working as it should

1924
07:05:41,912 --> 07:05:44,551
and we don't have any crashes the icon is

1925
07:05:44,551 --> 07:05:50,080
correct and the label is correct and on android if we bring up scrcpy again you

1926
07:05:50,080 --> 07:05:54,959
can see that the icon is correct and also the name of the

1927
07:05:54,959 --> 07:05:58,231
application is correct so

1928
07:05:58,231 --> 07:06:01,191
we've done what we said that we're going to do in this chapter we talked about

1929
07:06:01,191 --> 07:06:06,080
icons and we also talked about what splash screens are in preparation for

1930
07:06:06,080 --> 07:06:10,479
the next chapter and it's usually the um what we do in the and at the end of

1931
07:06:10,479 --> 07:06:14,000
every chapter we talk about what we need to discuss in the chapter that's coming

1932
07:06:14,000 --> 07:06:18,720
so what we need to do in the chapter that is coming is to prepare ourselves

1933
07:06:18,720 --> 07:06:23,680
for creating splash screens you now know what splash screens are but in the next

1934
07:06:23,680 --> 07:06:26,871
chapter we're gonna go and create them and

1935
07:06:26,871 --> 07:06:31,279
we're gonna add them to our application so grab some refreshments if you want to

1936
07:06:31,279 --> 07:06:33,040
do and

1937
07:06:33,040 --> 07:06:36,799
i'll see you in the next chapter hello and welcome to chapter 46 of the

1938
07:06:36,799 --> 07:06:40,551
slaughter course um if you follow the chapters up to this point

1939
07:06:40,551 --> 07:06:44,159
chronologically you'll know that we've done a lot of preparation and we're

1940
07:06:44,159 --> 07:06:49,119
actually about to start preparing our app to be submitted to the app store and

1941
07:06:49,119 --> 07:06:53,912
google play store but before doing that now that we fixed our icons and

1942
07:06:53,912 --> 07:06:58,000
our application name for both android and ios we need to fix something called

1943
07:06:58,000 --> 07:07:02,159
a splash screen so and we talked briefly about splash

1944
07:07:02,159 --> 07:07:06,479
screens and what they actually mean in the mobile world for instance in both

1945
07:07:06,479 --> 07:07:11,439
android os and ios and ipad os for that matter but for those of you who missed

1946
07:07:11,439 --> 07:07:15,040
the previous chapter a splash screen is a screen that is

1947
07:07:15,040 --> 07:07:19,511
displayed to the user when they open your application from a cold

1948
07:07:19,511 --> 07:07:22,959
boots basically meaning that your application hasn't been running for

1949
07:07:22,959 --> 07:07:26,871
instance in the background in that operating system and while the

1950
07:07:26,871 --> 07:07:30,400
application binary is being loaded to the screen and the experience is being

1951
07:07:30,400 --> 07:07:34,479
loaded to the screen um then the host operating system in

1952
07:07:34,479 --> 07:07:38,959
this case android and ios will have to display something to the user while

1953
07:07:38,959 --> 07:07:41,680
they're waiting for the experience to be loaded

1954
07:07:41,680 --> 07:07:45,511
so in native applications for instance if you're creating a native

1955
07:07:45,511 --> 07:07:50,080
application with um coupling for ios sorry kotlin for

1956
07:07:50,080 --> 07:07:55,511
android and swift or swift ui for ios then um in that case there is there is

1957
07:07:55,511 --> 07:07:58,799
only one stage of loading for application in that

1958
07:07:58,799 --> 07:08:01,912
you submit your binary to apple and then or

1959
07:08:01,912 --> 07:08:06,479
um to google play store and then the host operating system just loads your

1960
07:08:06,479 --> 07:08:10,551
binary and then that um your main user interface is displayed to the user so

1961
07:08:10,551 --> 07:08:14,479
it's just one stage in flutter however there are two stages

1962
07:08:14,479 --> 07:08:19,759
of loading your application one is the your application binary in itself

1963
07:08:19,759 --> 07:08:24,000
being loaded and the second stage is for the flutter experience to actually be

1964
07:08:24,000 --> 07:08:28,400
loaded inside your application since flutter is its own sdk basically

1965
07:08:28,400 --> 07:08:31,119
so what we're going to do is we're going to create a splash screen that gets

1966
07:08:31,119 --> 07:08:34,551
displayed to the user while our application binary is being presented to

1967
07:08:34,551 --> 07:08:39,759
the user so let's have a little look at a the

1968
07:08:39,759 --> 07:08:42,959
official documentation for splash screens

1969
07:08:42,959 --> 07:08:46,479
and i'm going to bring the screen up here and increase the size

1970
07:08:46,479 --> 07:08:52,871
perhaps a little bit so like this so you see here

1971
07:08:52,871 --> 07:08:56,551
as it is explaining here first and you have your

1972
07:08:56,551 --> 07:09:00,231
android for instance operating system in here and you tap on your application

1973
07:09:00,231 --> 07:09:04,080
icon and then it goes through a series of steps in order to land on your

1974
07:09:04,080 --> 07:09:08,479
application's um main interface and here there's a great

1975
07:09:08,479 --> 07:09:13,040
documentation basically for splash screens which i recommend everybody

1976
07:09:13,040 --> 07:09:17,279
who wants to submit their application to ios app store and google play so to read

1977
07:09:17,279 --> 07:09:21,759
this thoroughly because there's great pieces of information here even if you

1978
07:09:21,759 --> 07:09:25,831
are just following for instance my advice in this chapter but it is still a

1979
07:09:25,831 --> 07:09:32,231
good practice to go ahead and read about this

1980
07:09:32,231 --> 07:09:36,000
so um before we actually go and start

1981
07:09:36,000 --> 07:09:41,729
designing our splash screen i also have to mention something that

1982
07:09:41,729 --> 07:09:45,360
[Applause] this chapter is quite i mean you need in

1983
07:09:45,360 --> 07:09:48,319
order for you to be able to go through the chapter you will unfortunately need

1984
07:09:48,319 --> 07:09:52,400
to have a macintosh so because we're actually going to play a little bit with

1985
07:09:52,400 --> 07:09:55,191
our um ios splash screen and for that you

1986
07:09:55,191 --> 07:09:59,912
need to have xcode but i'll talk soon about that as you'll see

1987
07:09:59,912 --> 07:10:04,871
so how do we go about creating a splash screen so

1988
07:10:04,871 --> 07:10:08,159
i mean there are so many different ways of doing this and

1989
07:10:08,159 --> 07:10:12,400
if if you're a developer from before you probably are not so comfortable you're

1990
07:10:12,400 --> 07:10:15,831
not this kind of like a unicorn developer you might not be

1991
07:10:15,831 --> 07:10:19,511
a so-called unicorn developer as a developer who's also comfortable with

1992
07:10:19,511 --> 07:10:22,639
designing or you might you might only be a

1993
07:10:22,639 --> 07:10:26,799
designer and you've started this course and you've come to this point so you may

1994
07:10:26,799 --> 07:10:30,400
actually be comfortable with a tool like figma

1995
07:10:30,400 --> 07:10:34,871
so um depending on your background you may or

1996
07:10:34,871 --> 07:10:39,831
may not be comfortable with designing so i've basically taken the liberty of

1997
07:10:39,831 --> 07:10:43,040
using a design tool a free design tool called figma

1998
07:10:43,040 --> 07:10:46,551
and for this chapter which you can access freely with for instance a google

1999
07:10:46,551 --> 07:10:49,912
account or an apple apple id

2000
07:10:49,912 --> 07:10:55,191
or you could just create a normal free account on figma.com

2001
07:10:55,191 --> 07:10:59,360
but i don't make the assumption that you know anything about designing and for

2002
07:10:59,360 --> 07:11:04,080
that what we're going to do is we're going to create a very very very simple

2003
07:11:04,080 --> 07:11:07,511
splash screen in figma assuming that the person is watching

2004
07:11:07,511 --> 07:11:16,159
this course has no information about figma or designing previously okay

2005
07:11:16,159 --> 07:11:20,639
so let's have a look um

2006
07:11:20,639 --> 07:11:24,159
now that we talked about figma let's have a look

2007
07:11:24,159 --> 07:11:30,639
at storyboard on ios so um what we can do in here is to bring

2008
07:11:30,639 --> 07:11:34,639
our application to the screen so i'll bring up our

2009
07:11:34,639 --> 07:11:39,511
app in here increase the size a little bit so you see it better

2010
07:11:39,511 --> 07:11:43,592
and what we can do is to bring up terminal in here so get rid of a little

2011
07:11:43,592 --> 07:11:47,831
bit of distraction in here so let's see

2012
07:11:47,831 --> 07:11:53,119
so if you say good status we have a lot of stuff that we've done but we haven't

2013
07:11:53,119 --> 07:11:57,191
committed them so that's fine let those be there we're going to commit them soon

2014
07:11:57,191 --> 07:12:00,720
okay so in your application what i need you

2015
07:12:00,720 --> 07:12:05,680
to do is to have a look at

2016
07:12:05,680 --> 07:12:11,680
your ios application so there is something in the ios application

2017
07:12:11,680 --> 07:12:15,680
generated by the flutter template when we created our our

2018
07:12:15,680 --> 07:12:18,551
template from the absolute beginning of this course

2019
07:12:18,551 --> 07:12:23,680
and there is a file a specific file called a launch i believe it's called

2020
07:12:23,680 --> 07:12:28,000
launch screen dot storyboard if you're not comfortable with ios development

2021
07:12:28,000 --> 07:12:32,799
like native ios development from before i can just explain you that a storyboard

2022
07:12:32,799 --> 07:12:38,159
file is a file that apple designated for um

2023
07:12:38,159 --> 07:12:41,912
developers to be able to visually design their application and then write the

2024
07:12:41,912 --> 07:12:46,400
code for it later and apple's decided that for specifically the launch screen

2025
07:12:46,400 --> 07:12:52,231
for instance that gets displayed to the user there should be a a dedicated um

2026
07:12:52,231 --> 07:12:59,360
storyboard file for that so we're gonna go ahead and launch xcode

2027
07:12:59,360 --> 07:13:05,831
on this macintosh in order to manipulate that storyboard file but before we do

2028
07:13:05,831 --> 07:13:11,360
that i'm just going to go ahead and open the root folder of our application

2029
07:13:11,360 --> 07:13:15,680
then i'm going to go and let me also change the screen layout a little bit so

2030
07:13:15,680 --> 07:13:18,720
you see things better

2031
07:13:18,720 --> 07:13:22,799
then inside this ios folder so in the root folder of your application go to

2032
07:13:22,799 --> 07:13:27,759
ios and then you can see two files in here runner xcode proj and runner xc

2033
07:13:27,759 --> 07:13:32,319
workspace and dependent on your settings on your macintosh you may or may not be

2034
07:13:32,319 --> 07:13:34,639
able to see the

2035
07:13:34,639 --> 07:13:39,360
extensions of these files i i've i've done so in my macintosh that i can

2036
07:13:39,360 --> 07:13:43,040
always see file extensions because it's important

2037
07:13:43,040 --> 07:13:46,959
for me so if you're not seeing the extensions you just have to trust on the

2038
07:13:46,959 --> 07:13:52,639
icon so one of these files has this bluish icon which says project here and

2039
07:13:52,639 --> 07:13:56,720
the other one is a workspace i need you to basically double click

2040
07:13:56,720 --> 07:14:00,400
on this workspace in order to open it okay

2041
07:14:00,400 --> 07:14:05,912
so let's go ahead and open this workspace inside xcode

2042
07:14:05,912 --> 07:14:12,000
and let's then go have a look at this launch screen inside this runner folder

2043
07:14:12,000 --> 07:14:15,680
so if i collapse everything inside you will

2044
07:14:15,680 --> 07:14:19,831
see that you have your runner and which is the flutter templates created

2045
07:14:19,831 --> 07:14:24,231
workspace inside there we have another runner and

2046
07:14:24,231 --> 07:14:28,799
in that runner folder then you'll have this launch screen

2047
07:14:28,799 --> 07:14:31,511
so we can then have a look at this launch

2048
07:14:31,511 --> 07:14:36,159
screen and see how it is created and you can literally

2049
07:14:36,159 --> 07:14:40,000
click in here in order to expand the contents of this

2050
07:14:40,000 --> 07:14:43,759
view controller to have a look at the internals of this launch screen and a

2051
07:14:43,759 --> 07:14:48,231
good trick is if you want to expand you can see here you have to expand this and

2052
07:14:48,231 --> 07:14:50,720
then you have to expand this and expand this

2053
07:14:50,720 --> 07:14:54,959
if you don't want to expand one step at a time you can always hold down the

2054
07:14:54,959 --> 07:14:59,191
option key or the alt key and then click on this little arrow and that expands

2055
07:14:59,191 --> 07:15:03,360
the entire chain for you and if you want to collapse the entire chain you can

2056
07:15:03,360 --> 07:15:08,080
press down alt and then click and then collapses the entire change so

2057
07:15:08,080 --> 07:15:12,959
let's let's expand the entire chain and then in here you'll see that there is a

2058
07:15:12,959 --> 07:15:17,680
view and then a launch image image view which at the moment is pointing to a

2059
07:15:17,680 --> 07:15:22,159
file called launch image which doesn't exist because if you go to our assets in

2060
07:15:22,159 --> 07:15:25,831
here you'll see that launch image is just empty at the moment okay so there

2061
07:15:25,831 --> 07:15:30,479
is no launch image meaning there is no splash screen okay

2062
07:15:30,479 --> 07:15:33,439
so we're gonna manipulate this file a

2063
07:15:33,439 --> 07:15:36,720
little bit as you'll soon see so let me just

2064
07:15:36,720 --> 07:15:41,040
keep xcode running okay

2065
07:15:41,040 --> 07:15:46,231
so that was the basics of that launch screen storyboard and

2066
07:15:46,231 --> 07:15:50,400
as you see at the caption on on the caption at the bottom of the screen this

2067
07:15:50,400 --> 07:15:54,319
is an unfortunate unfortunate thing that um

2068
07:15:54,319 --> 07:15:58,231
that apple isn't as open in my eyes at least as

2069
07:15:58,231 --> 07:16:01,680
many other companies like microsoft and google

2070
07:16:01,680 --> 07:16:06,799
in that if you want to for instance do native ios development and have xcode in

2071
07:16:06,799 --> 07:16:11,360
order to open your project and run your project for instance then you'll have to

2072
07:16:11,360 --> 07:16:16,231
have a macintosh because xcode isn't available on other platforms and it's

2073
07:16:16,231 --> 07:16:21,439
very unfortunate i mean it's it's nothing to really be proud of

2074
07:16:21,439 --> 07:16:25,680
i would say i'm a native ios developer and i'm actually ashamed of the fact

2075
07:16:25,680 --> 07:16:29,439
that xcode the tool that i use on a daily basis is only available on a

2076
07:16:29,439 --> 07:16:32,639
macintosh because i might personally for instance

2077
07:16:32,639 --> 07:16:37,511
like to write my code ios code on ubuntu or fedora

2078
07:16:37,511 --> 07:16:40,799
or some of you may actually prefer windows but let's not go there let's

2079
07:16:40,799 --> 07:16:43,831
just say that you'll unfortunately need macintosh in order to be able to

2080
07:16:43,831 --> 07:16:48,959
manipulate that um launch screen as storyboard file and

2081
07:16:48,959 --> 07:16:53,119
for those of you who don't have a macintosh you'll need to contact perhaps

2082
07:16:53,119 --> 07:16:58,720
somebody in your network who does have access to a macintosh and ask them to

2083
07:16:58,720 --> 07:17:03,511
manipulate the storyboard file for you and add your icons as you'll soon see

2084
07:17:03,511 --> 07:17:07,680
how and then send that storyboard file back to you

2085
07:17:07,680 --> 07:17:10,831
so that's an

2086
07:17:10,831 --> 07:17:14,479
unfortunate problem

2087
07:17:14,479 --> 07:17:17,759
um so what we need to do is to actually get

2088
07:17:17,759 --> 07:17:22,231
to the roots of what we need to work on in this

2089
07:17:22,231 --> 07:17:26,720
chapter and that is creating a splash screen okay so as i mentioned in the

2090
07:17:26,720 --> 07:17:31,831
beginning of this chapter i'm gonna rely on a free tool called figma

2091
07:17:31,831 --> 07:17:35,831
so let's go ahead let me see if i can do some re

2092
07:17:35,831 --> 07:17:42,159
reshuffling on this screen and close a tab in here i'm gonna bring

2093
07:17:42,159 --> 07:17:48,080
up my browser gonna minimize our application and bring

2094
07:17:48,080 --> 07:17:52,871
up my browser right here so i need you to please visit a website called

2095
07:17:52,871 --> 07:17:58,400
figma.com and in figma.com then you will have the

2096
07:17:58,400 --> 07:18:03,040
ability to create your design files all right

2097
07:18:03,040 --> 07:18:06,959
so i'm not gonna show you actually how to register for figma because that is

2098
07:18:06,959 --> 07:18:12,400
very easy so you can just perhaps if i for instance go to and bring up a

2099
07:18:12,400 --> 07:18:16,159
completely new tab in here and say figma.com where i'm

2100
07:18:16,159 --> 07:18:21,119
not logged in you can just say sign up and as you'll soon see here you can

2101
07:18:21,119 --> 07:18:26,639
continue with google or use an email address of your choice in order to sign

2102
07:18:26,639 --> 07:18:30,479
up for figma and as i mentioned figma is

2103
07:18:30,479 --> 07:18:36,400
free until to a certain point and you can you can for instance um

2104
07:18:36,400 --> 07:18:40,871
work with your uh normal design files in figma without

2105
07:18:40,871 --> 07:18:45,360
having to think about actually paying for a subscription but if you

2106
07:18:45,360 --> 07:18:48,871
want to do advanced work for instance if you want to do a lot of sharing of your

2107
07:18:48,871 --> 07:18:53,279
work with other team members etc then you will need to

2108
07:18:53,279 --> 07:18:55,680
pay for figma so

2109
07:18:55,680 --> 07:18:59,680
after you've registered your account in figma what i need you to do please is

2110
07:18:59,680 --> 07:19:04,551
just to go and click on new design file okay so i'm going to increase the size

2111
07:19:04,551 --> 07:19:08,959
in here and just say new design file

2112
07:19:08,959 --> 07:19:14,231
all right so it's created a new design file here for us and as you'll see as

2113
07:19:14,231 --> 07:19:19,191
you'll see in the bottom of the screen in here um i wonder if i actually have

2114
07:19:19,191 --> 07:19:23,831
to bring my face to the right because i'm blocked by that

2115
07:19:23,831 --> 07:19:29,511
so i hadn't noticed that so um so what you'll need to do is to create a

2116
07:19:29,511 --> 07:19:35,680
container here on figma maybe this is a better screen um

2117
07:19:35,680 --> 07:19:40,400
yeah set up maybe this is better okay so what we need to do in here is to create

2118
07:19:40,400 --> 07:19:44,680
a container that is at 1284 by

2119
07:19:44,680 --> 07:19:49,360
2778 and i didn't i didn't like make up this number

2120
07:19:49,360 --> 07:19:56,479
this is the size of a screen for an iphone 13 pro max so

2121
07:19:56,479 --> 07:19:59,360
if you're not a designer you may not notice but when you're designing things

2122
07:19:59,360 --> 07:20:03,439
you always have to create like your design so that it it scales to various

2123
07:20:03,439 --> 07:20:08,319
sizes this was not a problem back in 2007 or 2008 when we only had one iphone

2124
07:20:08,319 --> 07:20:11,680
and just a handful of android devices but nowadays you have to kind of like

2125
07:20:11,680 --> 07:20:16,551
create a template in for instance figma and then ensure that it is scalable for

2126
07:20:16,551 --> 07:20:20,000
different sizes but we're not going to focus on that right now all we're going

2127
07:20:20,000 --> 07:20:26,799
to do is just to create one splash screen and then inside our ios

2128
07:20:26,799 --> 07:20:30,400
app and android app we're just going to make sure that it scales okay so let's

2129
07:20:30,400 --> 07:20:35,119
just target one device at the moment and in here i need you to go in here and

2130
07:20:35,119 --> 07:20:39,040
actually here sorry about that and create a rectangle

2131
07:20:39,040 --> 07:20:42,551
after creating a rectangle we're going to go in here and set the width to what

2132
07:20:42,551 --> 07:20:46,639
i've specified down there 18284

2133
07:20:46,639 --> 07:20:51,279
i can see my keyboard and the height is going to be 2778

2134
07:20:51,279 --> 07:20:57,360
okay so it's a huge rectangle as you can see here okay so

2135
07:20:57,360 --> 07:21:02,720
that's our rectangle and what we need to do is to kind of give this a background

2136
07:21:02,720 --> 07:21:07,279
color now as you've seen so far and if you follow the chapters chronologically

2137
07:21:07,279 --> 07:21:13,759
for this course you'll know that i basically use a very very

2138
07:21:13,759 --> 07:21:18,959
soft theme in visual studio code for uh coding and i absolutely love this

2139
07:21:18,959 --> 07:21:23,759
it's the preference you may like a light team i like a dark team such as tokyo

2140
07:21:23,759 --> 07:21:29,040
night and tokyo night is a visual studio code theme that is open source and you

2141
07:21:29,040 --> 07:21:32,319
can actually grab its colors from

2142
07:21:32,319 --> 07:21:36,080
github so what i'm going to do in here is just to make sure that the background

2143
07:21:36,080 --> 07:21:42,479
color of our splash screens actually painted with that color okay so let's go

2144
07:21:42,479 --> 07:21:48,159
and search for tokyo night in github and you'll end up in this

2145
07:21:48,159 --> 07:21:54,159
website github.com and kia tokyo night vs code theme so if you don't have this

2146
07:21:54,159 --> 07:21:58,000
link and if you couldn't be bothered writing this name you could just google

2147
07:21:58,000 --> 07:22:03,592
and so i'm just gonna go to google and say tokyo night theme okay and you'll

2148
07:22:03,592 --> 07:22:07,831
end up with the github link so you can just click on it all right so i'm gonna

2149
07:22:07,831 --> 07:22:14,319
go down here in this um theme and i'm going to grab this beautiful editor

2150
07:22:14,319 --> 07:22:19,439
background storm color from here okay

2151
07:22:19,439 --> 07:22:24,551
um actually either we could use storm or night i'm gonna choose storm and just

2152
07:22:24,551 --> 07:22:28,159
see how it looks like so grab this code please

2153
07:22:28,159 --> 07:22:34,400
the rgb code for uh tokyo knight and let's go to figma into our rectangle and

2154
07:22:34,400 --> 07:22:38,959
just paste it in fill so that created a nice little background

2155
07:22:38,959 --> 07:22:43,279
color for us okay so we could just live with this at the moment

2156
07:22:43,279 --> 07:22:48,400
then what we need to do is i like to basically create some sort of a gradient

2157
07:22:48,400 --> 07:22:52,479
in this background color so it's not so bland as it is right now so what i'm

2158
07:22:52,479 --> 07:22:57,360
gonna do is just to go to effects in here and then say that we have actually

2159
07:22:57,360 --> 07:23:02,479
no not effects it's probably in fill let's go and fill press the plus button

2160
07:23:02,479 --> 07:23:09,191
and in here just click on this little uh space right there

2161
07:23:09,191 --> 07:23:13,592
and let's just say that um you know what actually i would really

2162
07:23:13,592 --> 07:23:16,959
like to change the screen layout a little bit so you see my figma screen

2163
07:23:16,959 --> 07:23:22,871
better so i'm gonna hide this caption and let's see

2164
07:23:22,871 --> 07:23:27,592
and see if i can change the caption length

2165
07:23:27,592 --> 07:23:31,759
like this so that it is smaller

2166
07:23:31,759 --> 07:23:36,231
and hence i can change the screen layout with my screen with my face still

2167
07:23:36,231 --> 07:23:39,511
visible so i think this is a little bit better okay after doing this fill so we

2168
07:23:39,511 --> 07:23:42,720
added a fill effect in here using this plus icon

2169
07:23:42,720 --> 07:23:48,871
and go and tap on this um little icon next to fill you see here clicking on it

2170
07:23:48,871 --> 07:23:53,360
you can then say that you want for instance a

2171
07:23:53,360 --> 07:23:59,360
linear should we create a radial maybe or a linear gradient let's see

2172
07:23:59,360 --> 07:24:04,159
let's create a linear gradient okay then this as you can see is a gradient

2173
07:24:04,159 --> 07:24:08,080
that at the moment is going from black to

2174
07:24:08,080 --> 07:24:13,040
transparent with zero percent in here so let's make this black point as well

2175
07:24:13,040 --> 07:24:15,759
transparent like this

2176
07:24:15,759 --> 07:24:21,680
zero and we're gonna in both these cases set the background color as the starting

2177
07:24:21,680 --> 07:24:25,439
point and the ending point so click on the starting point change this color to

2178
07:24:25,439 --> 07:24:29,511
our um tokenite background color and here as

2179
07:24:29,511 --> 07:24:33,759
well so that's that okay then in the middle somewhere we're gonna create a

2180
07:24:33,759 --> 07:24:39,680
point and give it a hundred percent uh transparency and let's see how it looks

2181
07:24:39,680 --> 07:24:43,360
like so in here can we not have three points

2182
07:24:43,360 --> 07:24:47,191
yeah figma just went a little bit ballistic on us but that's okay

2183
07:24:47,191 --> 07:24:52,159
so in here we have that color in here we have that color

2184
07:24:52,159 --> 07:24:56,871
so so the start and the end have to be transparent with that color that we've

2185
07:24:56,871 --> 07:25:01,040
chosen and let's go in in the middle and just kind of change the color to red and

2186
07:25:01,040 --> 07:25:03,831
you can see that it gets created here without a problem

2187
07:25:03,831 --> 07:25:08,400
and then what we're going to do for the middle we're going to go and create

2188
07:25:08,400 --> 07:25:12,799
grab this particular color here as you can see it's kind of like a light very

2189
07:25:12,799 --> 07:25:17,439
soft light blue starts with 7d so it's 7dcff

2190
07:25:17,439 --> 07:25:20,639
and i'm going to go back to the figma design and in here

2191
07:25:20,639 --> 07:25:25,439
change the middle color to that just like this okay so it kind of

2192
07:25:25,439 --> 07:25:30,231
creates a nice little effect for us in the middle kind of a

2193
07:25:30,231 --> 07:25:32,720
nice gradient okay

2194
07:25:32,720 --> 07:25:37,040
so after doing that let's go to our downloads and grab our icon so i'm going

2195
07:25:37,040 --> 07:25:41,191
to go here to downloads and if you remember we had

2196
07:25:41,191 --> 07:25:45,040
this sticky note svg file and figma is great

2197
07:25:45,040 --> 07:25:48,831
with stuff like this so let's just grab svg right in the

2198
07:25:48,831 --> 07:25:53,360
middle okay and that's our sticky note right here okay

2199
07:25:53,360 --> 07:25:57,592
so let's see what we can actually do should we use the svg or should we use

2200
07:25:57,592 --> 07:26:00,959
maybe our app icons it's probably better to use actually the

2201
07:26:00,959 --> 07:26:06,479
app icon so revert this change please so let's not use this svg let's go to our

2202
07:26:06,479 --> 07:26:10,000
app icons that we extracted in the previous chapter and let's grab a

2203
07:26:10,000 --> 07:26:15,360
rasterize png which is this app store icon and bring it right here okay so it

2204
07:26:15,360 --> 07:26:19,511
actually is a nice size i'm going to use these built-in layout guides in figma as

2205
07:26:19,511 --> 07:26:22,720
you can see it tells me where the center is so i'm just going to place our icon

2206
07:26:22,720 --> 07:26:25,912
right there and as you can see it actually blends really well with that

2207
07:26:25,912 --> 07:26:30,871
background linear gradient that we created so it's a it's a subtle effect

2208
07:26:30,871 --> 07:26:35,279
so you can see that the linear gradient is a little bit visible

2209
07:26:35,279 --> 07:26:39,592
and if you disable that linear gradient with this icon it's

2210
07:26:39,592 --> 07:26:44,400
it's very bland so without that linear gradient it's our splash screen doesn't

2211
07:26:44,400 --> 07:26:48,720
look so well so you can also play a little bit with the transparency of the

2212
07:26:48,720 --> 07:26:53,439
entire thing like 100 and i feel like um this is just

2213
07:26:53,439 --> 07:26:57,191
crazy so maybe 20 was actually pretty good

2214
07:26:57,191 --> 07:27:01,279
i don't know where i went so here let's go back here and say 20

2215
07:27:01,279 --> 07:27:05,279
okay as it was so now we have a really good

2216
07:27:05,279 --> 07:27:08,959
um base for our splash screen so what we

2217
07:27:08,959 --> 07:27:13,360
need to do now in order to download this splash screen you need to select those

2218
07:27:13,360 --> 07:27:17,759
two layers so on my macintosh i'm just going to hold down the shift key and

2219
07:27:17,759 --> 07:27:22,000
click on this icon for instance and then click on the next one in order to select

2220
07:27:22,000 --> 07:27:25,592
both where i think you could actually no you can't select like that so you

2221
07:27:25,592 --> 07:27:29,360
need to basically hold down the shift key and select both layers

2222
07:27:29,360 --> 07:27:33,680
then press command g on a macintosh or ctrl g on

2223
07:27:33,680 --> 07:27:38,319
linux and windows in order to group these two layers together okay so now

2224
07:27:38,319 --> 07:27:40,959
it's a group and i'm just going to call it

2225
07:27:40,959 --> 07:27:44,871
splash screens just like that it doesn't have to be called like that splash

2226
07:27:44,871 --> 07:27:50,159
screen but i just call it so okay so what we need to do is to grab this

2227
07:27:50,159 --> 07:27:55,592
splash screen in three flavors so normal like um in normal ios development

2228
07:27:55,592 --> 07:28:02,159
you have to support three different resolutions for your assets usually

2229
07:28:02,159 --> 07:28:06,551
some developers are not as bothered with

2230
07:28:06,551 --> 07:28:10,959
supporting older devices so they only support for instance the

2231
07:28:10,959 --> 07:28:16,000
resolution of 2x and 3x and if this doesn't make sense to you i

2232
07:28:16,000 --> 07:28:18,400
will just explain what this actually means

2233
07:28:18,400 --> 07:28:22,551
um modern devices

2234
07:28:22,551 --> 07:28:26,639
on ios at least they're called at their screen and they're called retina devices

2235
07:28:26,639 --> 07:28:32,159
and it's just a term created by apple um many many years back

2236
07:28:32,159 --> 07:28:35,831
and where they said basically they doubled the amount of pixels that a

2237
07:28:35,831 --> 07:28:40,479
device can display on the screen but they held the aspect ratio as it was so

2238
07:28:40,479 --> 07:28:46,080
if in a little square in an old device the device could display four pixels

2239
07:28:46,080 --> 07:28:50,080
then the new devices could display eight pixels so they doubled the amount of

2240
07:28:50,080 --> 07:28:54,551
pixels per square feet i don't know how you want to say it and

2241
07:28:54,551 --> 07:28:58,639
they call it retina and then they added they said every

2242
07:28:58,639 --> 07:29:03,279
every developer needs to provide an image for the old devices and we call it

2243
07:29:03,279 --> 07:29:05,592
1x as in

2244
07:29:05,592 --> 07:29:10,000
scale to 1 and the new devices will have 2x

2245
07:29:10,000 --> 07:29:14,959
then newer iphone devices came out they had more modern retina displays and even

2246
07:29:14,959 --> 07:29:19,912
more pixels packed into the same space so they said now those devices are

2247
07:29:19,912 --> 07:29:24,799
able to display eight times more pixels than the original ones so

2248
07:29:24,799 --> 07:29:29,360
it's basically gonna be um one x two x and three x

2249
07:29:29,360 --> 07:29:34,400
so um i think it's eight times more is that i don't know

2250
07:29:34,400 --> 07:29:38,720
so it's 1x2x and 3x that we have to support so let's go in here

2251
07:29:38,720 --> 07:29:41,831
um let me see if i can shuffle things

2252
07:29:41,831 --> 07:29:47,279
around so you see better um maybe like this so let's go in here in figma at the

2253
07:29:47,279 --> 07:29:50,959
bottom of the screen you see this export button so i'm going to press that export

2254
07:29:50,959 --> 07:29:54,479
so i'm going to press that export button actually three times as you can see in

2255
07:29:54,479 --> 07:30:00,000
here so we have the first one is a png make sure that they're all png files and

2256
07:30:00,000 --> 07:30:04,400
the first one has no suffix second one has two x and the third one has three x

2257
07:30:04,400 --> 07:30:07,439
that's exactly what we need okay so

2258
07:30:07,439 --> 07:30:12,720
after doing that what we're gonna do is to say export splash screen just like

2259
07:30:12,720 --> 07:30:15,360
that and that's gonna do its processing so it

2260
07:30:15,360 --> 07:30:19,592
may actually take some time depending on our internet connection as well and then

2261
07:30:19,592 --> 07:30:25,191
we downloaded this zip file so our work in this file is basically done and this

2262
07:30:25,191 --> 07:30:29,191
is the contents of that zip file as you can see splash screen png and they're

2263
07:30:29,191 --> 07:30:32,319
all the same but their sizes are quite different you can see the first one is

2264
07:30:32,319 --> 07:30:38,159
604 kilobytes the second one is 1.4 megabytes and the third one is 2.5

2265
07:30:38,159 --> 07:30:44,319
megabytes okay so after doing that let's now remove

2266
07:30:44,319 --> 07:30:48,639
safari or your web browser from from the screen

2267
07:30:48,639 --> 07:30:52,720
and we need to basically go into our source code now so i'm going to keep

2268
07:30:52,720 --> 07:30:56,400
this window here do some reshuffling on the screen

2269
07:30:56,400 --> 07:31:01,439
and then i'm gonna bring our let's see i'm gonna bring our uh

2270
07:31:01,439 --> 07:31:05,912
application to the to the screen like this

2271
07:31:05,912 --> 07:31:11,511
okay and actually we don't need the application sorry about that we kind of

2272
07:31:11,511 --> 07:31:16,080
need xcode in here so let me bring up xcode

2273
07:31:16,080 --> 07:31:20,231
but let's bring xcode to the screen and what we need now is to go to our assets

2274
07:31:20,231 --> 07:31:25,191
in here run our assets and we have our launch image right there so what we need

2275
07:31:25,191 --> 07:31:30,479
to do is to grab these images one at a time and bring them in here okay so and

2276
07:31:30,479 --> 07:31:34,551
they can be called splash screen that's not a problem xcode will do the mapping

2277
07:31:34,551 --> 07:31:38,639
for us so as long as this thing in here is called launch image then we're

2278
07:31:38,639 --> 07:31:42,319
good to go so as a caption any case we're now going

2279
07:31:42,319 --> 07:31:46,400
to go and bring these images in here so we have three images you can see in here

2280
07:31:46,400 --> 07:31:50,159
and we have three placeholders in here that we have to drag and drop our images

2281
07:31:50,159 --> 07:31:54,799
into so let's begin by splash screen png and bring it to 1x

2282
07:31:54,799 --> 07:32:01,439
let's bring our splash screen 2x into 2x and 3x into 3x okay

2283
07:32:01,439 --> 07:32:04,551
and just like that so

2284
07:32:04,551 --> 07:32:08,799
that part is now done but we're not really done designing this splash screen

2285
07:32:08,799 --> 07:32:13,439
as such for the ios app so let's go to the launch screen storyboard

2286
07:32:13,439 --> 07:32:16,720
file in here as you'll see it doesn't look so well

2287
07:32:16,720 --> 07:32:20,231
so we need to find this launch image that

2288
07:32:20,231 --> 07:32:25,191
is displayed in here and you can see at the moment its constraints are like

2289
07:32:25,191 --> 07:32:29,592
very very wrong so it just thinks that if you go into this tab it thinks that

2290
07:32:29,592 --> 07:32:33,360
this image is one two eight four by two seven seven eight

2291
07:32:33,360 --> 07:32:38,871
but we don't want that okay we want this image to be as big as the screen but we

2292
07:32:38,871 --> 07:32:43,040
also want it to fix the aspect ratio of the image so

2293
07:32:43,040 --> 07:32:47,119
that it always fills the entire contents of the screen even if that means the

2294
07:32:47,119 --> 07:32:50,871
image goes a little bit outside the outside the boundaries of the screen

2295
07:32:50,871 --> 07:32:56,959
okay so that the launch screen looks great on all ios devices

2296
07:32:56,959 --> 07:33:01,592
so what you need to do here is just a little bit of a work on ios side so you

2297
07:33:01,592 --> 07:33:06,159
need to go in and select your launch image in this tab in here which is your

2298
07:33:06,159 --> 07:33:12,231
dimensions the size inspector as as it is called in xcode go and say that the x

2299
07:33:12,231 --> 07:33:17,912
is zero and y is also zero so that kind of like make sure that your image starts

2300
07:33:17,912 --> 07:33:22,959
right there then let's just zoom out a little bit and go manually and drag this

2301
07:33:22,959 --> 07:33:26,799
a little bit so that it fits the screen so i'm going to drag this point let's

2302
07:33:26,799 --> 07:33:30,831
see if i can do that with my trackpad or maybe i should use my

2303
07:33:30,831 --> 07:33:35,191
mouse and it's it's like playing a little bit with me just because this

2304
07:33:35,191 --> 07:33:40,319
launch image at the moment has some constraints so let's go and actually

2305
07:33:40,319 --> 07:33:43,592
remove these constraints so i'm going to remove this horizontal constraint by

2306
07:33:43,592 --> 07:33:46,479
pressing the backspace button on it or if you're on windows and linux you have

2307
07:33:46,479 --> 07:33:49,592
to press the delete button on your keyboard so now i've removed those

2308
07:33:49,592 --> 07:33:54,159
constraints so i should be able to freely size this hopefully let's see

2309
07:33:54,159 --> 07:33:57,592
and it's not letting me size this but that's okay so what i'm going to do is

2310
07:33:57,592 --> 07:34:01,040
i'm going to have a look at this view and see its size i can see that view is

2311
07:34:01,040 --> 07:34:07,191
896 then i'm gonna go to my launch image and say okay your height is also 896. so

2312
07:34:07,191 --> 07:34:11,119
that's going to ensure that the height of my launch image is the exact same

2313
07:34:11,119 --> 07:34:15,040
height as the view then i'm going to have a look at the views with is four

2314
07:34:15,040 --> 07:34:19,040
one four and i'm gonna go to the launch image and say you're also four

2315
07:34:19,040 --> 07:34:23,680
four one four okay so now the image container actually

2316
07:34:23,680 --> 07:34:29,119
looks good however this launch image it now has hard-coded values hard-coded

2317
07:34:29,119 --> 07:34:34,231
width and hard-coded height it's x and y and y are quite fine but

2318
07:34:34,231 --> 07:34:38,231
what we need to do is to create some constraints for it and constraints are

2319
07:34:38,231 --> 07:34:41,040
literally i mean we're not going to go into native ios development at this

2320
07:34:41,040 --> 07:34:44,231
moment so you need to kind of have some knowledge about this yourself and if you

2321
07:34:44,231 --> 07:34:48,639
don't i'm just going to tell you just quickly how we create these constraints

2322
07:34:48,639 --> 07:34:54,159
so what we need to do is to click on our launch image and then drag

2323
07:34:54,159 --> 07:34:58,799
and hold down the control button on your keyboard okay

2324
07:34:58,799 --> 07:35:00,639
so click

2325
07:35:00,639 --> 07:35:05,511
hold down control and drag from launch image into the view

2326
07:35:05,511 --> 07:35:09,360
like that then this menu appears on the screen and

2327
07:35:09,360 --> 07:35:14,231
then hold down the shift key on your computer on your macintosh and say you

2328
07:35:14,231 --> 07:35:18,080
want an equal width equal height

2329
07:35:18,080 --> 07:35:24,400
and also you want to see leading space and you want to say

2330
07:35:24,400 --> 07:35:28,080
what else do we want yeah

2331
07:35:28,080 --> 07:35:33,279
that's fine for now i would say i mean ideally what we want is for this screen

2332
07:35:33,279 --> 07:35:37,040
to be in the center as well so maybe we could just say center horizontal and

2333
07:35:37,040 --> 07:35:41,759
center vertical so check these four items as you're holding down the shift

2334
07:35:41,759 --> 07:35:46,159
button and then you can let go of the shift button and then just click here

2335
07:35:46,159 --> 07:35:48,871
anywhere on the screen to dismiss of that

2336
07:35:48,871 --> 07:35:52,551
so now you can see xcode is also happy with the constraints that we created

2337
07:35:52,551 --> 07:35:56,639
then what we need to do is just to tell this image to scale

2338
07:35:56,639 --> 07:36:00,479
according to its width and height so let's go into this tab which is called

2339
07:36:00,479 --> 07:36:03,360
let's see what this tab is actually called

2340
07:36:03,360 --> 07:36:08,799
attribute inspector and inside this scaling here actually

2341
07:36:08,799 --> 07:36:14,000
it's not scale really i believe it should be content mode in here and let's

2342
07:36:14,000 --> 07:36:20,159
just say it is aspect fit okay so it keeps the aspect ratio of the

2343
07:36:20,159 --> 07:36:24,639
original image but it also ensures that it's like yeah it's fitting on the

2344
07:36:24,639 --> 07:36:31,759
screen for now okay so let's leave it like this

2345
07:36:31,759 --> 07:36:37,511
all right so let's then go ahead and actually see if this looks okay so what

2346
07:36:37,511 --> 07:36:42,080
we could do is to write in xcode let's just say yeah

2347
07:36:42,080 --> 07:36:48,400
let's run on ios 13 pro which i believe is the simulator and that i have already

2348
07:36:48,400 --> 07:36:51,759
in here and from

2349
07:36:51,759 --> 07:36:56,720
from xcode itself we can press the run button to have a look at how this

2350
07:36:56,720 --> 07:37:01,191
actually looks like and while this build process is going you can also go to your

2351
07:37:01,191 --> 07:37:05,831
simulator here and say file and open simulator and i'm just going to

2352
07:37:05,831 --> 07:37:12,080
choose another simulator as well such as iphone 8 plus okay it is just good idea

2353
07:37:12,080 --> 07:37:16,319
usually to test your splash screen and the functionality of your application on

2354
07:37:16,319 --> 07:37:22,799
as many devices and simulator as you can i mean i actually prefer to test on real

2355
07:37:22,799 --> 07:37:26,639
devices but right now it is quite

2356
07:37:26,639 --> 07:37:29,831
difficult for me to bring so many test devices on the screen so i'm just going

2357
07:37:29,831 --> 07:37:33,279
to use a simulator to test the splash screen okay

2358
07:37:33,279 --> 07:37:38,400
so now what we're doing is just to compile our application for iphone 13

2359
07:37:38,400 --> 07:37:42,831
pro which is a simulator we've been using so far when it came to for

2360
07:37:42,831 --> 07:37:46,959
instance um testing our application so let's move

2361
07:37:46,959 --> 07:37:50,080
this to the background because this is not really our application this is our

2362
07:37:50,080 --> 07:37:55,439
application so let's bring it here and let's

2363
07:37:55,439 --> 07:38:00,871
just give some time to xcode to do the work that it needs in order to build

2364
07:38:00,871 --> 07:38:05,040
our application for this simulator and also install it and run it so that we

2365
07:38:05,040 --> 07:38:08,720
can have a look a little bit at the splash screen so i'm just going to

2366
07:38:08,720 --> 07:38:13,360
be waiting until that process is done

2367
07:38:13,360 --> 07:38:20,551
all right now our application is running on a simulator called iphone 13 pro so

2368
07:38:20,551 --> 07:38:24,639
what we need to do is to actually kill the running of the application because

2369
07:38:24,639 --> 07:38:28,551
after the application is launched we're not going to see the launch screen even

2370
07:38:28,551 --> 07:38:32,551
if you for instance send the application to the background with command shift h

2371
07:38:32,551 --> 07:38:36,551
that sends the application to home and bring it back up there is no launch

2372
07:38:36,551 --> 07:38:40,959
screen remember launch screen for an application is only displayed when the

2373
07:38:40,959 --> 07:38:45,592
application is completely dead and it's cold booting so in order to send in

2374
07:38:45,592 --> 07:38:49,119
order to basically kill the application what you could do is either press the

2375
07:38:49,119 --> 07:38:52,959
stop button here on xcode which basically kills the debug

2376
07:38:52,959 --> 07:38:57,439
process and and also kills the application so now

2377
07:38:57,439 --> 07:39:01,511
you can actually click on the application in your home screen and

2378
07:39:01,511 --> 07:39:05,119
bring it to the foreground and as you saw that was the little splash screen

2379
07:39:05,119 --> 07:39:08,959
that we saw on the screen so i'm gonna kill the app and bring it back up again

2380
07:39:08,959 --> 07:39:13,680
and that's our splash screen so seems to be actually looking fine on iphone 13

2381
07:39:13,680 --> 07:39:19,759
pro let's now change the target in here and change it to our iphone 8 plus

2382
07:39:19,759 --> 07:39:23,040
which is the other simulator that i brought up here

2383
07:39:23,040 --> 07:39:27,831
and the reasoning for that is that iphone 8 plus is still a major player in

2384
07:39:27,831 --> 07:39:32,319
the market a lot of people have iphone 8 plus and the screen is fabulous it is a

2385
07:39:32,319 --> 07:39:37,279
great phone that people are still using so and the huge difference between

2386
07:39:37,279 --> 07:39:43,191
iphone 8 plus and iphone 13 pro is that iphone 8 plus has no notch so it doesn't

2387
07:39:43,191 --> 07:39:48,639
have um the notch that you can see in here on an iphone 13 pro so and it has a

2388
07:39:48,639 --> 07:39:53,439
home button so that's a little bit of a thing that we have to think about that

2389
07:39:53,439 --> 07:39:56,871
you need to test your application on multiple devices and now i'm going to

2390
07:39:56,871 --> 07:40:00,871
kill the application oops i don't actually know what i did so

2391
07:40:00,871 --> 07:40:04,959
let's go in here and i'm going to kill the debug process on iphone 8 plus as

2392
07:40:04,959 --> 07:40:09,592
well and run it again and let me just delete this old app from here so we so

2393
07:40:09,592 --> 07:40:13,439
we don't get confused and if you run the application did you just

2394
07:40:13,439 --> 07:40:17,191
see it momentarily that the application that the splash screen doesn't look so

2395
07:40:17,191 --> 07:40:23,191
good it's not doing so well so if i run it again with do you see the spacing on

2396
07:40:23,191 --> 07:40:27,279
the right and left if you pause the video you will see it

2397
07:40:27,279 --> 07:40:31,119
that is because we have a little bit of problem with our aspect ratio in here

2398
07:40:31,119 --> 07:40:35,439
because you remember in this launch emit launch image we said aspect fit what we

2399
07:40:35,439 --> 07:40:40,231
need to do is just to say aspect fill and aspect fill what it does it tries to

2400
07:40:40,231 --> 07:40:44,159
keep it it doesn't try it keeps the aspect ratio but it always makes sure

2401
07:40:44,159 --> 07:40:49,360
that the image is that is at least as big as its container so having done that

2402
07:40:49,360 --> 07:40:52,720
let's run the application again on iphone 8 plus

2403
07:40:52,720 --> 07:41:00,000
with that change in mind and let's see how the application looks like

2404
07:41:00,000 --> 07:41:04,479
now it looked a lot better so there was no empty space to the right and left i'm

2405
07:41:04,479 --> 07:41:09,511
gonna kill the application like this send it up bring it up

2406
07:41:09,511 --> 07:41:13,511
and let's see oh it's because my debug debug process i just killed my debug

2407
07:41:13,511 --> 07:41:18,231
process so let's kill it again like this let's see

2408
07:41:18,231 --> 07:41:21,592
if i c if i can manage to do that kill the application

2409
07:41:21,592 --> 07:41:24,720
and open it and now i can see that this splash

2410
07:41:24,720 --> 07:41:29,680
screen is actually looking good on iphone 8 plus as well

2411
07:41:29,680 --> 07:41:35,040
great now that things are working fine on ios we need to focus on android so

2412
07:41:35,040 --> 07:41:40,000
let me bring up the caption for the next section that we're going to talk about

2413
07:41:40,000 --> 07:41:44,479
we're going to talk about android slash screens here i'll also try to open this

2414
07:41:44,479 --> 07:41:47,831
url so let me bring it here

2415
07:41:47,831 --> 07:41:51,511
so you'll see that there is official documentation about creating splash

2416
07:41:51,511 --> 07:41:54,479
screens for android as well on developerandroid.com

2417
07:41:54,479 --> 07:41:59,119
guide topics ui splash slash um

2418
07:41:59,119 --> 07:42:02,080
splash dash screen and

2419
07:42:02,080 --> 07:42:05,759
um here there is a lot of information that you can have a look at and like

2420
07:42:05,759 --> 07:42:09,439
even animations as you can see in here what splash screens mean to android

2421
07:42:09,439 --> 07:42:14,400
applications and that you can even animate them etc etc so i suggest that

2422
07:42:14,400 --> 07:42:18,959
you actually read the documentation for splash screens on android to get a

2423
07:42:18,959 --> 07:42:23,191
better understanding of the differences between ios splash screens and android

2424
07:42:23,191 --> 07:42:27,511
splash screens it's always good to know i like the underlying implementation and

2425
07:42:27,511 --> 07:42:31,912
how it actually works under the hood if you're a flutter developer you don't

2426
07:42:31,912 --> 07:42:35,439
necessarily have to only focus on flutter but you since you're deploying

2427
07:42:35,439 --> 07:42:41,360
your application compatible with for instance mac os linux windows and

2428
07:42:41,360 --> 07:42:44,959
android it's always good to know in my opinion

2429
07:42:44,959 --> 07:42:49,439
how it works under the hood so if you want to have a look at this

2430
07:42:49,439 --> 07:42:53,912
please go ahead and read the documentation on how it works and now

2431
07:42:53,912 --> 07:42:59,040
let's go to this a little beauty of a link which is on stack overflow

2432
07:42:59,040 --> 07:43:01,831
which which is one of my favorite websites to find

2433
07:43:01,831 --> 07:43:05,040
um solutions that i can't even think of the

2434
07:43:05,040 --> 07:43:09,592
answers to sorry the problems that i can't find the answers to so let's go

2435
07:43:09,592 --> 07:43:13,759
ahead and have a look at this url in here which will explain to you the

2436
07:43:13,759 --> 07:43:18,479
different resolutions that we have to provide for our splash screen for an

2437
07:43:18,479 --> 07:43:23,439
android device and you saw it from our figma design in here

2438
07:43:23,439 --> 07:43:27,439
it's gonna load now excuse me um

2439
07:43:27,439 --> 07:43:31,759
so here you saw that when we exported our

2440
07:43:31,759 --> 07:43:35,119
oh this sticky note shouldn't be there i don't know why it was added there so i'm

2441
07:43:35,119 --> 07:43:39,680
just going to remove it and i hope that we actually didn't create our

2442
07:43:39,680 --> 07:43:43,831
splash screen with that in we could double check that by bringing up xcode

2443
07:43:43,831 --> 07:43:46,720
and have it looking have a look at our assets

2444
07:43:46,720 --> 07:43:50,479
and just have a look at these images showing finder

2445
07:43:50,479 --> 07:43:53,759
excuse me i'm going to bring it up and i can see that little sticky note wasn't

2446
07:43:53,759 --> 07:43:57,680
in our splash screen so that's really good it was just probably a mistake

2447
07:43:57,680 --> 07:44:02,319
from my side so that's great so as you saw for ios we

2448
07:44:02,319 --> 07:44:07,592
exported these assets in here three two one x

2449
07:44:07,592 --> 07:44:12,720
with these suffixes so two x four two x three x for three x and nothing for the

2450
07:44:12,720 --> 07:44:17,511
normal um splash screen on one x devices but on

2451
07:44:17,511 --> 07:44:21,831
android there's a lot more that we have to export so i'll open that url in here

2452
07:44:21,831 --> 07:44:27,119
that you can you'll also see and you'll see that these are the various um

2453
07:44:27,119 --> 07:44:31,592
resolutions that we have to export for our splice screen on android we're not

2454
07:44:31,592 --> 07:44:36,639
in our application supporting ldb ldpi in here so we'll we're going to go and

2455
07:44:36,639 --> 07:44:44,871
export mdpi hdpi xhdpi and etc etc so let's go ahead now in your figma design

2456
07:44:44,871 --> 07:44:48,959
right there select your splash screen from the left hand side and go go ahead

2457
07:44:48,959 --> 07:44:54,551
please and remove all these exports that we've created earlier okay so what

2458
07:44:54,551 --> 07:44:58,959
we need to do now is to make sure that we're conforming to these sizes for mdpi

2459
07:44:58,959 --> 07:45:02,319
for instance and we're going to basically select the splash screen and

2460
07:45:02,319 --> 07:45:06,799
say export and let's in here see

2461
07:45:06,799 --> 07:45:12,639
that okay these are the sizes so 1x let's just say we don't want any suffix

2462
07:45:12,639 --> 07:45:16,159
and i've already prepared something like that before so let me just show you how

2463
07:45:16,159 --> 07:45:20,959
it should look like and i'm going to select this splash here

2464
07:45:20,959 --> 07:45:25,279
and you can see this is pretty much how you should create it so one x and we say

2465
07:45:25,279 --> 07:45:30,720
mdpi as it was displayed in here mdpi you see and then we say one and a half x

2466
07:45:30,720 --> 07:45:36,799
is hdpi and xhdpi etc etc okay so let's go ahead and do something similar in our

2467
07:45:36,799 --> 07:45:40,720
splash screen in here so one x and as you could as you could see in the one

2468
07:45:40,720 --> 07:45:46,231
that i preferred here one x was mdpi so let's go ahead and say a suffix is mdpi

2469
07:45:46,231 --> 07:45:50,000
like that i'll create another export in here and

2470
07:45:50,000 --> 07:45:56,080
we're in this case we need hdpi which is one and a half x so let's select this

2471
07:45:56,080 --> 07:46:01,040
and say one and a half x and we say hdpi like that

2472
07:46:01,040 --> 07:46:06,479
and then we go for the next one which is xhdpi so let's go and press the

2473
07:46:06,479 --> 07:46:11,439
plus button in here and say 2x is a x hdpi

2474
07:46:11,439 --> 07:46:15,279
and then we go to the next level which is xxhdpi

2475
07:46:15,279 --> 07:46:19,119
so let's press the plus button and say

2476
07:46:19,119 --> 07:46:23,759
uh and this needs to be x x hdpi okay

2477
07:46:23,759 --> 07:46:29,511
so we're gonna say xx hdpi and last but not least we have triplex

2478
07:46:29,511 --> 07:46:34,159
hdpi which is four x the resolution so let's say xxx

2479
07:46:34,159 --> 07:46:40,479
a plus button triplex hdpi and in here this should be 4x okay so

2480
07:46:40,479 --> 07:46:43,592
now oops i didn't want to create this drop shadow so

2481
07:46:43,592 --> 07:46:48,639
that's how yours should also look like with all these uh various resolutions in

2482
07:46:48,639 --> 07:46:51,119
here okay

2483
07:46:51,119 --> 07:46:54,959
so now what i need you to do please is just to go ahead so make sure that your

2484
07:46:54,959 --> 07:46:58,319
slash screen is selected on the left hand side and then just go and export

2485
07:46:58,319 --> 07:47:02,551
all of these so let's just press the export button

2486
07:47:02,551 --> 07:47:06,080
so that's going to take its time and calculate basically all these different

2487
07:47:06,080 --> 07:47:09,360
resolutions prepare the pngs for us and it's going to pack them into beautiful

2488
07:47:09,360 --> 07:47:12,551
zip file and then it's going to download that packed file

2489
07:47:12,551 --> 07:47:16,319
for us so depending on your connection speed this could take some time and the

2490
07:47:16,319 --> 07:47:20,000
result i can see is an untitled 2 zip file uh

2491
07:47:20,000 --> 07:47:26,080
of about 10 megabytes so there we go so let me

2492
07:47:26,080 --> 07:47:30,231
double click on this file in order to unpack it and i'm going to open the

2493
07:47:30,231 --> 07:47:34,080
folder here for you so you can also see as you can see splash screen

2494
07:47:34,080 --> 07:47:37,439
it's all there so they're all looking very similar to each other but they have

2495
07:47:37,439 --> 07:47:41,592
very different sizes as you can see though so the xxx hdpi has the size of

2496
07:47:41,592 --> 07:47:48,231
almost four megabytes whereas the mdpi is only 600 kilobytes so

2497
07:47:48,231 --> 07:47:52,231
now we got our images perfect so what we need to do is um

2498
07:47:52,231 --> 07:47:56,479
we're going to basically call them splash screens and then place

2499
07:47:56,479 --> 07:47:59,511
them inside various um

2500
07:47:59,511 --> 07:48:04,551
mipmaps folder in our android application so let me bring up visual

2501
07:48:04,551 --> 07:48:08,080
studio code in here let me see where i've placed my visual studio code right

2502
07:48:08,080 --> 07:48:12,231
there okay and if you then ex

2503
07:48:12,231 --> 07:48:16,000
go into exploration a little bit here you can see we have an ios folder so let

2504
07:48:16,000 --> 07:48:18,080
me just make the size a little bit bigger

2505
07:48:18,080 --> 07:48:21,360
excuse me and we have an android folder in here so

2506
07:48:21,360 --> 07:48:27,119
if you go to android and then app src main and then res and you'll see that

2507
07:48:27,119 --> 07:48:32,319
you have these mipmap folders hdpi mdpi and all those one two three four five

2508
07:48:32,319 --> 07:48:37,680
folders that we need for our five assets in here okay so let's go ahead and

2509
07:48:37,680 --> 07:48:42,720
actually name this file in here and let me close this little folder that i have

2510
07:48:42,720 --> 07:48:47,360
at the bottom of the screen as well so okay so um we start with mdpi in here

2511
07:48:47,360 --> 07:48:53,279
let's just call it splash okay slash png and i'm just gonna go to this mdpi

2512
07:48:53,279 --> 07:48:57,279
folder here and i can see i have a launcher icon an ic launcher so let's

2513
07:48:57,279 --> 07:49:03,360
just drag this into mip map mdpi if i can

2514
07:49:03,360 --> 07:49:08,231
and mid map mdpi there it is so the mdp i want is done

2515
07:49:08,231 --> 07:49:10,871
now i'm going to delete it from here so now

2516
07:49:10,871 --> 07:49:16,000
we have hdpi then i'm going to call it splash again remember it's hdpi so i'm

2517
07:49:16,000 --> 07:49:21,360
going to drag and drop it into the hdpi folder so it's called png there as well

2518
07:49:21,360 --> 07:49:25,511
then i'm going to delete it from here then we have the xhdpi so i'm going to

2519
07:49:25,511 --> 07:49:30,871
call it splash again and remember xhdpi so let's go and drag

2520
07:49:30,871 --> 07:49:34,592
it there great then delete it from here then we have

2521
07:49:34,592 --> 07:49:40,871
xxhdpi so call it splash again and bring it into xx folder in here

2522
07:49:40,871 --> 07:49:43,831
and i can see it's right there splash okay

2523
07:49:43,831 --> 07:49:48,479
and last but not least we have the triple x hdpi and we're going to call it

2524
07:49:48,479 --> 07:49:52,871
slash again and then let's go in here and bring it right there

2525
07:49:52,871 --> 07:49:57,912
great so now you should actually see one two

2526
07:49:57,912 --> 07:50:00,959
three four

2527
07:50:00,959 --> 07:50:06,639
and five images that we have exported and placed inside our android folder so

2528
07:50:06,639 --> 07:50:10,871
then i can delete the last one safely

2529
07:50:10,871 --> 07:50:15,439
so now that we've done that we need to actually tell our android application to

2530
07:50:15,439 --> 07:50:19,191
use those splash screens so what we need to do is to look for android window

2531
07:50:19,191 --> 07:50:23,279
background inside our application i'm going to close all these open tabs and

2532
07:50:23,279 --> 07:50:28,000
i'm going to search for android window background just like that okay

2533
07:50:28,000 --> 07:50:33,360
so you'll find four of them but only two of them are actually interesting for us

2534
07:50:33,360 --> 07:50:38,000
so what we need to do is actually i'm going to go to my styles as well here so

2535
07:50:38,000 --> 07:50:41,191
as you can see here is using a drawable but we're not using a drawable a

2536
07:50:41,191 --> 07:50:44,799
drawable is something that for instance if you look for launch background let's

2537
07:50:44,799 --> 07:50:49,759
go in here you see these um fine launch background actually is there

2538
07:50:49,759 --> 07:50:53,592
a drawable called launch oh we don't have it right now okay anyways so i'm

2539
07:50:53,592 --> 07:50:59,119
gonna search for um android window background as it was our

2540
07:50:59,119 --> 07:51:02,080
mission so let's go in here and find that window

2541
07:51:02,080 --> 07:51:05,759
background and here as you can see it says drawable launch background and this

2542
07:51:05,759 --> 07:51:11,191
file is android app src main res values styles xml so that's the first one okay

2543
07:51:11,191 --> 07:51:15,680
that's this drawable so i need you in here to change this to mipmap

2544
07:51:15,680 --> 07:51:20,080
and in here just say splash which is the name of our file that we created okay so

2545
07:51:20,080 --> 07:51:24,639
that's the first um occurrence of this android window background and then we're

2546
07:51:24,639 --> 07:51:29,279
going to go in here as well which is in android app src main res values knight

2547
07:51:29,279 --> 07:51:34,551
styles xml and call this mipmap like that

2548
07:51:34,551 --> 07:51:40,159
and in here we also say splash perfect so we've changed those

2549
07:51:40,159 --> 07:51:44,479
so what we need to do now is to actually test our changes on android as well so

2550
07:51:44,479 --> 07:51:49,040
i'm going to close all those tabs as you saw and let's just go to main dart file

2551
07:51:49,040 --> 07:51:53,040
just to have a dart file open and then i'm going to stop the running

2552
07:51:53,040 --> 07:51:55,680
of this application because i don't really know i think it's actually

2553
07:51:55,680 --> 07:52:00,080
running the application on um the iphone simulator and then i'm going to say

2554
07:52:00,080 --> 07:52:03,831
command shift p on a macintosh or ctrl shift p in windows and linux if you're

2555
07:52:03,831 --> 07:52:07,360
on visual studio code and then say flutter select device as you can see in

2556
07:52:07,360 --> 07:52:12,159
here and then i'm going to choose my android phone okay and as you know from

2557
07:52:12,159 --> 07:52:15,040
the previous chapters i actually prefer to run my

2558
07:52:15,040 --> 07:52:19,511
applications real phones and then run and then run without debugging

2559
07:52:19,511 --> 07:52:23,279
and this is gonna basically kick start our gradle build

2560
07:52:23,279 --> 07:52:30,080
processing here and while that is ongoing i'll go and bring um scr cpy to

2561
07:52:30,080 --> 07:52:34,959
the screen so here it is and i can see

2562
07:52:34,959 --> 07:52:38,000
nothing actually what happened to our build

2563
07:52:38,000 --> 07:52:42,639
i think our build somehow crashed so let's go and build again and see what

2564
07:52:42,639 --> 07:52:47,279
happens debug console and

2565
07:52:47,279 --> 07:52:51,759
okay i can see it says there is a problem and let's see another expected

2566
07:52:51,759 --> 07:52:58,080
caller reference bot got raw string mid map splash okay so let's have a look at

2567
07:52:58,080 --> 07:53:03,592
what we actually did with this mid map splash i can see i've actually written

2568
07:53:03,592 --> 07:53:07,439
incorrectly i've written me map so that could that could explain it it's a

2569
07:53:07,439 --> 07:53:10,959
mid-map so if you've done the same mistake as me in one place please just

2570
07:53:10,959 --> 07:53:15,279
correct this so it's mipmap all right so

2571
07:53:15,279 --> 07:53:21,040
fine okay fair enough and let's now try to run the application again and see if

2572
07:53:21,040 --> 07:53:25,191
it can compile this time so it says

2573
07:53:25,191 --> 07:53:30,080
it got a raw string again and it's now did i really type it in correctly did i

2574
07:53:30,080 --> 07:53:34,639
write mimi map this is unbelievable um if i've actually

2575
07:53:34,639 --> 07:53:39,759
done that so so no i i think i've actually written it

2576
07:53:39,759 --> 07:53:43,592
in two places incorrectly so map

2577
07:53:43,592 --> 07:53:47,279
all right it would be very comical if i made a

2578
07:53:47,279 --> 07:53:51,360
mistake again while trying to fix my previous mistakes

2579
07:53:51,360 --> 07:53:55,759
so let's see now if the android build is gonna go through successfully so i'll

2580
07:53:55,759 --> 07:54:01,360
just wait here until that task is done

2581
07:54:01,360 --> 07:54:08,159
okay it's built successfully i was just gonna go grab some coffee so

2582
07:54:08,159 --> 07:54:12,479
and it's connecting now so that actually went really fast i would say gradle

2583
07:54:12,479 --> 07:54:16,319
builds in here are surprisingly fast when running with flutter for instance

2584
07:54:16,319 --> 07:54:21,511
compared to the ios xcode build system so i'm going to bring up scrcpy in here

2585
07:54:21,511 --> 07:54:24,871
and i can see the application running without a problem but we didn't actually

2586
07:54:24,871 --> 07:54:28,479
see our splash screen so what i'm going to do is i'm going to

2587
07:54:28,479 --> 07:54:31,511
stop the processing here which kills the

2588
07:54:31,511 --> 07:54:35,680
application and then i'm gonna find our application here and then open it and

2589
07:54:35,680 --> 07:54:39,831
then i can see our beautiful splash screen on the screen when the

2590
07:54:39,831 --> 07:54:44,231
application starts so that's also working as expected no problems at all

2591
07:54:44,231 --> 07:54:48,231
and remember we've done quite a lot of work now we've done like icons from the

2592
07:54:48,231 --> 07:54:51,831
previous chapters and we've also worked on our splash screen so

2593
07:54:51,831 --> 07:54:54,959
there's lots that we've done but we haven't really committed any of these

2594
07:54:54,959 --> 07:54:58,400
because the work wasn't complete however

2595
07:54:58,400 --> 07:55:02,799
now that we have um both icons and splash screens on both

2596
07:55:02,799 --> 07:55:06,479
ios and android i think it's time that we do as we usually do at the end of

2597
07:55:06,479 --> 07:55:09,759
every chapter is to commit our work and make sure that we're not going to lose

2598
07:55:09,759 --> 07:55:12,479
it so i'm going to do some reshuffling on

2599
07:55:12,479 --> 07:55:16,959
the screen right here and i'm going to increase the size here as well so i'm

2600
07:55:16,959 --> 07:55:23,119
going to go to terminal then like this and let's then have a look at the status

2601
07:55:23,119 --> 07:55:26,871
and you can see that we've done a lot of work so

2602
07:55:26,871 --> 07:55:30,639
there are many files that have been changed as you can see in here modified

2603
07:55:30,639 --> 07:55:34,319
modified a tremendous amount of work so

2604
07:55:34,319 --> 07:55:40,000
let's just say get at all and then let's commit all this work as

2605
07:55:40,000 --> 07:55:45,439
is it step 28 yes step 28 okay so if you look at our logs so we have

2606
07:55:45,439 --> 07:55:50,639
step 27 and then we have step 28 as well so i'm gonna push all these changes and

2607
07:55:50,639 --> 07:55:55,592
this push is actually quite a big push because we have a lot of resources that

2608
07:55:55,592 --> 07:56:00,159
we're pushing to github so or wherever you're hosting your git repository it

2609
07:56:00,159 --> 07:56:04,551
could be bitbucket or somewhere else but depending on your connection and the

2610
07:56:04,551 --> 07:56:08,720
ability of your host to receive these files this operation could actually take

2611
07:56:08,720 --> 07:56:14,231
some time so and after we've done that let's also tag our work at step 28

2612
07:56:14,231 --> 07:56:18,319
like that and push our tags

2613
07:56:18,319 --> 07:56:22,400
all right so if i say now git tag we should have 26

2614
07:56:22,400 --> 07:56:29,191
27 and 28 line up right there so perfect and we should have no status right now

2615
07:56:29,191 --> 07:56:32,639
awesome as it's tradition after our tagging and

2616
07:56:32,639 --> 07:56:35,279
committing everything at the end of every chapter we'll talk about what we

2617
07:56:35,279 --> 07:56:38,551
need to discuss in the chapter that is to come and

2618
07:56:38,551 --> 07:56:41,119
um i can't believe we're actually getting

2619
07:56:41,119 --> 07:56:46,000
to this point in this course it is such a huge moment both both for me and i

2620
07:56:46,000 --> 07:56:50,799
hope it is for you as well because we are actually going to submit our ios

2621
07:56:50,799 --> 07:56:55,119
application to the app store so without further ado if you want to

2622
07:56:55,119 --> 07:56:58,871
get some refreshments please do and i'll see you in the next chapter

2623
07:56:58,871 --> 07:57:02,479
hello and welcome to chapter 47 of the slatter course

2624
07:57:02,479 --> 07:57:05,912
uh we've been waiting for this moment for a very long time now at least i have

2625
07:57:05,912 --> 07:57:09,912
so that we have been developing our application using block we've been doing

2626
07:57:09,912 --> 07:57:14,319
a lot of work with widgets we've prepared splash screens icons etc etc

2627
07:57:14,319 --> 07:57:18,159
we've even got our hands dirty with figma a task that maybe many of you

2628
07:57:18,159 --> 07:57:22,871
hadn't done before so what is left now well we're gonna send

2629
07:57:22,871 --> 07:57:28,479
our application to the ios app store and it gives me really a lot of pressure

2630
07:57:28,479 --> 07:57:31,592
pleasure to actually announce that that we're gonna do this so

2631
07:57:31,592 --> 07:57:36,080
what do we need to do in order to be able to interact with the app store and

2632
07:57:36,080 --> 07:57:38,319
also in order to be able to create your

2633
07:57:38,319 --> 07:57:43,191
application of course you you're going to need to have a macintosh and that is

2634
07:57:43,191 --> 07:57:46,720
as i've mentioned an unfortunate fact when you're dealing with ios development

2635
07:57:46,720 --> 07:57:51,040
but if you don't have a macintosh you can always contact a friend or maybe you

2636
07:57:51,040 --> 07:57:55,279
use a service on the internet that can for instance take your source code and

2637
07:57:55,279 --> 07:57:58,959
build your application for you i don't know if those services exist however

2638
07:57:58,959 --> 07:58:02,159
let's just accept the fact the unfortunate fact that you'll need to

2639
07:58:02,159 --> 07:58:06,000
have a macintosh in order to build your application and send it to the ios app

2640
07:58:06,000 --> 07:58:08,479
store so

2641
07:58:08,479 --> 07:58:13,360
what do we actually need you see when you create your application for um for

2642
07:58:13,360 --> 07:58:17,759
apple you need to bundle it up inside a file which is pretty much just a zip

2643
07:58:17,759 --> 07:58:23,680
file but its extension is called ipa and this zip file in essence contains

2644
07:58:23,680 --> 07:58:27,680
your entire application bundle all the resources and all the

2645
07:58:27,680 --> 07:58:32,959
signed binaries from your side and then you'll just need to submit it to apple

2646
07:58:32,959 --> 07:58:36,479
and then this submission is going to go to

2647
07:58:36,479 --> 07:58:39,831
something called app store connect and um

2648
07:58:39,831 --> 07:58:44,231
we're going to now talk about app store connect actually and what that is so you

2649
07:58:44,231 --> 07:58:46,959
see when when you're developing your flutter

2650
07:58:46,959 --> 07:58:49,759
application for instance and you're talking with firebase then inside of

2651
07:58:49,759 --> 07:58:54,000
your code you're talking with the firebase sdk but on the backend side of

2652
07:58:54,000 --> 07:58:58,959
firebase then there's an entire console so there's in the console.firebase

2653
07:58:58,959 --> 07:59:02,231
google.com i think it's called or if you just google it and say

2654
07:59:02,231 --> 07:59:05,279
firebase console you'll get to that point and

2655
07:59:05,279 --> 07:59:07,680
app store connect is

2656
07:59:07,680 --> 07:59:13,511
the firebase console for ios developers so it is where you basically manage your

2657
07:59:13,511 --> 07:59:16,799
applications the reviews that are submitted to your

2658
07:59:16,799 --> 07:59:21,592
applications you can respond to those reviews so it's like the back end

2659
07:59:21,592 --> 07:59:25,511
um is kind of like a front end for app

2660
07:59:25,511 --> 07:59:28,959
store's back-end you could say so it's your portal

2661
07:59:28,959 --> 07:59:32,799
basically to to the app store as a developer

2662
07:59:32,799 --> 07:59:37,279
and google also has something similar which is the google developer console

2663
07:59:37,279 --> 07:59:42,231
excuse me so what we need to do now in order to

2664
07:59:42,231 --> 07:59:47,439
be able to continue we need to actually create our applications on the app store

2665
07:59:47,439 --> 07:59:51,439
connect so what i'm going to do in here is i'm going to bring up app store

2666
07:59:51,439 --> 07:59:54,720
connect and i've already logged in with my developer account

2667
07:59:54,720 --> 07:59:58,479
and let's go in here as you can see these are some of the apps that i'd

2668
07:59:58,479 --> 08:00:02,799
submitted to apple previously if i can increase the size of this let's

2669
08:00:02,799 --> 08:00:05,759
see if it works yep all right

2670
08:00:05,759 --> 08:00:10,231
so what we need to do is in order to be able to submit our application if we

2671
08:00:10,231 --> 08:00:13,831
haven't done that before for this particular application which we haven't

2672
08:00:13,831 --> 08:00:17,360
we need to create an application here on app store connect okay so please go to

2673
08:00:17,360 --> 08:00:21,040
appstoreconnect.apple.com and then you'll be presented with a

2674
08:00:21,040 --> 08:00:23,912
screen that asks you okay what do you want to do with app store connect and it

2675
08:00:23,912 --> 08:00:28,231
kind of looks like this my apps app analytics etc etc

2676
08:00:28,231 --> 08:00:32,639
and this is actually i'm assuming that you have admin access

2677
08:00:32,639 --> 08:00:35,680
to app store connect because apps are connect like many other

2678
08:00:35,680 --> 08:00:39,680
frontends it has permission it's like permission based so

2679
08:00:39,680 --> 08:00:43,592
if you're for instance working with a company and that company has invited you

2680
08:00:43,592 --> 08:00:47,191
to their own app store connect account and depending on the permissions that

2681
08:00:47,191 --> 08:00:53,759
they set for you you may or may not have access to either one or all the apps so

2682
08:00:53,759 --> 08:00:58,400
it is also app-based the permission so like and i can invite you to my app

2683
08:00:58,400 --> 08:01:02,231
store connect and only give you access for instance to this application and

2684
08:01:02,231 --> 08:01:07,040
only give you a very limited access or admin access okay

2685
08:01:07,040 --> 08:01:11,279
so if you don't have access to this app sections because you're invited as

2686
08:01:11,279 --> 08:01:15,680
um as a user to someone else's app store connect account and they haven't given

2687
08:01:15,680 --> 08:01:20,080
you the access to access their application so you need to ask them for

2688
08:01:20,080 --> 08:01:24,319
permission basically to increase the permission level for you

2689
08:01:24,319 --> 08:01:27,680
so let's go ahead and press this plus button and this is in here we're going

2690
08:01:27,680 --> 08:01:31,680
to say new app and in here it's going to ask you okay what kind of app is it it's

2691
08:01:31,680 --> 08:01:36,551
an ios app it's not a mac os like we haven't really worked on a native mac os

2692
08:01:36,551 --> 08:01:40,231
application although users

2693
08:01:40,231 --> 08:01:44,159
now with m1 processors on macintosh with

2694
08:01:44,159 --> 08:01:48,639
macintosh which are arm based they can actually install ios applications as

2695
08:01:48,639 --> 08:01:52,000
you'll soon see so this application that we're developing flutter we didn't

2696
08:01:52,000 --> 08:01:56,551
actually create a macintosh target for it but even though it's an ios

2697
08:01:56,551 --> 08:02:00,551
application you can still install it with test flight or later when it's

2698
08:02:00,551 --> 08:02:04,479
actually released on the ios app store you can install it with the mac app

2699
08:02:04,479 --> 08:02:07,759
store on your macintosh so it's absolutely lovely

2700
08:02:07,759 --> 08:02:11,040
okay so here one you need to do in the name field

2701
08:02:11,040 --> 08:02:16,319
you need to find a unique name in the entire app store there are millions of

2702
08:02:16,319 --> 08:02:19,680
applications on the i'm actually making up this statistic i don't know if it's

2703
08:02:19,680 --> 08:02:23,119
like hundreds of thousands of applications or millions but let's just

2704
08:02:23,119 --> 08:02:26,000
let's just say millions because easier to say

2705
08:02:26,000 --> 08:02:29,191
all these applications are in the app store you have to find a unique name for

2706
08:02:29,191 --> 08:02:35,119
your application and remember you can't use reserved words so if you look in

2707
08:02:35,119 --> 08:02:38,871
here if i cancel this if you look in here

2708
08:02:38,871 --> 08:02:43,119
this is not an accepted application name so i just i've prepared this in here

2709
08:02:43,119 --> 08:02:47,360
just to demonstrate it for you that if you use for instance a name like

2710
08:02:47,360 --> 08:02:51,592
firebase things like that probably apple is going to reject your

2711
08:02:51,592 --> 08:02:56,159
application and definitely google is not even going to allow you to go to the

2712
08:02:56,159 --> 08:03:00,959
google play store with a name with a part of your application name

2713
08:03:00,959 --> 08:03:04,720
being a reserved word like a product such as firebase so

2714
08:03:04,720 --> 08:03:08,959
you have to find a unique name that is not reserved so let's just say ios and

2715
08:03:08,959 --> 08:03:13,592
what should we call this i mean in our application we call it now my notes

2716
08:03:13,592 --> 08:03:18,080
i'm pretty sure if you say my notes that name is already taken

2717
08:03:18,080 --> 08:03:20,231
so let's say my

2718
08:03:20,231 --> 08:03:26,400
awesome notes something like that as you can see it says it is the name

2719
08:03:26,400 --> 08:03:29,912
that will appear in the app store okay my awesome notes

2720
08:03:29,912 --> 08:03:33,511
and in here in this box the primary language we're going to choose english

2721
08:03:33,511 --> 08:03:37,759
and we're going to choose us because we didn't really focus on

2722
08:03:37,759 --> 08:03:40,639
separating our language like how we actually

2723
08:03:40,639 --> 08:03:43,759
interact with the user with our strings in the application to make sure that

2724
08:03:43,759 --> 08:03:47,511
it's like british english or us english so let's just go with the international

2725
08:03:47,511 --> 08:03:51,040
us english in here and in this box you're going to be asked

2726
08:03:51,040 --> 08:03:55,040
to actually choose your bundle identifier and app store connect has

2727
08:03:55,040 --> 08:03:58,720
then after you log in with app store connect it's going to hook into the

2728
08:03:58,720 --> 08:04:02,959
developer account for this user that you logged in with and it's going to pull

2729
08:04:02,959 --> 08:04:07,439
all your bundle identifiers into the app store connect so you don't have to type

2730
08:04:07,439 --> 08:04:11,191
it by hand so let's go find our my notes application as you can see in here it's

2731
08:04:11,191 --> 08:04:15,439
as epic salty my notes and for you it may be something else okay

2732
08:04:15,439 --> 08:04:20,159
so i chose that and then sku is a unique id for your app that is not visible on

2733
08:04:20,159 --> 08:04:23,831
the app store so this is mainly for you sku is kind of like

2734
08:04:23,831 --> 08:04:29,191
it kind of comes from like um old school when you had a normal

2735
08:04:29,191 --> 08:04:33,191
physical store and your products had kind of like an identifier so this is an

2736
08:04:33,191 --> 08:04:38,159
identifier for you it may appear some places like when you're extracting some

2737
08:04:38,159 --> 08:04:42,400
reports from apple to see okay how many unique users do i have how many unique

2738
08:04:42,400 --> 08:04:46,720
installs do i have etc so this sku is mainly for you it's an

2739
08:04:46,720 --> 08:04:49,592
identifier so you could just go with something that makes sense to you and in

2740
08:04:49,592 --> 08:04:53,759
here i'm just gonna say zero one zero one zero one

2741
08:04:53,759 --> 08:04:57,191
or this and then one one one one

2742
08:04:57,191 --> 08:05:01,592
just making things up okay and user access in here you can say you

2743
08:05:01,592 --> 08:05:05,511
you can limit which user see this app in the app store connect if you select full

2744
08:05:05,511 --> 08:05:10,720
access all your users will have access to the app so this is like you limiting

2745
08:05:10,720 --> 08:05:14,551
who can in your app store connect account who can have access to this

2746
08:05:14,551 --> 08:05:18,639
application and since i don't have any guest users in my private company's

2747
08:05:18,639 --> 08:05:22,479
account i'm just gonna go with full access but if you're working with like

2748
08:05:22,479 --> 08:05:25,912
if you're if you're the account owner and then you have some other people

2749
08:05:25,912 --> 08:05:29,831
invited to app store connect that don't want that shouldn't get access to this

2750
08:05:29,831 --> 08:05:33,912
account you could just go in here and basically say limit the access to this

2751
08:05:33,912 --> 08:05:37,119
application to these accounts but i'm just going to go with full access okay

2752
08:05:37,119 --> 08:05:40,720
i'm going to say create and in here is the place that you may actually get a

2753
08:05:40,720 --> 08:05:44,400
problem with the name of the application so let's just try it out and see if my

2754
08:05:44,400 --> 08:05:48,400
awesome notes is some name that somebody else has taken and we'll get to know

2755
08:05:48,400 --> 08:05:52,400
that soon and from from the looks of it it seems

2756
08:05:52,400 --> 08:05:57,759
like that my awesome notes was such a lame name that nobody has taken so

2757
08:05:57,759 --> 08:06:03,831
so that's great for us so um now we've created the application and um

2758
08:06:03,831 --> 08:06:07,831
that part is basically done so as you can see in here the first

2759
08:06:07,831 --> 08:06:12,639
thing that you have to enter in this screen let me actually increase the size

2760
08:06:12,639 --> 08:06:17,119
and let me change the screen layout a little bit here okay

2761
08:06:17,119 --> 08:06:21,360
so the first thing that we see on the screen here is that uh there's a version

2762
08:06:21,360 --> 08:06:24,231
information and also there's app previews and screenshots and this is the

2763
08:06:24,231 --> 08:06:27,592
place that we're gonna upload our screenshots to the app store

2764
08:06:27,592 --> 08:06:30,959
as you can see at the bottom of the screen it's very important that you take

2765
08:06:30,959 --> 08:06:35,912
your screenshots first on an iphone 13 pro max because that is

2766
08:06:35,912 --> 08:06:40,000
the iphone with a six and a half inch display and you may be tempted to just

2767
08:06:40,000 --> 08:06:44,159
try to take your screenshots on an iphone 13 pro but if you do that then

2768
08:06:44,159 --> 08:06:47,191
you'll understand after uploading them you'll get an error from app store

2769
08:06:47,191 --> 08:06:52,479
connect saying that the resolution isn't according to what is expected so what we

2770
08:06:52,479 --> 08:06:57,360
need to do here is to go to our iphone um simulator so and i have quite a few

2771
08:06:57,360 --> 08:07:01,360
of them here so this is our iphone 13 pro

2772
08:07:01,360 --> 08:07:08,080
this is our iphone 8 plus and also we have our iphone 13 pro max

2773
08:07:08,080 --> 08:07:12,720
so now our responsibility is to actually take the screenshots on this simulator

2774
08:07:12,720 --> 08:07:16,479
however you'll notice that we have a little problem in here

2775
08:07:16,479 --> 08:07:20,080
well problem problem but for taking screenshots this is a little bit of a

2776
08:07:20,080 --> 08:07:23,912
problem in that we have this debug manner here that i am that flutter

2777
08:07:23,912 --> 08:07:27,360
creates by default so if i zoom in a little bit here you'll see that it's

2778
08:07:27,360 --> 08:07:30,479
it's just saying debug right here and we need to make sure that we remove that

2779
08:07:30,479 --> 08:07:34,231
before taking our screenshots so what i'm going to do is i'm going to go back

2780
08:07:34,231 --> 08:07:38,080
to our source code so let's go in here

2781
08:07:38,080 --> 08:07:42,159
and you can see at the moment the application's running on iphone 8 plus

2782
08:07:42,159 --> 08:07:46,720
which is the simulator to the left hand side so in order to remove that debug

2783
08:07:46,720 --> 08:07:52,000
banner what you'll have to do is to go to your main um dart file as you can see

2784
08:07:52,000 --> 08:07:55,360
and go to the main function where you've created the material application right

2785
08:07:55,360 --> 08:07:59,680
after the title or even before you can just say banner which is debug show

2786
08:07:59,680 --> 08:08:03,119
check mode banner and set that parameter to false and then i'm just going to do a

2787
08:08:03,119 --> 08:08:07,279
hot reload actually hot restart we have to do so

2788
08:08:07,279 --> 08:08:12,639
oh i'm not even running it so let's just go flutter select device 8 plus and then

2789
08:08:12,639 --> 08:08:17,511
i'm going to say run without debugging so you need to ensure that you remove

2790
08:08:17,511 --> 08:08:21,831
that um debug show checked mode banner and i started not remove it you have to

2791
08:08:21,831 --> 08:08:26,479
remove the banner by setting this parameter to false and now it's going to

2792
08:08:26,479 --> 08:08:31,119
basically run the application on iphone 8 plus and it's going to show us the

2793
08:08:31,119 --> 08:08:33,831
results so this debug banner is going to go away

2794
08:08:33,831 --> 08:08:37,119
after doing that when we see that it's working on iphone 8 plus for instance

2795
08:08:37,119 --> 08:08:40,231
then we're going to do the same thing do a flutter select device and run the

2796
08:08:40,231 --> 08:08:45,759
application on iphone 13 pro max so this process depending on your machine

2797
08:08:45,759 --> 08:08:50,479
depending on your settings etc it could take a while so i'll just wait here and

2798
08:08:50,479 --> 08:08:54,319
do this now it's running okay that's eight plus

2799
08:08:54,319 --> 08:08:57,759
that's great so now that's done now i'm going to close this and stop the debug

2800
08:08:57,759 --> 08:09:02,231
process and say flutter select device and choose iphone 13 from max

2801
08:09:02,231 --> 08:09:06,720
and do the same thing run without debugging okay

2802
08:09:06,720 --> 08:09:10,000
and then again depending on the machine that

2803
08:09:10,000 --> 08:09:12,799
you're running this command on this process could take anywhere between a

2804
08:09:12,799 --> 08:09:16,871
few seconds to maybe even a minute or even maybe more

2805
08:09:16,871 --> 08:09:20,319
so i'm just gonna wait here for this

2806
08:09:20,319 --> 08:09:25,439
process to go through and um while that is actually happening you'll

2807
08:09:25,439 --> 08:09:29,040
also need to know that you need to take your screenshots on iphone 13 pro max

2808
08:09:29,040 --> 08:09:33,279
and iphone 8 plus in order to be able to cover all the required screenshots for

2809
08:09:33,279 --> 08:09:37,439
app store connect so since we don't need iphone 13 pro i'm just going to minimize

2810
08:09:37,439 --> 08:09:41,592
it right now into the taskbar and here is iphone 13 pro max

2811
08:09:41,592 --> 08:09:44,720
so let's go ahead in here and take some screenshots so i'm going to minimize

2812
08:09:44,720 --> 08:09:49,680
iphone 8 plus as well so we have this in focus so what i'm going to do in here is

2813
08:09:49,680 --> 08:09:53,831
i'm going to go to this login field and at the moment as you can see i can type

2814
08:09:53,831 --> 08:09:57,191
in this field because this is a simulator but i don't see the keyboard

2815
08:09:57,191 --> 08:10:00,959
but in real life when users actually download your application and run it on

2816
08:10:00,959 --> 08:10:04,959
their iphones they're gonna see a keyboard so it is a lot more realistic

2817
08:10:04,959 --> 08:10:09,360
if we bring the software keyboard as well on the screen so to do that on your

2818
08:10:09,360 --> 08:10:13,360
macintosh we'll just have to do command k for keyboard and that will just bring

2819
08:10:13,360 --> 08:10:17,119
up the keyboard just like this so what i'm going to do since i don't like

2820
08:10:17,119 --> 08:10:20,959
this carrot that at the moment is blinking right there what

2821
08:10:20,959 --> 08:10:24,400
i'm going to do is just wait until that carrot appears and just take a

2822
08:10:24,400 --> 08:10:28,319
screenshot of this iphone 13 pro max simulator and the way to take a

2823
08:10:28,319 --> 08:10:33,360
screenshot on a macintosh on an iphone simulator is to press command s as in

2824
08:10:33,360 --> 08:10:37,360
screenshot or save okay so i'm just going to wait for this care

2825
08:10:37,360 --> 08:10:40,720
to go away and sorry about that i'll just go also

2826
08:10:40,720 --> 08:10:45,191
here in desktop and remove everything that was created already

2827
08:10:45,191 --> 08:10:47,680
so here's the simulator and here's the

2828
08:10:47,680 --> 08:10:52,400
desktop then i'll wait for the care and it went away i took a screenshot so

2829
08:10:52,400 --> 08:10:56,551
let's go ahead and do the same thing in forgot password screen for instance

2830
08:10:56,551 --> 08:11:01,119
and i'm just going to wait for care to go away took a screenshot

2831
08:11:01,119 --> 08:11:04,871
then let's go back to the login screen and then to the register

2832
08:11:04,871 --> 08:11:08,080
and right here as the care disappears i'm going to take a screenshot as well

2833
08:11:08,080 --> 08:11:10,959
so this is going to be our third screenshot okay so we have a screenshot

2834
08:11:10,959 --> 08:11:13,439
of the login screen the register screen and

2835
08:11:13,439 --> 08:11:17,360
the verify or was it verified

2836
08:11:17,360 --> 08:11:22,639
i forgot my password sorry okay so now i'm going to log in with a user that

2837
08:11:22,639 --> 08:11:26,080
already exists in the application so that we can take a screenshot of the

2838
08:11:26,080 --> 08:11:28,720
main interface of the application as well so i'm going to take a screenshot

2839
08:11:28,720 --> 08:11:32,720
of this with command s on my macintosh and maybe for the fifth screenshot we're

2840
08:11:32,720 --> 08:11:37,191
also gonna take one from where you're in the screen and editing your notes with

2841
08:11:37,191 --> 08:11:41,360
the keyboard up as well okay gonna wait for the chara to go away and i just took

2842
08:11:41,360 --> 08:11:45,191
a screenshot right there as well so now you should end up with five screenshots

2843
08:11:45,191 --> 08:11:47,759
for your application so if you have a look at them they should kind of look

2844
08:11:47,759 --> 08:11:52,720
like this this this this this and ensure that also you don't have that debug

2845
08:11:52,720 --> 08:11:57,191
manner by removing the debug show check mode banner and after doing that if

2846
08:11:57,191 --> 08:12:00,231
you're already running a debug session on your simulator for instance you have

2847
08:12:00,231 --> 08:12:04,479
to do a hot restart remember hot reload is not going to take it's not going to

2848
08:12:04,479 --> 08:12:08,231
take the code in your main function into effect all right so now we have five

2849
08:12:08,231 --> 08:12:12,000
screenshots in here so i'm going to go back to app store connect and let's then

2850
08:12:12,000 --> 08:12:16,400
tap here or click here and view all sizes in media manager okay

2851
08:12:16,400 --> 08:12:19,592
and let's go to choose file in here and then choose all these screenshots and

2852
08:12:19,592 --> 08:12:23,831
i'm just gonna say upload all right so now in here you have

2853
08:12:23,831 --> 08:12:28,159
basically the chance to reorder these screenshots so i think i'm gonna put

2854
08:12:28,159 --> 08:12:33,040
maybe the login screen first then i'm gonna go to the register and then forgot

2855
08:12:33,040 --> 08:12:37,119
password and i'm gonna then put the main interface of the application

2856
08:12:37,119 --> 08:12:42,799
here and then the actual new node screen okay so you can see at the moment when

2857
08:12:42,799 --> 08:12:46,799
uploading the six and a half inch display screenshots the five and five

2858
08:12:46,799 --> 08:12:50,871
and eight inch display screen is also using the six and a half

2859
08:12:50,871 --> 08:12:54,231
inch display screenshots so they're the same screenshots so you don't have to

2860
08:12:54,231 --> 08:12:59,511
upload them again however then you have this five and a half inch display and

2861
08:12:59,511 --> 08:13:04,871
which you also have to upload your screenshots for and that is what we need

2862
08:13:04,871 --> 08:13:10,479
the iphone 8 plus for so we i'm just going to minimize this and

2863
08:13:10,479 --> 08:13:15,040
then i'm going to bring up iphone 8 plus to the screen

2864
08:13:15,040 --> 08:13:19,511
and we're going to do the exact same process here so bring up the keyboard as

2865
08:13:19,511 --> 08:13:23,040
the carrot goes away take a screenshot of login

2866
08:13:23,040 --> 08:13:26,639
sorry i'm going to go to forgot password screen

2867
08:13:26,639 --> 08:13:30,871
carrot goes away take a screenshot then i'm going to go to a register screen

2868
08:13:30,871 --> 08:13:36,000
carrot goes away screenshot and in the login screen i'm going to log in with a

2869
08:13:36,000 --> 08:13:40,400
user that already exists in the system if i can spell

2870
08:13:40,400 --> 08:13:43,191
and now it's just

2871
08:13:43,191 --> 08:13:46,159
beach balling on me so um

2872
08:13:46,159 --> 08:13:49,439
at oh it's my keyboard by the way i can't see

2873
08:13:49,439 --> 08:13:52,639
the keyboard so i can see it's been switched to unfortunately swedish so i'm

2874
08:13:52,639 --> 08:13:57,831
just gonna switch to english here english

2875
08:13:57,831 --> 08:14:02,000
and it's not helping me really so let's see

2876
08:14:02,000 --> 08:14:06,231
if it can switch to english please

2877
08:14:06,231 --> 08:14:09,279
english for some reason it's still showing the

2878
08:14:09,279 --> 08:14:13,511
swedish stuff in here and i don't really know why so i'm just going to say

2879
08:14:13,511 --> 08:14:18,400
gmail.com and foo barbados okay he's i mean

2880
08:14:18,400 --> 08:14:22,799
an iphone simulator is also software so it could be buggy okay so then i'm gonna

2881
08:14:22,799 --> 08:14:25,279
take let's see what screenshots we've taken

2882
08:14:25,279 --> 08:14:28,720
so three screenshots so far and let's go to the main ui of the application take

2883
08:14:28,720 --> 08:14:32,159
another one with command s as i've mentioned before and let's go here as

2884
08:14:32,159 --> 08:14:37,592
well into oh is this screenshot gonna go away

2885
08:14:37,592 --> 08:14:42,551
soon hopefully go away please

2886
08:14:42,551 --> 08:14:47,279
it's not gonna go away please go away okay i think iphone 8

2887
08:14:47,279 --> 08:14:50,400
plus is having some problems so what i'm gonna do is i'm just going to close it

2888
08:14:50,400 --> 08:14:54,639
and then say open simulator and let's go to 8 plus and i can see after i close

2889
08:14:54,639 --> 08:14:58,400
the 8 plus simulator it actually saved the screenshot so that's great all we

2890
08:14:58,400 --> 08:15:02,799
have to do is just to go back to our application and right here in the screen

2891
08:15:02,799 --> 08:15:06,000
as the keyboard is displayed on the screen after the carrot has disappeared

2892
08:15:06,000 --> 08:15:09,279
i'm going to take a screenshot i'm not sure if i actually

2893
08:15:09,279 --> 08:15:12,159
did it at the right time without the carrot on the screen so let's have a

2894
08:15:12,159 --> 08:15:14,871
look

2895
08:15:14,871 --> 08:15:19,360
please go away okay so this is the screenshot so now we have

2896
08:15:19,360 --> 08:15:23,511
five screenshots on iphone 8 plus as well so i'm gonna basically delete these

2897
08:15:23,511 --> 08:15:27,912
screenshots that we took from the iphone 13 pro max right there and let's go to

2898
08:15:27,912 --> 08:15:31,511
the five and a half inch display section here in app store connect and say choose

2899
08:15:31,511 --> 08:15:35,831
file and i'm then going to choose all those screenshots that we took from

2900
08:15:35,831 --> 08:15:41,040
iphone 8 plus and reorder them so let's say log in first then we have register

2901
08:15:41,040 --> 08:15:45,439
forgot password and then main interface of the application and then new nodes

2902
08:15:45,439 --> 08:15:49,680
and this is exactly in line with what we've done in here so it's just a good

2903
08:15:49,680 --> 08:15:53,040
idea usually to make sure that your screenshots are lined up in the same

2904
08:15:53,040 --> 08:15:57,279
order for different devices okay so now you can see all those

2905
08:15:57,279 --> 08:16:02,231
three other screens screen types are using the iphone 8

2906
08:16:02,231 --> 08:16:06,080
plus i think simulators screenshots so okay

2907
08:16:06,080 --> 08:16:10,799
yes iphone 8 plus so now we've uploaded those so as you can see more screenshots

2908
08:16:10,799 --> 08:16:16,479
are already there now so iphone 8 plus is also uploaded and we're done

2909
08:16:16,479 --> 08:16:22,551
so what we need to do now is to bring up the ipad pro 12 inch simulator as well

2910
08:16:22,551 --> 08:16:26,479
so i'm going to go here to this simulator and say file open simulator

2911
08:16:26,479 --> 08:16:31,279
and then say ipad pro as you can see we have to bring ipad pro

2912
08:16:31,279 --> 08:16:35,360
12 inch so i'm just gonna click on it like that

2913
08:16:35,360 --> 08:16:40,319
let's go to um visual studio code and say select device and then i'm gonna

2914
08:16:40,319 --> 08:16:45,680
choose that ipad pro as it is there and then i'm going to stop the debug process

2915
08:16:45,680 --> 08:16:52,231
on the iphone 13 pro max and then say run it on the ipad pro

2916
08:16:52,231 --> 08:16:56,400
and if you're lucky then this process is actually going to go quite fast because

2917
08:16:56,400 --> 08:17:00,080
the application binary has already been compiled and it should pretty much be

2918
08:17:00,080 --> 08:17:04,871
the same application running on an ipad pro 12

2919
08:17:04,871 --> 08:17:08,080
0.9 inches so again depending on your machine this

2920
08:17:08,080 --> 08:17:12,720
process could take anywhere between a few seconds to a few minutes even

2921
08:17:12,720 --> 08:17:16,400
and let's see here so let's go in here and

2922
08:17:16,400 --> 08:17:20,479
you can see the first section in app store connect for ipad is asking you to

2923
08:17:20,479 --> 08:17:24,479
upload for ipad pro third gen which doesn't

2924
08:17:24,479 --> 08:17:28,871
necessarily have to be third gen any ipad pro of 12 and a nine inch display

2925
08:17:28,871 --> 08:17:33,360
is going to suffice so here's our application it this screen

2926
08:17:33,360 --> 08:17:38,720
is obviously ginormous so i'm gonna go here bring up the keyboard and

2927
08:17:38,720 --> 08:17:43,511
take a screenshot and then go to forgot my password take a screenshot then go to

2928
08:17:43,511 --> 08:17:48,231
back to login and in the register screen take a screenshot all where the carrot

2929
08:17:48,231 --> 08:17:52,159
has disappeared let's just double check this and i'm going to remove the iphone

2930
08:17:52,159 --> 08:17:56,231
8 plus screenshot so now we have three on the ipad pro no carrot no carrot no

2931
08:17:56,231 --> 08:18:00,720
carrot and let's go now to the login screen and i'm going to log in with an

2932
08:18:00,720 --> 08:18:06,479
existing user in here okay foo barbat login and now you can see the main

2933
08:18:06,479 --> 08:18:09,759
interface of the application let's take a screenshot of it and then go to the

2934
08:18:09,759 --> 08:18:15,119
first note bring the keyboard up like this and without the carrot take a

2935
08:18:15,119 --> 08:18:19,831
screenshot i actually think i i um captured the carrot unfortunately

2936
08:18:19,831 --> 08:18:23,360
in this last screenshot and i can see a little bit of glimpse of it there so i'm

2937
08:18:23,360 --> 08:18:28,479
gonna delete that and i think i did it actually again to take

2938
08:18:28,479 --> 08:18:33,759
a screenshot basically of the same screen with the carrot

2939
08:18:33,759 --> 08:18:36,959
so let's see if the ipad's going to help us soon

2940
08:18:36,959 --> 08:18:40,639
where's the screenshot there i can see the carrot again a little bit

2941
08:18:40,639 --> 08:18:45,439
so this is a tough one now all right i think i got it this time

2942
08:18:45,439 --> 08:18:48,639
so let's just wait for the screenshot to appear here

2943
08:18:48,639 --> 08:18:51,360
okay and there is no carrot so that's great

2944
08:18:51,360 --> 08:18:54,639
so now we have basically our screenshots for ipad

2945
08:18:54,639 --> 08:18:59,191
12 and a nine inch display let's go in here and say choose file and i'm gonna

2946
08:18:59,191 --> 08:19:04,551
select all the screenshots for that ipad and put them in order so i'm just going

2947
08:19:04,551 --> 08:19:08,871
to say the login screen first then register then forgot password the main

2948
08:19:08,871 --> 08:19:13,119
interface of the application and then the note screen okay so as you can see

2949
08:19:13,119 --> 08:19:18,080
the 11 inch display is using the 12 and a 9 inch display so that's really great

2950
08:19:18,080 --> 08:19:25,912
however the ipad pro here the second gen to 12.9 inch display um is

2951
08:19:25,912 --> 08:19:31,680
is i mean these it's not using this 12 and a 9 inch display of this ipad so

2952
08:19:31,680 --> 08:19:35,191
what could we do here can we go in here and say choose file and upload the same

2953
08:19:35,191 --> 08:19:39,511
screenshots again and it seems like we can so that's not a problem let's just

2954
08:19:39,511 --> 08:19:44,319
reuse the same because it's the same screen size so it's a bit strange that i

2955
08:19:44,319 --> 08:19:48,551
app store connect is not automatically using this 12 inch

2956
08:19:48,551 --> 08:19:53,119
ipad screenshots for also this 12 and a 9 inch display even though they're the

2957
08:19:53,119 --> 08:19:56,799
same so i'm going to bring login to the left then i'm going to bring register

2958
08:19:56,799 --> 08:20:01,119
here for god password like that and then the notes and then the new note so now

2959
08:20:01,119 --> 08:20:05,191
you can see all your screens are now set all the snap all this screenshots are

2960
08:20:05,191 --> 08:20:11,831
set for both iphone and ipad so after uploading all our screenshots

2961
08:20:11,831 --> 08:20:15,759
then we can actually go and set the basic information

2962
08:20:15,759 --> 08:20:21,511
of our application so so let's go in here inside our app

2963
08:20:21,511 --> 08:20:23,592
information okay

2964
08:20:23,592 --> 08:20:28,000
and you can see here there is a note and that is called

2965
08:20:28,000 --> 08:20:32,080
sorry there's a name inside the app information section then we have the

2966
08:20:32,080 --> 08:20:35,119
name of our application okay and then the subtitle as you can see it says the

2967
08:20:35,119 --> 08:20:37,831
subtitle will be reviewed before it's made available on the app store

2968
08:20:37,831 --> 08:20:40,959
unfortunately it doesn't tell you so much information but every application

2969
08:20:40,959 --> 08:20:45,831
can have a short subtitle up to 30k up to and including 30 characters so when

2970
08:20:45,831 --> 08:20:49,912
people search for my awesome notes for instance in app store then they can

2971
08:20:49,912 --> 08:20:53,912
actually see both the name of the application and a short subtitle so

2972
08:20:53,912 --> 08:20:58,000
let's say store and store

2973
08:20:58,000 --> 08:21:02,959
your notes securely with an asterisk at the end okay

2974
08:21:02,959 --> 08:21:09,191
so that's already set i can see so um and then we could then after making

2975
08:21:09,191 --> 08:21:12,000
these changes the app store connect expects you to

2976
08:21:12,000 --> 08:21:16,400
press the save button so that's also good now we've set that

2977
08:21:16,400 --> 08:21:21,511
so let's go here in this section and go to content rights and then set up

2978
08:21:21,511 --> 08:21:25,360
content rights information click on it so it says apps that continue or access

2979
08:21:25,360 --> 08:21:29,191
third-party content must have all the necessary rights to that content or be

2980
08:21:29,191 --> 08:21:33,040
otherwise permitted to use it under the laws of each app store country or region

2981
08:21:33,040 --> 08:21:36,551
so we don't have third-party content like we're not actually displaying any

2982
08:21:36,551 --> 08:21:40,000
videos that's coming from a third party service so here we can just say no it

2983
08:21:40,000 --> 08:21:43,119
doesn't contain show or access third party content

2984
08:21:43,119 --> 08:21:46,080
and after pressing the down button we can also press the save button just to

2985
08:21:46,080 --> 08:21:52,720
ensure that everything is as saved so what we need to do in here also um

2986
08:21:52,720 --> 08:21:56,639
let's see here a privacy we also have and then we have

2987
08:21:56,639 --> 08:22:01,592
set age rating across all platforms so let's go ahead and do that and say as

2988
08:22:01,592 --> 08:22:04,231
you can see here it says select the level of frequency for each content

2989
08:22:04,231 --> 08:22:07,360
description that best describes your application so we don't have any

2990
08:22:07,360 --> 08:22:11,680
violence so we say no realistic violence none

2991
08:22:11,680 --> 08:22:16,479
uh prolonged graphic or sadistic realistic violence i don't even wanna i

2992
08:22:16,479 --> 08:22:19,592
don't even to say say these things out loud to be honest with you but what you

2993
08:22:19,592 --> 08:22:23,360
have to do is just to say none to all of these because we don't have any like

2994
08:22:23,360 --> 08:22:28,479
medical information alcohol related stuff so let's just say none to all of

2995
08:22:28,479 --> 08:22:31,680
these and uh

2996
08:22:31,680 --> 08:22:35,119
contests and we don't have that either so let's just say next does your app

2997
08:22:35,119 --> 08:22:38,799
contain unrestricted web access it doesn't does your app contain instance

2998
08:22:38,799 --> 08:22:43,511
of gambling no and then we're saying next and you can say our

2999
08:22:43,511 --> 08:22:47,119
age rate rating result is that people of age

3000
08:22:47,119 --> 08:22:50,080
four plus can use the application and here

