1
00:06:03,840 --> 00:06:07,360
scrcpy 实际上就像我们要做的那样

2
00:06:07,360 --> 00:06:10,080
在这门课上

3
00:06:10,080 --> 00:06:14,000
我只是在这里记下我已经解释过的笔记

4
00:06:14,000 --> 00:06:20,400
嗯，在我们开始安装 scrcpy 之前，我们需要

5
00:06:20,400 --> 00:06:26,000
嗯，我们需要安装 adb 和

6
00:06:26,000 --> 00:06:31,680
这个 adb 就像嗯，我相信它实际上代表 android

7
00:06:31,680 --> 00:06:36,400
调试器之类的，让我们看看 adb 代表什么

8
00:06:36,400 --> 00:06:42,400
我要在这里打开一个 safari 窗口，你可以看到 adb

9
00:06:42,400 --> 00:06:47,759
代表android debug bridge，如果你想的话，adb是一个很好的工具

10
00:06:47,759 --> 00:06:52,240
实例可以通过命令与你的安卓手机通话

11
00:06:52,240 --> 00:06:56,878
行，这样您就可以向它发送消息并说嘿，截图

12
00:06:56,878 --> 00:07:02,797
嘿，这样做或单击此处或关闭此应用程序，无论如何，您

13
00:07:02,797 --> 00:07:06,240
基本上通过你的发送命令到你的安卓手机或平板电脑

14
00:07:06,240 --> 00:07:09,520
终端，嗯，太棒了

15
00:07:09,520 --> 00:07:11,680
与 与

16
00:07:11,680 --> 00:07:16,637
adb 我的意思是让 adb 安装您的计算机，然后您可以实际安装

17
00:07:16,637 --> 00:07:21,200
scrcpy 使用 adb 与您的

18
00:07:21,200 --> 00:07:26,637
电话并向其发送命令并从中接收图像等

19
00:07:26,637 --> 00:07:32,558
话虽如此，我们需要安装 adb 所以我要在这里关闭这个转向窗口

20
00:07:32,558 --> 00:07:38,240
我要调出终端 我要增加这个的大小

21
00:07:38,240 --> 00:07:41,360
终端窗口，这样你就可以看到我在做什么

22
00:07:41,360 --> 00:07:46,240
所以在这里我会说 brew install

23
00:07:46,240 --> 00:07:51,759
cask android平台工具没问题

24
00:07:51,759 --> 00:07:58,240
所以如果可以的话，这将允许你安装

25
00:07:58,240 --> 00:08:03,599
使用android平台工具然后你就可以从中获取adb了

26
00:08:03,599 --> 00:08:07,599
android平台工具insta安装居然包括adb all

27
00:08:07,599 --> 00:08:09,599
没错

28
00:08:09,599 --> 00:08:13,439
嗯，我可以看到我的意思是对我来说你可以看到我已经安装了 android

29
00:08:13,439 --> 00:08:17,119
平台工具，所以我在这里收到这条消息，说你已经

30
00:08:17,119 --> 00:08:20,477
安装它，但如果你还没有安装 android

31
00:08:20,477 --> 00:08:24,477
运行此命令之前的平台工具将实际安装它

32
00:08:24,477 --> 00:08:28,400
为你现在我不想重新安装它所以我只是不打算这样做

33
00:08:28,400 --> 00:08:33,520
这里建议的命令，但只知道在安装 scr cpy 之前，你会

34
00:08:33,520 --> 00:08:42,558
需要让 adb 正常运行，并且在 android 平台工具中提供

35
00:08:42,558 --> 00:08:45,680
好的

36
00:08:45,680 --> 00:08:49,360
所以让我来看看我的笔记

37
00:08:49,360 --> 00:08:55,599
说我们已经讨论过 adb 所以在你完成 adb 之后我们需要去，我

38
00:08:55,599 --> 00:09:00,957
又要调出 safari 让我们看看能不能调出窗口

39
00:09:00,957 --> 00:09:06,000
在这里你也可以看到我在做什么然后我会说 scr cpy

40
00:09:06,000 --> 00:09:09,840
好的，然后你会看到第一个建议的网站在 github 上，并且

41
00:09:09,840 --> 00:09:15,840
这正是你需要去的地方所以去这里的 scrcpy 你会看到

42
00:09:15,840 --> 00:09:21,200
有关如何实际安装 scrcpy 的信息，它在 linux 上说你

43
00:09:21,200 --> 00:09:26,319
可以在 Windows 上做 apt installer crcpy 你可以在这里下载

44
00:09:26,319 --> 00:09:30,080
然后在mac os上你可以做 brew install

45
00:09:30,080 --> 00:09:33,279
脚本

46
00:09:33,279 --> 00:09:36,159
所以我已经这样做了所以我已经

47
00:09:36,159 --> 00:09:42,477
实际安装了 scrcpy 所以我不需要做任何特别的事情

48
00:09:42,477 --> 00:09:46,878
嗯，你可以看到它实际上告诉你我要增加

49
00:09:46,878 --> 00:09:49,439
这个窗口让你看得更清楚一点

50
00:09:49,439 --> 00:09:53,919
它会在这里告诉你，如果你需要从你的路径访问 adb

51
00:09:53,919 --> 00:09:59,200
还没有它然后执行我向您提到的命令好吗

52
00:09:59,200 --> 00:10:02,400
所以在你完成安装之后

53
00:10:02,400 --> 00:10:06,000
你的电脑，那么你应该能够启动一个终端，所以我要

54
00:10:06,000 --> 00:10:08,718
在此处调出终端并

55
00:10:08,718 --> 00:10:14,080
正如你在这里看到的，我有我的安卓手机，它的屏幕看起来像

56
00:10:14,080 --> 00:10:20,797
这是现在所以它只是在主屏幕上没什么特别的

57
00:10:20,797 --> 00:10:25,840
然后我想调出 scrcpy

58
00:10:25,840 --> 00:10:29,119
但在你这样做之前，如果这是你第一次这样做

59
00:10:29,119 --> 00:10:34,477
在这个过程中，您可能需要启用称为 USB 调试的功能

60
00:10:34,477 --> 00:10:37,680
你的安卓手机和

61
00:10:37,680 --> 00:10:43,279
取决于您的 android 手机的外观或

62
00:10:43,279 --> 00:10:46,637
当你插入你的 USB 调试是什么

63
00:10:46,637 --> 00:10:49,520
安卓手机它会向你展示

64
00:10:49,520 --> 00:10:52,558
嗯这样的画面

65
00:10:52,558 --> 00:10:55,520
所以我要把它放大一点，这样你可以看得更清楚

66
00:10:55,520 --> 00:11:01,040
所以这个对话框会在你的安卓手机上弹出，说哦，你呢

67
00:11:01,040 --> 00:11:05,599
想让这台电脑在这个手机上的这个um上做调试

68
00:11:05,599 --> 00:11:08,878
你需要做的就是说总是允许从这台电脑上然后

69
00:11:08,878 --> 00:11:15,840
按下确定按钮，这只是为了让您首先能够安装

70
00:11:15,840 --> 00:11:19,279
并调试您的颤振应用程序

71
00:11:19,279 --> 00:11:23,119
全部来自 Visual Studio 代码或来自 android studio 就在你的 android 上

72
00:11:23,119 --> 00:11:27,520
电话或平板电脑，它也可以让你运行 scrcpy

73
00:11:27,520 --> 00:11:32,240
依次使用 adb 进行通信

74
00:11:32,240 --> 00:11:36,878
你的设备没问题

75
00:11:36,878 --> 00:11:43,119
那是用于usb调试的

76
00:11:43,119 --> 00:11:46,797
所以我们需要做的实际上是调出 scr cpy 所以

77
00:11:46,797 --> 00:11:50,477
在终端我只想说 ser cpy

78
00:11:50,477 --> 00:11:53,439
正如你在这里看到的，它会和我的安卓手机通话

79
00:11:53,439 --> 00:11:57,599
调出一个窗口，我将慢慢把它带到这个屏幕上，这样你

80
00:11:57,599 --> 00:12:00,718
可以看到

81
00:12:00,718 --> 00:12:03,759
我要离开航站楼，因为航站楼实际上正在加油

82
00:12:03,759 --> 00:12:07,759
这件事所以如果我关闭我的终端这也将被关闭所以只是

83
00:12:07,759 --> 00:12:12,797
保持此终端打开，或者如果您正在使用项目，例如我正在使用

84
00:12:12,797 --> 00:12:16,400
然后您可以打开一个新选项卡并继续使用另一个选项卡

85
00:12:16,400 --> 00:12:20,558
命令行，否则你可以关闭它，或者你可以最小化它

86
00:12:20,558 --> 00:12:25,840
如果您对此感到困扰，那么您现在可以看到我有我的android

87
00:12:25,840 --> 00:12:28,718
手机在我的屏幕上镜像我实际上要去

88
00:12:28,718 --> 00:12:32,400
这样做是为了让你看得更清楚，我会把它做好

89
00:12:32,400 --> 00:12:38,558
介于两者之间，所以这是我真正的安卓手机，所以如果我用我的点击这里

90
00:12:38,558 --> 00:12:42,637
鼠标它实际上与我的手机交互所以

91
00:12:42,637 --> 00:12:47,599
我可以在这里把我的手机拿出来，这样你就可以看到它们并排

92
00:12:47,599 --> 00:12:52,477
如果在 scrcpy 屏幕上的 if 上，我按下

93
00:12:52,477 --> 00:12:56,000
后退按钮你会看到我的安卓屏幕

94
00:12:56,000 --> 00:13:00,000
再更改一次点击谷歌

95
00:13:00,000 --> 00:13:04,637
所以它真的和我的安卓手机在这里互动好吗

96
00:13:04,637 --> 00:13:06,878
所以我强烈建议你实际上

97
00:13:06,878 --> 00:13:11,200
老实说，安装 sdrcpy 如果您喜欢，它是一个很棒的工具

98
00:13:11,200 --> 00:13:15,360
移动开发，或者如果您想成为移动开发人员，那么

99
00:13:15,360 --> 00:13:18,957
嗯，关于我之前所说的

100
00:13:18,957 --> 00:13:23,840
我认为您的设备将与

101
00:13:23,840 --> 00:13:28,637
ios模拟器和android模拟器然而

102
00:13:28,637 --> 00:13:31,360
我个人应该建议你花

103
00:13:31,360 --> 00:13:35,680
并投入一些钱为自己购买他们没有的设备

104
00:13:35,680 --> 00:13:39,040
成为最新设备的顶级产品，但

105
00:13:39,040 --> 00:13:42,797
一部安卓手机和一部ios手机

106
00:13:42,797 --> 00:13:46,558
甚至平板电脑也可以，但最好是您甚至不必拥有的电话

107
00:13:46,558 --> 00:13:51,439
它们中的 sim 卡只是电话设备本身，所以

108
00:13:51,439 --> 00:13:53,520
嗯和

109
00:13:53,520 --> 00:13:57,360
我的意思是，如果你进入移动开发领域，你会经历很多

110
00:13:57,360 --> 00:14:01,759
反正有很多电话，因为你会得到这样的

111
00:14:01,759 --> 00:14:05,279
一年的新电话，然后两年后你得到另一部电话，所以你

112
00:14:05,279 --> 00:14:07,759
把它们堆起来，嗯

113
00:14:07,759 --> 00:14:12,718
然后您可以将所有电话用作我们所说的测试电话

114
00:14:12,718 --> 00:14:15,279
好吧

115
00:14:15,279 --> 00:14:20,878
这就是现在我们需要做的就是现在我们的安卓手机是

116
00:14:20,878 --> 00:14:24,718
连接到这里我们需要做的是去视觉

117
00:14:24,718 --> 00:14:30,637
工作室代码进入我们的项目并选择那个嗯

118
00:14:30,637 --> 00:14:35,200
所以选择我们的让我看看如果我可以在 Visual Studio 中调出 Visual Studio 代码

119
00:14:35,200 --> 00:14:38,637
代码这是我这里有很多屏幕所以

120
00:14:38,637 --> 00:14:41,200
实际上这有点挑战

121
00:14:41,200 --> 00:14:45,680
把它们都排在这里所以我要做的是我会摆脱旁边

122
00:14:45,680 --> 00:14:50,878
窗口没问题，我会在右侧打开然后 scr cpy 和

123
00:14:50,878 --> 00:14:54,718
然后在这里稍微调整一下屏幕大小

124
00:14:54,718 --> 00:14:59,040
然后像这样，所以我有你这就像我通常的设置，所以我有视觉

125
00:14:59,040 --> 00:15:03,599
工作室代码在左边，然后我把我的安卓手机镜像到了

126
00:15:03,599 --> 00:15:08,000
右手边没关系，那你之后需要做什么

127
00:15:08,000 --> 00:15:11,520
你已经完成了所有这些工作是在 Visual Studio 代码中只需说命令

128
00:15:11,520 --> 00:15:17,200
在 mac 上 shift p 或在 linux 上 ctrl shift b 和

129
00:15:17,200 --> 00:15:20,400
windows，如果你使用的是 android studio，我真的不知道

130
00:15:20,400 --> 00:15:24,319
命令在那里选择一个设备，它们可能像一个下拉菜单或

131
00:15:24,319 --> 00:15:28,319
某事，所以请这样做，所以在这里我只想说命令

132
00:15:28,319 --> 00:15:31,599
shift b 我会说颤振选择设备好

133
00:15:31,599 --> 00:15:34,637
在选择设备中，我实际上要选择我的

134
00:15:34,637 --> 00:15:38,240
安卓手机，这是这里镜像的手机

135
00:15:38,240 --> 00:15:42,159
选择一部安卓手机，然后我会说run run without debug

136
00:15:42,159 --> 00:15:45,360
好的

137
00:15:45,360 --> 00:15:49,279
那么让我们看看

138
00:15:49,279 --> 00:15:56,400
你可以在这里看到它说在调试模式下在 gm 19 blah blah 上启动 dart 所以

139
00:15:56,400 --> 00:16:00,240
因为它是一个android应用程序现在突然我们只是从ios切换

140
00:16:00,240 --> 00:16:03,520
到 android 之前，我们的应用程序就像我们的源代码一样

141
00:16:03,520 --> 00:16:07,840
由 xcode 编译，现在因为我们正在尝试部署到

142
00:16:07,840 --> 00:16:11,680
一部安卓手机，它是 gradle 它的 gradle 基本上是在照顾

143
00:16:11,680 --> 00:16:15,520
构建过程，所以如果你是一个 android 开发者，那么你知道

144
00:16:15,520 --> 00:16:18,558
基本上是零级构建系统，是的

145
00:16:18,558 --> 00:16:22,240
它正在工作，它基本上是在构建

146
00:16:22,240 --> 00:16:26,637
背景所以我真的很高兴我们得到了这个

147
00:16:26,637 --> 00:16:31,119
现在出现错误，所以我将把我们讨论过的笔记记录在这里

148
00:16:31,119 --> 00:16:36,000
vs代码选择android，然后显示android手机镜像工作正常

149
00:16:36,000 --> 00:16:40,477
所以你在这里看到我们有一些错误

150
00:16:40,477 --> 00:16:44,240
实际上，当我们在章节中谈到我们在哪一章时，我们在章节中

151
00:16:44,240 --> 00:16:48,797
10. 在第 9 章中，当我们谈到在 ios 上运行我们的应用程序时，我们

152
00:16:48,797 --> 00:16:53,520
实际上得到了类似的东西有一个错误说哦你的

153
00:16:53,520 --> 00:16:57,200
呃依赖火力基地他们需要这个

154
00:16:57,200 --> 00:17:00,957
版本，但您使用的是该版本以及以下版本

155
00:17:00,957 --> 00:17:04,718
如果您还记得我们访问了我们的 pod 文件，那么实际解决它的代码

156
00:17:04,718 --> 00:17:09,840
只是把这个平台放在这里说 ios 13 因为你看我们有四个

157
00:17:09,840 --> 00:17:14,718
目前的依赖关系我们有firebase auth我们有firebase核心

158
00:17:14,718 --> 00:17:18,797
分析和其他我不记得的东西让我看看

159
00:17:18,797 --> 00:17:23,119
注意这里有核心身份验证云火库和

160
00:17:23,119 --> 00:17:27,439
firebase 分析这四个依赖项他们有他们的

161
00:17:27,439 --> 00:17:32,957
自己的要求，所以他们说我们作为依赖项不能安装在

162
00:17:32,957 --> 00:17:38,718
例如支持非常旧的 android 操作系统或非常旧的 ios 的应用程序

163
00:17:38,718 --> 00:17:44,957
版本，所以这些依赖项对您的项目提出了要求，所以

164
00:17:44,957 --> 00:17:52,000
我们在第九章中解决了这个问题

165
00:17:52,000 --> 00:17:56,159
进入 pod 文件并注释掉这个基本上删除

166
00:17:56,159 --> 00:17:59,919
此行的注释并将其从 9 更改

167
00:17:59,919 --> 00:18:05,599
到 13. 所以我们为 ios 修复它，但我们现在如何为 android 做它

168
00:18:05,599 --> 00:18:09,360
在这里得到很多很棒的信息，它说你需要找到

169
00:18:09,360 --> 00:18:15,680
这个调试默认配置和最小 sdk 版本没问题，所以让我们寻找默认配置

170
00:18:15,680 --> 00:18:22,000
config 所以我要复制那个文本，然后我要命令 shift f in

171
00:18:22,000 --> 00:18:28,240
视觉工作室代码并搜索它，正如你在这里看到的，我们有一点

172
00:18:28,240 --> 00:18:31,759
颤动版本名称，然后颤动版本代码为整数

173
00:18:31,759 --> 00:18:36,637
我可以在这里看到有关颤振版本的信息，例如

174
00:18:36,637 --> 00:18:39,919
如果你去我们的 build gradle 和

175
00:18:39,919 --> 00:18:44,637
整数有一个颤振版本代码，即

176
00:18:44,637 --> 00:18:49,599
以及这里的主要 sdk 在哪里 min sdk version 好，所以我要搜索

177
00:18:49,599 --> 00:18:54,558
对于 min sdk 版本，在这里我可以看到它是 19 在这里

178
00:18:54,558 --> 00:19:01,119
19. 和 android min sdk 版本 19 所以实际上有很多

179
00:19:01,119 --> 00:19:05,119
可以提到19的地方

180
00:19:05,119 --> 00:19:11,520
并且错误本身让我们阅读它需要更高的android sdk版本

181
00:19:11,520 --> 00:19:16,957
通过将以下内容添加到文件 build gradle android default config 来解决此问题

182
00:19:16,957 --> 00:19:23,200
min sdk version 没关系，所以如果我们在这里查看默认配置

183
00:19:23,200 --> 00:19:27,200
它正在谈论这个东西 min sdk 版本我可以看到以前这个

184
00:19:27,200 --> 00:19:31,680
以前是数字，最近改成flutter min sdk版本

185
00:19:31,680 --> 00:19:36,398
所以我要调出一个 safari 窗口，我要说 change flutter min

186
00:19:36,398 --> 00:19:41,520
sdk 版本，所以让我们看看人们实际建议的是什么

187
00:19:41,520 --> 00:19:46,878
允许我们执行此操作的命令，您会看到人们仍在说我们

188
00:19:46,878 --> 00:19:52,080
需要通过将其更改为特定版本来做到这一点，但我相信

189
00:19:52,080 --> 00:19:57,119
应该有更好的方法来做到这一点，而不是硬编码

190
00:19:57,119 --> 00:20:00,240
使用具有您无法更改的颤振样式的新颤振项目

191
00:20:00,240 --> 00:20:03,759
mini sdk 版本和本地属性

192
00:20:03,759 --> 00:20:08,080
很好，所以如果我们转到一个名为 local.properties 的文件，那就是它们

193
00:20:08,080 --> 00:20:10,718
在这里说所以我要

194
00:20:10,718 --> 00:20:15,599
尝试查找本地属性，我可以在这里看到

195
00:20:15,599 --> 00:20:21,680
此处设置了 sdk，但没有最小 sdk 版本

196
00:20:21,680 --> 00:20:25,040
所以我们可能需要去修复它

197
00:20:25,040 --> 00:20:28,637
up 所以我要复制粘贴，我只想说flutter.sdk版本

198
00:20:28,637 --> 00:20:34,159
19. 好的，保存那个文件，然后我要回到主 dart 然后说

199
00:20:34,159 --> 00:20:39,439
不调试就运行，看看这次会发生什么

200
00:20:39,439 --> 00:20:43,040
如果它接受本地属性的改变，我们只是

201
00:20:43,040 --> 00:20:46,718
制造，它仍然说它不会

202
00:20:46,718 --> 00:20:50,718
能够让用户运行所以呃老实说我们可以在这里做些什么

203
00:20:50,718 --> 00:20:54,637
和你一起只是故障排除所以让我们说回到根目录

204
00:20:54,637 --> 00:21:02,159
你的应用程序的文件夹并说flutter clean android

205
00:21:02,159 --> 00:21:06,319
为什么它在做 xcode 工作区然后说颤动

206
00:21:06,319 --> 00:21:13,119
弹出获取

207
00:21:13,119 --> 00:21:17,599
所以如果这工作正常，那么它应该已经为我们清理了 android 代码并且

208
00:21:17,599 --> 00:21:22,319
就像将版本 19 放在我们的构建 gradle 中，这样实际上应该可以解决

209
00:21:22,319 --> 00:21:27,279
到 19 岁，所以让我们去主飞镖，再试一次

210
00:21:27,279 --> 00:21:30,718
解决方案不起作用那么我们很遗憾必须进入我们的

211
00:21:30,718 --> 00:21:34,878
构建 gradle 文件并执行推荐的操作并放入 min sdk 版本

212
00:21:34,878 --> 00:21:38,558
有一个常数值 19 只是为了获取代码

213
00:21:38,558 --> 00:21:42,957
编译所以让我们看看这里

214
00:21:42,957 --> 00:21:47,680
我们的 gradle build 会做什么

215
00:21:47,680 --> 00:21:50,240
所以我真的不知道发生了什么

216
00:21:50,240 --> 00:21:53,840
它

217
00:21:53,840 --> 00:21:58,398
我似乎并没有真正做任何事情，所以再试一次

218
00:21:58,398 --> 00:22:02,558
调试并查看启动时会发生什么

219
00:22:02,558 --> 00:22:05,919
我要在这里看看我的安卓手机以及运行 gradle 任务

220
00:22:05,919 --> 00:22:10,637
组装调试

221
00:22:10,637 --> 00:22:14,718
对我来说，它目前在这部手机上没有运行任何东西，所以什么

222
00:22:14,718 --> 00:22:19,040
我们要做的是让我们去我的意思是这个解决方案不起作用所以

223
00:22:19,040 --> 00:22:23,439
我要删除它，我要构建 gradle 并放置

224
00:22:23,439 --> 00:22:28,797
目标 sdk 版本我认为那是最小 sdk 版本对不起

225
00:22:28,797 --> 00:22:33,200
在这里我们只会说 19 而不是好的

226
00:22:33,200 --> 00:22:36,637
就像它实际上是向我们建议的那样

227
00:22:36,637 --> 00:22:40,718
嗯，然后让我们去主 dart，然后再说一次不调试就运行

228
00:22:40,718 --> 00:22:45,119
如果这个解决方案不起作用，我实际上可能不得不重新启动视觉

229
00:22:45,119 --> 00:22:48,637
工作室代码，如果由于某种原因有点混乱

230
00:22:48,637 --> 00:22:52,878
因为通常当你说 gradle 就像你开始构建时

231
00:22:52,878 --> 00:22:57,680
过程 它实际上给了你一些反馈 它要么说某事

232
00:22:57,680 --> 00:23:03,919
失败了，或者是的，我嗯，然后它成功运行了，在这个

233
00:23:03,919 --> 00:23:07,200
案例我可以看到它没有运行所以我只想说退出 Visual Studio 代码

234
00:23:07,200 --> 00:23:10,159
好的，然后我要调出视觉效果

235
00:23:10,159 --> 00:23:13,439
工作室代码，所以我通常有很多项目

236
00:23:13,439 --> 00:23:16,398
我要[音乐]

237
00:23:16,398 --> 00:23:20,558
尽量减少所有这些事情，我只会打开

238
00:23:20,558 --> 00:23:25,279
我们的我的笔记应用程序，所以让我们进去吧

239
00:23:25,279 --> 00:23:29,919
到我的笔记应用程序中，让我们再试一次，我要去

240
00:23:29,919 --> 00:23:35,040
在不调试的情况下运行，让我们看看会发生什么

241
00:23:35,040 --> 00:23:39,279
哦，现在它在调试模式下选择iphone 13 pro，那是因为我重新启动了

242
00:23:39,279 --> 00:23:42,558
视觉工作室代码，它不知道要在哪个设备上运行，所以我要去

243
00:23:42,558 --> 00:23:46,159
说选择设备，然后再次选择我的安卓手机

244
00:23:46,159 --> 00:23:52,080
在没有调试的情况下运行并希望在这里交叉我的手指

245
00:23:52,080 --> 00:23:55,119
既然我们改变了

246
00:23:55,119 --> 00:23:58,159
嗯版本号然后它会工作

247
00:23:58,159 --> 00:24:02,477
我可以在这里看到

248
00:24:02,477 --> 00:24:07,599
我明白了，现在它抱怨多甲板，所以我的意思是这很棒

249
00:24:07,599 --> 00:24:11,279
我很高兴我们看到所有这些错误，因为通常我们不会

250
00:24:11,279 --> 00:24:14,797
有可能我的意思是通常你在教程中看到是的一切都是

251
00:24:14,797 --> 00:24:19,119
工作正常，呃，他点击了那里，然后点击了那里，一切正常，但是

252
00:24:19,119 --> 00:24:23,599
在这里，我们实际上已经到了可以看到每个问题的地步

253
00:24:23,599 --> 00:24:26,797
出现，然后我们将一起修复它，这就像一天

254
00:24:26,797 --> 00:24:31,759
软件开发人员的生活出了问题，但你必须修复它

255
00:24:31,759 --> 00:24:35,520
嗯，这个 multi-dex 是你必须要做的

256
00:24:35,520 --> 00:24:42,477
配置，我们会说使用多 dex 标志所以

257
00:24:42,477 --> 00:24:46,797
我要去野生动物园，我要把它贴在这里

258
00:24:46,797 --> 00:24:50,957
嗯，然后有一个解决方案希望在我们默认的某个地方

259
00:24:50,957 --> 00:24:54,477
配置你看到它说启用了多 dex 所以

260
00:24:54,477 --> 00:24:59,759
让我们去你的应用程序中构建 gradle 就在这里

261
00:24:59,759 --> 00:25:04,558
你会在默认配置中看到 android app build gradle，就像这里所说的那样

262
00:25:04,558 --> 00:25:08,878
启用多甲板只需把它带到这里就在那里

263
00:25:08,878 --> 00:25:13,520
然后在此文件底部转到您的依赖项并带上

264
00:25:13,520 --> 00:25:18,398
实施多甲板就在那里好吧，所以我只是将它粘贴到正确的位置

265
00:25:18,398 --> 00:25:23,439
回到我这里的主要保护文件，然后说运行运行而不调试

266
00:25:23,439 --> 00:25:28,000
所以让我们看看会发生什么

267
00:25:28,000 --> 00:25:31,119
这里有一些警告是红色的，你不必

268
00:25:31,119 --> 00:25:34,878
现在非常担心他们，他们的名字有警告

269
00:25:34,878 --> 00:25:39,360
建议所以你不必像我一样担心对你诚实

270
00:25:39,360 --> 00:25:44,477
提到所以我们去这里是我们的颤振

271
00:25:44,477 --> 00:25:49,599
应用程序现在可以在 um 上运行

272
00:25:49,599 --> 00:25:55,119
在实际的电话上，所以我要把电话带到这里

273
00:25:55,119 --> 00:25:59,439
你可以看到它显示的是完全相同的东西所以如果我用鼠标移过去

274
00:25:59,439 --> 00:26:03,040
你看不到，因为你真的看到了我的脸

275
00:26:03,040 --> 00:26:06,797
所以嗯，然后你会看到值 3

276
00:26:06,797 --> 00:26:10,878
也印在这里，那就太好了

277
00:26:10,878 --> 00:26:14,319
东西嗯

278
00:26:14,319 --> 00:26:23,840
然后

279
00:26:23,840 --> 00:26:28,797
我不知道为什么这个呃屏幕是旋转的

280
00:26:28,797 --> 00:26:32,398
我把它转回来哦那是因为我的手机实际上是

281
00:26:32,398 --> 00:26:37,680
旋转所以我要把它旋转回来所以它是呃

282
00:26:37,680 --> 00:26:42,319
它没有以错误的方向旋转很好，所以我们得到了很多

283
00:26:42,319 --> 00:26:46,159
老实说有问题，嗯，但没关系，通常就是这样

284
00:26:46,159 --> 00:26:50,159
至少在我们开始进行移动开发时会发生

285
00:26:50,159 --> 00:26:53,360
当您进行设置时，我实际上是

286
00:26:53,360 --> 00:26:57,919
感谢我们收到这些错误，所以你看到它们，所以你不只是想

287
00:26:57,919 --> 00:27:01,439
一切都会从一开始就进行，所以

288
00:27:01,439 --> 00:27:04,159
尽管正如我在介绍中所说，我还没有计划所有

289
00:27:04,159 --> 00:27:08,240
这就是这些错误的出现，我不希望事情变得完美，所以即使

290
00:27:08,240 --> 00:27:12,957
这正在发生，但我仍然非常感谢他们正在发生

291
00:27:12,957 --> 00:27:18,558
我们现在需要谈论的是一个叫做屏幕睡眠和嗯

292
00:27:18,558 --> 00:27:23,680
当你在你的安卓手机或平板电脑上开发你的应用程序时

293
00:27:23,680 --> 00:27:28,398
您会注意到您将在手机或平板电脑上运行您的应用程序

294
00:27:28,398 --> 00:27:31,680
然后过了一会儿你的屏幕就会消失

295
00:27:31,680 --> 00:27:34,398
to sleep 这意味着屏幕将被锁定

296
00:27:34,398 --> 00:27:38,558
然后当您尝试重新运行或重新运行您的应用程序或重新刷新时

297
00:27:38,558 --> 00:27:41,919
你的应用程序然后你会从颤动中得到一个错误，说它不能

298
00:27:41,919 --> 00:27:45,279
部署应用程序，因为设备被锁定所以

299
00:27:45,279 --> 00:27:48,637
电话能做到这一点很烦人，但这是为了好

300
00:27:48,637 --> 00:27:52,319
出于安全目的，电话之所以喜欢它们必须锁定屏幕，因此

301
00:27:52,319 --> 00:27:55,279
如果你把它放在长凳上或公园里的某个地方，你

302
00:27:55,279 --> 00:27:59,040
忘记它然后你就走然后它被锁定所以没有人会得到

303
00:27:59,040 --> 00:28:03,759
访问您的电话数据并说明我们需要做什么

304
00:28:03,759 --> 00:28:07,279
在开发应用程序时禁用它，因为

305
00:28:07,279 --> 00:28:10,637
你想要的是一部随时可用的电话 屏幕可用

306
00:28:10,637 --> 00:28:14,558
不会锁定，因此您可以随时向其部署更新版本的应用程序

307
00:28:14,558 --> 00:28:20,000
或者只要您不自己手动锁定它

308
00:28:20,000 --> 00:28:23,439
所以我们要做的是我要在这里打电话给你看

309
00:28:23,439 --> 00:28:28,840
我在做什么 我要去这里 我要去设置

310
00:28:28,840 --> 00:28:32,558
屏幕嗯这里和

311
00:28:32,558 --> 00:28:35,919
你可能需要我的意思是为了让你实际上甚至能够

312
00:28:35,919 --> 00:28:39,919
运行您的应用程序并在您的应用程序上做一些时髦的事情

313
00:28:39,919 --> 00:28:43,360
电话，您需要启用称为开发人员远程的功能，以便开发人员

314
00:28:43,360 --> 00:28:48,000
mode on android and on ios是手机的一系列开发工具

315
00:28:48,000 --> 00:28:52,240
仅提供给开发人员，为了获得您需要执行的那些工具

316
00:28:52,240 --> 00:28:56,398
一系列动作，例如猴子或手机上的其他东西，以及

317
00:28:56,398 --> 00:29:00,319
嗯，我不会为所有不同的人提供确切的说明

318
00:29:00,319 --> 00:29:03,200
电话，因为取决于电话的制造商

319
00:29:03,200 --> 00:29:07,200
特别是如果它在android上，那么就会带来开发者模式

320
00:29:07,200 --> 00:29:11,040
以不同的方式进入生活，所以你需要做的是找出

321
00:29:11,040 --> 00:29:15,200
您的电话的制造商和您的电话型号是

322
00:29:15,200 --> 00:29:20,718
oneplus pro 7 我相信然后谷歌说 oneplus pro 7 开发者选项

323
00:29:20,718 --> 00:29:23,599
或开发者模式，然后你会得到一些关于

324
00:29:23,599 --> 00:29:28,000
如何启用我已经这样做了所以如果我去我相信它是

325
00:29:28,000 --> 00:29:31,439
实用程序或抱歉，我认为这是系统

326
00:29:31,439 --> 00:29:35,520
你可以在那里看到然后我有一个叫做开发者选项的选项好吧

327
00:29:35,520 --> 00:29:39,759
所以为了禁用屏幕睡眠，你必须去开发者选项和

328
00:29:39,759 --> 00:29:45,200
说保持清醒，默认情况下全部禁用

329
00:29:45,200 --> 00:29:47,680
正确的

330
00:29:47,680 --> 00:29:50,718
所以嗯

331
00:29:50,718 --> 00:29:56,718
我们现在谈到了开发者工具，我们谈到了

332
00:29:56,718 --> 00:30:02,319
您可以使用 scrcpy 与您的电话进行交互

333
00:30:02,319 --> 00:30:06,840
老实说，我想我认为这就是你需要知道的全部

334
00:30:06,840 --> 00:30:12,398
嗯，对于 android 设置，没什么好说的了，剩下的就是

335
00:30:12,398 --> 00:30:17,599
像往常一样开发我们的应用程序，然后在安卓手机上运行它

336
00:30:17,599 --> 00:30:21,680
然后使用 crcpy 镜像屏幕，这就是我要做的

337
00:30:21,680 --> 00:30:26,000
整个课程我将主要运行应用程序运行我们的

338
00:30:26,000 --> 00:30:29,680
我们将在本课程中在此电话上开发的应用程序和

339
00:30:29,680 --> 00:30:33,919
使用 scr cpy 镜像屏幕，但您可以选择使用 ios

340
00:30:33,919 --> 00:30:38,718
模拟器或android模拟器或ios手机或平板电脑等等

341
00:30:38,718 --> 00:30:42,319
所以我不能提供关于如何做所有的描述

342
00:30:42,319 --> 00:30:46,398
那些东西，因为那是一个完整的过程，但至少现在你

343
00:30:46,398 --> 00:30:50,878
拥有工具和必要的信息，以便了解如何

344
00:30:50,878 --> 00:30:55,520
你实际上可以部署到iphone和android手机上

345
00:30:55,520 --> 00:30:57,680
所以呃

346
00:30:57,680 --> 00:31:02,319
话虽如此，现在我们可以说我们实际上很适合继续使用 android

347
00:31:02,319 --> 00:31:05,759
嗯，在下一章，也就是第 11 章，我们会讲到一些

348
00:31:05,759 --> 00:31:10,398
多汁的东西是呃在firebase上设置我们的项目，如果你还记得的话

349
00:31:10,398 --> 00:31:13,919
从介绍中我们将使用firebase作为我们的后端

350
00:31:13,919 --> 00:31:17,520
那么嗯

351
00:31:17,520 --> 00:31:21,360
你知道下一章会发生什么，现在你有了工具

352
00:31:21,360 --> 00:31:26,718
为了让应用程序运行是必要的，所以我们开始吧

353
00:31:26,718 --> 00:31:30,080
并配置我们的firebase项目

354
00:31:30,080 --> 00:31:33,759
第11章大家好，欢迎来到第11章

355
00:31:33,759 --> 00:31:36,477
本章我们要讲的这门课

356
00:31:36,477 --> 00:31:40,080
关于我们使用 firebase 的后端设置

357
00:31:40,080 --> 00:31:45,119
嗯，我就像我之前所说的那样，我有点假设你已经经历了

358
00:31:45,119 --> 00:31:49,040
本课程的章节按时间顺序排列 所以你开始了

359
00:31:49,040 --> 00:31:51,439
从绝对开始介绍然后

360
00:31:51,439 --> 00:31:55,040
你跟着，所以有很多很多的信息，因为你

361
00:31:55,040 --> 00:31:58,840
可以看到这一章之前大约八小时的信息

362
00:31:58,840 --> 00:32:02,957
所以我觉得因为我已经在所有这些中彻底解释了一切

363
00:32:02,957 --> 00:32:06,957
我不会再经历这一切的章节

364
00:32:06,957 --> 00:32:10,637
所以我会跳过我已经解释过的东西，如果你还没有解释过

365
00:32:10,637 --> 00:32:15,279
看了那些章节我真的建议你至少略读

366
00:32:15,279 --> 00:32:19,439
稍微看一下，这样你就明白了

367
00:32:19,439 --> 00:32:23,520
嗯，现在我在看我的笔记，我可以看到

368
00:32:23,520 --> 00:32:27,520
在本章中，正如标题所示，我们将建立我们的背部

369
00:32:27,520 --> 00:32:33,919
结束我们的后端正在使用 firebase 并且在开发本课程时我

370
00:32:33,919 --> 00:32:38,240
考虑创建一个喜欢作为本课程的一部分

371
00:32:38,240 --> 00:32:42,240
自定义后端以及我们用 django 做的我个人做 django

372
00:32:42,240 --> 00:32:47,520
开发呃后端和网站，如rest apis，也适用于

373
00:32:47,520 --> 00:32:51,599
简单的网站也是如此，但说实话，如果我去的话

374
00:32:51,599 --> 00:32:56,080
并使用 django 创建一个简单的后端，然后向您展示如何与

375
00:32:56,080 --> 00:32:59,919
使用颤振它真的与颤振无关

376
00:32:59,919 --> 00:33:04,558
就像后端部分与颤振本身无关，所以

377
00:33:04,558 --> 00:33:07,520
在本课程开始时遇到这个问题我

378
00:33:07,520 --> 00:33:12,797
面临着一个挑战，我是否要进入创建定制的兔子洞？

379
00:33:12,797 --> 00:33:15,119
回来参加这门课程

380
00:33:15,119 --> 00:33:18,080
并引导您创建一个无关的自定义包

381
00:33:18,080 --> 00:33:23,279
颤动和颤动是你观看这门课程的原因，所以我

382
00:33:23,279 --> 00:33:29,520
面临着我应该这样做还是只使用呃firebase的挑战

383
00:33:29,520 --> 00:33:34,240
我选择并且我选择了firebase只是因为它是谷歌的产品

384
00:33:34,240 --> 00:33:37,599
有点像无服务器，所以它是一个服务器，你实际上不需要

385
00:33:37,599 --> 00:33:42,558
这样写代码，所以我选择了firebase，因为它很简单

386
00:33:42,558 --> 00:33:48,080
这样我们就可以在没有太多工作的情况下让后端正常运行

387
00:33:48,080 --> 00:33:51,439
我希望你明白这就是我们不做定制的原因

388
00:33:51,439 --> 00:33:55,040
后端但firebase是一个非常可靠的呃

389
00:33:55,040 --> 00:34:00,558
由谷歌创建的后端，它拥有谷歌的所有财务支持

390
00:34:00,558 --> 00:34:04,080
进一步的发展和支持，所以你

391
00:34:04,080 --> 00:34:07,279
如果您正在选择火力基地并且您在想哦，是吗？

392
00:34:07,279 --> 00:34:11,840
将继续得到支持 快速回答是肯定的

393
00:34:11,840 --> 00:34:16,000
得到支持它是如此之大，每个人都在使用它，它太大了，甚至无法失败我

394
00:34:16,000 --> 00:34:19,200
至少现在会说

395
00:34:19,200 --> 00:34:24,240
呃即将到来的呃未来几年我会说

396
00:34:24,240 --> 00:34:28,159
我无法预测未来 10 20 年的未来，但

397
00:34:28,159 --> 00:34:32,000
现在你不必担心，所以

398
00:34:32,000 --> 00:34:35,919
嗯，这就是我们要做的

399
00:34:35,919 --> 00:34:39,279
这一章我只是把它记在我的笔记里

400
00:34:39,279 --> 00:34:45,520
现在以前当 uh flutter 在 2020 年甚至开始时出现

401
00:34:45,520 --> 00:34:50,000
如果您想与 2021 年的

402
00:34:50,000 --> 00:34:53,119
firebase 你必须做很多自定义工作

403
00:34:53,119 --> 00:34:57,759
现在在最新版本的颤振中

404
00:34:57,759 --> 00:35:01,759
有一个命令可以从你的

405
00:35:01,759 --> 00:35:08,080
终端它被称为flutter fire cli和这个命令

406
00:35:08,080 --> 00:35:12,718
太棒了，因为就像您以前必须手动完成的工作一样

407
00:35:12,718 --> 00:35:17,759
自定义工作拖动文件和 p 列表和 jsons 配置应用程序 ID

408
00:35:17,759 --> 00:35:23,040
等等，这是一项艰巨的任务，很多开发人员

409
00:35:23,040 --> 00:35:28,319
在这个过程中会犯很多错误，而且效果不好，所以

410
00:35:28,319 --> 00:35:31,360
嗯，现在有一个命令，你可以

411
00:35:31,360 --> 00:35:35,279
从您的终端发出，允许您完成所有自定义工作

412
00:35:35,279 --> 00:35:39,599
但它会为您完成，因此您不必手动执行此操作

413
00:35:39,599 --> 00:35:43,360
正如我在这里提供的，有一个链接我要打开那个链接

414
00:35:43,360 --> 00:35:48,240
如果我可以在某个地方让我们看看我是否可以带上 safari

415
00:35:48,240 --> 00:35:53,439
它在错误的屏幕中打开，我将把那个屏幕带到这里

416
00:35:53,439 --> 00:35:58,718
所以你会看到它以及放大屏幕并放大

417
00:35:58,718 --> 00:36:03,040
字体，所以它更明显，所以你可以看到它说 fluffifier

418
00:36:03,040 --> 00:36:06,000
概述，它说要了解 Firebase

419
00:36:06,000 --> 00:36:09,279
Flutter 我们建议从 get to 开始

420
00:36:09,279 --> 00:36:12,797
知道用于颤振代码实验室和视频的firebase，所以如果有视频，这里有

421
00:36:12,797 --> 00:36:16,558
你想看它，呃，如果你是的话，它说没关系

422
00:36:16,558 --> 00:36:20,558
迁移现有项目，然后查看迁移指南，如果迁移

423
00:36:20,558 --> 00:36:23,840
如果您不是来自软件，那么您不熟悉该术语

424
00:36:23,840 --> 00:36:27,360
工程师背景迁移经济，所以你有一个现有的东西，你想要

425
00:36:27,360 --> 00:36:30,957
让它更新

426
00:36:30,957 --> 00:36:35,439
并在其中放入新内容，这样您就可以从旧的信息中迁移信息

427
00:36:35,439 --> 00:36:38,637
项目到新的所以但在这种情况下我们不必担心

428
00:36:38,637 --> 00:36:43,360
关于那个，因为我们已经创建了一个全新的项目，所以没有现有的

429
00:36:43,360 --> 00:36:47,759
我们必须担心的应用程序中的firebase安装

430
00:36:47,759 --> 00:36:53,040
这里有很多信息，你可以看到它说使用 cli 等

431
00:36:53,040 --> 00:36:56,637
这实际上就是我们现在要做的

432
00:36:56,637 --> 00:37:02,000
我们将看看如何安装flutter fire cli

433
00:37:02,000 --> 00:37:05,919
你可以在这里看到它说你应该执行 dart pop global activate

434
00:37:05,919 --> 00:37:09,520
flussifier cli 然后你发出颤动的火

435
00:37:09,520 --> 00:37:14,637
Flussifier 配置所以让我们首先从这里复制这段代码复制它并

436
00:37:14,637 --> 00:37:18,878
我要打开我的终端，我要增加我的

437
00:37:18,878 --> 00:37:23,360
终端，所以您实际上可以看到这里发生了什么，好吧，所以我要粘贴

438
00:37:23,360 --> 00:37:27,840
那个命令进来，我会让它做它的事情

439
00:37:27,840 --> 00:37:31,439
我之前已经完成了这个安装，所以对我来说它实际上可能会

440
00:37:31,439 --> 00:37:34,398
稍微平滑一点或更快一点，但对你来说可能需要一点时间

441
00:37:34,398 --> 00:37:38,319
稍长一点，具体取决于您之前是否已经安装了平面 rsli 或

442
00:37:38,319 --> 00:37:41,279
现在不是这样，下一个安装

443
00:37:41,279 --> 00:37:45,919
你要做的就是你实际上需要确保我的意思是

444
00:37:45,919 --> 00:37:48,797
文档中未提供，但这是我提供的

445
00:37:48,797 --> 00:37:53,119
你是因为我知道我以前亲自遇到过这个问题

446
00:37:53,119 --> 00:37:55,680
所以嗯

447
00:37:55,680 --> 00:38:01,520
这个颤动的火cli它会给你这个命令，你可以在这里看到颤动

448
00:38:01,520 --> 00:38:07,200
火好吧，如果我在我的终端说哪个扑火

449
00:38:07,200 --> 00:38:11,360
你可以看到这个文件夹中安装了flutter fire所以它在

450
00:38:11,360 --> 00:38:17,200
我电脑上的个人文件夹 slash dot pop cache slash bin 然后

451
00:38:17,200 --> 00:38:21,840
就在那里，不幸的是，当您安装大量 fire cli 时，它不会

452
00:38:21,840 --> 00:38:26,240
它不会告诉您的终端它的安装位置，所以如果您立即

453
00:38:26,240 --> 00:38:31,040
在那之后说扑火然后等等等等，就像这里提到的那样

454
00:38:31,040 --> 00:38:35,119
分类器配置你的终端很可能会说什么是颤动

455
00:38:35,119 --> 00:38:36,797
这么火

456
00:38:36,797 --> 00:38:39,360
它没有在文档中提供，但我在这里告诉你

457
00:38:39,360 --> 00:38:42,957
正如您在标题中看到的那样，您需要告诉终端在哪里颤动

458
00:38:42,957 --> 00:38:47,279
fire实际上是安装好的所以

459
00:38:47,279 --> 00:38:51,360
嗯，那么你需要做的就是呃做

460
00:38:51,360 --> 00:38:54,637
正如我在这里提到的，你可以看到我说过你需要改变你的路径

461
00:38:54,637 --> 00:39:00,637
并包括你的主文件夹斜线弹出缓存斜线箱所以如果我去我的

462
00:39:00,637 --> 00:39:06,840
终端配置如果我说嗯

463
00:39:06,840 --> 00:39:11,200
vshrc 你可以在顶部的某个地方看到我

464
00:39:11,200 --> 00:39:17,279
应该在那里你看到它说出口路径，我说好吧我的新路径是

465
00:39:17,279 --> 00:39:22,957
旧路径加上这里使用这个呃双列或列

466
00:39:22,957 --> 00:39:26,718
我在屏幕底部的标题中提到的这个文件夹

467
00:39:26,718 --> 00:39:31,119
所以你也需要这样做，所以我会时不时地退出 vim

468
00:39:31,119 --> 00:39:37,040
你已经做到了，确保你来源

469
00:39:37,040 --> 00:39:40,398
配置所以在我的情况下我不得不说来源

470
00:39:40,398 --> 00:39:45,520
zsh rc 这将读取路径 um

471
00:39:45,520 --> 00:39:49,360
新鲜的，否则你也可以走大路，喜欢

472
00:39:49,360 --> 00:39:52,878
关闭您的终端完全终止，然后重新启动它

473
00:39:52,878 --> 00:39:56,957
依次读取配置并为扑火带来一条路径

474
00:39:56,957 --> 00:40:00,240
存在

475
00:40:00,240 --> 00:40:03,919
如果你不想采购这就是我的意思

476
00:40:03,919 --> 00:40:07,119
所以现在我们已经讨论过了，现在让我们

477
00:40:07,119 --> 00:40:12,080
其实说说firebase cli是什么

478
00:40:12,080 --> 00:40:17,439
这是一个嗯实际上让我确保我勾选所有这些项目

479
00:40:17,439 --> 00:40:20,957
我谈到了

480
00:40:20,957 --> 00:40:24,797
现在让我将它们标记为已完成

481
00:40:24,797 --> 00:40:29,200
在我的笔记中

482
00:40:29,200 --> 00:40:33,040
嗯所以你现在需要做的就是我们

483
00:40:33,040 --> 00:40:37,040
现在需要做的就是说说firebase cli

484
00:40:37,040 --> 00:40:40,398
嗯，正如你所看到的，这是一个帮助我们的 cli

485
00:40:40,398 --> 00:40:43,759
现在就从我们的终端与 firebase 交互

486
00:40:43,759 --> 00:40:47,439
嗯，这曾经是手动完成的

487
00:40:47,439 --> 00:40:51,520
以前你必须去firebase并喜欢创建一个整体

488
00:40:51,520 --> 00:40:55,759
单独的项目，然后将该项目集成到您的牙线应用程序中，这样

489
00:40:55,759 --> 00:40:58,797
你不必再做任何事情了

490
00:40:58,797 --> 00:41:03,919
嗯你现在需要做的是下一步是安装firebase cli

491
00:41:03,919 --> 00:41:09,599
它为您完成所有这些工作，所以我在这里提供了您可以看到的

492
00:41:09,599 --> 00:41:13,599
这里有一个命令可以发出

493
00:41:13,599 --> 00:41:19,599
然后你可以去firebase google com docs cli install cli mac blah blah

494
00:41:19,599 --> 00:41:24,080
所以我实际上要去那个地方

495
00:41:24,080 --> 00:41:29,279
在我的网络浏览器中，这样你就可以看到我在做什么

496
00:41:29,279 --> 00:41:33,040
在这里，你会看到有很多

497
00:41:33,040 --> 00:41:36,797
这里提供的信息我要提出呃我要做的

498
00:41:36,797 --> 00:41:39,599
尺寸大一点，我要把我的脸带到右下角

499
00:41:39,599 --> 00:41:42,957
也可以在屏幕上看到更多信息

500
00:41:42,957 --> 00:41:46,718
你可以看到mac或linux然后有

501
00:41:46,718 --> 00:41:50,319
是的，让我们去这里吧，你可以使用为宏 linux 安装 firebase cli

502
00:41:50,319 --> 00:41:55,119
以下选项之一，所以独立二进制等等等等，所以你

503
00:41:55,119 --> 00:41:59,040
需要查看有关如何安装的文档

504
00:41:59,040 --> 00:42:03,360
无论您使用的是 mac 还是计算机上的 firebase cli

505
00:42:03,360 --> 00:42:09,279
无论您使用的是linux还是windows

506
00:42:09,279 --> 00:42:11,919
所以在你完成之后

507
00:42:11,919 --> 00:42:19,599
安装了您实际需要的firebase cli

508
00:42:19,599 --> 00:42:23,759
使用它登录您的帐户

509
00:42:23,759 --> 00:42:26,957
firebase cli

510
00:42:26,957 --> 00:42:30,398
所以让我们这样做让我真正进入

511
00:42:30,398 --> 00:42:37,439
嗯，让我们在 Visual Studio 代码中提出我们的项目，所以我会带来它

512
00:42:37,439 --> 00:42:41,439
在这里并提出正确的标题

513
00:42:41,439 --> 00:42:44,558
所以你明白我们在谈论什么我们将谈论firebase登录

514
00:42:44,558 --> 00:42:49,200
当你想集成你的颤振时，你会看到注销

515
00:42:49,200 --> 00:42:52,797
使用 firebase 的应用程序，您需要创建一个

516
00:42:52,797 --> 00:42:56,840
firebase 项目在称为 firebase 控制台的东西上

517
00:42:56,840 --> 00:43:03,599
所以这个项目几乎是你的 Firebase 后端的配置

518
00:43:03,599 --> 00:43:08,477
在他们网站上的firebase控制台上，所以你需要配置一个后端

519
00:43:08,477 --> 00:43:13,360
我们现在需要做的是在我们可以真正重新配置它之前

520
00:43:13,360 --> 00:43:19,040
在您的终端中，您需要告诉 firebase 您拥有什么用户，因为我

521
00:43:19,040 --> 00:43:23,040
个人有很多谷歌账户，任何一个谷歌账户都可以

522
00:43:23,040 --> 00:43:28,240
可能有很多颤振对不起很多firebase项目

523
00:43:28,240 --> 00:43:32,878
因为 firebase 项目与您的谷歌帐户相关联，好吧

524
00:43:32,878 --> 00:43:39,919
现在为了让我们的 firebase cli 了解它需要在哪里创建

525
00:43:39,919 --> 00:43:44,718
项目，你需要告诉它用一个帐户登录，所以

526
00:43:44,718 --> 00:43:48,558
这样做的方法是打开终端，正如你所看到的，这是我的

527
00:43:48,558 --> 00:43:51,520
终端，我要清理一下

528
00:43:51,520 --> 00:43:56,718
我也要调出字体，所以它非常大，没关系

529
00:43:56,718 --> 00:44:01,279
所以你现在需要做的是告诉它登录

530
00:44:01,279 --> 00:44:08,000
所以我会说firebase登录没问题

531
00:44:08,000 --> 00:44:11,840
它会完成它的工作，它告诉我我已经用这个登录了

532
00:44:11,840 --> 00:44:15,840
帐户 如果您还没有使用帐户登录，那么您会收到提示

533
00:44:15,840 --> 00:44:21,840
告诉你好吧，你想用哪个电子邮件和密码登录所以

534
00:44:21,840 --> 00:44:24,797
现在，嗯，它实际上可能是值得的

535
00:44:24,797 --> 00:44:28,637
对你说实话，让我现在退出，以便你看到整个过程

536
00:44:28,637 --> 00:44:32,477
所以我有点犹豫要退出，因为

537
00:44:32,477 --> 00:44:36,878
呃，我实际上已经用安全密钥保护了我的谷歌帐户

538
00:44:36,878 --> 00:44:40,159
所以我这里没有钥匙，我

539
00:44:40,159 --> 00:44:44,797
希望我能找到它

540
00:44:44,797 --> 00:44:48,477
和你一起经历这个过程，这样你就会看到它是如何工作的，我会

541
00:44:48,477 --> 00:44:52,558
注销所以让我们在这里注销

542
00:44:52,558 --> 00:44:57,759
所以我说的是firebase logout，它说有一个新版本的

543
00:44:57,759 --> 00:45:04,080
firebase 工具，所以让我们在这里复制它，我会看看我们是否可以安装

544
00:45:04,080 --> 00:45:07,840
嗯它说什么 npm install

545
00:45:07,840 --> 00:45:15,520
全球所以让我们在这里复制全球firebase工具好吧

546
00:45:15,520 --> 00:45:19,520
如果它可以完成它的工作那么在我们可以继续之前

547
00:45:19,520 --> 00:45:25,279
npm 是一种叫做节点包管理器的东西，它有点像

548
00:45:25,279 --> 00:45:29,200
如果您正在使用 node.js 如果您正在开发实例节点

549
00:45:29,200 --> 00:45:32,080
您不必知道的应用程序

550
00:45:32,080 --> 00:45:37,599
关于它只是一种方式它就像一个用于创建应用程序的工具包

551
00:45:37,599 --> 00:45:42,080
删除现有文件并重试或强制 npm 好

552
00:45:42,080 --> 00:45:48,797
npm install global with dash dash force 我认为

553
00:45:48,797 --> 00:45:51,360
是的，所以它就像一个依赖

554
00:45:51,360 --> 00:45:55,840
节点应用程序和 firebase 工具的管理是

555
00:45:55,840 --> 00:46:00,240
一个节点应用程序，这就是你需要知道的一切，我的意思是那里有

556
00:46:00,240 --> 00:46:04,159
有关于 node 和 node.js 的课程，那么你实际上可以有一个

557
00:46:04,159 --> 00:46:09,119
看看它们是如何工作的等等，所以我不打算详细说明，所以

558
00:46:09,119 --> 00:46:13,439
在我可以之前，我的意思是我实际上可以在没有的情况下完成 firebase 注销

559
00:46:13,439 --> 00:46:17,840
所有这一切，但我只是想告诉你，事情没有计划好，我做不到

560
00:46:17,840 --> 00:46:21,200
在这里完美地计划事情，当我试图注销时，它说哦，有一个

561
00:46:21,200 --> 00:46:24,240
新版本的节点可用等等等等

562
00:46:24,240 --> 00:46:28,000
现在我想抱歉有一个新版本的firebase工具可用

563
00:46:28,000 --> 00:46:31,200
你可以使用你可以用 npm 安装的，所以

564
00:46:31,200 --> 00:46:37,680
我这样做了，所以现在让我们说呃 firebase logout

565
00:46:37,680 --> 00:46:40,840
好的，所以 logit 实际上是成功的

566
00:46:40,840 --> 00:46:46,240
以前，所以现在让我们说firebase登录

567
00:46:46,240 --> 00:46:49,759
它说允许firebase收集cli使用情况和错误报告

568
00:46:49,759 --> 00:46:53,439
老实说，作为开发人员，我要说的信息

569
00:46:53,439 --> 00:46:59,439
你可能会倾向于说不喜欢这里，但如果你是开发人员，你可以

570
00:46:59,439 --> 00:47:02,878
穿上你的鞋，你可以把自己换成另一个开发者工作的鞋

571
00:47:02,878 --> 00:47:07,520
在谷歌为 firebase 工作，他们正试图获取一些关于

572
00:47:07,520 --> 00:47:12,558
您如何使用 cli 以及他们是否可以从您对 cli 的使用中学习

573
00:47:12,558 --> 00:47:17,119
为了使 cli 更好，所以我通常对这些事情说是

574
00:47:17,119 --> 00:47:20,878
特别是如果有开发人员请求许可，但您可以拒绝

575
00:47:20,878 --> 00:47:23,439
如果你愿意，我会说是的

576
00:47:23,439 --> 00:47:27,439
你可以看到这里然后这里提供了一个屏幕要求我登录

577
00:47:27,439 --> 00:47:30,957
使用我的一个谷歌帐户

578
00:47:30,957 --> 00:47:34,000
我要选择我公司的 google 帐户，因为这是我通常使用的

579
00:47:34,000 --> 00:47:38,398
使用好吧，所以我要选择它，它说firebase cli想要

580
00:47:38,398 --> 00:47:42,797
访问您的谷歌帐户，它说好的，它将使用什么权限

581
00:47:42,797 --> 00:47:45,520
如果您愿意，可以查看此信息

582
00:47:45,520 --> 00:47:49,200
如果它与您有关 如果您担心这些事情中的任何一个

583
00:47:49,200 --> 00:47:52,637
请阅读此处提供的链接

584
00:47:52,637 --> 00:47:55,759
我只想说允许，一旦完成，你就会看到

585
00:47:55,759 --> 00:48:00,240
它说firebase cli登录成功，然后你几乎可以关闭

586
00:48:00,240 --> 00:48:06,080
此窗口安全，现在显示以 pixelityav 登录

587
00:48:06,080 --> 00:48:11,360
gmail.com，所以我可以再次说 firebase login，这将是提示

588
00:48:11,360 --> 00:48:16,718
您在此视频的开头看到您已正常登录

589
00:48:16,718 --> 00:48:19,360
很好，现在有很多信息

590
00:48:19,360 --> 00:48:25,520
您已使用 firebase cli 登录，您实际上需要配置一个

591
00:48:25,520 --> 00:48:31,279
firebase 项目没问题，我们使用我们的 flutter fire cli 来做到这一点

592
00:48:31,279 --> 00:48:34,957
安装在本章开头使用这个命令 dart pop

593
00:48:34,957 --> 00:48:41,040
全局激活好吧，所以你现在需要做的是

594
00:48:41,040 --> 00:48:44,558
发出扑火配置

595
00:48:44,558 --> 00:48:48,797
命令就像我在左侧显示的那样，所以我要做

596
00:48:48,797 --> 00:48:54,398
那个颤动的火配置，所以它会获取所有的项目

597
00:48:54,398 --> 00:48:59,919
我已经在我的谷歌帐户中创建了，它说好的这些

598
00:48:59,919 --> 00:49:04,797
有没有可用的项目 flash chat fluffer note 猜测 chords 随机

599
00:49:04,797 --> 00:49:09,360
项目测试，或者您可以创建一个新项目

600
00:49:09,360 --> 00:49:12,878
现在我要选择在这里创建一个新项目

601
00:49:12,878 --> 00:49:16,000
它说好的输入你的项目ID

602
00:49:16,000 --> 00:49:20,797
新的 firebase 项目，所以我在这里要做的是输入我的

603
00:49:20,797 --> 00:49:23,919
笔记好吧

604
00:49:23,919 --> 00:49:28,637
如您所见，我的笔记是我们的颤振项目的名称

605
00:49:28,637 --> 00:49:32,319
好吧，所以我的笔记现在我要说好的，我要创建相同的

606
00:49:32,319 --> 00:49:37,279
项目叫我的笔记好吧我要在这里按回车

607
00:49:37,279 --> 00:49:40,718
我说是的，我要创建它，它可能是

608
00:49:40,718 --> 00:49:44,718
我的意思是你可以看到我们立即得到一个错误说

609
00:49:44,718 --> 00:49:47,200
这个项目已经存在，你可以看到

610
00:49:47,200 --> 00:49:49,759
嗯，命令等等等等，是的，失败了

611
00:49:49,759 --> 00:49:52,558
创建一个项目，因为已经有一个项目

612
00:49:52,558 --> 00:49:56,878
使用 id mynotes 请使用唯一的项目 id 重试，所以

613
00:49:56,878 --> 00:50:01,119
这基本上是在告诉我们，嘿，其他人已经创建了我的笔记，它

614
00:50:01,119 --> 00:50:04,957
不是我们创建的项目之一，因为如果你有一个

615
00:50:04,957 --> 00:50:08,718
如果你打开你的网络浏览器并说

616
00:50:08,718 --> 00:50:14,240
firebase 控制台 转到您的 firebase 控制台

617
00:50:14,240 --> 00:50:19,360
嗯，让我确保我使用我的像素帐户登录是的

618
00:50:19,360 --> 00:50:23,680
如果我看看让我们看看解雇让我们

619
00:50:23,680 --> 00:50:27,919
查看开始使用 firebase 帮助您观看

620
00:50:27,919 --> 00:50:30,797
演示是的，我们使用该帐户登录

621
00:50:30,797 --> 00:50:34,398
所以我实际上可以看到也许我没有在这里设置任何项目

622
00:50:34,398 --> 00:50:37,599
有点奇怪，因为我们实际上看到有一些

623
00:50:37,599 --> 00:50:41,439
在此帐户下设置的项目，所以我不明白为什么 firebase

624
00:50:41,439 --> 00:50:44,878
控制台，所以它没有显示他们

625
00:50:44,878 --> 00:50:49,279
由 google 支持的 firebase 控制台 firebase 控制台 google

626
00:50:49,279 --> 00:50:54,797
是的，他们很好，所以它在 console.firebase.google 上

627
00:50:54,797 --> 00:51:00,558
我可以看到我的笔记应用程序不是我拥有的应用程序

628
00:51:00,558 --> 00:51:05,840
还没有创造，所以它说的是全球

629
00:51:05,840 --> 00:51:09,759
firebase 项目有一个标识符，现在我输入了一个标识符

630
00:51:09,759 --> 00:51:13,119
已经采取了所以我要做什么然后我要去

631
00:51:13,119 --> 00:51:18,878
发出相同的命令 uh firebase flutter fire configure 和这个

632
00:51:18,878 --> 00:51:22,080
是时候我将提供有关项目名称的更多信息

633
00:51:22,080 --> 00:51:26,878
所以这让它更加独特所以我要选择

634
00:51:26,878 --> 00:51:29,919
创建一个新项目然后在此处以该名称

635
00:51:29,919 --> 00:51:36,558
项目我要说 mynotes 扑动项目

636
00:51:36,558 --> 00:51:40,000
也许有人也已经采取了这个

637
00:51:40,000 --> 00:51:42,637
我不知道

638
00:51:42,637 --> 00:51:51,759
所以它在做它的事情它基本上在做它的魔法所以让我们看看

639
00:51:51,759 --> 00:51:55,439
我的意思是这没关系，这需要一些时间

640
00:51:55,439 --> 00:51:58,797
正在做很多工作，就像 ios 项目和 android 项目一样设置

641
00:51:58,797 --> 00:52:02,477
等等，所以这件事过去需要很多时间

642
00:52:02,477 --> 00:52:06,637
用手做，可能是这个时间的 10 倍

643
00:52:06,637 --> 00:52:11,360
cli 正在占用，所以我并不担心它需要一些时间，所以

644
00:52:11,360 --> 00:52:14,718
在这里它实际上会告诉你你想选择哪些平台

645
00:52:14,718 --> 00:52:19,840
就像我说的那样，flutter 允许你创建 web 应用程序 android

646
00:52:19,840 --> 00:52:23,360
应用程序 ios 应用程序还有呃

647
00:52:23,360 --> 00:52:27,680
桌面应用程序或四个平台，然后在这里说好的，哪些可以

648
00:52:27,680 --> 00:52:31,599
你现在想为我们的项目创建你可以

649
00:52:31,599 --> 00:52:35,439
说android和ios你不用担心就好了

650
00:52:35,439 --> 00:52:40,240
嗯 mac os 或 linux 或 windows 和 web 但是

651
00:52:40,240 --> 00:52:43,919
如果你愿意，你有能力做到这一点，所以选择 android 和 ios

652
00:52:43,919 --> 00:52:53,759
现在按回车，它会做它的工作

653
00:52:53,759 --> 00:52:58,477
所以让它发挥它的魔力

654
00:52:58,477 --> 00:53:03,360
现在这是你必须手动完成的令人惊奇的部分

655
00:53:03,360 --> 00:53:08,159
以前必须像您的申请一样去注册

656
00:53:08,159 --> 00:53:11,439
苹果然后去注册包标识符然后把包

657
00:53:11,439 --> 00:53:15,520
在firebase中手动识别标识符，然后下载一些文件将这些文件放入

658
00:53:15,520 --> 00:53:19,200
你的 ios 和 android 项目现在你不必再这样做了

659
00:53:19,200 --> 00:53:22,797
在这里它只是告诉你你使用哪个包标识符

660
00:53:22,797 --> 00:53:26,797
项目，如果你还记得我们之前创建 Flutter 项目的时候

661
00:53:26,797 --> 00:53:33,360
一开始我们说flutter create，然后是一个对我来说是s的组织

662
00:53:33,360 --> 00:53:35,919
e dot pixolity 你还记得那个命令吗

663
00:53:35,919 --> 00:53:40,398
有点像嗯，我的意思是，如果我打开终端，也许我

664
00:53:40,398 --> 00:53:45,279
甚至可以回到它颤振创建你记得这个命令我会放大吗

665
00:53:45,279 --> 00:53:48,878
稍微深入一点，这样你就可以看得更清楚，这就是我们实际创建的方式

666
00:53:48,878 --> 00:53:54,000
我们的项目我们说flutter create.org，因为他在我的笔记中像素化了所以捆绑

667
00:53:54,000 --> 00:53:57,680
此应用程序的标识符将是 sepixolity.mynotes

668
00:53:57,680 --> 00:54:02,398
但是，由于 sc 像素性对我来说是反向域，所以这不会

669
00:54:02,398 --> 00:54:06,000
你的情况，所以回到你是如何创建的

670
00:54:06,000 --> 00:54:09,840
使用您的组织名称的项目标识符，您现在拥有

671
00:54:09,840 --> 00:54:14,159
把它贴在这里，这样你就会看到我要说 s e

672
00:54:14,159 --> 00:54:19,279
像素点我的笔记好

673
00:54:19,279 --> 00:54:24,797
所以输入它，它将配置你的 ios

674
00:54:24,797 --> 00:54:30,319
给你的项目

675
00:54:30,319 --> 00:54:33,919
就是这样，现在有了

676
00:54:33,919 --> 00:54:38,718
设置项目运行所需的一切，所以我的意思是你可以

677
00:54:38,718 --> 00:54:42,718
可能只是觉得哦，这太少了，它实际上做了什么

678
00:54:42,718 --> 00:54:47,119
但对于长期使用 firebase 和 flutter 的我来说

679
00:54:47,119 --> 00:54:50,080
时间这一切都很神奇，因为它做了很多

680
00:54:50,080 --> 00:54:54,080
它实际上在 Firebase 控制台上配置了您的应用程序的工作

681
00:54:54,080 --> 00:54:59,759
注册了一个 android 和一个 ios 项目挂钩到这个 firebase 项目

682
00:54:59,759 --> 00:55:05,040
下载的配置文件将它们放置在您的正确位置

683
00:55:05,040 --> 00:55:08,558
应用程序，所以它做了很多工作，但你没有

684
00:55:08,558 --> 00:55:13,360
真的必须知道，所以现在如果你想看看

685
00:55:13,360 --> 00:55:17,279
如果你在这里看到它的结果，它的输出表明有一个标识符

686
00:55:17,279 --> 00:55:21,279
与您的 ios 应用相关联，然后有一个与

687
00:55:21,279 --> 00:55:25,759
你的安卓应用，这就是我们现在要做的

688
00:55:25,759 --> 00:55:30,477
现在让我们确保这些标识符是正确的，并且

689
00:55:30,477 --> 00:55:35,599
我们提供给 cli 的包标识符也放在

690
00:55:35,599 --> 00:55:40,159
配置文件正确所以复制这个例如 ios 标识符

691
00:55:40,159 --> 00:55:45,119
这是为你创建的，所以复制它，然后在你的整个

692
00:55:45,119 --> 00:55:49,360
项目，然后你会在这里找到一个小文件，让我把它记下来

693
00:55:49,360 --> 00:55:53,840
它被称为 firebaseoptions.dart

694
00:55:53,840 --> 00:55:59,599
所以这是配置 ios 的地方，让我这样带上，这样你就不会

695
00:55:59,599 --> 00:56:02,398
看到它，这就是 android 项目所在的位置

696
00:56:02,398 --> 00:56:08,637
配置你可以看到 um app id 就在这里，api key 是

697
00:56:08,637 --> 00:56:13,200
就在那里所以不用担心我的意思是你不应该显示你的 api 密钥

698
00:56:13,200 --> 00:56:19,520
和任何人的应用程序 ID 嗯，但是因为我正在为你开发这门课程，所以我

699
00:56:19,520 --> 00:56:23,040
必须证明它我不能只是去审查它但不要担心它

700
00:56:23,040 --> 00:56:26,878
你看到这个 um 视频的时候 你看到这个课程的时候 我已经

701
00:56:26,878 --> 00:56:30,080
已经从 firebase 中删除了这个项目，所以不会有任何

702
00:56:30,080 --> 00:56:33,599
所以涉及安全风险

703
00:56:33,599 --> 00:56:37,040
这样即使您知道应用程序 ID 上的 api 密钥，该项目也不会存在

704
00:56:37,040 --> 00:56:41,119
所以不用担心，但如果您正在开发自己的应用程序

705
00:56:41,119 --> 00:56:46,878
小心你与谁分享你的 api 密钥和应用程序 ID

706
00:56:46,878 --> 00:56:52,718
那是很多信息很多很多很多所以嗯

707
00:56:52,718 --> 00:56:59,279
我真的会在这里打勾，我们已经讨论过了

708
00:56:59,279 --> 00:57:04,797
我创建了一个新项目，是的，就是这样

709
00:57:04,797 --> 00:57:08,398
应该这样我也要去这里

710
00:57:08,398 --> 00:57:12,398
字幕，我可以看到我在这里有一些关于启用的信息

711
00:57:12,398 --> 00:57:17,040
multi-decks 和 multi-dex 是我们已经在

712
00:57:17,040 --> 00:57:21,119
上一章是 android 项目的第 10 章，所以

713
00:57:21,119 --> 00:57:25,279
现在一切都应该像以前一样工作，老实说，所以如果

714
00:57:25,279 --> 00:57:29,040
如果你正在开发，你在你的 Visual Studio 代码或 android Studio 中

715
00:57:29,040 --> 00:57:32,000
在您的带有 android studio 的颤振应用程序下，您还可以

716
00:57:32,000 --> 00:57:36,718
去选择你的设备现在在上一章中运行，你看到了

717
00:57:36,718 --> 00:57:40,558
本课程中的全部聊天内容我将使用安卓手机

718
00:57:40,558 --> 00:57:45,919
开发我们的应用程序，以便您可以选择使用 io 模拟器和 android

719
00:57:45,919 --> 00:57:49,919
模拟器或android手机或平板电脑或ios手机或平板电脑所以但我会

720
00:57:49,919 --> 00:57:56,159
使用真正的安卓手机，正如你所见，我们有能力调出 scr cpy

721
00:57:56,159 --> 00:58:02,878
镜像 android 屏幕所以我要把它带到这里

722
00:58:02,878 --> 00:58:06,558
稍微改变一下visual studio代码窗口的大小，这样你就可以看到

723
00:58:06,558 --> 00:58:10,558
android um 电话也在那里，然后我要做什么

724
00:58:10,558 --> 00:58:14,718
只是为了确保项目在我们完成所有这些工作之后运行

725
00:58:14,718 --> 00:58:19,200
这样我们就没有破坏任何东西真的让我们走吧

726
00:58:19,200 --> 00:58:23,040
调试应用程序对不起运行它没有调试和这个

727
00:58:23,040 --> 00:58:27,119
这就是为什么你会看到这是我们所做的所有工作的结果

728
00:58:27,119 --> 00:58:30,637
几乎什么都不像

729
00:58:30,637 --> 00:58:33,759
我的意思是说这听起来很有趣，因为我们做到了

730
00:58:33,759 --> 00:58:37,439
firebase 项目有很多工作，但你看不到任何东西

731
00:58:37,439 --> 00:58:40,718
屏幕，这就是你做软件开发的现实

732
00:58:40,718 --> 00:58:44,240
有时在做某事时付出很多努力，结果却不是

733
00:58:44,240 --> 00:58:48,637
马上就可以看到了，但是你在这做了什么

734
00:58:48,637 --> 00:58:52,240
章是你实际上只用几个命令设置了你的后端

735
00:58:52,240 --> 00:58:57,360
您安装了两个 cli，即您登录的 flutter fire cli 和 firebase cli

736
00:58:57,360 --> 00:59:02,398
使用 firebase cli，然后使用 flutter fire cli 设置后端

737
00:59:02,398 --> 00:59:04,797
现在好了，只是为了确保一切都设置好了

738
00:59:04,797 --> 00:59:08,398
正确启动你也可以打开你的网络浏览器我会在这里打开它

739
00:59:08,398 --> 00:59:12,957
我会说 console.firebase 和

740
00:59:12,957 --> 00:59:16,558
让我确保我们有

741
00:59:16,558 --> 00:59:20,558
我们的笔记应用在这里你可以看到我的node slatter项目

742
00:59:20,558 --> 00:59:23,759
你可以点击它，你可以看到它是如何为你设置的，你可以看到

743
00:59:23,759 --> 00:59:27,919
有一个 android 应用程序设置和一个 ios 应用程序设置所以

744
00:59:27,919 --> 00:59:31,520
你不必真的做任何事现在你可以做很多事情

745
00:59:31,520 --> 00:59:34,558
我们将在整个过程中实际使用的 firebase

746
00:59:34,558 --> 00:59:38,878
当然，但不是现在，只需确保您的

747
00:59:38,878 --> 00:59:45,279
通过登录 console.firebase.google.com 为您创建 firebase 项目

748
00:59:45,279 --> 00:59:48,159
许多点

749
00:59:48,159 --> 00:59:52,797
好的，我们已经讨论过这个，现在运行应用程序

750
00:59:52,797 --> 00:59:57,040
安卓手机，所以已经设置好了，所以我们没有

751
00:59:57,040 --> 01:00:00,718
既然你已经看到你已经建立了，现在就谈谈这个

752
01:00:00,718 --> 01:00:06,558
你的后端你准备好了，嗯，所以我可以说恭喜你

753
01:00:06,558 --> 01:00:10,080
现在按顺序

754
01:00:10,080 --> 01:00:13,360
android设置已经完成所以我可以看到我们没有设置

755
01:00:13,360 --> 01:00:18,080
然而，不得不谈论这个

756
01:00:18,080 --> 01:00:21,759
我们确实需要谈论的是我们将要讨论的

757
01:00:21,759 --> 01:00:26,558
在下一章讨论所以

758
01:00:26,558 --> 01:00:31,680
在下一章中，我们将第一次在本课程中讨论

759
01:00:31,680 --> 01:00:36,080
关于呃页脚代码的实际想法或

760
01:00:36,080 --> 01:00:41,599
代码我们将开始编写一个简单的注册屏幕所以使用这个

761
01:00:41,599 --> 01:00:46,319
注册屏幕 我们现在假设的用户要去

762
01:00:46,319 --> 01:00:50,637
看着屏幕说好吧我不

763
01:00:50,637 --> 01:00:54,080
有这个应用程序的帐户我要注册自己所以

764
01:00:54,080 --> 01:00:58,000
那么您将能够他们将能够进入

765
01:00:58,000 --> 01:01:03,520
他们的电子邮件地址他们选择的密码按下某种按钮

766
01:01:03,520 --> 01:01:08,000
然后我们将与 firebase 交谈并说这是一个新用户注册

767
01:01:08,000 --> 01:01:13,840
好吧，这就是下一章的全部内容，即第 12 章。所以抓住一个

768
01:01:13,840 --> 01:01:16,558
一杯咖啡 一杯茶 随心所欲

769
01:01:16,558 --> 01:01:20,878
那就振作起来，我们下一章见

770
01:01:20,878 --> 01:01:24,718
你好，欢迎来到这个过滤器课程的第 12 章

771
01:01:24,718 --> 01:01:28,080
在这一章中，我很兴奋我们将要谈论

772
01:01:28,080 --> 01:01:33,200
一个基本的注册屏幕，直到此时我们一直在真正配置

773
01:01:33,200 --> 01:01:36,718
我的意思是，如果我们按时间顺序进行，我们已经介绍了我们已经走了

774
01:01:36,718 --> 01:01:40,080
通过这么多章节来谈论飞镖及其基础知识，甚至更多

775
01:01:40,080 --> 01:01:44,477
高级主题，例如泛型

776
01:01:44,477 --> 01:01:49,439
然后一旦我们这样做了，我们

777
01:01:49,439 --> 01:01:53,680
基本上开始学习建立我们的

778
01:01:53,680 --> 01:01:56,957
之后还有 iphone 和 android 应用程序

779
01:01:56,957 --> 01:02:01,680
对不起 iphone 和 android 应用程序以及证书配置文件和

780
01:02:01,680 --> 01:02:06,398
让 scr cpy 工作，所以在此之前有很多关于这些的信息

781
01:02:06,398 --> 01:02:10,718
指出这么多小时的信息，你可以回去观看

782
01:02:10,718 --> 01:02:14,319
我强烈建议你真的这样做，因为我已经解释过了

783
01:02:14,319 --> 01:02:19,040
一切都如此广泛的细节，我觉得

784
01:02:19,040 --> 01:02:22,319
一次又一次地解释所有这些事情对双方来说都是浪费时间

785
01:02:22,319 --> 01:02:24,319
你和我和

786
01:02:24,319 --> 01:02:28,159
在本章中，我们将使用所有这些信息

787
01:02:28,159 --> 01:02:31,279
我们已经从前面的章节中学到并开始实际创建一个

788
01:02:31,279 --> 01:02:34,477
注册屏幕 在我们的浮动中的一个简单的注册屏幕

789
01:02:34,477 --> 01:02:39,599
与我们在

790
01:02:39,599 --> 01:02:44,159
如果我没记错的话，请看前一章

791
01:02:44,159 --> 01:02:47,840
尚未设置您的 Firebase 应用后端

792
01:02:47,840 --> 01:02:51,680
或者至少我的意思是我们还没有真正设置我们喜欢的任何东西

793
01:02:51,680 --> 01:02:55,599
好吧，是的，实际上已经设置好了，是的，我们可以说设置，但是我们还没有

794
01:02:55,599 --> 01:02:59,520
配置如此详细，就像我们已经设置好了一样

795
01:02:59,520 --> 01:03:03,599
如果你想的话，请看那一章

796
01:03:03,599 --> 01:03:07,759
在你继续本章之前

797
01:03:07,759 --> 01:03:10,718
我要在这里查看我的字幕，并确保我可以向您展示

798
01:03:10,718 --> 01:03:14,797
正确的标题现在我们需要在本章中做些什么

799
01:03:14,797 --> 01:03:18,718
是开始在我们的注册屏幕上工作，我要做的是

800
01:03:18,718 --> 01:03:22,797
为您显示标题，以便您知道我们将要做什么

801
01:03:22,797 --> 01:03:25,599
你需要做的第一件事就是带上你的

802
01:03:25,599 --> 01:03:29,840
Visual Studio 代码或您选择的编辑器

803
01:03:29,840 --> 01:03:33,119
在屏幕上，所以我要这样做，然后我要带上我的

804
01:03:33,119 --> 01:03:37,439
使用 scrcpy 镜像在屏幕上的 android 手机

805
01:03:37,439 --> 01:03:40,878
然后我看看我能不能把我的脸移到右边让你能看到一点

806
01:03:40,878 --> 01:03:46,957
更大的屏幕，我们现在需要做的就是去

807
01:03:46,957 --> 01:03:51,040
在这个主要的 dart 文件中，现在删除所有评论

808
01:03:51,040 --> 01:03:55,360
如果您来自设计背景或产品所有者，或者像这样

809
01:03:55,360 --> 01:03:58,240
在任何不是背景的地方

810
01:03:58,240 --> 01:04:01,520
如果您来自这些背景，那么您与软件开发相关

811
01:04:01,520 --> 01:04:06,240
可能不知道评论是什么，但是我现在告诉你评论是一块

812
01:04:06,240 --> 01:04:09,840
写入源文件中的文本信息片段，例如

813
01:04:09,840 --> 01:04:15,200
这个主要的 dart 文件不会转换为实际代码，所以它是

814
01:04:15,200 --> 01:04:19,119
通常为其他开发人员或任何人放置在那里的信息

815
01:04:19,119 --> 01:04:22,398
正在查看代码，以便他们更好地理解代码

816
01:04:22,398 --> 01:04:24,718
可以在 dart 中创建好的评论

817
01:04:24,718 --> 01:04:30,558
不同的方式，但我的意思是最常见的方式是

818
01:04:30,558 --> 01:04:33,040
如您所见，带有双斜杠

819
01:04:33,040 --> 01:04:35,919
这里和一个空格，然后是一些文字

820
01:04:35,919 --> 01:04:39,439
所以我现在需要你进入

821
01:04:39,439 --> 01:04:42,637
您的主要飞镖文件，我们将立即删除所有这些评论

822
01:04:42,637 --> 01:04:47,520
因为他们现在基本上给我们制造了很多噪音

823
01:04:47,520 --> 01:04:52,000
所以让我们继续删除所有那些灰线或它们的任何颜色

824
01:04:52,000 --> 01:04:54,398
显示在您的屏幕上，它们可能是绿色的

825
01:04:54,398 --> 01:04:57,200
取决于你的主题

826
01:04:57,200 --> 01:05:00,398
正如我之前提到的，我有东京骑士

827
01:05:00,398 --> 01:05:05,279
在 Visual Studio 代码中，因此注释显示为灰色

828
01:05:05,279 --> 01:05:09,439
会删除那里的所有评论好吧，就是这样

829
01:05:09,439 --> 01:05:15,119
所以，我也这么认为，我不知道是的，似乎也是

830
01:05:15,119 --> 01:05:19,119
嗯，是的，我想现在我们已经删除了所有

831
01:05:19,119 --> 01:05:23,040
评论所以如果我做命令 s 会很热

832
01:05:23,040 --> 01:05:25,599
重新加载，我实际上要谈谈

833
01:05:25,599 --> 01:05:29,599
什么是热重载，但如果你已经这样做了，那么你就可以走了

834
01:05:29,599 --> 01:05:32,957
会在我的笔记中记下，所以我们已经讨论过了

835
01:05:32,957 --> 01:05:38,080
现在要讨论的下一个主题是热重载与现在热重启

836
01:05:38,080 --> 01:05:41,680
这两个对你来说非常重要，我认为你应该喜欢

837
01:05:41,680 --> 01:05:45,040
在你继续课程的其余部分之前得到这个，我会做我的

838
01:05:45,040 --> 01:05:48,718
最好解释一下热重载和硬件启动是什么

839
01:05:48,718 --> 01:05:51,599
例如，如果您来自您所拥有的设计背景

840
01:05:51,599 --> 01:05:56,240
实例 figma 和你设计你的 um

841
01:05:56,240 --> 01:06:00,718
你正在把一些矢量放在屏幕上你正在拖动图像和

842
01:06:00,718 --> 01:06:04,159
我可以进入你的 figma 设计并在你做的时候观察你

843
01:06:04,159 --> 01:06:08,398
所以我实际上正在查看您的更改，您不必按任何

844
01:06:08,398 --> 01:06:12,878
即使您在草稿中，我仍然可以关注发布按钮

845
01:06:12,878 --> 01:06:18,080
你，看着你，因为你现在正在设计，未来非常非常

846
01:06:18,080 --> 01:06:21,919
然而，也可能在颤动中

847
01:06:21,919 --> 01:06:27,599
与 figma 做同样的事情的成本相当高，因为

848
01:06:27,599 --> 01:06:32,398
当我更改我的代码时，实际上我将无法看到我的更改

849
01:06:32,398 --> 01:06:37,840
除非我告诉颤振，好吧，我已经做了一些改变，在

850
01:06:37,840 --> 01:06:42,240
可以热重载的屏幕，例如，如果

851
01:06:42,240 --> 01:06:46,477
我进入这里，我说颤振演示主页并从

852
01:06:46,477 --> 01:06:49,919
在这里按命令 s 这将保存我的

853
01:06:49,919 --> 01:06:54,240
文件反过来会进行热重载

854
01:06:54,240 --> 01:06:58,080
所以 command s 你现在可以看到这个标题被改变了

855
01:06:58,080 --> 01:07:01,040
从这里开始设置它说我不是颤振演示

856
01:07:01,040 --> 01:07:05,919
将它改回命令的热重载，它会说主页

857
01:07:05,919 --> 01:07:10,957
现在你也可以避免例如做 command s 而只​​是进入这里

858
01:07:10,957 --> 01:07:15,360
你的 Visual Studio 代码或 android Studio，然后说热重载，这样我就可以了

859
01:07:15,360 --> 01:07:20,319
现在看看实际上并没有这样做，这很棒，因为我可以看到一点

860
01:07:20,319 --> 01:07:24,159
像 blob 在这里你看到这个文件上的圆圈这在 Visual Studio 代码中是

861
01:07:24,159 --> 01:07:28,159
尚未保存的文件的指示符

862
01:07:28,159 --> 01:07:32,080
所以如果我保存它并且它本身会进行热重载，所以我不必

863
01:07:32,080 --> 01:07:35,759
实际上手动按下热重载按钮所以保存然后你可以看到

864
01:07:35,759 --> 01:07:41,599
更改立即应用到那里，但是对您的代码的一些更改是

865
01:07:41,599 --> 01:07:47,919
将是如此之大，以至于鞋类无法解决从

866
01:07:47,919 --> 01:07:52,240
应用程序的先前状态到新状态，我们将来到那些

867
01:07:52,240 --> 01:07:56,477
更改现在很难解释，但只知道热重载

868
01:07:56,477 --> 01:08:00,797
通常在 99% 左右有效

869
01:08:00,797 --> 01:08:05,520
就像我在这里做统计一样，在大多数情况下，热重载的工作原理是

870
01:08:05,520 --> 01:08:10,878
可以向您展示您的最新更改，但有时您的更改可能非常剧烈

871
01:08:10,878 --> 01:08:14,477
和那么大

872
01:08:14,477 --> 01:08:17,520
计算从前一个状态到下一个状态的增量

873
01:08:17,520 --> 01:08:22,000
新状态可能是如此之大，以至于颤振无法做到这一点，那么您将

874
01:08:22,000 --> 01:08:25,599
必须做热重载然后热重载是

875
01:08:25,599 --> 01:08:30,080
在这里抱歉热重启你将不得不做一个热重启对不起

876
01:08:30,080 --> 01:08:35,200
所以他们之间有更多的差异，比如在内部关于状态

877
01:08:35,200 --> 01:08:38,558
比如你的应用程序的状态以及是否有一个

878
01:08:38,558 --> 01:08:42,080
保持你的状态，另一个失去你的状态，所以我不打算说话

879
01:08:42,080 --> 01:08:47,119
现在关于这个，因为我们甚至还没有谈论过颤振中的状态，所以我

880
01:08:47,119 --> 01:08:51,200
不要认为现在谈论这个有多大意义只要知道

881
01:08:51,200 --> 01:08:56,637
在大多数情况下，热重载会显示您的最新更改以及

882
01:08:56,637 --> 01:09:00,319
如果您只是执行命令并保存文件就足够了

883
01:09:00,319 --> 01:09:05,520
但是热重启它基本上有点像重建你的应用程序

884
01:09:05,520 --> 01:09:09,680
新州还好，所以我想我想对你说实话

885
01:09:09,680 --> 01:09:15,119
现在已经足够了，所以我们现在需要做的

886
01:09:15,119 --> 01:09:19,599
就是看一下

887
01:09:19,599 --> 01:09:23,680
重构默认为我们创建的代码

888
01:09:23,680 --> 01:09:27,360
正如你在这里看到的，嗯，我的意思是我们真的不知道这些是怎么回事

889
01:09:27,360 --> 01:09:32,637
现在一切正常，嗯，你甚至不知道

890
01:09:32,637 --> 01:09:37,599
标题我说运行应用程序和主页小部件内的材料应用程序

891
01:09:37,599 --> 01:09:41,360
这是什么意思，你不知道，没关系

892
01:09:41,360 --> 01:09:45,599
我现在不喜欢用太多细节来混淆我们，但你会

893
01:09:45,599 --> 01:09:50,477
现在需要知道的是，让我们进去，我要带上

894
01:09:50,477 --> 01:09:53,840
在此版本中记录我将在此处执行的操作

895
01:09:53,840 --> 01:09:58,637
我的应用程序的功能只是去输入打印

896
01:09:58,637 --> 01:10:01,520
建筑

897
01:10:01,520 --> 01:10:05,599
好的和 command s 然后你会看到

898
01:10:05,599 --> 01:10:10,319
打印到屏幕上，所以每次我按下命令时

899
01:10:10,319 --> 01:10:15,439
整个应用程序正在重新构建，并且有点像

900
01:10:15,439 --> 01:10:20,080
资源拥抱，因为

901
01:10:20,080 --> 01:10:23,439
如您所见，材料应用程序是整个

902
01:10:23,439 --> 01:10:28,240
有点像你的应用程序的整个框架的脚手架，包括上面的栏

903
01:10:28,240 --> 01:10:32,718
顶部包括这个白色视图，包括顶部的那个徽章

904
01:10:32,718 --> 01:10:36,080
对，就像你在建造

905
01:10:36,080 --> 01:10:39,360
每次保存此文件时都不需要构建的东西，因此它是

906
01:10:39,360 --> 01:10:44,477
有点像嗯性能的问题，你是否想这样做

907
01:10:44,477 --> 01:10:49,840
或者不是，但是在这个呃课程中，我只是我会给你一些建议

908
01:10:49,840 --> 01:10:54,159
如何使您的应用程序也运行得更快一点，所以我们要做到这一点

909
01:10:54,159 --> 01:10:57,680
需要做的只是告诉颤振，嘿，看起来我们不想构建

910
01:10:57,680 --> 01:11:02,878
每次整个应用程序或每次我们的应用程序结构

911
01:11:02,878 --> 01:11:06,319
按下命令 s 如何热重载所以

912
01:11:06,319 --> 01:11:10,240
你现在的挑战是如果我摆脱

913
01:11:10,240 --> 01:11:12,797
我们现在需要做的是你可以看到

914
01:11:12,797 --> 01:11:15,439
这里的主要功能是根

915
01:11:15,439 --> 01:11:18,558
Flutter 在实际运行您的应用程序时调用的函数，它说

916
01:11:18,558 --> 01:11:22,797
好的，我正在运行一个名为我的应用程序的应用程序，如果您查看我的应用程序唯一的事情

917
01:11:22,797 --> 01:11:26,718
它确实创建了一个材料应用程序，这就是它所做的一切

918
01:11:26,718 --> 01:11:31,439
你现在需要做的是抓住这个材料应用程序所以我只想说

919
01:11:31,439 --> 01:11:34,159
mac上的命令x

920
01:11:34,159 --> 01:11:37,599
或控制 x 我认为在 windows 和 linux 上

921
01:11:37,599 --> 01:11:41,439
抓住它，而不是这个 const 我的应用程序

922
01:11:41,439 --> 01:11:48,718
把它贴在那里好吧，然后像这样杀死你的我的应用程序繁荣

923
01:11:48,718 --> 01:11:52,637
好的，然后执行 command 并确保一切正常

924
01:11:52,637 --> 01:11:56,398
正常工作我只是要做一个热重启

925
01:11:56,398 --> 01:12:01,919
你可以看到一切都在正常工作，所以我们在这里所做的确实是

926
01:12:01,919 --> 01:12:05,040
实际上让我们看看我的主页是的，这很好

927
01:12:05,040 --> 01:12:07,520
嗯，是的

928
01:12:07,520 --> 01:12:12,319
我们现在拥有的只是 main 函数和一个叫做 my

929
01:12:12,319 --> 01:12:20,477
主页有状态的小部件，所以让你的代码也进入这个状态

930
01:12:20,477 --> 01:12:23,680
我会记下我已经谈过的笔记

931
01:12:23,680 --> 01:12:28,797
所以接下来我们需要讨论的是无状态与有状态

932
01:12:28,797 --> 01:12:31,919
现在状态

933
01:12:31,919 --> 01:12:35,360
我的意思是对我来说，我觉得我能够解释这个我需要先

934
01:12:35,360 --> 01:12:40,718
解释一下什么是状态

935
01:12:40,718 --> 01:12:44,637
五次好了，然后我就走了，我说哦，我想

936
01:12:44,637 --> 01:12:49,200
改变这个小标签的标题，我会说你

937
01:12:49,200 --> 01:12:53,759
你有而不是你有或

938
01:12:53,759 --> 01:12:58,477
是的，让我们将其转换为双引号，因为我们将单个代码放入

939
01:12:58,477 --> 01:13:01,599
我会说你按下了按钮

940
01:13:01,599 --> 01:13:05,119
这很多次，我会在 windows 中说 command s 或 control s

941
01:13:05,119 --> 01:13:11,119
linux to hot reload hot reload 是命令没问题

942
01:13:11,119 --> 01:13:16,240
你可以看到你已经多次按下按钮但它一直保持

943
01:13:16,240 --> 01:13:20,558
第五，所以如果它重建了这个应用程序或

944
01:13:20,558 --> 01:13:24,159
这个小部件或这个你可以看到的东西

945
01:13:24,159 --> 01:13:29,200
screen 它是如何保持良好状态的，那是因为

946
01:13:29,200 --> 01:13:33,919
正如我之前提到的，热重载有时能够保持你的状态和

947
01:13:33,919 --> 01:13:40,797
状态只是数据数据，通常由

948
01:13:40,797 --> 01:13:44,957
应用程序或用户或两者，在这种情况下，这是用户的状态

949
01:13:44,957 --> 01:13:49,040
正在控制，所以通过按下按钮，他或她现在正在增加这个数字

950
01:13:49,040 --> 01:13:54,718
10 可以，一个状态完整的小部件，它可以保留它

951
01:13:54,718 --> 01:13:56,957
信息如此

952
01:13:56,957 --> 01:14:00,718
你看它有一个叫做计数器的东西

953
01:14:00,718 --> 01:14:05,680
它是一个整数，它保持这个数字，所以

954
01:14:05,680 --> 01:14:11,599
在这个数字被改变后，它可以重新绘制自己，所以

955
01:14:11,599 --> 01:14:15,759
有状态的小部件通常在屏幕上

956
01:14:15,759 --> 01:14:20,319
你可以明显看到的东西，比如这个屏幕你的白屏

957
01:14:20,319 --> 01:14:22,878
可以看到这里有状态

958
01:14:22,878 --> 01:14:30,797
它可以包含关于谁在改变它可以重绘自己的数据

959
01:14:30,797 --> 01:14:35,040
本身所以我们有相同的小部件，你可以

960
01:14:35,040 --> 01:14:39,840
在我的主页上看到它是无状态小部件，它也可用

961
01:14:39,840 --> 01:14:42,398
你看让我们切换它

962
01:14:42,398 --> 01:14:49,919
它不一定能够重绘自身或包含任何可变的

963
01:14:49,919 --> 01:14:56,080
数据我的意思是对于那些更熟悉的人来说甚至是无状态的小部件

964
01:14:56,080 --> 01:15:01,759
有了颤振，你将拥有类似的价值，而不是通知者和建设者，所以甚至是无国籍的

965
01:15:01,759 --> 01:15:05,200
可以根据您要执行的操作重绘小部件

966
01:15:05,200 --> 01:15:11,200
但它们不能包含可变变量，所以这是一种

967
01:15:11,200 --> 01:15:14,317
就像有状态和

968
01:15:14,317 --> 01:15:19,360
无状态，因此您可以在这里看到这是一个不是只读的变量，否则

969
01:15:19,360 --> 01:15:23,279
这将是最终的所以如果我做这个最终你会看到它说哦你不能

970
01:15:23,279 --> 01:15:27,759
将此值重新分配给其他东西，所以只要知道如果您看到状态已满

971
01:15:27,759 --> 01:15:32,718
小部件，那么它是一个包含信息的小部件，可以

972
01:15:32,718 --> 01:15:35,840
随着用户与小部件交互或

973
01:15:35,840 --> 01:15:41,360
随着时间的流逝或小部件认为合适，但是无状态小部件是小部件

974
01:15:41,360 --> 01:15:44,797
谁谁拥有谁不包含任何可变的

975
01:15:44,797 --> 01:15:50,159
信息片段，不管理任何可变的信息片段

976
01:15:50,159 --> 01:15:54,159
内部还好这很多只是有很多

977
01:15:54,159 --> 01:15:57,919
谈话我知道你是否不舒服，如果你还没有完成

978
01:15:57,919 --> 01:16:01,520
在您之前进行软件开发可能不会这对您和我来说可能没有任何意义

979
01:16:01,520 --> 01:16:04,637
在我们继续的时候向你保证，当然你会更多地了解它，所以

980
01:16:04,637 --> 01:16:07,360
如果你没有得到这个，别担心

981
01:16:07,360 --> 01:16:10,240
开始时

982
01:16:10,240 --> 01:16:13,119
所以

983
01:16:13,119 --> 01:16:18,878
你现在可以看到让我们看看嗯让我们谈谈我要

984
01:16:18,878 --> 01:16:23,040
实际上勾选这个

985
01:16:23,040 --> 01:16:30,159
在我的笔记中

986
01:16:30,159 --> 01:16:35,119
好的，所以我可以在我的笔记中看到我有 um

987
01:16:35,119 --> 01:16:40,000
作为呃我要在这里解释的一部分，我是

988
01:16:40,000 --> 01:16:44,000
实际上我已经计划好了我可以看到我的笔记

989
01:16:44,000 --> 01:16:48,797
计划在以前的标题之一中，嗯，这里嗯

990
01:16:48,797 --> 01:16:52,398
作为这个标题的一部分，我实际上应该完全杀死这个我的

991
01:16:52,398 --> 01:16:57,200
主页呃小部件，我应该实际创建一个

992
01:16:57,200 --> 01:17:01,680
小部件刚刚调用了主页，所以让我们这样做让我们回到那个

993
01:17:01,680 --> 01:17:06,878
标题所以杀了我的主页，现在

994
01:17:06,878 --> 01:17:13,279
进入这里并将其更改为主页，所以我们现在需要做的是创建一个

995
01:17:13,279 --> 01:17:18,398
非常简单的主页好吧，所以我也要从这里删除这个标题

996
01:17:18,398 --> 01:17:22,398
你现在可以看到我们有一个错误告诉我们好吧我不知道主页是什么

997
01:17:22,398 --> 01:17:27,840
现在我们需要做的是创建一个呃实际上让我看看我是否打算

998
01:17:27,840 --> 01:17:31,520
创建一个无状态是的无状态小部件好的

999
01:17:31,520 --> 01:17:35,279
你需要在 Visual Studio 代码中知道的一个很好的捷径，我认为它可能

1000
01:17:35,279 --> 01:17:39,759
如果你想创建一个无状态的，也可以在 android studio 中使用

1001
01:17:39,759 --> 01:17:43,840
小部件只需输入 stl ，你可以看到它告诉你没关系

1002
01:17:43,840 --> 01:17:46,637
你想创建一个很棒的无状态小部件

1003
01:17:46,637 --> 01:17:51,759
好的，就在那里，然后你给它主页的名称好吧，所以现在你有一个

1004
01:17:51,759 --> 01:17:56,317
主页很棒，我要做一个命令，现在你可以看到这是

1005
01:17:56,317 --> 01:17:59,279
颤动的时候还好

1006
01:17:59,279 --> 01:18:02,240
我不明白你想做什么你改变了这个主要的一些东西

1007
01:18:02,240 --> 01:18:06,637
功能，我不能做热重载所以你必须做热重启所以现在

1008
01:18:06,637 --> 01:18:10,000
屏幕有点黑所以

1009
01:18:10,000 --> 01:18:14,398
现在我们有了我最初在课程中为本章计划的内容，所以

1010
01:18:14,398 --> 01:18:19,200
太好了，让我们现在进入下一点，嗯

1011
01:18:19,200 --> 01:18:23,040
所以你可以看到这里的屏幕是黑色的，那是因为这个容器

1012
01:18:23,040 --> 01:18:25,919
那里有一个小容器或屏幕上的东西你不能

1013
01:18:25,919 --> 01:18:29,919
真的看到因为它只是黑色所以你可以进去说有一个

1014
01:18:29,919 --> 01:18:34,000
颜色，你可以说颜色为红色，我只是命令

1015
01:18:34,000 --> 01:18:37,360
你现在可以看到屏幕是红色的，所以只要知道屏幕上有东西

1016
01:18:37,360 --> 01:18:41,040
屏幕，但你只是看不到它，因为它全是黑色的，所以

1017
01:18:41,040 --> 01:18:45,040
使您的应用程序达到实际上像样的地步的方法

1018
01:18:45,040 --> 01:18:49,520
对用户来说，你通常必须创建一个叫做脚手架的东西，现在脚手架

1019
01:18:49,520 --> 01:18:54,317
顾名思义，它有点像基本的建筑结构

1020
01:18:54,317 --> 01:18:58,797
一种应用程序，它可以呈现给普通用户的用户

1021
01:18:58,797 --> 01:19:00,957
所以即使你像一个

1022
01:19:00,957 --> 01:19:05,520
图形密集型应用程序这个黑色背景可能完全没问题

1023
01:19:05,520 --> 01:19:10,080
但在大多数应用程序中，当你运行它们时，你会得到

1024
01:19:10,080 --> 01:19:13,680
然后你会得到像顶部的一个栏，告诉你喜欢屏幕的名称

1025
01:19:13,680 --> 01:19:17,599
你的标题有点像网页的标题，你也会得到一些像

1026
01:19:17,599 --> 01:19:22,000
顶部的状态栏，您可以在这里看到状态栏有点像

1027
01:19:22,000 --> 01:19:27,040
黑色，顶部全是白色图标，它会给你一个像宽屏幕一样的地方

1028
01:19:27,040 --> 01:19:31,279
您可以与您的内容进行交互，所以我们没有，为了

1029
01:19:31,279 --> 01:19:34,558
创建你必须创建一个叫做脚手架的东西，所以

1030
01:19:34,558 --> 01:19:38,797
去你的容器这里说脚手架好吧

1031
01:19:38,797 --> 01:19:43,279
现在我要按 command s 你会看到这一切然后我们得到这个

1032
01:19:43,279 --> 01:19:47,680
这里是白屏，然后我们的状态栏上也有一点色彩，所以

1033
01:19:47,680 --> 01:19:50,797
它使它更美观一点

1034
01:19:50,797 --> 01:19:54,080
所以我们现在需要做的基本上是

1035
01:19:54,080 --> 01:19:59,599
看看我是否计划在这里添加一些我没有的栏标题，让我们

1036
01:19:59,599 --> 01:20:04,317
现在就这样做，所以对于我们的脚手架，我们还要添加一个 is 东西

1037
01:20:04,317 --> 01:20:09,279
调用了一个应用栏，所以去你的脚手架说应用栏

1038
01:20:09,279 --> 01:20:14,718
然后说我创建了一个新的应用栏类实例

1039
01:20:14,718 --> 01:20:20,000
在这里有一个名为 title 的属性，正如标题所说的文本

1040
01:20:20,000 --> 01:20:22,477
好的，对于文本，我要摆脱

1041
01:20:22,477 --> 01:20:25,439
所有这些文档 这里有过多的文档 哪种

1042
01:20:25,439 --> 01:20:30,080
of 块屏幕所以和文字只是说

1043
01:20:30,080 --> 01:20:33,599
例如注册并使其成为常量

1044
01:20:33,599 --> 01:20:39,200
所以在这里放一个逗号，在这里也放一个逗号

1045
01:20:39,200 --> 01:20:43,919
所以你在完成后看到你的屏幕有一个漂亮的蓝色条

1046
01:20:43,919 --> 01:20:47,919
这里有你的呃申请的标题或者你家的标题

1047
01:20:47,919 --> 01:20:51,439
页面，这里有一个白色的画布

1048
01:20:51,439 --> 01:20:56,477
您的其余内容要显示，所以现在这里有一些东西

1049
01:20:56,477 --> 01:20:59,840
我可以跳过，但我觉得他们解释起来很重要

1050
01:20:59,840 --> 01:21:04,477
我现在就要这样做，所以每次你有的时候都会颤抖

1051
01:21:04,477 --> 01:21:08,957
例如这里有一个文本你看到对不起有一个应用栏一个应用栏如果

1052
01:21:08,957 --> 01:21:13,119
你进入应用栏的源代码让我们再高一点你可以

1053
01:21:13,119 --> 01:21:18,637
看到它说我是一个有状态的小部件，所以应用栏本身就是一个小部件

1054
01:21:18,637 --> 01:21:22,240
所以我们在这里做的是说我们有一个叫做脚手架的东西让我们

1055
01:21:22,240 --> 01:21:26,797
去脚手架它本身是一个有状态的小部件，所以我们说的是主小部件

1056
01:21:26,797 --> 01:21:30,159
我们从我们的构建函数返回，你可以看到它应该返回一个小部件

1057
01:21:30,159 --> 01:21:34,398
是一个脚手架，它本身就是一个有状态的小部件，它有一个名为 app 的属性

1058
01:21:34,398 --> 01:21:38,718
bar 一个应用程序栏它本身是一个有状态的小部件，它又具有一个属性

1059
01:21:38,718 --> 01:21:43,279
如果您查看它说的文档，现在将标题称为标题

1060
01:21:43,279 --> 01:21:46,477
标题也是小部件所以

1061
01:21:46,477 --> 01:21:49,279
让我也让屏幕大一点

1062
01:21:49,279 --> 01:21:52,637
像这样，所以你看得更清楚，所以

1063
01:21:52,637 --> 01:21:56,240
现在标题是一个小部件，我们说哦，我们将使用文本

1064
01:21:56,240 --> 01:22:00,558
小部件如果您查看文本它是什么是无状态小部件它在内部意味着

1065
01:22:00,558 --> 01:22:05,680
它声明或它的状态可以改变并且它没有任何可变变量

1066
01:22:05,680 --> 01:22:09,840
好吧，哦，我不想改变，所以

1067
01:22:09,840 --> 01:22:13,759
如果你看到我们在颤动时在这里做什么，你只是在创建小部件

1068
01:22:13,759 --> 01:22:18,317
Flutter 中几乎所有东西都是有状态或无状态的小部件

1069
01:22:18,317 --> 01:22:22,159
并且您尝试尝试尽可能多地坚持使用无状态小部件

1070
01:22:22,159 --> 01:22:27,599
你可以，我们将更多地讨论有状态和无状态，所以

1071
01:22:27,599 --> 01:22:31,119
现在我们已经添加了脚手架并且我已经解释了一些关于这些

1072
01:22:31,119 --> 01:22:36,159
我们创建的小部件，我们已经完成了一个命令，就像这里一样

1073
01:22:36,159 --> 01:22:40,080
热重载应用程序或此小部件

1074
01:22:40,080 --> 01:22:46,317
呃我们接下来需要做的是创建一个登录按钮

1075
01:22:46,317 --> 01:22:49,520
所以让我们去创建某种登录

1076
01:22:49,520 --> 01:22:52,477
按钮，你可以在这里看到我已经写了

1077
01:22:52,477 --> 01:22:56,159
主页上的标题按钮在中心登录

1078
01:22:56,159 --> 01:23:01,200
或更准确地说，它实际上可以注册

1079
01:23:01,200 --> 01:23:05,439
所以我要改变我要说的注册按钮

1080
01:23:05,439 --> 01:23:09,439
和主页中间的按钮注册好

1081
01:23:09,439 --> 01:23:14,000
在此处向您显示标题，我将在此处更改我的笔记

1082
01:23:14,000 --> 01:23:18,878
很快就好了，所以现在你的任务是创建一个按钮

1083
01:23:18,878 --> 01:23:23,279
屏幕 你在脚手架上做得怎么样 你看到脚手架在

1084
01:23:23,279 --> 01:23:27,439
那一刻它是顶部那个酒吧的所有者，它是这个的所有者

1085
01:23:27,439 --> 01:23:31,439
这里的白色内容所以你需要做的是去看看一个属性

1086
01:23:31,439 --> 01:23:34,797
称为身体，身体是

1087
01:23:34,797 --> 01:23:39,599
如果我将鼠标移到它本身，它会说好的，给我一个你看到的小部件

1088
01:23:39,599 --> 01:23:44,477
当然我可以说我没有小部件 null 也是可以接受的，但在

1089
01:23:44,477 --> 01:23:50,240
在这种情况下，我们将创建一个名为 text button 的按钮，因此 text button 是一个

1090
01:23:50,240 --> 01:23:53,919
小部件如果您进入源代码，您会看到它是一个

1091
01:23:53,919 --> 01:23:59,279
文本按钮按钮样式按钮，这是一个状态完整的小部件，好吧

1092
01:23:59,279 --> 01:24:02,558
你基本上是说我正在创建一个按钮，我想允许

1093
01:24:02,558 --> 01:24:06,637
用户可以用它做一些事情，所以我们需要做你可以看到的

1094
01:24:06,637 --> 01:24:10,878
这里有一点错误说 unpressed 是

1095
01:24:10,878 --> 01:24:15,439
你没有提供给我的参数，所以我们需要告诉这个按钮

1096
01:24:15,439 --> 01:24:20,159
当这个按钮被按下时，它需要

1097
01:24:20,159 --> 01:24:24,080
做某事，这是它的文本按钮类的要求

1098
01:24:24,080 --> 01:24:28,398
告诉你我是个按钮你想让我做什么当我

1099
01:24:28,398 --> 01:24:33,040
如果您不向我提供 unpressed 参数，则按不按

1100
01:24:33,040 --> 01:24:37,040
难道我什至不是按钮吗？我可能只是一个标签，这就是这个错误

1101
01:24:37,040 --> 01:24:39,840
就是说，如果您要创建一个按钮，请确保您

1102
01:24:39,840 --> 01:24:43,439
处理用户按下时发生的事情

1103
01:24:43,439 --> 01:24:48,398
在这里只需输入 unpressed，我就去视觉工作室

1104
01:24:48,398 --> 01:24:54,240
为我完成此代码，您可以看到它说好的是一个空函数

1105
01:24:54,240 --> 01:24:57,680
具有空参数列表的函数，因此没有参数

1106
01:24:57,680 --> 01:25:01,119
然后代码本身是空的

1107
01:25:01,119 --> 01:25:06,240
好的，所以在创建该函数之后继续，然后你

1108
01:25:06,240 --> 01:25:09,840
看到还有一个你必须处理的说孩子

1109
01:25:09,840 --> 01:25:13,360
你看到文本按钮你会说你可能只是假设哦

1110
01:25:13,360 --> 01:25:17,840
文本按钮应该有某种字符串参数，说明什么是我的

1111
01:25:17,840 --> 01:25:19,680
文字如此

1112
01:25:19,680 --> 01:25:24,080
如果我们在这里写 child，flutter 的美妙之处在于它说

1113
01:25:24,080 --> 01:25:30,317
child 是一个小部件，因此文本按钮不会对内容做出任何假设

1114
01:25:30,317 --> 01:25:33,119
您要在该按钮上显示的内容

1115
01:25:33,119 --> 01:25:37,439
它做了什么它说我需要显示一些小部件它可能是一个

1116
01:25:37,439 --> 01:25:41,439
图片 它可以是一个图标 它可以是任何东西 它可以是一个事物列表

1117
01:25:41,439 --> 01:25:45,040
这不是一个好主意，但你仍然可以这样做

1118
01:25:45,040 --> 01:25:48,398
嗯去创建一个子小部件，现在

1119
01:25:48,398 --> 01:25:51,680
你已经了解了文本小部件，所以我只想说一个常量文本

1120
01:25:51,680 --> 01:25:55,680
小部件，在这里我们只会说注册好

1121
01:25:55,680 --> 01:25:58,957
now command s，你会突然看到你

1122
01:25:58,957 --> 01:26:03,119
那里有一个注册按钮，所以现在我想要另一个很酷的功能

1123
01:26:03,119 --> 01:26:05,919
在visual studio中向您展示，我认为它也可以在android stu中使用

1124
01:26:05,919 --> 01:26:11,279
你可以用其他小部件包装你的小部件，而不是 for

1125
01:26:11,279 --> 01:26:15,680
例如说我希望文本按钮位于中心然后你

1126
01:26:15,680 --> 01:26:20,878
去创建一个中心，如果你知道它也存在，你可以做

1127
01:26:20,878 --> 01:26:25,200
mac 上的 command dot 或 command dot 或 windows 和 linux 上的 control dot 和

1128
01:26:25,200 --> 01:26:29,439
要包装在其他小部件中的小部件上的 Visual Studio 代码

1129
01:26:29,439 --> 01:26:32,957
然后你会得到这个漂亮的菜单

1130
01:26:32,957 --> 01:26:36,637
你说你知道你可以用很多不同的东西把它包起来所以我就走了

1131
01:26:36,637 --> 01:26:42,000
用 center 发音 wrap 这样你就可以看到 center 是一个小部件，它有

1132
01:26:42,000 --> 01:26:47,840
所有中心所做的子属性是它试图居中

1133
01:26:47,840 --> 01:26:55,279
水平和垂直它是中心可用空间内的孩子

1134
01:26:55,279 --> 01:26:58,878
在这种情况下，小部件本身就是整个可用空间

1135
01:26:58,878 --> 01:27:04,398
如您所见，这是整个白色背景，因此中心可以访问

1136
01:27:04,398 --> 01:27:09,680
现在整个白色背景，因为 center 是我们的根小部件

1137
01:27:09,680 --> 01:27:14,637
身体，这是我们的脚手架目前唯一展示的东西

1138
01:27:14,637 --> 01:27:18,159
所以中心然后能够居中对齐这个

1139
01:27:18,159 --> 01:27:22,797
文本按钮，所以让我们命令 s，你可以看到注册按钮居中

1140
01:27:22,797 --> 01:27:27,279
在可用空间中水平和垂直

1141
01:27:27,279 --> 01:27:32,317
既然我已经谈过了，我要把它带到这里

1142
01:27:32,317 --> 01:27:37,759
我们在这里要做的非常非常重要所以

1143
01:27:37,759 --> 01:27:42,718
我们需要做的是我们现在需要处理文本时

1144
01:27:42,718 --> 01:27:47,119
按下按钮，我们将注册一个用户

1145
01:27:47,119 --> 01:27:49,520
firebase 现在好了

1146
01:27:49,520 --> 01:27:54,240
当我在前面的章节中谈到像 uh dart 时，我们谈到了这个，我们

1147
01:27:54,240 --> 01:27:57,279
谈到了同步和异步，我不会进入

1148
01:27:57,279 --> 01:28:01,279
关于现在注册的详细信息，对不起，我不打算

1149
01:28:01,279 --> 01:28:05,439
详细讨论一下，因为我们之前已经详细讨论过

1150
01:28:05,439 --> 01:28:09,360
如果你需要知道我认为同步和异步是

1151
01:28:09,360 --> 01:28:14,558
可能在嗯我会看一下我的笔记

1152
01:28:14,558 --> 01:28:19,520
它们在第七章中有解释，所以如果你还没有看过章节

1153
01:28:19,520 --> 01:28:22,957
第七我强烈建议你这样做，如果你不知道什么同步和

1154
01:28:22,957 --> 01:28:25,599
异步是嗯

1155
01:28:25,599 --> 01:28:28,878
我们现在需要做的是告诉firebase现在注册用户

1156
01:28:28,878 --> 01:28:33,040
向 firebase 注册用户是一项异步任务，因此不会

1157
01:28:33,040 --> 01:28:38,159
立即完成，所以我们现在需要做的是告诉颤振

1158
01:28:38,159 --> 01:28:42,957
按钮按下是一个异步任务，你需要做的只是把

1159
01:28:42,957 --> 01:28:48,159
那里的关键字 async 好的，所以

1160
01:28:48,159 --> 01:28:52,159
那就是我的

1161
01:28:52,159 --> 01:28:57,439
我谈过的笔记

1162
01:28:57,439 --> 01:29:01,439
现在我们需要做的是看看

1163
01:29:01,439 --> 01:29:08,080
我为你提供的这个链接 嗯，我要关闭这个 safari 窗口

1164
01:29:08,080 --> 01:29:13,599
让我看看我能不能在这个屏幕上给你看

1165
01:29:13,599 --> 01:29:16,080
嗯

1166
01:29:16,080 --> 01:29:22,317
其他登录方法很棒你可以看到我在这里显示

1167
01:29:22,317 --> 01:29:28,080
firebase 允许您启用各种登录方法

1168
01:29:28,080 --> 01:29:32,240
呃，为了你的用户，嗯

1169
01:29:32,240 --> 01:29:35,439
firebase 不仅限于喜欢 google

1170
01:29:35,439 --> 01:29:40,159
您可以看到的服务可以让您启用 facebook 签名

1171
01:29:40,159 --> 01:29:45,360
用户或苹果登录推特或电话号码登录等

1172
01:29:45,360 --> 01:29:50,477
有多种方法可供您在颤振中启用

1173
01:29:50,477 --> 01:29:54,718
应用程序，在这个应用程序中，我们将使用电子邮件和密码签名

1174
01:29:54,718 --> 01:29:57,680
里面有关于所有的文档

1175
01:29:57,680 --> 01:30:02,080
我提供给你的这个链接中的那些

1176
01:30:02,080 --> 01:30:05,360
老实说，我不会把所有的内容都讲一遍

1177
01:30:05,360 --> 01:30:09,279
因为信息太多而我们不感兴趣

1178
01:30:09,279 --> 01:30:13,119
所有这些，但我仍然相信如果你对 firebase 和

1179
01:30:13,119 --> 01:30:18,398
我们将在本课程中使用的 firebase 身份验证非常棒

1180
01:30:18,398 --> 01:30:24,637
如果你能看看我在这里为你提供的这个链接

1181
01:30:24,637 --> 01:30:28,159
所以我们现在需要做的

1182
01:30:28,159 --> 01:30:32,159
也是对的，我在这里写了我需要谈谈

1183
01:30:32,159 --> 01:30:37,279
当您启动应用程序并启动时，您会看到 firebase 的匿名用户

1184
01:30:37,279 --> 01:30:41,599
firebait if firebase 你基本上启动了整个过程

1185
01:30:41,599 --> 01:30:46,240
firebase 你说 firebase start firebase 就在这上面

1186
01:30:46,240 --> 01:30:50,957
客户端默认情况下会创建一个称为匿名用户的东西，所以如果

1187
01:30:50,957 --> 01:30:54,080
你用你的想法或应用程序与 firebase 交谈，并说出谁是

1188
01:30:54,080 --> 01:30:57,599
当前用户，即使您之前没有对 firebase 做过任何事情

1189
01:30:57,599 --> 01:31:00,797
你还没有配置它，或者实际上你必须配置它

1190
01:31:00,797 --> 01:31:05,520
我们已经完成了，但是如果您还没有调用任何 firebase 函数

1191
01:31:05,520 --> 01:31:09,360
在您的应用程序之前，您可以只说 firebase 谁是当前用户

1192
01:31:09,360 --> 01:31:13,439
并且firebase只会告诉你这是一个当前用户它是一个匿名用户所以

1193
01:31:13,439 --> 01:31:17,119
该用户几乎永远不会为空它永远不会为空或

1194
01:31:17,119 --> 01:31:21,759
nil 或任何你喜欢的名字，或者如果你是 python 开发者，你只是

1195
01:31:21,759 --> 01:31:25,520
称它为none，这样用户几乎永远不会是none

1196
01:31:25,520 --> 01:31:30,477
所以只要知道firebase有一个匿名用户的概念就可以了

1197
01:31:30,477 --> 01:31:33,840
我只是要把它记在我们已经讨论过的笔记中

1198
01:31:33,840 --> 01:31:37,360
所以下一步我们需要做什么

1199
01:31:37,360 --> 01:31:40,637
必须有点喜欢在这里加快速度，因为有这么多

1200
01:31:40,637 --> 01:31:43,759
谈谈我们现在需要做的就是

1201
01:31:43,759 --> 01:31:47,119
现在创建两个文本字段

1202
01:31:47,119 --> 01:31:52,240
电子邮件和另一个密码，然后我们将按下按钮

1203
01:31:52,240 --> 01:31:56,159
嗯，在这两个文本字段旁边，所以文本

1204
01:31:56,159 --> 01:32:00,477
字段 1 电子邮件文本字段 2 密码，然后将注册按钮作为

1205
01:32:00,477 --> 01:32:04,398
现在第三个组件，如果你有这样的组件，你想要

1206
01:32:04,398 --> 01:32:09,360
垂直堆叠一个在彼此的顶部，一个接一个，然后你

1207
01:32:09,360 --> 01:32:12,797
需要使用一个称为列的好

1208
01:32:12,797 --> 01:32:17,439
所以我要在这里做的是到这里去中心，有点像删除

1209
01:32:17,439 --> 01:32:20,797
我只想说 mac 中的命令点或 windows 上的控制点

1210
01:32:20,797 --> 01:32:25,279
linux，只是说删除这个小部件好吧我不想再居中了

1211
01:32:25,279 --> 01:32:30,159
命令的结果注册按钮在左上角，我要做的是我

1212
01:32:30,159 --> 01:32:34,718
如果您命令 s，将再次命令并说现在用列换行

1213
01:32:34,718 --> 01:32:38,878
你不会直接在屏幕上看到任何东西 没有任何变化

1214
01:32:38,878 --> 01:32:44,240
但是为您创建的是一个带有 children 属性的列小部件，它是

1215
01:32:44,240 --> 01:32:48,398
它可以显示的小部件列表，所以我们要做的第一件事就是

1216
01:32:48,398 --> 01:32:52,957
创建两个文本字段好吧，让我看看这里，然后做

1217
01:32:52,957 --> 01:32:57,119
当然是的，我只想说一个文本字段

1218
01:32:57,119 --> 01:33:02,240
和另一个文本字段一样

1219
01:33:02,240 --> 01:33:05,919
保存你会看到两个文本字段显示在那里所以我实际上可以进入那里

1220
01:33:05,919 --> 01:33:11,840
开始输入类似的东西，所以现在我们已经创建了两个文本

1221
01:33:11,840 --> 01:33:16,878
屏幕上有列的字段

1222
01:33:16,878 --> 01:33:20,637
我要在我的笔记中注明，这里有一张票，所以我们现在已经讨论过了

1223
01:33:20,637 --> 01:33:25,680
我们需要做的是抓取显示在这个

1224
01:33:25,680 --> 01:33:29,680
获取这些文本字段，当您按下注册按钮时将其传递给

1225
01:33:29,680 --> 01:33:33,200
firebase 好的，现在你明白我在告诉你，当你按下按钮时

1226
01:33:33,200 --> 01:33:37,520
需要抓取这些文本字段中的文本，但在这个函数中

1227
01:33:37,520 --> 01:33:42,477
onpress 你无权访问这些文本字段，好吧，所以你需要通过

1228
01:33:42,477 --> 01:33:47,840
来自该文本字段和该文本字段的信息到文本按钮和

1229
01:33:47,840 --> 01:33:53,119
做到这一点的方法是使用一种叫做文本控制器的东西

1230
01:33:53,119 --> 01:33:56,957
所以文本或文本编辑控制器

1231
01:33:56,957 --> 01:34:00,797
文本编辑控制器有点像您传递的代理对象

1232
01:34:00,797 --> 01:34:05,520
到您的文本字段和它一直将当前文本写入的文本字段

1233
01:34:05,520 --> 01:34:10,080
那个文本编辑控制器和你的文本按钮，然后你可以说

1234
01:34:10,080 --> 01:34:14,957
控制器文本可以，这样你就可以了，就像你的文本字段是

1235
01:34:14,957 --> 01:34:18,159
坐在这里，你的文本按钮就坐在这里，那么你会有一些东西

1236
01:34:18,159 --> 01:34:22,797
中间是您的代理文本编辑控制器

1237
01:34:22,797 --> 01:34:27,360
从文本字段中获取最新信息，然后是您的文本

1238
01:34:27,360 --> 01:34:30,637
按钮可以读取该信息，所以只要知道文本编辑控制器

1239
01:34:30,637 --> 01:34:35,360
有点像代理，现在我们需要管理我们的一些状态

1240
01:34:35,360 --> 01:34:39,279
需要管理这个代理对象然后我们需要将我们的主页转换为

1241
01:34:39,279 --> 01:34:44,080
有状态的小部件好的，所以进入你的主页命令点并说

1242
01:34:44,080 --> 01:34:47,759
转换为有状态的小部件，所以突然有状态的小部件好了

1243
01:34:47,759 --> 01:34:53,200
所以现在我们需要做的就是去

1244
01:34:53,200 --> 01:34:57,119
创建这两个文本编辑控制器，所以我要进入这里

1245
01:34:57,119 --> 01:35:01,119
在这里转到您的主页状态并说

1246
01:35:01,119 --> 01:35:05,040
迟到的最后，我们叫他们什么？我有吗？

1247
01:35:05,040 --> 01:35:09,599
具体的愿望在这里让我看看我的笔记

1248
01:35:09,599 --> 01:35:12,477
不，所以没有真正的欲望

1249
01:35:12,477 --> 01:35:16,957
命名所以让我们说迟到的最终文本

1250
01:35:16,957 --> 01:35:21,279
控制器，我们在这里称它为电子邮件好吧

1251
01:35:21,279 --> 01:35:25,119
另一个我只想说密码

1252
01:35:25,119 --> 01:35:29,119
现在在前面的章节中我们还没有谈到迟到，这是什么迟到

1253
01:35:29,119 --> 01:35:34,317
黑暗中的关键字告诉你的程序虽然这个打印虽然这个

1254
01:35:34,317 --> 01:35:39,680
变量现在没有价值，但我保证之前给它赋值

1255
01:35:39,680 --> 01:35:44,000
它被使用所以它有点像它是一个合同所以

1256
01:35:44,000 --> 01:35:48,159
迟到的字面意思是我现在还没有准备好我以后会做我没有

1257
01:35:48,159 --> 01:35:53,119
准备好为此赋值，所以我们现在需要做的是

1258
01:35:53,119 --> 01:35:56,957
嗯是现在创造这些价值

1259
01:35:56,957 --> 01:36:00,477
您还需要了解一些关于有状态小部件的知识，因为我们的主页

1260
01:36:00,477 --> 01:36:04,000
state 是一个有状态的小部件，它将有两个惊人的

1261
01:36:04,000 --> 01:36:09,040
惊人的两个伟大的功能一个叫做初始化状态我

1262
01:36:09,040 --> 01:36:13,759
相信和另一个被称为现在已处置的 init state 是一个函数

1263
01:36:13,759 --> 01:36:17,759
当它创建你的家时，它会被颤动自动调用

1264
01:36:17,759 --> 01:36:23,040
页面，所以它说好的，现在您可以创建所有变量或

1265
01:36:23,040 --> 01:36:25,520
你的后期变量一次

1266
01:36:25,520 --> 01:36:29,919
现在每当这个主页死掉并超出内存或者它试图

1267
01:36:29,919 --> 01:36:33,840
取出内存它还会得到一个名为 dispose 的函数

1268
01:36:33,840 --> 01:36:36,957
所以你说过我在合同中

1269
01:36:36,957 --> 01:36:39,759
写的是我将为这些电子邮件提供一个价值电子邮件和

1270
01:36:39,759 --> 01:36:43,520
密码文本编辑控制器，最好的方法是进入

1271
01:36:43,520 --> 01:36:47,119
这个初始化状态函数在这里

1272
01:36:47,119 --> 01:36:50,878
并将它们分配给适当的值，所以我

1273
01:36:50,878 --> 01:36:56,240
只会说电子邮件是文本编辑控制器，例如

1274
01:36:56,240 --> 01:36:58,878
没关系

1275
01:36:58,878 --> 01:37:02,718
我将对密码字段做同样的事情

1276
01:37:02,718 --> 01:37:07,599
现在您还需要了解，在您创建了这两个之后，您还

1277
01:37:07,599 --> 01:37:13,279
需要把它们处理掉，所以进去覆盖你的处理

1278
01:37:13,279 --> 01:37:19,919
功能，然后说电子邮件处置和密码

1279
01:37:19,919 --> 01:37:24,159
所以很多开发人员忘记了这样做，尤其是像新手一样，所以不要做

1280
01:37:24,159 --> 01:37:28,637
那个错误，所以你创建了文本编辑控制器，你也在

1281
01:37:28,637 --> 01:37:35,360
负责处理它们现在好了

1282
01:37:35,360 --> 01:37:40,317
好的，所以在您创建文本编辑之后我们已经完成了

1283
01:37:40,317 --> 01:37:43,520
您需要转到文本字段并分配的控制器

1284
01:37:43,520 --> 01:37:46,957
那些控制器到你的文本字段，所以在这里有一个参数叫做

1285
01:37:46,957 --> 01:37:52,000
控制器，然后在第二个说电子邮件和您的文本字段

1286
01:37:52,000 --> 01:37:55,599
一个是你的密码说控制器

1287
01:37:55,599 --> 01:38:00,558
它是密码，所以现在发生的事情是你迷上了这个坐的代理对象

1288
01:38:00,558 --> 01:38:03,759
这是您的电子邮件或密码

1289
01:38:03,759 --> 01:38:07,040
文本编辑控制器到您坐在这里的文本字段

1290
01:38:07,040 --> 01:38:10,477
仍然没有将它连接到您坐在这里的文本按钮，所以这个

1291
01:38:10,477 --> 01:38:14,477
链接有点损坏，我们会尽快修复

1292
01:38:14,477 --> 01:38:19,040
好的，把它记在我们讨论过的笔记里

1293
01:38:19,040 --> 01:38:22,718
所以我们现在需要做的是如果我按下命令 s 你会看到没有

1294
01:38:22,718 --> 01:38:26,080
屏幕上可见的变化，但是有一点问题

1295
01:38:26,080 --> 01:38:29,520
如您所见，我们的文本字段没有任何提示，他们没有告诉

1296
01:38:29,520 --> 01:38:34,240
用户他们期望用户实际输入的内容

1297
01:38:34,240 --> 01:38:37,759
我们现在需要做的是在这些文本字段中添加一些东西，称为

1298
01:38:37,759 --> 01:38:40,558
提示 提示是一条信息

1299
01:38:40,558 --> 01:38:45,279
提供给用户，通常有点像非常微妙

1300
01:38:45,279 --> 01:38:49,520
告诉用户此文本字段期望的信息的颜色

1301
01:38:49,520 --> 01:38:52,797
他们进入，该提示将自动

1302
01:38:52,797 --> 01:38:58,317
用户在该文本字段中输入至少一个字符后立即删除

1303
01:38:58,317 --> 01:39:01,919
好的，让我们转到第一个文本字段并说

1304
01:39:01,919 --> 01:39:06,000
装饰，我相信这是一个输入装饰

1305
01:39:06,000 --> 01:39:11,279
然后说输入装饰好，提示有很多

1306
01:39:11,279 --> 01:39:13,840
屏幕上的信息我们什么都看不到

1307
01:39:13,840 --> 01:39:19,680
并且有一个提示文本，您可以看到提示文本，它需要一个字符串，所以

1308
01:39:19,680 --> 01:39:26,159
在这里说请输入或只是说在此处输入您的电子邮件

1309
01:39:26,159 --> 01:39:29,279
你可以看到它暗示这是一个常数，所以我要把它变成一个

1310
01:39:29,279 --> 01:39:32,558
常数和一点逗号作为

1311
01:39:32,558 --> 01:39:35,680
好吧，您现在可以看到它说在此处输入您的电子邮件

1312
01:39:35,680 --> 01:39:40,477
并复制并粘贴此装饰并将其放在下一个文本字段中

1313
01:39:40,477 --> 01:39:46,159
所以说在这里输入你的密码

1314
01:39:46,159 --> 01:39:50,080
所以让我们在这里输入您的电子邮件在这里输入您的密码

1315
01:39:50,080 --> 01:39:52,477
所以嗯

1316
01:39:52,477 --> 01:39:56,637
让我也确保那里是正确的，然后把它放在盒子里

1317
01:39:56,637 --> 01:39:59,360
嗯，如果你开始在这些字段中输入

1318
01:39:59,360 --> 01:40:02,398
您可以看到，一旦您键入内容，提示就会消失，如果您

1319
01:40:02,398 --> 01:40:06,240
删除该字符，然后提示也会消失，同样的事情

1320
01:40:06,240 --> 01:40:11,919
密码好的，所以我们现在有了

1321
01:40:11,919 --> 01:40:16,317
像这里完成的基础工作一样的基础工作，我们需要得到

1322
01:40:16,317 --> 01:40:20,477
通过身份验证，因此当您在此处按下此文本按钮时，我们

1323
01:40:20,477 --> 01:40:24,797
需要进行身份验证，这意味着我们现在要注册

1324
01:40:24,797 --> 01:40:27,840
所以你需要做的是你需要导入

1325
01:40:27,840 --> 01:40:32,637
firebase 所以 firebase 是我们的依赖，你可以使用 import 语句

1326
01:40:32,637 --> 01:40:36,398
实际上抓取它为firebase创建的内容并将其带入

1327
01:40:36,398 --> 01:40:40,477
你的源代码没问题所以你可以在这里看到我们要带来

1328
01:40:40,477 --> 01:40:46,797
将 uh firebase off 和 firebase off 部分打包好

1329
01:40:46,797 --> 01:40:50,159
now command s 你在屏幕上看不到任何区别，因为

1330
01:40:50,159 --> 01:40:55,040
import 语句并没有真正改变你的应用程序的状态

1331
01:40:55,040 --> 01:40:58,957
并在导入后

1332
01:40:58,957 --> 01:41:01,599
我们需要我也要把它带到这里

1333
01:41:01,599 --> 01:41:05,439
我们已经谈过了，所以我们现在需要做的是

1334
01:41:05,439 --> 01:41:09,919
按下此按钮，我们将在其中获取您的

1335
01:41:09,919 --> 01:41:14,797
这些文本字段中的用户名和密码，所以让我们说最终

1336
01:41:14,797 --> 01:41:19,919
用户名或抱歉电子邮件，我会说电子邮件字段文本

1337
01:41:19,919 --> 01:41:24,718
我要说最终密码是密码

1338
01:41:24,718 --> 01:41:28,080
文本我们要去我们的电子邮件和密码

1339
01:41:28,080 --> 01:41:32,477
控制器并抓取他们的文本，这是用户最新的文本

1340
01:41:32,477 --> 01:41:35,599
在这些字段中输入好的，所以

1341
01:41:35,599 --> 01:41:39,520
在我们完成之后，现在你可以去说 firebase

1342
01:41:39,520 --> 01:41:44,398
授权实例

1343
01:41:44,398 --> 01:41:48,957
然后你会说用电子邮件和密码创建用户你可以看到这是一个

1344
01:41:48,957 --> 01:41:52,080
允许您注册或创建一个

1345
01:41:52,080 --> 01:41:56,317
用户作为它的名字表明你有firebase所以

1346
01:41:56,317 --> 01:42:01,759
嗯，我会这样做，所以你也可以在这里看到，这东西返回了一个未来

1347
01:42:01,759 --> 01:42:05,439
好吧，嗯

1348
01:42:05,439 --> 01:42:10,878
所以这不是什么，你可以打电话说嘿，这样做

1349
01:42:10,878 --> 01:42:12,797
现在嗯

1350
01:42:12,797 --> 01:42:17,439
没有真正等待它，否则它只会说我在这里

1351
01:42:17,439 --> 01:42:21,279
未来我是我将来会计算的东西

1352
01:42:21,279 --> 01:42:25,919
在那个电话之前不放权，你只会得到未来的实例

1353
01:42:25,919 --> 01:42:30,159
你实际上不会得到它正在做的工作你会像一个包装器一样

1354
01:42:30,159 --> 01:42:33,520
在工作周围说这是我要做的工作，但如果你

1355
01:42:33,520 --> 01:42:37,520
有重量它实际上会执行工作

1356
01:42:37,520 --> 01:42:40,878
如果这有任何意义，那么我已经解释了那一章的重量

1357
01:42:40,878 --> 01:42:44,878
想想第七章，或者当我们谈论更高级时的任何内容

1358
01:42:44,878 --> 01:42:48,797
飞镖中的主题，所以请也看看那一章

1359
01:42:48,797 --> 01:42:53,599
嗯做完之后你会看到这个的回归其实就是未来的

1360
01:42:53,599 --> 01:42:58,080
用户凭证所以我要做的是我要说最终用户

1361
01:42:58,080 --> 01:43:02,637
凭证是这个，然后我要打印它用户

1362
01:43:02,637 --> 01:43:06,558
凭证没问题，所以命令

1363
01:43:06,558 --> 01:43:11,279
只是在这里热重启以防万一因为我们没有导入所以我是什么

1364
01:43:11,279 --> 01:43:16,957
要做在这里输入电子邮件我要说pixelityab.gmail.com

1365
01:43:16,957 --> 01:43:20,558
对于密码，我只想说 fubar

1366
01:43:20,558 --> 01:43:26,240
低音好吧，让我们把控制台调高，这样我们就可以了

1367
01:43:26,240 --> 01:43:29,439
查看我们的应用程序在屏幕上打印的内容

1368
01:43:29,439 --> 01:43:33,520
我只想说注册我们会得到一个正确的错误

1369
01:43:33,520 --> 01:43:39,520
现在是这样，你可以在这里看到它说没有火力基地

1370
01:43:39,520 --> 01:43:44,957
应用默认已创建称为 firebase 初始化应用

1371
01:43:44,957 --> 01:43:47,680
所以我的意思是这真的很好

1372
01:43:47,680 --> 01:43:52,398
我们得到这个是因为我实际上已经计划让我们解决这个问题

1373
01:43:52,398 --> 01:43:59,119
嗯，但在我们继续之前，嗯，我应该解释一下这是什么

1374
01:43:59,119 --> 01:44:02,878
这就是为什么会发生这种情况的原因，如果您看到那里有火力基地

1375
01:44:02,878 --> 01:44:06,080
记得当我们配置它时，这里为我们创建了一个名为

1376
01:44:06,080 --> 01:44:09,759
firebase 选项，里面有很多代码，然后

1377
01:44:09,759 --> 01:44:15,360
这里有一个配置，你在这里看到 android 和 ios 为

1378
01:44:15,360 --> 01:44:18,797
那么现在firebase抱怨的是你已经创建了这个

1379
01:44:18,797 --> 01:44:22,317
配置，但你从来没有真正告诉过我，所以

1380
01:44:22,317 --> 01:44:26,558
糟糕的firebase，所以在我们实际进行配置之前我们现在需要做什么

1381
01:44:26,558 --> 01:44:29,040
是修复一些你可以立即看到的东西

1382
01:44:29,040 --> 01:44:31,840
在不正确的屏幕上

1383
01:44:31,840 --> 01:44:36,477
你看到 foo bar bas 是你的密码，它不应该对用户可见，所以当

1384
01:44:36,477 --> 01:44:41,040
你正在输入它应该是一个密码字段，同时这个字段

1385
01:44:41,040 --> 01:44:45,279
在这里你看到的是一个电子邮件字段，但在哪里添加符号不是

1386
01:44:45,279 --> 01:44:49,840
在此处立即可见，因此您需要告诉这些文本字段进行配置

1387
01:44:49,840 --> 01:44:54,558
以特定方式使它们实际上适用于电子邮件和密码

1388
01:44:54,558 --> 01:44:58,240
注册字段，所以我要摆脱这个栏

1389
01:44:58,240 --> 01:45:02,558
右边哦对不起左边，我们需要做的就是提出

1390
01:45:02,558 --> 01:45:06,080
下一个主题的下一件事的标题

1391
01:45:06,080 --> 01:45:09,599
谈论谈论首先我们要做的是做

1392
01:45:09,599 --> 01:45:12,637
此密码文本字段

1393
01:45:12,637 --> 01:45:14,797
如此安全

1394
01:45:14,797 --> 01:45:18,718
你需要在你的密码字段的装饰中做什么进入

1395
01:45:18,718 --> 01:45:23,840
在这里说晦涩难懂，实际上它不在此处的装饰品中

1396
01:45:23,840 --> 01:45:28,317
晦涩的文字它是真实的，如果你按 s

1397
01:45:28,317 --> 01:45:33,279
你会看到你的文字现在很模糊，你还需要做一个

1398
01:45:33,279 --> 01:45:37,680
启用建议 false 然后你也会这样做

1399
01:45:37,680 --> 01:45:41,119
自动更正 false 这是三个重要的

1400
01:45:41,119 --> 01:45:44,558
现在您可以在此处提供的属性启用

1401
01:45:44,558 --> 01:45:48,797
建议通常就像您在文本字段中输入时一样，具体取决于您的

1402
01:45:48,797 --> 01:45:52,080
操作系统，它将为您提供建议，例如

1403
01:45:52,080 --> 01:45:54,957
这在你不想做的密码字段中

1404
01:45:54,957 --> 01:45:58,000
你不想有任何建议，所以这是启用的

1405
01:45:58,000 --> 01:46:02,878
建议也自动更正是当您尝试输入某些内容并且您认识您时

1406
01:46:02,878 --> 01:46:05,599
所有人都可能知道什么是自动更正，所以我不打算解释它，所以你

1407
01:46:05,599 --> 01:46:08,797
根据您的密码密码字段禁用自动更正

1408
01:46:08,797 --> 01:46:14,159
感觉所以嗯现在让我们带上这两个属性

1409
01:46:14,159 --> 01:46:18,317
也到我们这里的电子邮件字段

1410
01:46:18,317 --> 01:46:21,680
好的，我们也要做的是

1411
01:46:21,680 --> 01:46:27,520
告诉它这是一封电子邮件，它需要一个电子邮件键盘，所以让我们进入这里

1412
01:46:27,520 --> 01:46:32,558
说输入或键盘我认为类型，它被称为

1413
01:46:32,558 --> 01:46:36,159
我认为的文本输入类型

1414
01:46:36,159 --> 01:46:41,119
然后点电子邮件有电子邮件地址所以

1415
01:46:41,119 --> 01:46:45,520
现在保存如果我再去这里你可以看到

1416
01:46:45,520 --> 01:46:51,759
有一个广告标志，所以我可以，哦，对不起，你看不到它，所以我会做

1417
01:46:51,759 --> 01:46:55,520
这样你就可以真正看到那个标志，这样你就可以在这里看到他们的键盘

1418
01:46:55,520 --> 01:46:59,919
然后那里有一个广告牌

1419
01:46:59,919 --> 01:47:03,520
所以就是这样，然后建议是

1420
01:47:03,520 --> 01:47:09,279
也被禁用，所以当我输入时，我的 um 文本没有任何建议

1421
01:47:09,279 --> 01:47:12,159
因为你不想要关于电子邮件字段的建议电子邮件通常就像

1422
01:47:12,159 --> 01:47:16,637
疯狂的短信，嗯，通常不是这样，但有时是你

1423
01:47:16,637 --> 01:47:21,279
不想要任何建议，好吧，我们已经做了，我想把所有的

1424
01:47:21,279 --> 01:47:28,240
这些项目在我的笔记中完成了接下来我们需要做的事情

1425
01:47:28,240 --> 01:47:34,080
是要修复我们的firebase应用程序的初始化吗？

1426
01:47:34,080 --> 01:47:38,159
我们现在要天真地做，所以我要走了

1427
01:47:38,159 --> 01:47:42,398
因为你看到我们仍然有这个错误所以如果我提出这个

1428
01:47:42,398 --> 01:47:45,520
清除错误然后说

1429
01:47:45,520 --> 01:47:52,957
pixelity a b gmail.com 我说 ubar baz

1430
01:47:52,957 --> 01:47:58,000
我说注册我们仍然会收到这个错误，如果没有 Firebase 应用程序是

1431
01:47:58,000 --> 01:48:02,718
配置好，所以我们需要做的是实际

1432
01:48:02,718 --> 01:48:06,159
在我们做之前注册抱歉初始化firebase

1433
01:48:06,159 --> 01:48:10,878
firebase 实例使用电子邮件和密码创建用户

1434
01:48:10,878 --> 01:48:15,119
所以我们需要做的就是去这里

1435
01:48:15,119 --> 01:48:20,558
并说firebase初始化firebase

1436
01:48:20,558 --> 01:48:22,878
应用程序

1437
01:48:22,878 --> 01:48:26,159
看看我们有什么

1438
01:48:26,159 --> 01:48:32,477
firebase auth 实例或初始化应用程序

1439
01:48:32,477 --> 01:48:36,000
我实际上已经忘记了它的语法所以

1440
01:48:36,000 --> 01:48:41,279
让我们看看我们是否真的可以通过访问我们的

1441
01:48:41,279 --> 01:48:44,637
嗯 Firebase 选项

1442
01:48:44,637 --> 01:48:48,080
初始化你可以看到它应该像这样完成

1443
01:48:48,080 --> 01:48:52,398
然后我们需要做的是导入firebase选项，就像它显示的那样

1444
01:48:52,398 --> 01:48:57,439
这里 firebase 选项，然后等待 firebase.initialize app 就可以了

1445
01:48:57,439 --> 01:49:01,840
因此，让我们获取该代码，然后进入我们的主保护文件并

1446
01:49:01,840 --> 01:49:08,317
导入 firebase 选项，所以我要去这里说导入

1447
01:49:08,317 --> 01:49:13,279
firebase 选项，就在我们之前

1448
01:49:13,279 --> 01:49:16,398
做

1449
01:49:16,398 --> 01:49:19,439
在这里注册我会做

1450
01:49:19,439 --> 01:49:23,200
那里为我们提供的这段代码，所以我要删除评论

1451
01:49:23,200 --> 01:49:28,080
command s，我仍然可以看到 firebase 没有被导入，所以我们要走了

1452
01:49:28,080 --> 01:49:32,240
通过在此处导入库包 firebase core firebase core 来导入它

1453
01:49:32,240 --> 01:49:35,119
我在这里所做的是我基本上利用了内置的东西

1454
01:49:35,119 --> 01:49:39,439
视觉工作室代码，以便我自动获取导入语句

1455
01:49:39,439 --> 01:49:42,558
所以我要对它做命令点，它说好的

1456
01:49:42,558 --> 01:49:46,797
导入这个 dart 文件，这样我就可以利用它了，为什么不呢

1457
01:49:46,797 --> 01:49:51,840
可以看到这里导入了firebase core

1458
01:49:51,840 --> 01:49:54,878
所以现在我们已经完成了，嗯，我要

1459
01:49:54,878 --> 01:50:02,240
按命令 s 我的状态保存在我手机里的 uh 中，让我带上

1460
01:50:02,240 --> 01:50:07,439
这里的日志清理它们然后我要按下注册按钮

1461
01:50:07,439 --> 01:50:11,759
繁荣呃在这里，我们在这里遇到了一个错误，它

1462
01:50:11,759 --> 01:50:15,759
说设备解锁初始化所有firebase api和firebase准备

1463
01:50:15,759 --> 01:50:21,439
创建等等，让我们实际看看错误是什么

1464
01:50:21,439 --> 01:50:25,840
它正在处理异常请求失败

1465
01:50:25,840 --> 01:50:29,279
和无法访问的主机，这可能是

1466
01:50:29,279 --> 01:50:33,599
因为我实际上没有正确的互联网连接

1467
01:50:33,599 --> 01:50:35,439
电话在这里

1468
01:50:35,439 --> 01:50:39,119
所以我要去这里，我要去设置

1469
01:50:39,119 --> 01:50:43,439
你看到这些错误真的很棒，因为这些事情确实发生了

1470
01:50:43,439 --> 01:50:47,200
我要打开 wi-fi 所以确保它可以连接到

1471
01:50:47,200 --> 01:50:50,159
这里有一个有效的无线网络

1472
01:50:50,159 --> 01:50:53,599
它已连接，我将返回应用程序

1473
01:50:53,599 --> 01:50:58,718
清除日志哦，我的上帝，那里显示了很多东西

1474
01:50:58,718 --> 01:51:01,599
那么我要做的就是重复我要说的话

1475
01:51:01,599 --> 01:51:04,240
现在注册

1476
01:51:04,240 --> 01:51:10,398
现在我们到了我准备好的下一个状态

1477
01:51:10,398 --> 01:51:15,279
说你可以在错误中看到它说现在找不到配置

1478
01:51:15,279 --> 01:51:20,797
这里发生了什么我没有记下我们讨论过的其他内容

1479
01:51:20,797 --> 01:51:24,637
这里发生的部分代码是

1480
01:51:24,637 --> 01:51:30,000
我们实际上并没有告诉 firebase 我们将利用

1481
01:51:30,000 --> 01:51:34,317
电子邮件和密码签名组合，正如我之前告诉你的那样，有各种

1482
01:51:34,317 --> 01:51:40,718
firebase 允许我们注册用户的各种方式

1483
01:51:40,718 --> 01:51:45,599
登录嗯你可以做电子邮件和密码组合你可以做facebook你可以

1484
01:51:45,599 --> 01:51:48,957
谷歌也许推特也是如此，是的，我想

1485
01:51:48,957 --> 01:51:53,680
推特也在那里，所以你需要告诉 firebase 嗯

1486
01:51:53,680 --> 01:52:00,080
我们基本上希望允许这种组合好吧

1487
01:52:00,080 --> 01:52:03,520
所以现在我已经解释了让我们提出来

1488
01:52:03,520 --> 01:52:09,680
safari 或者你最喜欢的浏览器可能是 chrome，让我们去 uh 控制台

1489
01:52:09,680 --> 01:52:13,680
firebase google.com 我要把我的浏览器带到屏幕上，这样你也可以

1490
01:52:13,680 --> 01:52:17,759
看到它，我要去然后找到我们的

1491
01:52:17,759 --> 01:52:22,797
被称为 uh my notes flutter project 的应用程序好吧，那就去吧

1492
01:52:22,797 --> 01:52:25,520
到 consolefirebase.google.com 并找到你的

1493
01:52:25,520 --> 01:52:29,520
您在上一章中创建的项目单击它

1494
01:52:29,520 --> 01:52:33,279
然后像我在这里向您展示的那样进行身份验证

1495
01:52:33,279 --> 01:52:36,878
让我们看看

1496
01:52:36,878 --> 01:52:41,919
身份验证真正开始

1497
01:52:41,919 --> 01:52:45,759
并登录我们需要的是这封电子邮件和

1498
01:52:45,759 --> 01:52:49,759
密码组合所以去电子邮件和密码组合并允许它

1499
01:52:49,759 --> 01:52:53,919
好的，然后按保存

1500
01:52:53,919 --> 01:52:56,957
这就是你所要做的，所以我要

1501
01:52:56,957 --> 01:52:59,759
抓住这个屏幕只是把它带到另一个

1502
01:52:59,759 --> 01:53:05,200
监视器所以你看不到它清理日志然后说注册

1503
01:53:05,200 --> 01:53:09,680
所以你现在可以突然看到你从firebase拿回了用户凭据

1504
01:53:09,680 --> 01:53:14,080
所以你现在实际上可以

1505
01:53:14,080 --> 01:53:19,360
注册您的应用程序，就像使用 firebase 注册一个真实用户一样

1506
01:53:19,360 --> 01:53:23,520
真的很神奇，所以我要点击我讨论过的笔记

1507
01:53:23,520 --> 01:53:26,558
这么

1508
01:53:26,558 --> 01:53:30,477
但是你看到这有点问题，因为按下

1509
01:53:30,477 --> 01:53:34,718
按钮，但我们实际上是在初始化一个应用程序，然后我们正在做

1510
01:53:34,718 --> 01:53:38,718
使用电子邮件和密码创建用户如果您有两个或三个会发生什么

1511
01:53:38,718 --> 01:53:43,279
屏幕上的按钮都需要 firebase 你不能做 firebase

1512
01:53:43,279 --> 01:53:47,599
在其中的每一个中初始化应用程序，因此解决方案是

1513
01:53:47,599 --> 01:53:52,398
就像在你之前初始化你的 firebase 应用程序

1514
01:53:52,398 --> 01:53:57,200
从你在你的屏幕和你的

1515
01:53:57,200 --> 01:54:01,759
电话所以有很好的文档说明如何做

1516
01:54:01,759 --> 01:54:05,759
那个，我实际上已经链接到那个，所以我要把它带到这里

1517
01:54:05,759 --> 01:54:10,558
所以我们需要做的是利用一种叫做小部件颤动的东西

1518
01:54:10,558 --> 01:54:13,520
绑定和

1519
01:54:13,520 --> 01:54:19,040
在这里对你说实话是它需要一些火力基地

1520
01:54:19,040 --> 01:54:23,200
它需要在一切之前启动它的进程

1521
01:54:23,200 --> 01:54:28,718
else 在屏幕上呈现，为了实现这一点，它需要它

1522
01:54:28,718 --> 01:54:33,439
需要有某种类似核心颤振引擎的东西才能到位

1523
01:54:33,439 --> 01:54:37,119
这样它就可以调用核心屠宰引擎并说我是

1524
01:54:37,119 --> 01:54:42,637
完成了我的工作，所以为了做到这一点，那么你需要一个叫做 um 的东西

1525
01:54:42,637 --> 01:54:46,718
小部件颤动绑定，所以我要

1526
01:54:46,718 --> 01:54:52,080
我会为此调出 um 的标题，我可以显示

1527
01:54:52,080 --> 01:54:54,878
你，我就是，这是我给你看的文档

1528
01:54:54,878 --> 01:54:57,360
链接在那里

1529
01:54:57,360 --> 01:55:02,718
在我们的 in your void 函数中，嗯，在我们真正看到之前

1530
01:55:02,718 --> 01:55:06,398
也许我跳过了一点，但我们要做的是尝试修复

1531
01:55:06,398 --> 01:55:11,119
这个问题我们正在等待在firebase上初始化应用程序，所以我们

1532
01:55:11,119 --> 01:55:14,000
不想在按下按钮时执行此操作，我们实际上想要执行此操作

1533
01:55:14,000 --> 01:55:17,759
在其他地方，为了能够在其他地方做到这一点，我们必须

1534
01:55:17,759 --> 01:55:23,119
首先照顾这个小部件绑定好的所以在这里你的主要功能

1535
01:55:23,119 --> 01:55:27,119
然后说嗯我想我们需要说

1536
01:55:27,119 --> 01:55:33,520
小部件颤动绑定点确保像那样初始化

1537
01:55:33,520 --> 01:55:37,439
好的，如果您想了解更多信息，我强烈建议您阅读

1538
01:55:37,439 --> 01:55:42,080
我在这里提供的这个文档好的

1539
01:55:42,080 --> 01:55:47,360
所以现在已经到位了，现在你已经完成了

1540
01:55:47,360 --> 01:55:50,718
重启好吧，所以你会失去你的状态

1541
01:55:50,718 --> 01:55:53,919
热重启后在这里，没关系

1542
01:55:53,919 --> 01:55:58,398
我会把它记在我已经谈过的笔记中

1543
01:55:58,398 --> 01:56:02,317
现在你知道这个初始化

1544
01:56:02,317 --> 01:56:07,680
应用程序是一个未来，您会看到它是 firebase 应用程序的未来，现在您需要做的是

1545
01:56:07,680 --> 01:56:15,360
有点像你想告诉颤振不要在它有之前建立这个专栏

1546
01:56:15,360 --> 01:56:19,279
完成了那个未来和

1547
01:56:19,279 --> 01:56:25,840
这样做的方法是使用flutter的future builder小部件future builder it

1548
01:56:25,840 --> 01:56:29,840
需要一个未来它执行未来，一旦这个

1549
01:56:29,840 --> 01:56:34,957
未来成功或失败，它会给你打电话

1550
01:56:34,957 --> 01:56:39,599
返回并在该回调中，它要求您实际生成一个您想要的小部件

1551
01:56:39,599 --> 01:56:42,477
根据状态向用户显示

1552
01:56:42,477 --> 01:56:47,680
那个期货的结果，所以它基本上而不是你必须这样做

1553
01:56:47,680 --> 01:56:52,558
每次用户按下你说我不是的按钮时初始化firebase

1554
01:56:52,558 --> 01:56:57,840
做任何事情，直到完成，或者如果它出错了

1555
01:56:57,840 --> 01:57:01,520
让我知道然后我会给你一个小部件显示给用户，具体取决于

1556
01:57:01,520 --> 01:57:05,680
结果还好所以我们要做什么

1557
01:57:05,680 --> 01:57:10,477
要去这个身体，现在是一列命令点，然后

1558
01:57:10,477 --> 01:57:14,240
让我们看看我们拥有的流构建器，但我们没有未来的构建器，所以我只是

1559
01:57:14,240 --> 01:57:19,680
会说带有小部件的命令点换行

1560
01:57:19,680 --> 01:57:24,398
我会说未来的建设者好吧，所以我要建立一个你可以看到的未来

1561
01:57:24,398 --> 01:57:28,718
它说ok builder是必需的，所以让我们放一个

1562
01:57:28,718 --> 01:57:33,040
builder 参数，如果你像我一样忘记了这些语法

1563
01:57:33,040 --> 01:57:37,360
您可以在 mac 上的 Visual Studio 代码或命令空间中控制空间

1564
01:57:37,360 --> 01:57:42,797
linux 和 windows 来获得帮助，然后你就可以使用这个语法

1565
01:57:42,797 --> 01:57:48,718
好的，所以带上你的整个专栏

1566
01:57:48,718 --> 01:57:53,680
在这里你看到这个直到没有逗号的列的结尾

1567
01:57:53,680 --> 01:57:57,119
然后你把你的孩子带走，把整个东西都带回来，放在这里，然后

1568
01:57:57,119 --> 01:58:00,637
把它放在那里就好了

1569
01:58:00,637 --> 01:58:07,200
现在你未来的建造者，嗯，它没有真正的未来来表演

1570
01:58:07,200 --> 01:58:11,040
所以为了它的未来

1571
01:58:11,040 --> 01:58:14,477
让我们看看我想说我们已经谈到了未来

1572
01:58:14,477 --> 01:58:16,957
建设者

1573
01:58:16,957 --> 01:58:20,878
而我们现在需要做的是从这里抓住这个未来，你看

1574
01:58:20,878 --> 01:58:25,759
等待 firebase 初始化应用程序并在不移除重量的情况下抓住未来

1575
01:58:25,759 --> 01:58:31,119
重量并把它放在未来建设者的未来

1576
01:58:31,119 --> 01:58:34,957
像这样的参数

1577
01:58:34,957 --> 01:58:37,040
好的命令

1578
01:58:37,040 --> 01:58:40,477
在热重启和

1579
01:58:40,477 --> 01:58:44,797
你可以看到屏幕上没有真正发生任何事情，所以

1580
01:58:44,797 --> 01:58:49,439
你没有任何区别你基本上没有注意到任何区别

1581
01:58:49,439 --> 01:58:52,957
因此，如果一切都按预期进行

1582
01:58:52,957 --> 01:58:57,840
嗯，那么我们需要做的就是

1583
01:58:57,840 --> 01:59:01,599
嗯，如果一切都按预期工作，那么我们应该能够注册用户

1584
01:59:01,599 --> 01:59:07,759
所以我要在这里做的是我要提供完全相同的用户

1585
01:59:07,759 --> 01:59:13,599
已经注册然后说注册，你现在会看到我们得到一个错误

1586
01:59:13,599 --> 01:59:17,520
让我们看看我能不能带你去那里，它说错误是firebase auth email

1587
01:59:17,520 --> 01:59:22,159
已在使用该电子邮件或该电子邮件地址已被其他人使用

1588
01:59:22,159 --> 01:59:25,520
帐户，这就是我要的部分

1589
01:59:25,520 --> 01:59:29,360
为你调出字幕

1590
01:59:29,360 --> 01:59:36,000
所以我们也谈到了

1591
01:59:36,000 --> 01:59:38,159
好吧

1592
01:59:38,159 --> 01:59:42,840
在我们结束和结束之前我想谈的下一个话题

1593
01:59:42,840 --> 01:59:47,759
呃章节是你看到的连接状态

1594
01:59:47,759 --> 01:59:50,558
我们告诉未来的建设者执行未来

1595
01:59:50,558 --> 01:59:54,718
未来是firebase初始化应用程序好吧这个东西

1596
01:59:54,718 --> 01:59:58,398
现在，如果您查看构建器，我们现在从它返回的是

1597
01:59:58,398 --> 02:00:02,317
列，但我们完全忽略了这里的参数

1598
02:00:02,317 --> 02:00:05,119
传递给您的构建器的第二个参数称为

1599
02:00:05,119 --> 02:00:09,119
如您所见，数据类型异步快照的快照

1600
02:00:09,119 --> 02:00:14,398
对象的异步快照是该对象现在的状态

1601
02:00:14,398 --> 02:00:19,040
所以在这种情况下，那个对象本身实际上是你未来的结果

1602
02:00:19,040 --> 02:00:22,477
firebase 应用程序就是这样

1603
02:00:22,477 --> 02:00:26,477
它不明白这个快照是你的 firebase 的异步快照

1604
02:00:26,477 --> 02:00:30,797
应用程序，但没关系，我们实际上并不需要快照中的 firebase 应用程序

1605
02:00:30,797 --> 02:00:36,398
但是，您在此快照中确实需要的一件事是您看到的状态

1606
02:00:36,398 --> 02:00:42,159
未来有一个起点它有一条线来处理它的信息和

1607
02:00:42,159 --> 02:00:48,240
它有一个终点，它要么成功结束，要么现在失败

1608
02:00:48,240 --> 02:00:54,637
快照是您获得未来结果的方式，无论是

1609
02:00:54,637 --> 02:01:00,159
它是否开始处理它是否完成或是否失败所以我们需要做什么

1610
02:01:00,159 --> 02:01:05,840
在这里做，因为我们正在等待 firebase 初始化应用程序完成它的工作

1611
02:01:05,840 --> 02:01:11,200
基本上会说呃我们正在加载只是告诉用户加载并且尽快

1612
02:01:11,200 --> 02:01:14,000
快照完成后，我们会说

1613
02:01:14,000 --> 02:01:17,919
加载完成

1614
02:01:17,919 --> 02:01:21,360
所以让我们这样做让我们进去说

1615
02:01:21,360 --> 02:01:25,040
切换快照

1616
02:01:25,040 --> 02:01:28,240
我相信它被称为

1617
02:01:28,240 --> 02:01:32,797
连接状态正常，然后从Visual Studio代码中获得帮助来完成

1618
02:01:32,797 --> 02:01:35,599
所以我要说添加缺失的 case 子句，你可以看到有

1619
02:01:35,599 --> 02:01:39,919
这么多不同的情况对

1620
02:01:39,919 --> 02:01:44,398
完成等待活动，一切顺利，所以

1621
02:01:44,398 --> 02:01:47,599
没有

1622
02:01:47,599 --> 02:01:52,957
等待让我们说除了完成之外的其他所有内容，我们将返回

1623
02:01:52,957 --> 02:01:57,279
就像只是说正在加载的文字

1624
02:01:57,279 --> 02:02:02,159
假设在这里我们删除所有这些好的

1625
02:02:02,159 --> 02:02:07,279
在完成语句中，我们说返回整个列

1626
02:02:07,279 --> 02:02:10,878
一路到这里

1627
02:02:10,878 --> 02:02:15,119
对，然后我们不需要休息，因为我们说返回，然后我们

1628
02:02:15,119 --> 02:02:20,159
要说默认默认值是一种特殊情况，它不是

1629
02:02:20,159 --> 02:02:24,957
实际上在那个枚举中，但这是一个说明我的其他一切的案例

1630
02:02:24,957 --> 02:02:30,080
还没有处理，在这种情况下，我们只说返回文本

1631
02:02:30,080 --> 02:02:35,279
加载这样的东西作为一个常数

1632
02:02:35,279 --> 02:02:39,680
所以我要重新加载对不起热重启和两个小时

1633
02:02:39,680 --> 02:02:42,957
视频发生得如此之快，以至于我们实际上没有看到加载

1634
02:02:42,957 --> 02:02:46,797
但至少我们已经处理了这样的情况，例如，如果用户的连接

1635
02:02:46,797 --> 02:02:52,000
太慢或他们的设备太慢 当未来结束时，他们会

1636
02:02:52,000 --> 02:02:54,957
看到这个专栏我真的要折叠它

1637
02:02:54,957 --> 02:02:58,797
如果这个功能还没有完成它还没有完成那么他们会看到这个

1638
02:02:58,797 --> 02:03:02,398
文本卸载好，顺便说一句，这就是你实际上可以折叠和

1639
02:03:02,398 --> 02:03:06,080
在视觉工作室代码中展开事物所以折叠

1640
02:03:06,080 --> 02:03:13,680
像这样折叠展开，这是查看更多代码的好方法，所以

1641
02:03:13,680 --> 02:03:18,957
哇，这个视频花了一个小时，就像我预期的那样，有很多信息

1642
02:03:18,957 --> 02:03:24,317
嗯，所以我们现在有一个基本的 Firebase 设置

1643
02:03:24,317 --> 02:03:28,159
我们已经完成了我们讨论的 Firebase 应用程序的初始化

1644
02:03:28,159 --> 02:03:31,520
关于很多小部件实际上我们谈到了专栏

1645
02:03:31,520 --> 02:03:36,080
我们的文字专栏谈到了文字未来的建设者

1646
02:03:36,080 --> 02:03:39,200
文本字段容器

1647
02:03:39,200 --> 02:03:44,558
上帝的应用程序栏有很多东西，所以这是很多内容，如果你

1648
02:03:44,558 --> 02:03:48,080
没明白这一切没关系，我们将在

1649
02:03:48,080 --> 02:03:52,718
即将到来的章节，但我强烈建议我的意思是如果

1650
02:03:52,718 --> 02:03:57,680
你正在看这个课程，如果你只是在看它

1651
02:03:57,680 --> 02:04:00,477
如果您是高级开发人员并且

1652
02:04:00,477 --> 02:04:04,240
你在看这完全没问题，但如果你在发展

1653
02:04:04,240 --> 02:04:09,200
您不是开发人员，或者如果您是初级开发人员或其他人

1654
02:04:09,200 --> 02:04:12,398
没有太多flutter开发经验，你真的

1655
02:04:12,398 --> 02:04:16,477
试图学习我在这里所说的一切请不要只看这个视频

1656
02:04:16,477 --> 02:04:21,680
去自己做这个去写这段代码在我说话的时候暂停视频

1657
02:04:21,680 --> 02:04:25,040
我知道我会说得快一点，但这只是为了节省一点时间

1658
02:04:25,040 --> 02:04:29,200
暂停视频 在我编写代码时编写代码 在我测试时测试它并查看

1659
02:04:29,200 --> 02:04:32,797
自己的结果，因为这就是您将学习的方式，而不仅仅是通过观看

1660
02:04:32,797 --> 02:04:36,718
太好了，我们谈了很多

1661
02:04:36,718 --> 02:04:42,159
小部件和 Firebase 配置，在下一章中，我们将

1662
02:04:42,159 --> 02:04:47,200
谈论登录屏幕和电子邮件验证，并清理我们的

1663
02:04:47,200 --> 02:04:51,439
注册屏幕，所以事不宜迟，让我们为

1664
02:04:51,439 --> 02:04:56,718
下一章，我会在那里见到你你好，欢迎来到第 13 章

1665
02:04:56,718 --> 02:04:59,759
本章我们要讲的flutter课程

1666
02:04:59,759 --> 02:05:05,200
关于第 12 章中的登录视图，我可以在这里看到

1667
02:05:05,200 --> 02:05:10,080
抱歉，我们谈到了注册流程和

1668
02:05:10,080 --> 02:05:13,759
我们实际上谈了很多事情，在那之后我

1669
02:05:13,759 --> 02:05:18,878
想也许我们需要再经历一次

1670
02:05:18,878 --> 02:05:21,919
时不时地谈论我们谈论的那些小部件

1671
02:05:21,919 --> 02:05:26,957
就像一个未来的建设者中心栏文本按钮，我们也谈到了

1672
02:05:26,957 --> 02:05:30,718
关于 um text field 文本编辑控制器 so

1673
02:05:30,718 --> 02:05:34,159
我们讨论了很多组件，但我们非常喜欢

1674
02:05:34,159 --> 02:05:37,200
一个简单的注册流程

1675
02:05:37,200 --> 02:05:41,520
实际上并不是一个流程，它只是一个简单的注册屏幕

1676
02:05:41,520 --> 02:05:45,439
我是说这不是一个流程，因为它只是一个简单的屏幕，没有

1677
02:05:45,439 --> 02:05:48,718
如果您有屏幕，则可以在通常称为流程的任何地方倾斜

1678
02:05:48,718 --> 02:05:52,477
这导致了本章现在我们将要讨论的某个地方

1679
02:05:52,477 --> 02:05:56,878
关于登录登录视图，我们还将划分逻辑

1680
02:05:56,878 --> 02:06:03,119
我们已经在我们当前的主页中创建了一个注册视图，所以

1681
02:06:03,119 --> 02:06:06,558
在本章结束时，我们将有两种观点，一种是针对

1682
02:06:06,558 --> 02:06:11,758
注册另一个是用于登录好的

1683
02:06:11,758 --> 02:06:16,959
所以正如我在这里向你展示的那样，我们有这些逻辑，我的意思是

1684
02:06:16,959 --> 02:06:20,800
注册逻辑到位现在我们必须登录，但我们也可以工作

1685
02:06:20,800 --> 02:06:23,597
清理代码的一点点，因为

1686
02:06:23,597 --> 02:06:26,718
通常我的意思是当你对软件越来越熟悉时

1687
02:06:26,718 --> 02:06:30,877
发展你会知道你会有这样的想法流

1688
02:06:30,877 --> 02:06:34,319
然后你将开始编码并编写你的代码然后你测试它然后

1689
02:06:34,319 --> 02:06:38,237
过了一会儿，你意识到哦，这有点乱，我必须重构

1690
02:06:38,237 --> 02:06:42,319
代码，这就是重构的意思，就像你采用已经存在的东西一样

1691
02:06:42,319 --> 02:06:46,078
在那里，你让它变得更好，让它更干净更漂亮，所以

1692
02:06:46,078 --> 02:06:50,398
这也是我们在本章中要做的

1693
02:06:50,398 --> 02:06:55,839
所以我们需要做的第一件事就是创建一个有状态的注册视图小部件

1694
02:06:55,839 --> 02:06:58,877
好的，如您所见，这将被使用

1695
02:06:58,877 --> 02:07:03,839
作为我们注册视图的基础

1696
02:07:03,839 --> 02:07:06,877
所以让我去拿一些东西

1697
02:07:06,877 --> 02:07:11,680
我们将在本章中需要第一个是我的 scr

1698
02:07:11,680 --> 02:07:14,800
我把它带到屏幕上，这样你也会看到

1699
02:07:14,800 --> 02:07:18,480
和 scr cpy 我们在前面的章节中设置了它，所以你应该

1700
02:07:18,480 --> 02:07:21,519
已经很舒服了

1701
02:07:21,519 --> 02:07:25,519
我要去我们的应用程序这里这是我们的注册视图

1702
02:07:25,519 --> 02:07:29,040
created 会把我的脸带到右边，所以我们会看到更多的内容

1703
02:07:29,040 --> 02:07:33,199
在屏幕上，然后我也要调出

1704
02:07:33,199 --> 02:07:38,319
视觉工作室代码现在出现在另一个屏幕上，但我会带来

1705
02:07:38,319 --> 02:07:42,160
它在这里，所以你也会看到我要增加一点尺寸

1706
02:07:42,160 --> 02:07:46,480
也有点，所以它变得更容易看到

1707
02:07:46,480 --> 02:07:51,277
所以这是我们举东西的地方，嗯，让我提起

1708
02:07:51,277 --> 02:07:55,597
像这样做屏幕，这就是我们生活的地方，我们有一个主页

1709
02:07:55,597 --> 02:08:00,718
目前注册视图还可以，但我们需要创建一个注册

1710
02:08:00,718 --> 02:08:05,758
查看不仅仅是一个主页它被称为主页所以

1711
02:08:05,758 --> 02:08:09,122
由于我们需要一个有状态的小部件，我们将在可视化中使用快捷方式

1712
02:08:09,122 --> 02:08:13,839
工作室代码为我们创建一个有状态的小部件，它与 s t f 一样

1713
02:08:13,839 --> 02:08:19,758
状态已满，所以如果你想创建一个无状态小部件，你会说 stl 好的

1714
02:08:19,758 --> 02:08:23,917
所以 stf 在这里我们叫它什么

1715
02:08:23,917 --> 02:08:29,360
我们应该这样说注册视图好吗

1716
02:08:29,360 --> 02:08:33,199
所以这就是我在这里提到的

1717
02:08:33,199 --> 02:08:39,917
将成为我们的基础

1718
02:08:39,917 --> 02:08:43,438
这将是我们注册查看所有代码的基础

1719
02:08:43,438 --> 02:08:47,040
注册会出现在这里对不起，我正在寻找

1720
02:08:47,040 --> 02:08:50,718
在这里只是为了确保我基本上

1721
02:08:50,718 --> 02:08:53,680
浏览我的笔记，我在这里有非常详细的笔记，只是确保

1722
02:08:53,680 --> 02:08:56,639
你得到我计划让你得到的所有信息所以如果你看到我

1723
02:08:56,639 --> 02:08:59,680
看这里只是因为我正在看笔记以确保

1724
02:08:59,680 --> 02:09:02,639
嗯，现在我们已经创建了注册视图，目前它还没有

1725
02:09:02,639 --> 02:09:06,398
任何东西，所以它只是一个容器和容器的默认颜色和

1726
02:09:06,398 --> 02:09:11,519
背景是黑色的，所以让我们在这里进入我们的注册视图

1727
02:09:11,519 --> 02:09:14,639
所以让我们在这里转到我们的主要功能，正如你现在所看到的那样

1728
02:09:14,639 --> 02:09:18,639
返回主页作为主页，我们在这里要做的只是说

1729
02:09:18,639 --> 02:09:22,718
而不是那个返回寄存器视图好吧

1730
02:09:22,718 --> 02:09:26,480
那就是我们很可能会在这里遇到问题，你可以看到

1731
02:09:26,480 --> 02:09:30,718
什么都没有改变，因为我正在改变主要内部的一些东西，而那不是

1732
02:09:30,718 --> 02:09:36,000
真的受到热重载的影响，所以我们必须热重启，所以我要

1733
02:09:36,000 --> 02:09:39,597
go how to restart here 你可以看到现在屏幕是黑色的

1734
02:09:39,597 --> 02:09:41,519
所以嗯

1735
02:09:41,519 --> 02:09:45,597
那部分基本完成了

1736
02:09:45,597 --> 02:09:51,680
所以我们现在要做的就是将我们的主页重命名为我们的登录视图

1737
02:09:51,680 --> 02:09:56,000
实际上，我们有一个新的注册视图，我们将编写代码

1738
02:09:56,000 --> 02:10:00,319
用于或实际将上一个主页中的代码放入注册视图

1739
02:10:00,319 --> 02:10:05,360
我们还需要重命名主页，所以我的意思是

1740
02:10:05,360 --> 02:10:09,040
很多重命名把东西放在这里和那里，但我们只是在玩一些

1741
02:10:09,040 --> 02:10:12,319
名字基本上在这里所以接下来你需要做的就是去

1742
02:10:12,319 --> 02:10:16,639
到您的主页，并将其重命名为实现该视觉效果的一种方式

1743
02:10:16,639 --> 02:10:21,277
工作室代码是右键单击它，然后说重命名符号，或者我相信它是

1744
02:10:21,277 --> 02:10:25,680
也命令 f2

1745
02:10:25,680 --> 02:10:30,557
或者实际上对我来说，如果两个重命名但在 macbook pro 上，则为 f2

1746
02:10:30,557 --> 02:10:34,877
例如，您不能只按 f2，因为 f2 有另一个功能

1747
02:10:34,877 --> 02:10:39,597
所以你需要做的是按功能键盘保持键

1748
02:10:39,597 --> 02:10:43,360
键盘，然后按 f2 将弹出重命名对话框，或者您可以

1749
02:10:43,360 --> 02:10:47,597
只需右键单击此处并说重命名符号即可

1750
02:10:47,597 --> 02:10:53,758
所以将您的主页重命名为登录视图

1751
02:10:53,758 --> 02:10:58,800
好的，所以我们现在在这里有登录视图，嗯，我会认为我们已经完成了

1752
02:10:58,800 --> 02:11:02,398
重命名你看

1753
02:11:02,398 --> 02:11:06,639
现在我们在这里所做的只是喜欢写我们的代码

1754
02:11:06,639 --> 02:11:11,438
主飞镖中的所有内容，但这不是正确的做法

1755
02:11:11,438 --> 02:11:15,839
尤其是当你的项目变得更大时，你需要确保你

1756
02:11:15,839 --> 02:11:19,277
您有责任确保您的代码可读且

1757
02:11:19,277 --> 02:11:22,959
你的项目结构是其他人可以理解的，他们也可能是

1758
02:11:22,959 --> 02:11:27,199
现在从事同一个项目的机会是，如果您正在观看本课程

1759
02:11:27,199 --> 02:11:31,839
你将是唯一一个在源代码上工作的人，所以你不会有

1760
02:11:31,839 --> 02:11:35,917
即使有其他人在查看您的代码

1761
02:11:35,917 --> 02:11:39,519
你可能是唯一一个查看代码并使用它的人

1762
02:11:39,519 --> 02:11:44,639
仍然需要不时地回到项目中修复一些东西

1763
02:11:44,639 --> 02:11:49,758
添加一些东西 删除一些东西 所以即使你是唯一工作的人

1764
02:11:49,758 --> 02:11:55,360
有了它，您将需要一个干净的源代码来查看，所以如果您来

1765
02:11:55,360 --> 02:11:58,639
一个月后回到源代码，你开始添加越来越多的东西

1766
02:11:58,639 --> 02:12:02,639
一段时间后到这个主要的飞镖文件它会失去控制所以

1767
02:12:02,639 --> 02:12:06,160
您还需要对代码进行重构，以确保它在

1768
02:12:06,160 --> 02:12:09,199
干净的状态，所以我们要做的是提出

1769
02:12:09,199 --> 02:12:13,438
我们的项目浏览器在这里，您可以看到我们在 lib 中，然后

1770
02:12:13,438 --> 02:12:18,078
有一个名为 main dart 的文件，我们需要在这里做的是

1771
02:12:18,078 --> 02:12:23,758
将我们的登录视图移动到它自己的文件中，你可以在这里看到我已经写了

1772
02:12:23,758 --> 02:12:27,917
我们将把它移到 lib 视图登录视图这个文件不存在于

1773
02:12:27,917 --> 02:12:32,160
那一刻，所以你需要创建它你将在这里做什么我的意思是视觉

1774
02:12:32,160 --> 02:12:36,959
工作室代码有一个很棒的技巧，你可以做它可以在上面创建一个文件

1775
02:12:36,959 --> 02:12:41,519
所有中间文件夹也是如此，而不是去这里

1776
02:12:41,519 --> 02:12:46,800
并说新文件夹以创建此视图文件夹，然后在其中创建一个

1777
02:12:46,800 --> 02:12:50,398
登录查看您需要做的只是说新文件

1778
02:12:50,398 --> 02:12:54,237
然后在那里输入整个路径，所以只需说

1779
02:12:54,237 --> 02:12:59,839
视图，然后斜线登录视图点飞镖，这将创建视图文件夹

1780
02:12:59,839 --> 02:13:04,398
对你来说太好了

1781
02:13:04,398 --> 02:13:09,680
所以我需要在这里做的是获取我们的登录视图代码，如您所见

1782
02:13:09,680 --> 02:13:12,319
这里

1783
02:13:12,319 --> 02:13:18,639
正如我们在这里有类登录视图，然后将所有代码带入这个新登录

1784
02:13:18,639 --> 02:13:22,078
查看我们刚刚创建好的文件，所以我要解决这个问题

1785
02:13:22,078 --> 02:13:24,557
在这里粘贴

1786
02:13:24,557 --> 02:13:28,877
好的，没关系，我们在这里遇到了很多错误以及原因

1787
02:13:28,877 --> 02:13:33,597
这背后是我的意思是我们之前没有谈论过这么多的导入语句

1788
02:13:33,597 --> 02:13:38,398
但是import语句是你作为程序员的一种方式

1789
02:13:38,398 --> 02:13:42,800
在别人写的代码里不管是google的flutter团队

1790
02:13:42,800 --> 02:13:46,319
或者是否是第三方第三方依赖

1791
02:13:46,319 --> 02:13:49,597
告诉你的颤抖

1792
02:13:49,597 --> 02:13:53,122
这些代码所在的项目

1793
02:13:53,122 --> 02:13:55,519
那一刻我的意思是如果你不是来自

1794
02:13:55,519 --> 02:13:58,959
你不熟悉的软件工程背景导入

1795
02:13:58,959 --> 02:14:03,277
这是嗯，我的意思是我能找到的最接近的类比是

1796
02:14:03,277 --> 02:14:06,237
就像你在 figma 中创建的一样

1797
02:14:06,237 --> 02:14:10,078
嗯，你正在尝试创建一个实例

1798
02:14:10,078 --> 02:14:12,877
您已经创建但 figment 不知道该实例在哪里的设计

1799
02:14:12,877 --> 02:14:17,277
所以你会说哦，这是按钮实例的副本

1800
02:14:17,277 --> 02:14:20,237
然后figma就像哦，我在哪里可以找到你甚至没有的按钮

1801
02:14:20,237 --> 02:14:24,557
创建了它，那么您需要先创建该按钮或将其从

1802
02:14:24,557 --> 02:14:27,519
另一个项目并将其放入您的组件中

1803
02:14:27,519 --> 02:14:31,438
页面，然后您可以创建它的实例

1804
02:14:31,438 --> 02:14:35,917
如果你不喜欢设计和 figma，你可能不明白我刚才说的是什么

1805
02:14:35,917 --> 02:14:38,639
说，但我想做的只是成为

1806
02:14:38,639 --> 02:14:41,758
在本课程中尽可能包容，以确保任何遵循此课程的人

1807
02:14:41,758 --> 02:14:45,438
当然会尝试至少理解位和

1808
02:14:45,438 --> 02:14:48,718
我在说什么

1809
02:14:48,718 --> 02:14:52,398
回去导入我们现在需要做的是告诉颤振那些

1810
02:14:52,398 --> 02:14:57,360
突出显示的代码片段是 Visual Studio 代码中要做的一件事

1811
02:14:57,360 --> 02:15:01,122
如果您尝试解决此问题，可以为您提供很大帮助

1812
02:15:01,122 --> 02:15:07,199
手工写东西只是在mac上做命令或在linux上控制

1813
02:15:07,199 --> 02:15:10,800
Windows 根据您的操作系统按住命令或控制，并且

1814
02:15:10,800 --> 02:15:14,639
按点然后你会在这里看到建议

1815
02:15:14,639 --> 02:15:19,438
那些缺少的组件可能放置在哪里以及您将要放置什么

1816
02:15:19,438 --> 02:15:23,277
这里需要做的只是导入包颤振材料，因为那是

1817
02:15:23,277 --> 02:15:28,480
我们正在使用的这些组件实际上放置在哪里，哎呀

1818
02:15:28,480 --> 02:15:34,160
我设法在那里点击了错误的错误选项，所以材料繁荣

1819
02:15:34,160 --> 02:15:39,360
好吧，我想现在几乎所有的东西都消失了几乎所有的错误

1820
02:15:39,360 --> 02:15:42,718
除了这些 firebase 错误外，已经消失了，所以

1821
02:15:42,718 --> 02:15:46,557
我们去看看

1822
02:15:46,557 --> 02:15:49,597
所以让我们进去吧

1823
02:15:49,597 --> 02:15:54,319
现在说firebase核心导入

1824
02:15:54,319 --> 02:15:59,519
在这里我们还需要导入未成年人的火力基地选项

1825
02:15:59,519 --> 02:16:04,078
所以我认为一切基本上都消失了还有firebase auth

1826
02:16:04,078 --> 02:16:07,758
也可以导入它，所以我们现在可以开始了

1827
02:16:07,758 --> 02:16:13,917
登录视图但是记住这个登录视图代码真的不是

1828
02:16:13,917 --> 02:16:17,519
登录视图 我的意思是，如果您还记得我们在前面编写的代码

1829
02:16:17,519 --> 02:16:21,360
在它说的那一刻，这个登录视图的章节

1830
02:16:21,360 --> 02:16:25,199
日志视图，但它所做的只是注册你还记得我们有文本字段吗

1831
02:16:25,199 --> 02:16:29,839
甚至是说注册的按钮

1832
02:16:29,839 --> 02:16:34,078
我们现在需要做的是拖动代码，如您在此处看到的

1833
02:16:34,078 --> 02:16:37,917
这里的登录视图我们需要把它带入

1834
02:16:37,917 --> 02:16:43,199
注册视图好的，我们现在的注册视图在这里你看

1835
02:16:43,199 --> 02:16:47,277
那就让我们试着做一点吧

1836
02:16:47,277 --> 02:16:52,319
小心一点，所以在此处获取登录视图中的所有代码

1837
02:16:52,319 --> 02:16:56,078
有处置在它的状态

1838
02:16:56,078 --> 02:17:01,680
并获取您的电子邮件和密码以及成员变量

1839
02:17:01,680 --> 02:17:06,000
从这里切开它们

1840
02:17:06,000 --> 02:17:10,718
所以我会在注册视图状态下进入这里

1841
02:17:10,718 --> 02:17:16,877
然后将它们粘贴在构建函数之前，这样我们就可以了

1842
02:17:16,877 --> 02:17:21,519
回到登录查看dart可以看到这里有一个build函数

1843
02:17:21,519 --> 02:17:24,557
这里和

1844
02:17:24,557 --> 02:17:28,877
我将直接获取整个构建功能，包括

1845
02:17:28,877 --> 02:17:31,122
覆盖和

1846
02:17:31,122 --> 02:17:36,078
正如我在这里看到的那样，构建功能就在那里结束了，我要删掉它

1847
02:17:36,078 --> 02:17:43,122
也可以，我要去这里替换 um 上的这个覆盖

1848
02:17:43,122 --> 02:17:48,800
在所谓的注册视图上，然后将之前的那个粘贴到这里好

1849
02:17:48,800 --> 02:17:53,199
所以我们在这里所做的就是确保注册视图

1850
02:17:53,199 --> 02:17:57,199
它确实是注册视图，而登录视图目前是空的，所以

1851
02:17:57,199 --> 02:18:00,480
你需要做什么你看到这里有一个错误说你可以

1852
02:18:00,480 --> 02:18:06,319
有一个用于登录的有状态小部件，但它没有任何构建功能

1853
02:18:06,319 --> 02:18:10,319
所以你现在需要创建那个构建函数，当然你可以做到

1854
02:18:10,319 --> 02:18:13,199
用手

1855
02:18:13,199 --> 02:18:16,160
但我的意思是

1856
02:18:16,160 --> 02:18:19,438
不是真的 不是真的

1857
02:18:19,438 --> 02:18:23,040
好主意

1858
02:18:23,040 --> 02:18:26,480
当然，一开始你可能会说，哦，我

1859
02:18:26,480 --> 02:18:30,237
只想学习最好的学习方法就是打字，我完全理解

1860
02:18:30,237 --> 02:18:33,680
但是有些事情是有限制的，我也相信

1861
02:18:33,680 --> 02:18:36,959
一旦你做了一两次，你就会厌倦这样做，或者

1862
02:18:36,959 --> 02:18:40,237
你会厌倦这样做所以我实际上建议这些

1863
02:18:40,237 --> 02:18:43,438
您覆盖的功能最好的方法实际上是让您的编辑器

1864
02:18:43,438 --> 02:18:47,758
文本编辑器或 ide 为您完成这些事情，所以我要继续

1865
02:18:47,758 --> 02:18:52,877
这个错误，只说 mac 上的 command dot 和 linux 和 windows 上的 control dot

1866
02:18:52,877 --> 02:19:00,160
并说创建一个缺失的覆盖好的，在这里我们只说返回

1867
02:19:00,160 --> 02:19:04,319
好的，这是我们的登录视图，你可以看到

1868
02:19:04,319 --> 02:19:06,959
现在我们有

1869
02:19:06,959 --> 02:19:11,360
一个注册视图就在这里，然后我们也有

1870
02:19:11,360 --> 02:19:14,959
登录视图没问题

1871
02:19:14,959 --> 02:19:18,800
那我们走吧

1872
02:19:18,800 --> 02:19:22,959
在我们的主要飞镖文件中，我可以看到有一个寄存器，让我们

1873
02:19:22,959 --> 02:19:28,319
实际上重启这个热重启好了，所以我们有一个寄存器

1874
02:19:28,319 --> 02:19:33,519
我们的登录视图完全是空的，所以

1875
02:19:33,519 --> 02:19:38,239
现在我们需要做的基本上是

1876
02:19:38,239 --> 02:19:41,120
像嗯

1877
02:19:41,120 --> 02:19:45,275
这是我们登录视图的一种工作，因为这就像目标

1878
02:19:45,275 --> 02:19:49,199
本章我们需要有一个登录视图及以上

1879
02:19:49,199 --> 02:19:52,080
到目前为止，我们一直在做的有点像创建一个寄存器视图

1880
02:19:52,080 --> 02:19:55,120
将所有代码包含在一个单独的登录视图中

1881
02:19:55,120 --> 02:19:59,839
这是我们之前创建的注册表，所以

1882
02:19:59,839 --> 02:20:03,595
我的意思是说我们有一个注册视图

1883
02:20:03,595 --> 02:20:06,959
但是我们没有登录视图，我们需要处理登录视图，所以

1884
02:20:06,959 --> 02:20:10,319
如果你记得嗯哇我的意思是你实际上不必

1885
02:20:10,319 --> 02:20:13,595
记住你可以在这里查看注册视图有两个字段输入你的

1886
02:20:13,595 --> 02:20:16,639
在此处发送电子邮件并在此处输入您的密码

1887
02:20:16,639 --> 02:20:21,275
这是他们的注册 v 和登录非常相似 什么

1888
02:20:21,275 --> 02:20:25,680
注册视图的不同之处在于它创建了这个它基本上是调用

1889
02:20:25,680 --> 02:20:30,480
到firebase，上面写着用电子邮件和密码创建用户

1890
02:20:30,480 --> 02:20:34,559
但如果你仔细想想，其他一切都非常相似

1891
02:20:34,559 --> 02:20:38,400
对此感到抱歉，所以您需要创建您需要制作的

1892
02:20:38,400 --> 02:20:41,120
确保在他们两个中都初始化了firebase

1893
02:20:41,120 --> 02:20:46,080
您将有两个文本字段电子邮件密码，您将有一个按钮

1894
02:20:46,080 --> 02:20:50,160
用于注册和用于登录，所以

1895
02:20:50,160 --> 02:20:55,360
老实说，我们可以做的是现在去复制我们的代码

1896
02:20:55,360 --> 02:21:00,000
从我们的登录视图中得到的，好吧，我真的忘记了

1897
02:21:00,000 --> 02:21:04,160
所以让我们从这里再次复制这段代码

1898
02:21:04,160 --> 02:21:09,360
从那里获取所有内容并将其放入我们的登录视图中

1899
02:21:09,360 --> 02:21:12,879
并更改此注册按钮以登录

1900
02:21:12,879 --> 02:21:16,959
所以现在我们基本上有两个相同视图的副本，一旦它被注册

1901
02:21:16,959 --> 02:21:21,595
另一个说登录没问题所以

1902
02:21:21,595 --> 02:21:25,595
我们现在能做的就是在这里访问我们的主 dart 文件

1903
02:21:25,595 --> 02:21:29,839
而不是返回注册视图，我们可以只返回登录视图

1904
02:21:29,839 --> 02:21:34,319
因为我们现在要在登录视图上工作，好吧，我们有一个用户注册了

1905
02:21:34,319 --> 02:21:38,959
现在我们需要登录并作为旁注

1906
02:21:38,959 --> 02:21:42,879
如果您按照上一章进行操作，您就会知道我们确实做到了

1907
02:21:42,879 --> 02:21:48,720
向 firebase 注册一个有效用户，然后

1908
02:21:48,720 --> 02:21:52,720
你可以做的是去你的firebase控制台

1909
02:21:52,720 --> 02:21:56,160
正如我们现在可以做的那样，我没有为此计划过

1910
02:21:56,160 --> 02:21:59,756
但是我们能做些什么呢？console.firebasegoggle.com

1911
02:21:59,756 --> 02:22:02,559
确保您已使用您的帐户登录

1912
02:22:02,559 --> 02:22:07,519
然后我要去这个呃项目，我们创建了 mynotes 颤振项目

1913
02:22:07,519 --> 02:22:12,800
进入那里然后进入身份验证，然后您实际上可以

1914
02:22:12,800 --> 02:22:18,480
查看您使用 Flutter 应用程序创建的用户

1915
02:22:18,480 --> 02:22:23,595
你实际上正在工作，所以当你在你的中调用这个函数时

1916
02:22:23,595 --> 02:22:28,319
注册查看此功能firebase os实例创建用户

1917
02:22:28,319 --> 02:22:33,120
该用户的电子邮件和密码确实是在 Firebase 控制台中创建的，所以在这里

1918
02:22:33,120 --> 02:22:37,360
你有一个用户你也可以禁用这个用户并做其他事情，但我们是

1919
02:22:37,360 --> 02:22:41,120
现在就这样吧

1920
02:22:41,120 --> 02:22:45,120
所以你现在需要做的不是注册视图，而是告诉你的主页

1921
02:22:45,120 --> 02:22:49,040
呈现登录视图，您只需键入登录视图

1922
02:22:49,040 --> 02:22:53,595
如果你只是输入这样的登录视图，你会得到

1923
02:22:53,595 --> 02:22:57,756
当然是一个错误，因为登录视图不在范围内，但我相信视觉

1924
02:22:57,756 --> 02:23:01,519
工作室代码实际上可以帮助解决这个问题，因为您看到我们还没有导入

1925
02:23:01,519 --> 02:23:05,756
登录视图，所以这个主要的 dart 文件不知道什么

1926
02:23:05,756 --> 02:23:09,275
登录视图与这里发生的完全相同

1927
02:23:09,275 --> 02:23:12,959
你记得如果我们没有这些进口，我们会得到很多错误说

1928
02:23:12,959 --> 02:23:17,120
他们我不知道这门课在哪里所以同样的事情正在发生

1929
02:23:17,120 --> 02:23:21,436
这个主要的 dart 文件没问题，所以我现在相信 Visual Studio 代码

1930
02:23:21,436 --> 02:23:26,319
有点即兴，但我想如果你设置登录视图并按下回车键

1931
02:23:26,319 --> 02:23:32,400
它会自动为您导入，让我们看看它在哪里

1932
02:23:32,400 --> 02:23:36,239
但如果你不习惯这样做，只需输入登录视图

1933
02:23:36,239 --> 02:23:40,559
手动执行我在 mac 上的命令 dot 之前向您展示过的相同操作或

1934
02:23:40,559 --> 02:23:45,839
在 windows 和 linux 中控制并说导入好的所以它会导入

1935
02:23:45,839 --> 02:23:49,839
现在为您服务，我们有登录视图，如果我

1936
02:23:49,839 --> 02:23:54,319
按 command s 或者实际上我们必须进行热重启

1937
02:23:54,319 --> 02:23:59,199
您现在看到这里有一个登录按钮

1938
02:23:59,199 --> 02:24:03,199
所以我们需要做的是正如你在标题中看到的那样，现在我们

1939
02:24:03,199 --> 02:24:07,040
正在记录登录视图 转到您的登录视图

1940
02:24:07,040 --> 02:24:11,519
并转到此处按下按钮的位置，您会看到未按下文本按钮

1941
02:24:11,519 --> 02:24:17,839
我们需要在这里做的是在我们的 firebase 上调用一个新函数

1942
02:24:17,839 --> 02:24:21,915
auth 实例而不是使用电子邮件和密码创建用户，我们将

1943
02:24:21,915 --> 02:24:26,000
说firebase auth得到了实例

1944
02:24:26,000 --> 02:24:31,915
但是使用电子邮件和密码登录，您可以看到函数签名是

1945
02:24:31,915 --> 02:24:35,595
与使用电子邮件和密码创建用户非常相似，因为它需要两个

1946
02:24:35,595 --> 02:24:40,959
参数，即电子邮件和密码，都是字符串类型，然后是什么

1947
02:24:40,959 --> 02:24:46,319
实际上返回的是用户凭据，你还记得创建用户吗

1948
02:24:46,319 --> 02:24:49,275
电子邮件和密码也返回用户凭据，所以

1949
02:24:49,275 --> 02:24:55,595
从这个意义上说，在登录和注册之间切换非常简单，所以

1950
02:24:55,595 --> 02:24:58,319
使用电子邮件和密码名称获取登录信息

1951
02:24:58,319 --> 02:25:01,436
这是我们唯一感兴趣的东西，只需将其粘贴在这里而不是

1952
02:25:01,436 --> 02:25:06,160
创建用户好的，只是要保存它

1953
02:25:06,160 --> 02:25:11,436
某些原因我的 scrcpy 崩溃了，我不知道为什么

1954
02:25:11,436 --> 02:25:14,239
所以没关系，这不是我们计划的

1955
02:25:14,239 --> 02:25:18,879
可以做的是去我们的，我可以看到你看到它被中止了，所以我们

1956
02:25:18,879 --> 02:25:25,199
可以做的是去我们的终端，我会说 scr cpy 好的

1957
02:25:25,199 --> 02:25:28,720
我要把它带到这里的屏幕上

1958
02:25:28,720 --> 02:25:33,275
如果你注意到这里我们有一个登录按钮但标题

1959
02:25:33,275 --> 02:25:38,000
这里仍然说注册所以让我们去修复它让我们进入应用程序栏并

1960
02:25:38,000 --> 02:25:42,480
只是说登录没问题

1961
02:25:42,480 --> 02:25:47,839
实际上问题是我也可以看到我的

1962
02:25:47,839 --> 02:25:54,000
由于 scrcpy 也崩溃了这个进程的运行，这个应用程序在那个 android 上

1963
02:25:54,000 --> 02:25:58,480
手机也崩溃了，所以我的意思是这个项目的颤振实例

1964
02:25:58,480 --> 02:26:01,275
目前并没有真正运行，所以我要做的就是去 main

1965
02:26:01,275 --> 02:26:07,436
飞镖并说在没有调试的情况下运行，现在它正在启动做一个 gradle

1966
02:26:07,436 --> 02:26:12,239
前几章的构建 gradle 记住是针对 android 的

1967
02:26:12,239 --> 02:26:16,319
如果它使用的是xcode，它适用于ios，所以

1968
02:26:16,319 --> 02:26:20,400
它正在做更大的构建，所以如果一切都按计划进行

1969
02:26:20,400 --> 02:26:25,756
那么我们应该在那里得到一个登录标题，而这正在做

1970
02:26:25,756 --> 02:26:28,879
它的工作我要去我的笔记，只是确保

1971
02:26:28,879 --> 02:26:32,839
我已经谈过我保证我要谈的事情

1972
02:26:32,839 --> 02:26:37,595
好吧，它正在安装我们的应用程序，我要删除小部件

1973
02:26:37,595 --> 02:26:40,720
检查员，现在你可以看到我们有一个登录名

1974
02:26:40,720 --> 02:26:46,559
最重要的是，它按预期工作，所以

1975
02:26:46,559 --> 02:26:50,559
正如您在此处的日志记录调用后看到的那样，使用电子邮件登录并

1976
02:26:50,559 --> 02:26:54,879
密码 我们现在正在打印

1977
02:26:54,879 --> 02:26:59,839
我们可以在这里做的是输入用户的一些信息

1978
02:26:59,839 --> 02:27:04,800
不存在好吧，所以我只想说我的个人电子邮件

1979
02:27:04,800 --> 02:27:08,959
我会说 foo bar path 然后我会调出

1980
02:27:08,959 --> 02:27:12,559
控制台在这里，你会看到调试控制台清除它

1981
02:27:12,559 --> 02:27:16,639
嗯，我真的要删除

1982
02:27:16,639 --> 02:27:20,319
或者做这样的事情，这样你就可以更好地看到调试控制台

1983
02:27:20,319 --> 02:27:25,275
它的全部，我要按下登录按钮好了

1984
02:27:25,275 --> 02:27:28,319
然后对此感到抱歉

1985
02:27:28,319 --> 02:27:33,680
所以我们现在有了我们需要处理的下一件事

1986
02:27:33,680 --> 02:27:35,756
你可以看到

1987
02:27:35,756 --> 02:27:40,800
我可能会在这里增加更大的尺寸，这样你会看得更清楚

1988
02:27:40,800 --> 02:27:44,639
当我按下登录按钮时，对不起

1989
02:27:44,639 --> 02:27:47,680
使用用户

1990
02:27:47,680 --> 02:27:52,160
那不存在意味着我们还没有注册那个用户然后我们得到了

1991
02:27:52,160 --> 02:27:57,436
这里有一个错误，说未找到用户的firebase，这是有道理的

1992
02:27:57,436 --> 02:28:00,720
实际上完全是因为

1993
02:28:00,720 --> 02:28:05,120
我们实际上并没有为此用户进行任何注册

1994
02:28:05,120 --> 02:28:08,800
所以我们能听到什么 我们能在这里做什么

1995
02:28:08,800 --> 02:28:14,559
是去这里，我要把事情恢复过来

1996
02:28:14,559 --> 02:28:18,160
有点像他们在这里

1997
02:28:18,160 --> 02:28:22,319
好的，所以我们在这里调用这个函数 uh

1998
02:28:22,319 --> 02:28:26,160
让我减小尺寸，因为它绝对是巨大的

1999
02:28:26,160 --> 02:28:29,915
在此处使用电子邮件和密码签名

2000
02:28:29,915 --> 02:28:32,800
嗯，我们需要处理

2001
02:28:32,800 --> 02:28:37,199
一个叫做异常的东西，我不认为我们谈论异常是

2002
02:28:37,199 --> 02:28:40,800
对你说实话，我在教你飞镖，如果你知道的话

2003
02:28:40,800 --> 02:28:44,319
关于例外情况，您可以略过这一点

2004
02:28:44,319 --> 02:28:48,400
视频的一部分，但如果您不是软件开发开发人员

2005
02:28:48,400 --> 02:28:52,879
以前或软件工程师，那么您可能不知道什么是异常

2006
02:28:52,879 --> 02:28:57,275
例外是当事情出错而你没有

2007
02:28:57,275 --> 02:29:02,639
从一开始就想那些事

2008
02:29:02,639 --> 02:29:05,756
例如，如果您正在与

2009
02:29:05,756 --> 02:29:09,839
如果你是软件 如果你是设计师或产品所有者

2010
02:29:09,839 --> 02:29:14,239
之前没有做过软件开发的你可能还用过其他的

2011
02:29:14,239 --> 02:29:18,720
软件和有时软件崩溃就像 scr cpy 只是崩溃了一些

2012
02:29:18,720 --> 02:29:22,639
几分钟前那可能是

2013
02:29:22,639 --> 02:29:26,720
创建 scrcpy 的软件开发人员的异常或错误

2014
02:29:26,720 --> 02:29:30,639
没有计算在内，所以他们没有计算在内

2015
02:29:30,639 --> 02:29:33,839
在这种情况下可能会发生错误

2016
02:29:33,839 --> 02:29:37,275
例如，没有处理该应用程序

2017
02:29:37,275 --> 02:29:41,360
崩溃这意味着发生了异常并且发生了错误

2018
02:29:41,360 --> 02:29:45,120
该程序的开发人员没有考虑到

2019
02:29:45,120 --> 02:29:48,720
这是您在颤振应用程序中看到的一个例外

2020
02:29:48,720 --> 02:29:52,000
所以firebase说您正在尝试使用不存在的用户登录

2021
02:29:52,000 --> 02:29:54,879
所以你想用它做什么我不能在这之后继续我不知道

2022
02:29:54,879 --> 02:29:59,519
怎么做 处理异常的方法

2023
02:29:59,519 --> 02:30:04,720
flutter or in dart 实际上正在使用 try catch 块，所以我要带上它

2024
02:30:04,720 --> 02:30:09,756
此处将用于创建用户凭据的整个代码放在 try 语句中

2025
02:30:09,756 --> 02:30:14,080
正如你在这里看到的，然后进去说catch b

2026
02:30:14,080 --> 02:30:18,400
括号里的就这样吧

2027
02:30:18,400 --> 02:30:22,639
然后我只想说发生的事情

2028
02:30:22,639 --> 02:30:26,239
可以用单个代码，所以你现在可以在这里看到我们

2029
02:30:26,239 --> 02:30:31,275
有一个 try 块，如此处所示，这条线一直从顶部开始

2030
02:30:31,275 --> 02:30:35,595
到这里然后我们有一个 catch 块 try catch 的工作方式是它作为

2031
02:30:35,595 --> 02:30:39,680
它的名字表明它试图做你说它需要做的工作

2032
02:30:39,680 --> 02:30:45,519
在试验区完成如果发生任何不好的事情，它将进入各种捕获

2033
02:30:45,519 --> 02:30:49,275
之后你不能放置的陈述试试看

2034
02:30:49,275 --> 02:30:54,639
所以正如你在日志中看到的这个错误

2035
02:30:54,639 --> 02:31:01,275
让我们看看我们能不能在这里找到它，它的类型是 firebase auth 呃让我

2036
02:31:01,275 --> 02:31:07,040
看到处理异常，但不幸的是我们实际上并没有得到它的类型

2037
02:31:07,040 --> 02:31:10,800
我们可以在这里做的是打印一些不好的事情发生然后

2038
02:31:10,800 --> 02:31:17,040
打印错误本身没问题，所以我只想说清除日志

2039
02:31:17,040 --> 02:31:20,639
command s 然后我要按登录

2040
02:31:20,639 --> 02:31:24,879
再次抱歉，你现在可以看到它说

2041
02:31:24,879 --> 02:31:31,120
发生了一些不好的事情 firebase auth user not found 然后是一些信息

2042
02:31:31,120 --> 02:31:35,756
我们实际上可以说 print e

2043
02:31:35,756 --> 02:31:41,275
运行时类型，这样做实际上会给你关于

2044
02:31:41,275 --> 02:31:45,680
这是哪类异常，因为您看到了

2045
02:31:45,680 --> 02:31:49,360
当您使用颤振以及通常使用软件时

2046
02:31:49,360 --> 02:31:52,959
你正在创建软件 你正在编写代码 不同类型的异常

2047
02:31:52,959 --> 02:31:57,360
发生并且这些异常有自己的身份每个异常都有自己的

2048
02:31:57,360 --> 02:32:02,400
身份是它可能来自的一系列类或不同的地方

2049
02:32:02,400 --> 02:32:07,120
在飞镖中，几乎任何东西都可能成为错误，甚至是文本

2050
02:32:07,120 --> 02:32:11,040
可能成为错误或枚举可能成为错误，所以

2051
02:32:11,040 --> 02:32:14,480
当你来到这个 catch 块时，我会将鼠标移到它上面，你可以看到

2052
02:32:14,480 --> 02:32:18,639
在这里它说我什至不知道这是什么这是一个对象所以

2053
02:32:18,639 --> 02:32:22,319
它可以是任何东西，但你实际上是在你的

2054
02:32:22,319 --> 02:32:26,720
您最感兴趣的缓存块可能发生的异常

2055
02:32:26,720 --> 02:32:29,519
firebase 所以因为我们真的不知道这是什么

2056
02:32:29,519 --> 02:32:33,275
类型是我们要把它打印到控制台

2057
02:32:33,275 --> 02:32:37,436
我们要看看它是什么类型所以让我做

2058
02:32:37,436 --> 02:32:41,436
他们中的一点我应该怎么做

2059
02:32:41,436 --> 02:32:46,239
这是不是更好的安排，也许这样你就可以看到会发生什么

2060
02:32:46,239 --> 02:32:50,720
也许然后我要做什么命令这个热重载

2061
02:32:50,720 --> 02:32:55,436
然后去这里按登录按钮，你会看到那个类型

2062
02:32:55,436 --> 02:32:59,680
异常是firebase auth异常

2063
02:32:59,680 --> 02:33:03,120
所以我们现在需要做的是去我们的代码

2064
02:33:03,120 --> 02:33:05,199
并处理

2065
02:33:05,199 --> 02:33:10,480
firebase 身份验证异常不仅仅是我们在这里所做的任何异常

2066
02:33:10,480 --> 02:33:15,519
因为我们正在捕获任何异常，所以我们想要做的是捕获 firebase

2067
02:33:15,519 --> 02:33:19,680
关闭我们缓存块中的异常，我要去

2068
02:33:19,680 --> 02:33:25,199
现在就这样做，我会像我们以前那样做

2069
02:33:25,199 --> 02:33:28,800
在摆脱控制台以查看更多代码之前

2070
02:33:28,800 --> 02:33:32,319
所以你可以做什么你可以在飞镖和专门的缓存块

2071
02:33:32,319 --> 02:33:37,595
这意味着你没有捕捉到所有东西，但你告诉黑暗那个样子

2072
02:33:37,595 --> 02:33:42,160
在这个特定的 catch 块中，我只对这个例外感兴趣

2073
02:33:42,160 --> 02:33:45,839
键入并且您可能已经猜到了

2074
02:33:45,839 --> 02:33:51,275
try 块可以伴随多个 catch 块

2075
02:33:51,275 --> 02:33:56,160
您可以在此处看到的这个缓存块称为 catch all it catches every

2076
02:33:56,160 --> 02:34:01,436
try 块内代码运行时可能发生的异常

2077
02:34:01,436 --> 02:34:04,559
但是，如果您对特定的感兴趣

2078
02:34:04,559 --> 02:34:09,360
这种情况下的异常 firebase auth exception 我相信哦，我已经清除了它

2079
02:34:09,360 --> 02:34:13,680
但我认为这是 firebase off 异常，我将再次运行它

2080
02:34:13,680 --> 02:34:17,120
转到登录按钮，您会看到它说 firebase off exception 所以我们

2081
02:34:17,120 --> 02:34:21,040
对此特别感兴趣，所以让我们去告诉飞镖我们是

2082
02:34:21,040 --> 02:34:23,595
有兴趣我只是我要说

2083
02:34:23,595 --> 02:34:28,000
firebase 关闭异常捕获

2084
02:34:28,000 --> 02:34:29,680
好的

2085
02:34:29,680 --> 02:34:34,559
所以这是捕捉特定异常的格式

2086
02:34:34,559 --> 02:34:39,519
使用关键字 on 的 catch 语句，然后将类型编写为运行时类型

2087
02:34:39,519 --> 02:34:43,199
或您感兴趣的异常类型的类名

2088
02:34:43,199 --> 02:34:47,436
处理得很好，所以在这种情况下，我们在 firebase off 上说

2089
02:34:47,436 --> 02:34:51,756
异常吸引人，我们将从那里删除这个捕获

2090
02:34:51,756 --> 02:34:55,915
我们要去这里实际上我什至不必削减和

2091
02:34:55,915 --> 02:34:59,680
你需要在这里做的只是说打印电子代码

2092
02:34:59,680 --> 02:35:03,519
在我告诉你之前，你先保存这个

2093
02:35:03,519 --> 02:35:08,000
uc之后我要说什么让我们测试一下让我们说登录和

2094
02:35:08,000 --> 02:35:11,360
您会看到该代码已使用或未找到

2095
02:35:11,360 --> 02:35:14,400
所以现在我们告诉黑暗我们是

2096
02:35:14,400 --> 02:35:19,680
专门捕获firebase auth异常的异常然后这个e是

2097
02:35:19,680 --> 02:35:25,275
不再是一个对象，真的让我们看看我们是否可以得到一些帮助，现在它说好的

2098
02:35:25,275 --> 02:35:28,959
如果我可以捕获 firebase auth 异常的异常，那么我知道

2099
02:35:28,959 --> 02:35:32,480
我可以传递给您的错误属于那种类型

2100
02:35:32,480 --> 02:35:36,319
现在您捕获了 Firebase 身份验证，您可以转到此代码

2101
02:35:36,319 --> 02:35:38,559
您会看到可以从中读取的不同属性

2102
02:35:38,559 --> 02:35:41,756
消息代码 电子邮件凭据等等 好的

2103
02:35:41,756 --> 02:35:46,239
所以我们现在对代码感兴趣

2104
02:35:46,239 --> 02:35:49,915
正如屏幕底部的标题所示，您会看到我们

2105
02:35:49,915 --> 02:35:56,000
需要处理等于未找到用户的电子代码，所以假设电子代码

2106
02:35:56,000 --> 02:36:01,839
等于用户未找到然后让我们说打印

2107
02:36:01,839 --> 02:36:07,436
用户没有像那样找到其他电子代码哦抱歉实际上我们不会这样做

2108
02:36:07,436 --> 02:36:11,519
外面有点像跑在我前面一点

2109
02:36:11,519 --> 02:36:15,519
所以我们现在有

2110
02:36:15,519 --> 02:36:18,959
找不到电子代码用户然后我们只是说找不到打印用户好吧我是

2111
02:36:18,959 --> 02:36:23,275
要清除这里的日志回去看看我们的 cpy 这里我只想说

2112
02:36:23,275 --> 02:36:29,436
登录，你会看到它所做的一切，它说用户没有找到好吧

2113
02:36:29,436 --> 02:36:32,879
所以这就是我们真的不是我的意思

2114
02:36:32,879 --> 02:36:37,839
屏幕左下方的标题显示句柄，但取决于您的

2115
02:36:37,839 --> 02:36:42,239
嗯背景你可能期望句柄做不同的事情

2116
02:36:42,239 --> 02:36:45,436
为经验丰富的软件工程师处理的软件实际上可能意味着

2117
02:36:45,436 --> 02:36:50,160
好吧，做点什么好，告诉他告诉用户，哦，我无法登录

2118
02:36:50,160 --> 02:36:54,160
找不到用户或任何原因只是显示一些东西

2119
02:36:54,160 --> 02:36:57,839
用户和我们可以这样做，但目前我们没有能力这样做

2120
02:36:57,839 --> 02:37:00,639
我们真的不知道如何处理

2121
02:37:00,639 --> 02:37:06,480
我们需要做的就是简单地说打印，所以我们只需将它打印到屏幕上

2122
02:37:06,480 --> 02:37:10,319
所以这是我们现在的处理方法，好吧，这很简单，它所做的只是

2123
02:37:10,319 --> 02:37:14,480
确保不会向用户或应用程序抛出异常

2124
02:37:14,480 --> 02:37:18,080
不会崩溃

2125
02:37:18,080 --> 02:37:23,839
好的，现在有很多信息，就像这里的标题显示在

2126
02:37:23,839 --> 02:37:27,595
登录视图我们还需要处理错误密码

2127
02:37:27,595 --> 02:37:33,360
我的意思是你可以在这里看到 e 代码是一个字符串所以这里的任何东西都可以

2128
02:37:33,360 --> 02:37:38,800
发生可以由字符串和另一个定义

2129
02:37:38,800 --> 02:37:43,275
对不起，其中一个错误实际上是错误的

2130
02:37:43,275 --> 02:37:48,639
密码所以让我们在这里测试一下如果代码是

2131
02:37:48,639 --> 02:37:54,480
not user not found 只是打印发生了其他事情

2132
02:37:54,480 --> 02:37:59,436
然后将错误代码打印到屏幕上

2133
02:37:59,436 --> 02:38:05,595
所以我要保存这个然后我会去这里然后

2134
02:38:05,595 --> 02:38:09,519
实际上将此电子邮件更改为现有的电子邮件，这是我

2135
02:38:09,519 --> 02:38:13,680
注册和密码我相信是 foobar 或

2136
02:38:13,680 --> 02:38:16,959
一些clickfu酒吧也许

2137
02:38:16,959 --> 02:38:20,480
我要说登录，你可以在这里看到它现在说的是别的东西

2138
02:38:20,480 --> 02:38:25,120
发生了错误的密码，所以这可能意味着

2139
02:38:25,120 --> 02:38:28,400
好吧，实际上那不是我的密码，这个 foo bar 在我的密码中

2140
02:38:28,400 --> 02:38:31,275
我什至不记得那是什么，也许是全巴低音

2141
02:38:31,275 --> 02:38:35,199
但这很好，它说其他事情发生在电子代码中，这正是

2142
02:38:35,199 --> 02:38:38,639
我们不得不为此感到抱歉

2143
02:38:38,639 --> 02:38:43,519
这正是我们需要在这里处理的错误密码所以在你的

2144
02:38:43,519 --> 02:38:48,080
else 语句 say else if e 代码

2145
02:38:48,080 --> 02:38:52,480
密码错误

2146
02:38:52,480 --> 02:38:56,800
然后我们会说打印错误的密码

2147
02:38:56,800 --> 02:38:59,915
好吧，男人是

2148
02:38:59,915 --> 02:39:05,040
这样就可以清除我要说的日志登录，您会看到消息

2149
02:39:05,040 --> 02:39:09,436
错误的密码打印到屏幕上

2150
02:39:09,436 --> 02:39:13,519
好的 很多工作

2151
02:39:13,519 --> 02:39:17,040
我们现在在登录视图中做了很多工作，但我们还没有真正投入

2152
02:39:17,040 --> 02:39:22,160
注册视图中有很多能量，您会看到它们非常相似，因为它们确实

2153
02:39:22,160 --> 02:39:25,360
几乎相同的 api 调用与登录另一个的电子邮件和密码

2154
02:39:25,360 --> 02:39:29,595
但是，如果我们去我们的主要飞镖，那些注册的

2155
02:39:29,595 --> 02:39:34,800
您将在我们的注册视图中看到的文件，我们只是调用 api 和 kind

2156
02:39:34,800 --> 02:39:38,720
就像希望最好的一样，这里没有try catch语句，好吧，所以我们

2157
02:39:38,720 --> 02:39:43,680
可以做的是看看我们是如何登录的，我们将 api 调用放在

2158
02:39:43,680 --> 02:39:48,480
尝试阻止你看到我们需要做的是去主飞镖和我们的注册

2159
02:39:48,480 --> 02:39:51,595
在这里查看注册查看状态做同样的事情

2160
02:39:51,595 --> 02:39:57,519
事情让我们把它放在一个 try 块中

2161
02:39:57,519 --> 02:40:01,040
好的，然后说 catch 或 say on

2162
02:40:01,040 --> 02:40:05,120
firebase 关闭异常

2163
02:40:05,120 --> 02:40:08,000
这就是我的意思是我不会再解释这个了，因为这正是我们

2164
02:40:08,000 --> 02:40:12,720
只是在登录视图中我相信firebase authexception没有

2165
02:40:12,720 --> 02:40:17,360
之前确实存在于这个 dart 文件中，但这就是 Visual Studio

2166
02:40:17,360 --> 02:40:21,436
当我输入代码并按下回车键自动完成时，代码帮助了我

2167
02:40:21,436 --> 02:40:25,275
那么它一定是在某处进口的

2168
02:40:25,275 --> 02:40:30,319
或者它可能是firebase auth dart的一部分我相信实际上所以如果我命令

2169
02:40:30,319 --> 02:40:34,400
单击它会进入firebase auth，这就是为什么我

2170
02:40:34,400 --> 02:40:37,120
它可能不需要导入任何东西，因为它已经被导入了

2171
02:40:37,120 --> 02:40:42,000
作为 Firebase 身份验证的一部分

2172
02:40:42,000 --> 02:40:45,199
哦，哇，这也有很多信息

2173
02:40:45,199 --> 02:40:49,040
现在我们正在处理寄存器视图，让我们转到我们的主视图

2174
02:40:49,040 --> 02:40:53,275
dar main 函数在这里，因为我们只看到登录视图让我们切换

2175
02:40:53,275 --> 02:40:58,319
这回注册 view 和 command 但这不会

2176
02:40:58,319 --> 02:41:01,839
改变你记得的任何东西热重载没有任何影响

2177
02:41:01,839 --> 02:41:05,360
改变你它对你改变的任何东西都没有影响

2178
02:41:05,360 --> 02:41:08,959
主要功能记得要热重启好

2179
02:41:08,959 --> 02:41:13,199
所以热重启现在我们在注册视图中

2180
02:41:13,199 --> 02:41:19,275
我们现在需要处理错误的密码

2181
02:41:19,275 --> 02:41:24,000
不，这不是登录对不起，现在我们需要处理

2182
02:41:24,000 --> 02:41:27,915
这个弱密码所以

2183
02:41:27,915 --> 02:41:32,800
当您使用 uh firebase zoom 时，您会注意到它有自己的一套

2184
02:41:32,800 --> 02:41:36,879
您也可以稍后为您的安全规则覆盖这些安全规则

2185
02:41:36,879 --> 02:41:40,639
服务器，如果你想，例如你可以期待，或者你可以说我的所有用户

2186
02:41:40,639 --> 02:41:46,319
密码必须是 18 um 字符长和数字混合

2187
02:41:46,319 --> 02:41:49,519
和字母数值等等等等，但是

2188
02:41:49,519 --> 02:41:53,756
firebase 上设置了一些默认的安全规则

2189
02:41:53,756 --> 02:41:58,879
对于每个用户都需要遵守的凭据，让我们实际看看

2190
02:41:58,879 --> 02:42:01,436
在那，让我们

2191
02:42:01,436 --> 02:42:05,680
在这里打印，我会说 print e

2192
02:42:05,680 --> 02:42:08,959
代码没问题，正如你在标题中看到的那样

2193
02:42:08,959 --> 02:42:13,199
在标题中看到有一个等于弱密码的e代码

2194
02:42:13,199 --> 02:42:17,199
需要处理所以我要去这里尝试用我的注册用户

2195
02:42:17,199 --> 02:42:22,239
个人电子邮件和 b c 的密码 好的，然后我会提出来

2196
02:42:22,239 --> 02:42:24,480
控制台清除控制台一点点

2197
02:42:24,480 --> 02:42:27,360
我会这样做，这样你会看得更清楚一点

2198
02:42:27,360 --> 02:42:34,400
然后我将尝试使用 abc press register 的密码进行注册

2199
02:42:34,400 --> 02:42:38,879
这里发生了什么你看到代码是弱密码

2200
02:42:38,879 --> 02:42:43,040
正如您所期望的那样，是的，弱密码太弱了，甚至无法使用

2201
02:42:43,040 --> 02:42:48,160
在任何地方使用所以嗯

2202
02:42:48,160 --> 02:42:52,480
所以我们这里需要做的是处理弱密码

2203
02:42:52,480 --> 02:42:57,519
错误基本上我会记下我已经谈过其他一些的笔记

2204
02:42:57,519 --> 02:43:02,400
登录主题没问题，所以我们将处理弱密码

2205
02:43:02,400 --> 02:43:06,400
我们在登录视图中处理其他错误的方式

2206
02:43:06,400 --> 02:43:10,639
然后说如果e代码等于

2207
02:43:10,639 --> 02:43:14,239
密码强度低

2208
02:43:14,239 --> 02:43:19,680
让我们说打印周密码好吧

2209
02:43:19,680 --> 02:43:23,915
我们会说，嗯，这就是现在好吧

2210
02:43:23,915 --> 02:43:30,160
我将再次调出 um 调试控制台

2211
02:43:30,160 --> 02:43:32,800
再按一下注册按钮

2212
02:43:32,800 --> 02:43:37,199
现在你会看到信息让我把它带来，这样你就可以真正看到它

2213
02:43:37,199 --> 02:43:42,160
是的，您实际上可以看到它很棒，您可以看到此处打印了弱密码

2214
02:43:42,160 --> 02:43:46,639
好吧，那太好了，现在我们走吧，让我带上 let make

2215
02:43:46,639 --> 02:43:50,959
屏幕大一点我们接下来要处理的事情

2216
02:43:50,959 --> 02:43:56,559
嗯，在这个注册视图中，正如您在此处的标题中看到的那样

2217
02:43:56,559 --> 02:44:00,639
您还可能会收到一个名为 email already in use 的错误，所以如果您转到 else

2218
02:44:00,639 --> 02:44:03,436
再次声明并打印 e

2219
02:44:03,436 --> 02:44:08,160
如果我尝试使用我之前注册的同一电子邮件进行注册

2220
02:44:08,160 --> 02:44:12,559
这个用户已经存在，即使我有一个很好的密码

2221
02:44:12,559 --> 02:44:16,839
用户所以我要说 fubar bass

2222
02:44:16,839 --> 02:44:20,000
1029.所以我们知道错误不会发生

2223
02:44:20,000 --> 02:44:23,595
成为密码，就像它实际上是一个很好的密码一样

2224
02:44:23,595 --> 02:44:28,720
至少比 fubar baz 和 that 或 abc 好，所以我只想说注册

2225
02:44:28,720 --> 02:44:31,120
和

2226
02:44:31,120 --> 02:44:36,160
我们在这里没有得到任何价值还是我什至按下了注册按钮

2227
02:44:36,160 --> 02:44:39,436
它真的记录了像素 a b

2228
02:44:39,436 --> 02:44:42,559
不，我不这么认为

2229
02:44:42,559 --> 02:44:48,639
哦，我没有保存文件哎呀，所以是的，我没有保存我的更改，我要说

2230
02:44:48,639 --> 02:44:52,879
注册哦，现在它说电子邮件已在使用中，并且

2231
02:44:52,879 --> 02:44:55,756
这正是我的意思是这几乎是我们必须正确处理的

2232
02:44:55,756 --> 02:45:00,959
因为我们正在打印 e 所以我不必说哦，没有惊喜

2233
02:45:00,959 --> 02:45:05,120
在那里，让我们已经处理电子邮件并使用

2234
02:45:05,120 --> 02:45:08,879
我将复制这封电子邮件并完全按照原样使用字符串

2235
02:45:08,879 --> 02:45:12,319
这里提到了，我要去别的地方说

2236
02:45:12,319 --> 02:45:18,879
否则，如果 e 代码等于该字符串，然后说 uh email is

2237
02:45:18,879 --> 02:45:22,959
已经使用好了

2238
02:45:22,959 --> 02:45:27,839
然后将其保存在那里清除日志按注册按钮

2239
02:45:27,839 --> 02:45:34,160
再次，您现在可以看到它说电子邮件已在使用中

2240
02:45:34,160 --> 02:45:36,239
所以嗯

2241
02:45:36,239 --> 02:45:41,199
让我也看看我的笔记

2242
02:45:41,199 --> 02:45:44,480
嗯

2243
02:45:44,480 --> 02:45:48,639
我也可以在我在任何地方都看不到的笔记中对你说实话

2244
02:45:48,639 --> 02:45:54,879
我们真的在尝试处理呃这些错误，就像实际做的那样

2245
02:45:54,879 --> 02:45:59,915
关于他们的一些事情，所以

2246
02:45:59,915 --> 02:46:04,559
也许更好的做法是

2247
02:46:04,559 --> 02:46:09,275
非常喜欢向用户显示消息或其他内容

2248
02:46:09,275 --> 02:46:13,756
我现在有点想知道这是个好主意还是坏主意

2249
02:46:13,756 --> 02:46:18,639
对本章的想法，也许只是打印就足够了

2250
02:46:18,639 --> 02:46:22,639
你对此并不完全确定，所以

2251
02:46:22,639 --> 02:46:27,915
嗯，让我们暂时搁置吧，好吧，我也会去这里确保

2252
02:46:27,915 --> 02:46:32,400
我不是，是的，我在，请勿打扰，所以让我们把它留在那封电子邮件中

2253
02:46:32,400 --> 02:46:36,559
已经使用完美了，我们就这样吧

2254
02:46:36,559 --> 02:46:38,400
现在我们必须处理的下一件事

2255
02:46:38,400 --> 02:46:42,800
它还可以写出用户尝试输入无效电子邮件的情况

2256
02:46:42,800 --> 02:46:46,400
好吧，让我们在这里写一个 else 语句并说 print

2257
02:46:46,400 --> 02:46:50,319
嗯e代码再次保存它

2258
02:46:50,319 --> 02:46:55,040
让我们去删除这个添加标志，让它变成无效的电子邮件，然后尝试

2259
02:46:55,040 --> 02:47:00,639
按下注册按钮 好的 现在你可以看到 呃 你现在实际上看不到

2260
02:47:00,639 --> 02:47:05,120
你可以在日志的底部看到它说无效的电子邮件，这就是代码

2261
02:47:05,120 --> 02:47:10,800
对于那个错误，现在让我们处理无效的电子邮件吧

2262
02:47:10,800 --> 02:47:16,800
所以我要去这里说如果我们调用无效电子邮件的电子代码然后

2263
02:47:16,800 --> 02:47:22,160
我们会说打印输入的无效电子邮件并保存

2264
02:47:22,160 --> 02:47:26,400
所以清除日志点击注册按钮，现在你会

2265
02:47:26,400 --> 02:47:31,839
看到无效的电子邮件输入好了

2266
02:47:31,839 --> 02:47:35,680
我的意思是这真的是我们所要做的

2267
02:47:35,680 --> 02:47:40,639
现在我们的错误处理和我们正在进行的我

2268
02:47:40,639 --> 02:47:42,879
说实话我还有一点时间去弄清楚

2269
02:47:42,879 --> 02:47:46,800
我们是否真的要处理这些事情，我的意思是

2270
02:47:46,800 --> 02:47:50,319
如果我们需要显示一些错误

2271
02:47:50,319 --> 02:47:56,559
用户还好，我们可能需要这样做，但这有点复杂，比如

2272
02:47:56,559 --> 02:47:59,680
取决于我们想如何处理它，我们是否想向

2273
02:47:59,680 --> 02:48:03,275
用户你想向用户敬酒吗？

2274
02:48:03,275 --> 02:48:06,400
还是我们想向用户显示另一个屏幕，这有点像

2275
02:48:06,400 --> 02:48:10,879
现在连我都不清楚，所以也许我们会解决这些问题

2276
02:48:10,879 --> 02:48:16,639
正如我们在接下来的章节中继续介绍的那样

2277
02:48:16,639 --> 02:48:19,275
所以

2278
02:48:19,275 --> 02:48:24,000
现在我可以在这里看到登录

2279
02:48:24,000 --> 02:48:28,480
我们已经讨论过这个以及我们需要做什么

2280
02:48:28,480 --> 02:48:34,720
为了能够继续接下来的章节

2281
02:48:34,720 --> 02:48:40,800
实际上是为了确保我们登录到你看到的应用程序

2282
02:48:40,800 --> 02:48:44,639
我们处理过注册视图 我们处理过登录视图

2283
02:48:44,639 --> 02:48:48,400
我们在这里尝试了很多不同的组合来注册新用户

2284
02:48:48,400 --> 02:48:51,519
登录所以我个人目前不知道是否

2285
02:48:51,519 --> 02:48:56,639
此应用程序 firebase 实例实际上有一个登录用户，如果

2286
02:48:56,639 --> 02:49:01,275
你熟悉 python django 或 flask 或者如果你正在做 nodejs 或

2287
02:49:01,275 --> 02:49:04,400
后端开发之类的任何开发

2288
02:49:04,400 --> 02:49:09,040
您可以是登录用户，但最终仍处于登录视图中

2289
02:49:09,040 --> 02:49:14,239
因此，如果您将登录登录用户发送到登录视图并不意味着该用户

2290
02:49:14,239 --> 02:49:17,680
没有登录，这意味着用户是

2291
02:49:17,680 --> 02:49:22,080
已登录，但可能希望以其他用户身份登录，因此

2292
02:49:22,080 --> 02:49:25,519
我们的应用程序也有一个注册屏幕和一个登录视图，但我

2293
02:49:25,519 --> 02:49:28,959
个人不知道目前应用的状态是什么

2294
02:49:28,959 --> 02:49:32,080
登录还是我们没有登录，因为我们有点像玩

2295
02:49:32,080 --> 02:49:37,199
这里有不同的观点，好吧，所以现在这很重要，因为在

2296
02:49:37,199 --> 02:49:42,080
下一章我可以在第 14 章中看到我们将使用

2297
02:49:42,080 --> 02:49:45,275
嗯，我们正在努力分离应用程序

2298
02:49:45,275 --> 02:49:48,639
从登录和注册屏幕初始化，因为您可以在

2299
02:49:48,639 --> 02:49:52,559
当我们拥有这个未来的建设者时

2300
02:49:52,559 --> 02:49:57,120
初始化firebase，它正在做很多工作，快照留在

2301
02:49:57,120 --> 02:50:01,275
完成等等，我们在两个视图登录视图中做同样的事情，

2302
02:50:01,275 --> 02:50:04,400
注册视图所以我们需要做的有点像

2303
02:50:04,400 --> 02:50:07,519
分离该逻辑并确保我们显示正确的

2304
02:50:07,519 --> 02:50:11,275
查看取决于是的应用程序的状态是什么，在我们可以之前

2305
02:50:11,275 --> 02:50:15,275
然后继续或开始我们需要确保用户

2306
02:50:15,275 --> 02:50:22,000
当前用户已经登录好了，让我们去我们的 um

2307
02:50:22,000 --> 02:50:27,040
此处的主要飞镖和登录已显示登录视图，所以我真的不是你

2308
02:50:27,040 --> 02:50:30,959
无需担心这部分导入登录视图

2309
02:50:30,959 --> 02:50:36,000
你现在需要做的是确保我们不是注册视图

2310
02:50:36,000 --> 02:50:39,839
显示登录视图并记住现在我们正在保存一些东西

2311
02:50:39,839 --> 02:50:44,160
更改主函数中的某些内容，因此不会进行热重载

2312
02:50:44,160 --> 02:50:50,000
工作，所以你需要做热重启，所以我们将进入那个登录视图

2313
02:50:50,000 --> 02:50:55,839
然后让我们在这里输入有效的详细信息，所以我要说 pixelityab.gmail.com

2314
02:50:55,839 --> 02:51:00,720
我认为密码是老实说最好的

2315
02:51:00,720 --> 02:51:06,000
我要按下登录按钮，然后我们得到了

2316
02:51:06,000 --> 02:51:12,239
该用户的凭据哇，这是很多信息，我

2317
02:51:12,239 --> 02:51:16,959
明白了，所以我们现在需要做什么，我要走了

2318
02:51:16,959 --> 02:51:21,275
在我的笔记中记一些东西是

2319
02:51:21,275 --> 02:51:25,199
正如我提到的，我们需要为下一章做我的意思是我们已经完成了

2320
02:51:25,199 --> 02:51:28,720
说实话，这一章我们已经谈了很多，比如异常处理

2321
02:51:28,720 --> 02:51:32,239
将登录视图与注册视图分开，但我们的注册视图是

2322
02:51:32,239 --> 02:51:35,275
仍然在主要飞镖中，我们要我们要

2323
02:51:35,275 --> 02:51:39,120
很快解决这个问题，但你需要知道之前做什么

2324
02:51:39,120 --> 02:51:42,080
您继续下一章，并确保您正在显示

2325
02:51:42,080 --> 02:51:46,639
用户的登录视图，并且您实际上正在使用有效的登录

2326
02:51:46,639 --> 02:51:51,680
用户名和密码，这可确保正在运行的 firebase 实例

2327
02:51:51,680 --> 02:51:56,959
这个应用程序现在将在 ios 上本地缓存该信息是

2328
02:51:56,959 --> 02:52:01,595
将该信息缓存在称为钥匙串的安全存储中

2329
02:52:01,595 --> 02:52:05,360
android 我认为它被称为共享偏好或类似的东西

2330
02:52:05,360 --> 02:52:09,519
以便信息现在将安全地存储在该电话上

2331
02:52:09,519 --> 02:52:13,360
对我来说这是一部安卓手机

2332
02:52:13,360 --> 02:52:17,040
当我重新启动应用程序时，如果我喜欢关闭我的

2333
02:52:17,040 --> 02:52:21,040
电话重新启动电话操作系统回来该信息已经

2334
02:52:21,040 --> 02:52:25,756
保存在该电话上，因此我的用户可以正常登录

2335
02:52:25,756 --> 02:52:29,360
所以只要确保在你继续下一章之前你已经

2336
02:52:29,360 --> 02:52:33,199
首先注册用户并且您已经从该用户登录

2337
02:52:33,199 --> 02:52:38,800
您的应用程序，这样信息就可以缓存在应用程序中

2338
02:52:38,800 --> 02:52:43,436
好很多资料在下一章

2339
02:52:43,436 --> 02:52:48,480
我们将把应用程序初始化与登录和

2340
02:52:48,480 --> 02:52:53,040
注册屏幕 我们只需执行几个步骤

2341
02:52:53,040 --> 02:52:58,559
在那一章里

2342
02:52:58,559 --> 02:53:02,720
所以我认为那一章实际上不会那么长

2343
02:53:02,720 --> 02:53:07,756
所以拿一杯茶咖啡，不管你想要什么巧克力，不管它是什么，

2344
02:53:07,756 --> 02:53:13,040
我会在下一章见到你你好，欢迎来到第 14 章

2345
02:53:13,040 --> 02:53:16,239
正如您在上一章中看到的，我们在 Flutter 课程中

2346
02:53:16,239 --> 02:53:21,915
处理登录视图现在我们有一个登录视图和一个注册视图

2347
02:53:21,915 --> 02:53:25,915
你还看到的是我们做了一些非常简单的

2348
02:53:25,915 --> 02:53:29,360
各种场景的错误处理，例如

2349
02:53:29,360 --> 02:53:34,559
呃邮箱已经注册了弱密码嗯

2350
02:53:34,559 --> 02:53:38,720
无效的电子邮件 密码错误或密码错误 i

2351
02:53:38,720 --> 02:53:42,879
认为它被称为所以现在我们有两个视图

2352
02:53:42,879 --> 02:53:47,360
嗯，我们有，但我们有两个主要问题要解决

2353
02:53:47,360 --> 02:53:50,720
注册或注册认为

2354
02:53:50,720 --> 02:53:55,595
我们创造了仍然生活在我们的

2355
02:53:55,595 --> 02:54:00,000
main.dart 文件，另一个问题是标题

2356
02:54:00,000 --> 02:54:04,879
这里显示的是小部件正在执行应用程序初始化

2357
02:54:04,879 --> 02:54:09,275
如果您从代码中记得有这个 firebase 初始化

2358
02:54:09,275 --> 02:54:13,199
我们必须做的 api 调用，因为

2359
02:54:13,199 --> 02:54:17,199
登录视图和注册视图非常相似，它们都是

2360
02:54:17,199 --> 02:54:21,360
做firebase的初始化

2361
02:54:21,360 --> 02:54:24,000
我们在这一章要做的是

2362
02:54:24,000 --> 02:54:28,319
将这些 um 初始化和

2363
02:54:28,319 --> 02:54:32,400
让它们成为我们需要做的第一件事，所以我们只是

2364
02:54:32,400 --> 02:54:35,040
有一个将要发生的初始化

2365
02:54:35,040 --> 02:54:38,959
我们还要做的是将寄存器视图放在它自己的文件中

2366
02:54:38,959 --> 02:54:42,959
所以这一章将是一个与其他章节不同的快速章节

2367
02:54:42,959 --> 02:54:46,080
我认为对你说实话有点令人耳目一新，否则所有章节

2368
02:54:46,080 --> 02:54:49,680
会很长很详细

2369
02:54:49,680 --> 02:54:55,360
所以说让我们然后嗯

2370
02:54:55,360 --> 02:54:59,595
那么让我们从我们要做的第一件事开始吧

2371
02:54:59,595 --> 02:55:02,639
这基本上是将寄存器视图移动到

2372
02:55:02,639 --> 02:55:05,839
意见 注册 意见 好的 我去看看我能不能提出来

2373
02:55:05,839 --> 02:55:10,639
Visual Studio Code 嗯，我们之前是如何离开它的

2374
02:55:10,639 --> 02:55:15,275
我将提出 scrcpy 哪个

2375
02:55:15,275 --> 02:55:19,680
我的安卓手机现在正在运行我们的颤振应用吗

2376
02:55:19,680 --> 02:55:24,000
所以让我们按照标题说的做吧，我要把屏幕做一点点

2377
02:55:24,000 --> 02:55:28,480
更大，以便您看得更清楚然后转到您的项目呃或资源管理器

2378
02:55:28,480 --> 02:55:31,436
这里是visual studio core 如果你使用的是android studio，你可以去

2379
02:55:31,436 --> 02:55:34,959
navigator 那里也有类似的 android studio 或者如果

2380
02:55:34,959 --> 02:55:38,720
您使用的 sublime 与左侧完全相同

2381
02:55:38,720 --> 02:55:43,595
您可以看到项目结构，然后转到 lib，然后像我们一样查看

2382
02:55:43,595 --> 02:55:47,275
那里的登录视图让我们创建一个名为注册视图的视图，因此右键单击此处

2383
02:55:47,275 --> 02:55:53,199
并说新文件，我要说注册 mu dot dart

2384
02:55:53,199 --> 02:55:58,959
好的，那么我们必须像问题所说的那样回到我们的主 dart 文件并

2385
02:55:58,959 --> 02:56:03,756
从这里抓取这个注册视图组所有的注册视图，包括

2386
02:56:03,756 --> 02:56:08,319
它的注册视图状态抓住了所有这些

2387
02:56:08,319 --> 02:56:12,800
在mac中剪切它你用命令x来做，在windows和linux中我认为你做

2388
02:56:12,800 --> 02:56:16,959
控制x，所以嗯，我剪掉了，然后我会带来

2389
02:56:16,959 --> 02:56:21,199
正如您在上一章中看到的那样，它进入注册视图

2390
02:56:21,199 --> 02:56:23,839
这些事情通常会引起很多头痛

2391
02:56:23,839 --> 02:56:27,519
为你的编辑，因为我的意思是它不是

2392
02:56:27,519 --> 02:56:30,400
让您头疼，因为我们可以轻松地为我们修复它，这不是问题，但是

2393
02:56:30,400 --> 02:56:32,959
只是编辑器不明白所有这些类在哪里

2394
02:56:32,959 --> 02:56:36,959
位于所以我之前已经解释过

2395
02:56:36,959 --> 02:56:40,400
在此之前的确切前一章，所以我不会再解释它所以

2396
02:56:40,400 --> 02:56:44,800
让我们在 Visual Studio 代码中说命令点，然后说要修复的导入材料

2397
02:56:44,800 --> 02:56:48,480
所有有状态的小部件问题和所有类的所有事情

2398
02:56:48,480 --> 02:56:53,040
存放在 flotter 包中的材料 dart 中 好的

2399
02:56:53,040 --> 02:56:55,595
然后我们还有其他问题，例如firebase，所以

2400
02:56:55,595 --> 02:57:01,756
命令 dot import firebase core 修复该命令 dot import firebase options

2401
02:57:01,756 --> 02:57:05,360
这就是那个问题，我们也会有

2402
02:57:05,360 --> 02:57:11,199
我相信要导入firebase，这也已经解决了，所以现在我们

2403
02:57:11,199 --> 02:57:14,800
在这里有一个完美的注册视图，嗯

2404
02:57:14,800 --> 02:57:19,519
如果你现在在我们的主要飞镖中看到这里有很多东西是

2405
02:57:19,519 --> 02:57:23,595
进口的不是不再需要的

2406
02:57:23,595 --> 02:57:28,160
所以让我们删除那些你可以看到这些东西实际上是

2407
02:57:28,160 --> 02:57:32,080
你可能会说好吧，我怎么能找到所有这些问题，就像有很多

2408
02:57:32,080 --> 02:57:35,595
这里有问题，但如果我没有回到我不会看到的主 dart 文件

2409
02:57:35,595 --> 02:57:39,915
他们以及解决这个问题的方法是真正提出你的

2410
02:57:39,915 --> 02:57:44,720
问题查看here，你会看到有很多问题表明

2411
02:57:44,720 --> 02:57:49,120
你可以去修复那些你看到的打印语句在这里然后

2412
02:57:49,120 --> 02:57:54,239
未使用的导入，你可以清理它们

2413
02:57:54,239 --> 02:57:57,680
这就是你如何使用问题窗口

2414
02:57:57,680 --> 02:58:02,639
我要手动做，现在删除这个并删除这个，所以我们有一个干净的

2415
02:58:02,639 --> 02:58:06,160
void main function here 好吧，我要做一个热重启，以确保

2416
02:58:06,160 --> 02:58:12,239
一切都按预期工作然后我们在这里有登录视图

2417
02:58:12,239 --> 02:58:18,559
所以我们现在需要做的下一件事就是我实际上要去做的笔记

2418
02:58:18,559 --> 02:58:22,559
我的笔记，并确保我已经谈到了前一点

2419
02:58:22,559 --> 02:58:26,959
所以接下来我们需要做的是创建一个专门的主页

2420
02:58:26,959 --> 02:58:32,080
应用程序初始化，取决于用户是登录还是登录

2421
02:58:32,080 --> 02:58:35,915
out 或者如果用户已通过验证，那么它将显示正确的

2422
02:58:35,915 --> 02:58:40,000
屏幕上的小部件没关系，所以只是为了解释一下

2423
02:58:40,000 --> 02:58:45,120
是我的意思是你我可以说你在这里看到你的主要功能

2424
02:58:45,120 --> 02:58:48,639
当你的应用程序运行你它运行你告诉它去登录视图

2425
02:58:48,639 --> 02:58:52,319
但是为什么我们说去登录视图

2426
02:58:52,319 --> 02:58:57,519
为什么我们说去注册视图我们现在没有逻辑说

2427
02:58:57,519 --> 02:59:01,199
您是否已登录然后显示登录视图，或者如果您不喜欢我并显示

2428
02:59:01,199 --> 02:59:04,080
注册表，这就是我们要做的

2429
02:59:04,080 --> 02:59:08,400
主页好吧，所以想象一下主页是

2430
02:59:08,400 --> 02:59:13,199
您的应用程序可以管理的不同路线，所以说哦，如果这样

2431
02:59:13,199 --> 02:59:18,000
如果该条件显示另一个屏幕，则执行此操作

2432
02:59:18,000 --> 02:59:23,120
我们需要一个主页并且方便地命名为主页我的意思是很多其他的

2433
02:59:23,120 --> 02:59:27,595
人们可能会尝试将其称为其他名称，例如路线页面或其他

2434
02:59:27,595 --> 02:59:30,639
但是现在我们将使用主页，因为它很容易

2435
02:59:30,639 --> 02:59:35,360
为大家理解所以让我们进入这里

2436
02:59:35,360 --> 02:59:40,160
并说我们想要一个无状态的小部件 stl，我们要去

2437
02:59:40,160 --> 02:59:44,559
称它为主页好吧，然后我会按 Escape 所以现在我们有一个

2438
02:59:44,559 --> 02:59:50,080
在我们的主 dart 文件中称为主页的无状态小部件

2439
02:59:50,080 --> 02:59:54,879
现在我们需要做的然后在那之后

2440
02:59:54,879 --> 02:59:59,680
我们需要进入我们的主 dart 文件，而不是说登录视图，让我们只是

2441
02:59:59,680 --> 03:00:03,839
说主页好，如果我按命令记住这不会

2442
03:00:03,839 --> 03:00:07,595
立即生效，因为不考虑热重载

2443
03:00:07,595 --> 03:00:10,639
它改变了这里的主要功能，所以你必须做一个热重启，所以你会看到

2444
03:00:10,639 --> 03:00:13,839
现在黑屏还好所以

2445
03:00:13,839 --> 03:00:16,639
就是这样

2446
03:00:16,639 --> 03:00:20,720
所以我们现在需要做的是

2447
03:00:20,720 --> 03:00:24,239
基本上有一些脚手架在我们的

2448
03:00:24,239 --> 03:00:27,120
主页，因为我们不想只向用户显示一个空屏幕

2449
03:00:27,120 --> 03:00:28,879
可以，然后呢

2450
03:00:28,879 --> 03:00:34,480
让我们进入我们的容器而不是说我们返回一个脚手架

2451
03:00:34,480 --> 03:00:37,915
前几章讲过脚手架，就不解释了

2452
03:00:37,915 --> 03:00:42,319
再次，让我们去创建一个应用栏

2453
03:00:42,319 --> 03:00:48,080
我们还谈到了产权账户文本并说主页

2454
03:00:48,080 --> 03:00:50,480
好的

2455
03:00:50,480 --> 03:00:55,436
在 mac 中使用 command s 或在 linux 和 windows 中使用 control s 来保存这个文件并

2456
03:00:55,436 --> 03:01:00,480
您会看到更改立即生效

2457
03:01:00,480 --> 03:01:04,720
好吧，我们说的主页需要什么

2458
03:01:04,720 --> 03:01:10,160
主页需要初始化 firebase 它需要首先这样做

2459
03:01:10,160 --> 03:01:14,879
我们可以在两个寄存器视图中摆脱这个代码你会看到这个代码未来

2460
03:01:14,879 --> 03:01:19,199
builder firebase 初始化应用程序，然后连接状态完成等等等等

2461
03:01:19,199 --> 03:01:22,639
我们的登录视图中有完全相同的代码，所以

2462
03:01:22,639 --> 03:01:26,639
在我们要开发的每个视图中都有很多代码要编写

2463
03:01:26,639 --> 03:01:29,519
这个应用程序不会有这么多的浏览量，可能有六七次浏览，但是

2464
03:01:29,519 --> 03:01:34,400
我们仍然不想在每个视图中初始化应用程序并做一个未来的构建器

2465
03:01:34,400 --> 03:01:38,879
这只是很多代码，所以这就是我们的

2466
03:01:38,879 --> 03:01:46,639
主页会好起来的，所以让我们这样做吧，我们去抓

2467
03:01:46,639 --> 03:01:51,519
这个代码呃对不起

2468
03:01:51,519 --> 03:01:55,680
让我们与未来的构建者一起获取这段代码，几乎可能是整个

2469
03:01:55,680 --> 03:02:00,559
从我们的登录视图构建功能没问题，所以转到您的登录视图获取整个

2470
03:02:00,559 --> 03:02:06,160
构建函数直到它的结尾，这就是这个括号好的结尾

2471
03:02:06,160 --> 03:02:08,480
括号 关闭您的登录视图 关闭您的

2472
03:02:08,480 --> 03:02:13,360
如果你想注册视图然后去替换小部件的整个覆盖

2473
03:02:13,360 --> 03:02:18,400
使用您刚刚剪切的代码构建您的主页，或者

2474
03:02:18,400 --> 03:02:22,000
抱歉从登录视图复制粘贴在这里

2475
03:02:22,000 --> 03:02:26,879
现在我们不希望主页有任何相关的逻辑

2476
03:02:26,879 --> 03:02:29,120
和嗯

2477
03:02:29,120 --> 03:02:33,915
这个主页的文本字段是我们将用它来做一些更崇高的事情

2478
03:02:33,915 --> 03:02:37,915
所以你不需要所有的文本字段和

2479
03:02:37,915 --> 03:02:41,680
和所有这些专栏和呃你的文字

2480
03:02:41,680 --> 03:02:45,360
按钮，所以去这里你正在创建

2481
03:02:45,360 --> 03:02:50,800
连接状态的列完成并从

2482
03:02:50,800 --> 03:02:54,879
返回，所以如果我折叠它，你会看到那是整个返回，我要走了

2483
03:02:54,879 --> 03:02:58,239
实际删除它哎呀它没有删除整个代码

2484
03:02:58,239 --> 03:03:00,800
好的，所以我要从退货开始手工完成

2485
03:03:00,800 --> 03:03:05,756
一直到这里

2486
03:03:05,756 --> 03:03:09,436
专栏结束没问题

2487
03:03:09,436 --> 03:03:13,040
而不是那个专栏，我们要做什么

2488
03:03:13,040 --> 03:03:18,559
只是返回一个文字，上面写着

2489
03:03:18,559 --> 03:03:22,319
好吧，就这样，如果firebase

2490
03:03:22,319 --> 03:03:26,480
初始化完成它只是会说完成，让我们也改变文本

2491
03:03:26,480 --> 03:03:30,000
在这里，现在我们已经完成了，你可以看到我们

2492
03:03:30,000 --> 03:03:33,120
由于我删除了firebase，仍然有一些问题没有被导入

2493
03:03:33,120 --> 03:03:35,519
那些嗯嗯

2494
03:03:35,519 --> 03:03:39,756
以前导入，所以我现在要修复 firebase 上的命令点并说

2495
03:03:39,756 --> 03:03:44,080
在默认的firebase选项或控制点上导入该和命令点

2496
03:03:44,080 --> 03:03:49,680
取决于是否在您的 linux 上，无论您是在 linux 还是 mac 上

2497
03:03:49,680 --> 03:03:54,480
windows 导入 firebase 选项

2498
03:03:54,480 --> 03:03:57,680
好的，现在你会看到我们有一个只显示单词的主页

2499
03:03:57,680 --> 03:04:01,595
在这里做一次我们未来的连接状态

2500
03:04:01,595 --> 03:04:06,319
这是firebase的初始化应用程序实际上已经完成了热重载

2501
03:04:06,319 --> 03:04:11,519
你会看到 hotdog sorry done 也显示 hot done

2502
03:04:11,519 --> 03:04:14,160
嗯嗯

2503
03:04:14,160 --> 03:04:18,480
我会把它记在我已经谈过的笔记中

2504
03:04:18,480 --> 03:04:21,199
好的，接下来我们需要做的就是

2505
03:04:21,199 --> 03:04:26,480
章是确保用户不为空

2506
03:04:26,480 --> 03:04:32,080
并且用户也经过验证，因此在一些罕见的情况下

2507
03:04:32,080 --> 03:04:36,000
firebase，例如当您尚未初始化 firebase 应用程序时

2508
03:04:36,000 --> 03:04:42,000
使用初始化应用程序存储在 firebase um 中的用户

2509
03:04:42,000 --> 03:04:45,199
firebase 代码或在 firebits 的实例中

2510
03:04:45,199 --> 03:04:49,120
在你的应用程序中运行实际上可能是空的，我们已经讨论过

2511
03:04:49,120 --> 03:04:53,436
null 在我们之前讨论过飞镖的章节中，它是基础知识，所以你

2512
03:04:53,436 --> 03:04:56,239
可以回到那些章节并观看那些所以我不打算解释什么

2513
03:04:56,239 --> 03:04:59,915
null 再次出现，但很快 null 只是简单地说

2514
03:04:59,915 --> 03:05:03,680
在这种情况下没有值 没有用户所以

2515
03:05:03,680 --> 03:05:07,915
我们在应用程序中需要做的是确保

2516
03:05:07,915 --> 03:05:09,839
那一个

2517
03:05:09,839 --> 03:05:13,436
应用程序中的当前用户是用户

2518
03:05:13,436 --> 03:05:19,040
um non-null 意味着它应该存在并且用户的电子邮件

2519
03:05:19,040 --> 03:05:22,160
应该验证好所以

2520
03:05:22,160 --> 03:05:27,040
您可能会问为什么用户的电子邮件很重要

2521
03:05:27,040 --> 03:05:29,436
验证了原因

2522
03:05:29,436 --> 03:05:32,959
我的意思也是在我说为什么用户的电子邮件很重要之前

2523
03:05:32,959 --> 03:05:37,915
验证也许让我们先谈谈电子邮件验证是什么

2524
03:05:37,915 --> 03:05:42,080
无论您是否已经在许多在线服务中看到它，如果

2525
03:05:42,080 --> 03:05:46,160
例如，您访问一个网站，即使它是一个购物网站，或者

2526
03:05:46,160 --> 03:05:49,519
亚马逊或任何 ebay，如果你说好的，我想注册一个新用户，你

2527
03:05:49,519 --> 03:05:54,000
说好这是我的电子邮件地址这是我选择的密码

2528
03:05:54,000 --> 03:05:57,275
一旦你这样做，你将登录到网站

2529
03:05:57,275 --> 03:06:00,400
如果此电子邮件不存在，他们会说好的

2530
03:06:00,400 --> 03:06:04,480
我会允许你注册这个但是你真的不能这样做

2531
03:06:04,480 --> 03:06:07,680
有这么多的网站，你可以搜索的东西，但你可能无法

2532
03:06:07,680 --> 03:06:11,756
买东西，除非你有

2533
03:06:11,756 --> 03:06:15,436
验证了您的电子邮件，这意味着一旦您注册亚马逊

2534
03:06:15,436 --> 03:06:19,275
例如，它会向您发送一封电子邮件到您选择的电子邮件

2535
03:06:19,275 --> 03:06:23,915
注册，通常会在该电子邮件中有一个链接，并说谢谢

2536
03:06:23,915 --> 03:06:28,959
在 amazon 或 ebay 注册用户单击此链接以验证您的电子邮件

2537
03:06:28,959 --> 03:06:32,879
您可能已经看到过这样的电子邮件地址

2538
03:06:32,879 --> 03:06:35,915
你可以去你的收件箱并搜索验证，你可能会

2539
03:06:35,915 --> 03:06:42,639
找到很多电子邮件，要求您使用该服务验证您的帐户，所以嗯

2540
03:06:42,639 --> 03:06:45,756
现在让我们现在讨论什么是电子邮件验证让我们谈谈

2541
03:06:45,756 --> 03:06:50,400
为什么它很重要让我们说我是用户并且我想使用它

2542
03:06:50,400 --> 03:06:53,680
我们正在开发的应用程序，所以我想在其中记一些笔记

2543
03:06:53,680 --> 03:06:59,680
然后我会去并在我不拥有的电子邮件下注册自己

2544
03:06:59,680 --> 03:07:03,680
好吧，让我们说然后我注册我的

2545
03:07:03,680 --> 03:07:08,080
你的电子邮件地址和我选择的密码，因为你还没有注册

2546
03:07:08,080 --> 03:07:12,080
您的电子邮件地址还带有服务图标并在您前面并注册您的

2547
03:07:12,080 --> 03:07:16,080
服务的电子邮件地址，现在我只需登录

2548
03:07:16,080 --> 03:07:19,680
记住我没有登录你的电子邮件我正在登录这个应用程序

2549
03:07:19,680 --> 03:07:24,319
你现在的电子邮件现在我已经收到了那封电子邮件所以如果你那时

2550
03:07:24,319 --> 03:07:28,239
谁是您的电子邮件地址的合法所有者来到此应用程序和

2551
03:07:28,239 --> 03:07:32,800
说哦，我是 foobarbaz gmail.com，我想用这个注册一个帐户

2552
03:07:32,800 --> 03:07:36,400
应用程序，它说哎呀，电子邮件地址已经被占用了，所以你会

2553
03:07:36,400 --> 03:07:39,519
就像那是我的电子邮件地址是怎么回事

2554
03:07:39,519 --> 03:07:43,595
这就是电子邮件验证的重要性，我们需要在我们的

2555
03:07:43,595 --> 03:07:47,519
应用程序是为了确保每当有人来注册一个

2556
03:07:47,519 --> 03:07:51,595
用户使用他们选择的电子邮件地址和密码，然后我们

2557
03:07:51,595 --> 03:07:56,959
将使用 firebase 向该电子邮件地址发送一封真实的电子邮件并说

2558
03:07:56,959 --> 03:08:03,040
嘿，你刚刚在这里注册了一个用户，确保你点击这个链接

2559
03:08:03,040 --> 03:08:08,879
说 verify blah blah 用我们的应用程序或用实际验证您的用户

2560
03:08:08,879 --> 03:08:13,756
我们的文件与我们的应用程序 firebase 实例位于 firebase cloud all

2561
03:08:13,756 --> 03:08:18,080
对，所以我们现在需要做的就是进去

2562
03:08:18,080 --> 03:08:20,559
这里处于连接状态完成你看到

2563
03:08:20,559 --> 03:08:26,480
然后让我们检查当前用户好吗让我们看看这个当前用户是否真的

2564
03:08:26,480 --> 03:08:31,040
已登录到应用程序，所以假设 firebase

2565
03:08:31,040 --> 03:08:34,720
嗯，然后让我们说

2566
03:08:34,720 --> 03:08:38,800
firebase 应用程序我相信它被称为实例

2567
03:08:38,800 --> 03:08:42,800
让我们看看有实例

2568
03:08:42,800 --> 03:08:47,756
changelog firebase 好吧，让我们看看我们是否真的可以

2569
03:08:47,756 --> 03:08:51,199
谷歌一起好吧，所以这对你也有好处

2570
03:08:51,199 --> 03:08:56,239
正确的基础颤振获取当前用户我们可能最终会得到一些

2571
03:08:56,239 --> 03:09:00,480
有点堆栈溢出，我们将看看我们如何

2572
03:09:00,480 --> 03:09:04,879
实际检索当前用户，您可以看到这里的响应来自

2573
03:09:04,879 --> 03:09:08,959
用户名相当的用户

2574
03:09:08,959 --> 03:09:15,040
dissu kurt jr 我很抱歉，如果我在扼杀这个名字，但你可以看到

2575
03:09:15,040 --> 03:09:18,480
它在这里为您提供，上面写着 firebaseos.instance

2576
03:09:18,480 --> 03:09:22,480
并使用该实例，然后您可以获得当前用户，所以让我们做同样的事情

2577
03:09:22,480 --> 03:09:27,436
这里的事情让我们说点实例的firebase

2578
03:09:27,436 --> 03:09:30,480
然后当前用户还可以

2579
03:09:30,480 --> 03:09:34,720
我要去掉左边的这个屏幕，这是我们的项目浏览器

2580
03:09:34,720 --> 03:09:39,756
在我们返回完成的文本之前，我将在此处打印此声明

2581
03:09:39,756 --> 03:09:44,559
所以我会调出调试控制台清除调试控制台，我要说

2582
03:09:44,559 --> 03:09:49,040
command 没问题，因为我们做了很多改变

2583
03:09:49,040 --> 03:09:52,720
在这里你看到我们在这里创建了一个主页很多东西所以我们需要做什么

2584
03:09:52,720 --> 03:09:56,480
只是做一个热重启，在这种情况下基本上是颤抖的

2585
03:09:56,480 --> 03:10:01,275
真正了解我们在主页中所做的更改，所以

2586
03:10:01,275 --> 03:10:05,915
有太多的变化，它无法处理，所以热重启是

2587
03:10:05,915 --> 03:10:09,756
补救措施现在你可以在这里看到我们打印的

2588
03:10:09,756 --> 03:10:13,199
当前用户 我将这样做，以便您可以看到更多

2589
03:10:13,199 --> 03:10:16,800
我将提出一个输出

2590
03:10:16,800 --> 03:10:19,915
一点点我将大大增加尺寸，这样你就可以看到

2591
03:10:19,915 --> 03:10:22,879
它也更好，并且

2592
03:10:22,879 --> 03:10:26,639
我将突出显示实际打印的部分，所以这就是

2593
03:10:26,639 --> 03:10:30,639
firebase 或者这是为我们打印的打印语句，这是

2594
03:10:30,639 --> 03:10:35,040
由 firebase 创建的用户凭据和

2595
03:10:35,040 --> 03:10:38,239
如果你记得上一章我说过，在你之前确保

2596
03:10:38,239 --> 03:10:43,436
来到本章你有一个登录用户，这就是我的原因

2597
03:10:43,436 --> 03:10:47,595
我希望我们的应用程序中的 firebase 实例已经

2598
03:10:47,595 --> 03:10:51,680
知道您已登录，以便在我们打印您当前的用户凭据时

2599
03:10:51,680 --> 03:10:55,199
然后你可以看到它说这里是电子邮件地址

2600
03:10:55,199 --> 03:10:59,839
然后有一个名为 email 验证为 false 的属性，它说你是

2601
03:10:59,839 --> 03:11:03,436
匿名用户 false 并且如果您记得其中之一

2602
03:11:03,436 --> 03:11:07,275
之前的章节我谈到了 Firebase 设置

2603
03:11:07,275 --> 03:11:11,436
匿名用户是尚未真正登录应用程序的用户

2604
03:11:11,436 --> 03:11:13,839
Firebase 足够智能

2605
03:11:13,839 --> 03:11:17,756
了解任何访问您的应用程序但尚未登录的用户

2606
03:11:17,756 --> 03:11:21,680
之前 or 并且他们的登录信息未保存在钥匙串中或

2607
03:11:21,680 --> 03:11:26,400
在 android 上共享首选项，然后该用户默认为匿名匿名

2608
03:11:26,400 --> 03:11:31,275
所以如果你没有采取上一章的最后一个动作

2609
03:11:31,275 --> 03:11:35,040
并且您没有使用当前用户登录应用程序

2610
03:11:35,040 --> 03:11:38,559
那么你在这里实际上是匿名的，所以这个标志会显示为真

2611
03:11:38,559 --> 03:11:41,915
但既然我们已经完成了我们已经登录到应用程序，那么您将

2612
03:11:41,915 --> 03:11:45,915
看到我们的凭据被打印到屏幕上

2613
03:11:45,915 --> 03:11:49,915
现在这是我感兴趣的部分，已通过电子邮件验证

2614
03:11:49,915 --> 03:11:56,000
它说的是假的，所以我们在这里要做的是说

2615
03:11:56,000 --> 03:12:01,040
带上用户，所以我们说最终用户是当前实例的 firebase

2616
03:12:01,040 --> 03:12:04,400
用户我要在这里把尺寸缩小一点，好的

2617
03:12:04,400 --> 03:12:08,959
我要把屏幕做得更大一点，这样你就能看得更清楚

2618
03:12:08,959 --> 03:12:12,639
然后让我们在这里创建一个 if 语句

2619
03:12:12,639 --> 03:12:17,199
让我们说我们要说我有什么计划让我们只是

2620
03:12:17,199 --> 03:12:23,275
说如果用户通过电子邮件验证，那么我们就去

2621
03:12:23,275 --> 03:12:27,915
说打印您是经过验证的用户

2622
03:12:27,915 --> 03:12:33,595
否则我们会说你需要打印

2623
03:12:33,595 --> 03:12:37,360
首先验证您的电子邮件

2624
03:12:37,360 --> 03:12:40,800
所以你看到这里是因为我很高兴

2625
03:12:40,800 --> 03:12:44,639
实际上我们看到了这个错误，你可以看到整个错误

2626
03:12:44,639 --> 03:12:47,275
它说我如何在这里滚动它说

2627
03:12:47,275 --> 03:12:50,959
无法无条件访问属性电子邮件验证，因为

2628
03:12:50,959 --> 03:12:56,639
接收者可以为空尝试使用问号点制作访问条件

2629
03:12:56,639 --> 03:13:01,915
或者向目标添加一个空检查所以这就是说如果你去这个

2630
03:13:01,915 --> 03:13:06,879
用户把你的鼠标移到上面，呃，如果我能做到的话，哦不

2631
03:13:06,879 --> 03:13:12,080
在这里你会看到它说用户是可选用户所以firebase做了什么

2632
03:13:12,080 --> 03:13:15,360
这是说您可以使用的当前用户属性

2633
03:13:15,360 --> 03:13:19,839
看到这里是一个可选的用户，意思是如果出现问题并且

2634
03:13:19,839 --> 03:13:23,436
firebase 无法实际计算您当前的用户

2635
03:13:23,436 --> 03:13:27,360
例如，如果您禁用匿名用户，您实际上可以这样做

2636
03:13:27,360 --> 03:13:31,120
然后会说firebase会说哎呀

2637
03:13:31,120 --> 03:13:34,239
空用户 用户缺席 我不知道这是谁

2638
03:13:34,239 --> 03:13:38,480
用户就是这样，firebase api告诉你

2639
03:13:38,480 --> 03:13:42,080
应用程序，如果您使用的是我的 api，那么您需要处理这种情况

2640
03:13:42,080 --> 03:13:45,915
不能只问我电子邮件是否经过验证，因为用户实际上可能

2641
03:13:45,915 --> 03:13:50,720
为 null 用户可能不存在，所以这里有一个很好的建议

2642
03:13:50,720 --> 03:13:54,800
在这里看到说您可以使用问题有条件地访问该属性

2643
03:13:54,800 --> 03:13:58,800
标记点语法所以让我们做那个问号

2644
03:13:58,800 --> 03:14:03,199
完成，但当你这样做时，你会发现你会遇到另一个问题

2645
03:14:03,199 --> 03:14:08,319
它说好的，你要我比较一个可选的

2646
03:14:08,319 --> 03:14:10,720
布尔值

2647
03:14:10,720 --> 03:14:14,879
一个实际的布尔值，因为请记住您的 if 条件需要解析为

2648
03:14:14,879 --> 03:14:20,480
对或错所以嗯所以在这种情况下你可以做的是

2649
03:14:20,480 --> 03:14:24,000
要么创建一个叫做的东西，例如，如果一个中间变量你

2650
03:14:24,000 --> 03:14:29,120
可以说最终电子邮件已验证

2651
03:14:29,120 --> 03:14:33,839
你会说这等于用户对电子邮件验证字段的可选访问权限

2652
03:14:33,839 --> 03:14:38,160
或假，你看这是我们已经问过的问号问号

2653
03:14:38,160 --> 03:14:41,436
当我们谈到黑暗的基础知识时谈到了

2654
03:14:41,436 --> 03:14:46,239
您在这里所说的是取这个问号运算符的左侧

2655
03:14:46,239 --> 03:14:51,120
问号，它是一个空感知运算符，你说如果左边

2656
03:14:51,120 --> 03:14:56,080
存在 取它 否则取右边的值 好的 所以现在如果你移动

2657
03:14:56,080 --> 03:15:00,800
将鼠标悬停在电子邮件上验证您会看到它是一个布尔值

2658
03:15:00,800 --> 03:15:05,120
完美，所以你可以这样做或摆脱这个中间变量

2659
03:15:05,120 --> 03:15:08,720
您在这里创建的，实际上只是将完全相同的代码放入您的 if

2660
03:15:08,720 --> 03:15:12,800
声明，这将完全像它在那里所做的那样，所以让我们继续吧

2661
03:15:12,800 --> 03:15:16,239
少了一行代码

2662
03:15:16,239 --> 03:15:21,839
代码行少了，也许嗯，好吧

2663
03:15:21,839 --> 03:15:25,519
如果用户的电子邮件已验证或 false 为 true

2664
03:15:25,519 --> 03:15:30,239
这意味着如果用户的电子邮件验证可以被解读为真实或

2665
03:15:30,239 --> 03:15:37,199
假，如果你不能使用假，如果等式本身是真的，那么

2666
03:15:37,199 --> 03:15:41,519
用户已验证，否则用户未经过验证，因此

2667
03:15:41,519 --> 03:15:46,000
让我们在那里执行命令 让我们打开我们的控制台，我要去

2668
03:15:46,000 --> 03:15:49,839
稍微改变一下屏幕布局，让你看得更清楚

2669
03:15:49,839 --> 03:15:53,275
你可以在这里看到它说你需要验证你的电子邮件我实际上清理了

2670
03:15:53,275 --> 03:15:56,400
屏幕一点点，然后再次命令 s，这样你会看到少一点

2671
03:15:56,400 --> 03:16:00,480
屏幕上的信息，你可以看到我们在这里得到的打印声明

2672
03:16:00,480 --> 03:16:05,040
打印说是的，你还没有验证你的电子邮件，你需要做

2673
03:16:05,040 --> 03:16:09,199
这首先可以有很多信息，但可能更少

2674
03:16:09,199 --> 03:16:13,040
与其他章节相比，老实说，这就是我们要谈的全部内容

2675
03:16:13,040 --> 03:16:15,915
关于本章我只想展示

2676
03:16:15,915 --> 03:16:20,959
或者向你展示那个或者实际上首先解释什么是电子邮件验证

2677
03:16:20,959 --> 03:16:25,519
为什么它很重要，我们将使用电子邮件验证

2678
03:16:25,519 --> 03:16:28,480
我们在我们的应用程序中，您很快就会看到

2679
03:16:28,480 --> 03:16:34,400
以及如何从 firebase 用户那里实际读取该属性

2680
03:16:34,400 --> 03:16:38,559
太好了，这就是本章的全部内容了

2681
03:16:38,559 --> 03:16:42,239
下一章会有点不同，你可能真的期待

2682
03:16:42,239 --> 03:16:46,480
本章的继续，你会认为我们会跳到右边

2683
03:16:46,480 --> 03:16:51,120
进入电子邮件验证，但我故意放了一点

2684
03:16:51,120 --> 03:16:54,639
在我们的流程中暂停，因为这是你会做的事情

2685
03:16:54,639 --> 03:16:58,160
作为软件开发人员有时必须这样做，如果你看到了什么

2686
03:16:58,160 --> 03:17:02,400
不正确的东西不起作用

2687
03:17:02,400 --> 03:17:05,680
那么你需要尽快解决它，这就是

2688
03:17:05,680 --> 03:17:10,080
我们将在下一章解决你可能遇到的问题

2689
03:17:10,080 --> 03:17:13,595
如果您是经验丰富的软件开发人员或者可能没有考虑过

2690
03:17:13,595 --> 03:17:17,915
是我们只是在我们的电脑上写代码

2691
03:17:17,915 --> 03:17:23,680
此代码很容易被恶意程序、病毒删除，或者如果

2692
03:17:23,680 --> 03:17:28,480
我们的电脑出了点问题，这一切都可能消失，你会输

2693
03:17:28,480 --> 03:17:31,275
你写的所有东西，如果你不是来自软件

2694
03:17:31,275 --> 03:17:35,595
工程背景那你可能不知道 git 和 github 是什么

2695
03:17:35,595 --> 03:17:37,915
现在我不会吓唬你说实话

2696
03:17:37,915 --> 03:17:41,595
和你在一起，这不是什么可怕的事情，但是嗯

2697
03:17:41,595 --> 03:17:44,720
我们需要做的只是确保我们有我们的代码的备份和

2698
03:17:44,720 --> 03:17:48,239
这只是常识，即使你是设计师，即使你是

2699
03:17:48,239 --> 03:17:53,199
音乐制作人，即使你是个软弱的人，如果你的产品所有者是谁

2700
03:17:53,199 --> 03:17:58,000
或产品经理，你可能知道无论你做什么工作都需要

2701
03:17:58,000 --> 03:18:02,239
安全地保存在某个地方，所以如果你有一个视频文件，你不只是去

2702
03:18:02,239 --> 03:18:05,199
把它放在你的电脑上，你可能会备份它，如果你

2703
03:18:05,199 --> 03:18:09,595
与 figma 合作，该文件已在云中共享，很抱歉没有

2704
03:18:09,595 --> 03:18:12,800
共享它已经存储在云中，所以

2705
03:18:12,800 --> 03:18:18,959
你很少会处理那些不是

2706
03:18:18,959 --> 03:18:23,120
安全地存储在某种云中，即使您正在工作

2707
03:18:23,120 --> 03:18:28,239
有一份文件，现在也有分享，对不起，有

2708
03:18:28,239 --> 03:18:30,800
用于存储文档的云解决方案

2709
03:18:30,800 --> 03:18:34,480
安全地在云端，所以我的意思是

2710
03:18:34,480 --> 03:18:38,480
几乎总是在您处理用户生成的文档或源代码时

2711
03:18:38,480 --> 03:18:41,680
在这种情况下，您需要确保它安全地存储在云中

2712
03:18:41,680 --> 03:18:44,720
这就是我们在下一章要做的，所以我们要谈谈

2713
03:18:44,720 --> 03:18:48,879
关于 git 和 github，我们将设置我们的 gpg 密钥

2714
03:18:48,879 --> 03:18:53,120
或 pgp 键你想说什么，我们实际上要潜水

2715
03:18:53,120 --> 03:18:57,275
深入了解 git 及其实际含义以及为什么会这样

2716
03:18:57,275 --> 03:19:03,040
很好，为什么软件开发人员经常谈论 git，你可能知道

2717
03:19:03,040 --> 03:19:06,720
这门课你可能不知道这门课

2718
03:19:06,720 --> 03:19:12,319
是关于颤振，但我忍不住把这一章放进去

2719
03:19:12,319 --> 03:19:15,756
因为我相信如果你不是软件开发人员，如果你来自

2720
03:19:15,756 --> 03:19:20,720
另一个背景，那么我有责任告诉你

2721
03:19:20,720 --> 03:19:25,519
关于 git 和 github 以及为什么我喜欢如何使用它很重要

2722
03:19:25,519 --> 03:19:29,040
获取 github 的非常简单的任务，所以嗯

2723
03:19:29,040 --> 03:19:32,319
所以让我们为下一章做好准备，这将是

2724
03:19:32,319 --> 03:19:36,879
少一点编码这不是真的我们根本没有几乎根本不去

2725
03:19:36,879 --> 03:19:41,120
为了处理源代码，我们主要使用 git 和 github

2726
03:19:41,120 --> 03:19:44,800
所以说我会结束这个

2727
03:19:44,800 --> 03:19:50,400
下一章再见

2728
03:19:50,400 --> 03:19:54,000
前几章的字母课程我们谈了很多

2729
03:19:54,000 --> 03:19:58,319
关于设置我们的项目，所以到目前为止我们一直在努力设置

2730
03:19:58,319 --> 03:20:02,879
我们还创建了登录和注册视图的项目和基础知识

2731
03:20:02,879 --> 03:20:07,040
在我们的颤振应用程序中，当我自己开发这门课程时，我必须

2732
03:20:07,040 --> 03:20:11,120
我写了很多代码然后我需要

2733
03:20:11,120 --> 03:20:15,120
确保它存放在我可以随时去的地方

2734
03:20:15,120 --> 03:20:19,040
回到即使我在我的电脑上丢失了这些我可以回到的信息

2735
03:20:19,040 --> 03:20:23,756
那个地方然后检索那个代码所以嗯

2736
03:20:23,756 --> 03:20:26,400
如果您是软件开发人员 如果您是经验丰富的软件开发人员

2737
03:20:26,400 --> 03:20:30,000
从以前开始，您就知道 git 和 github 是什么，并且您使用起来很舒服

2738
03:20:30,000 --> 03:20:34,000
他们并且您知道如何使用 gpg 设置您的安全密钥

2739
03:20:34,000 --> 03:20:37,680
那么你可以放心地跳过这一章，但如果你是设计师产品

2740
03:20:37,680 --> 03:20:42,160
不知道 git 和 github 是什么的所有者产品经理或

2741
03:20:42,160 --> 03:20:45,595
也许需要一些帮助来设置这些东西

2742
03:20:45,595 --> 03:20:50,480
那么这对你来说是一个很好的章节，否则你可以快速浏览

2743
03:20:50,480 --> 03:20:52,480
结束了

2744
03:20:52,480 --> 03:20:56,000
让我们快速谈谈 git 和

2745
03:20:56,000 --> 03:21:00,639
github 是以及为什么我们需要它们

2746
03:21:00,639 --> 03:21:03,436
例如我在开发这门课程时的代码，那么你就是

2747
03:21:03,436 --> 03:21:08,559
编写大量代码，我的意思是本质上有价值，因为

2748
03:21:08,559 --> 03:21:13,275
当您编写

2749
03:21:13,275 --> 03:21:18,720
代码你花了一些时间和精力和精力写了代码，所以它很

2750
03:21:18,720 --> 03:21:22,720
一条重要信息让您丢失，并取决于

2751
03:21:22,720 --> 03:21:25,680
你正在从事的项目类型，例如这个项目我花了

2752
03:21:25,680 --> 03:21:31,040
甚至花了很多时间来开发项目的想法并将其组合在一起

2753
03:21:31,040 --> 03:21:33,915
所以当我在整理课程的想法和

2754
03:21:33,915 --> 03:21:38,400
写下我必须在每个视频中解释的所有点点滴滴

2755
03:21:38,400 --> 03:21:43,595
对这些想法做了很多备份，因为我没有这样做

2756
03:21:43,595 --> 03:21:47,519
我是不是把所有东西都放在一张纸或其他东西上，或者只是

2757
03:21:47,519 --> 03:21:53,519
甚至我电脑上的一个数字文档如果我丢失了一个文档那么好吧

2758
03:21:53,519 --> 03:21:58,080
我会失去它，我必须从头开始

2759
03:21:58,080 --> 03:22:01,839
这与您的代码相同 [音乐]

2760
03:22:01,839 --> 03:22:07,199
所以你需要使用两个名为 git 和 github 的服务来

2761
03:22:07,199 --> 03:22:10,080
存储您的代码

2762
03:22:10,080 --> 03:22:14,559
放在一个安全的地方，以便您以后可以随时取回它

2763
03:22:14,559 --> 03:22:22,480
所以让我们快速谈谈什么是 git 以及为什么需要这个 um

2764
03:22:22,480 --> 03:22:28,080
所以关于 gitz 你需要知道的是 git 是一个

2765
03:22:28,080 --> 03:22:35,275
电脑上的一个软件，它可以让你

2766
03:22:35,275 --> 03:22:40,319
管理您对代码所做的各种更改

2767
03:22:40,319 --> 03:22:45,839
基础，例如我们的项目在不同时间跟踪那些日期

2768
03:22:45,839 --> 03:22:50,720
进行了更改 进行更改的人和更改本身

2769
03:22:50,720 --> 03:22:54,720
它还能够为您提供您最近之间的差异

2770
03:22:54,720 --> 03:22:59,839
更改以及已经提供的内容或已经提供的内容

2771
03:22:59,839 --> 03:23:06,400
提交到这个 git 存储库中 git 存储库的真正含义是什么

2772
03:23:06,400 --> 03:23:09,756
一个桶最初是一个空桶

2773
03:23:09,756 --> 03:23:15,199
那里什么都没有，当您与源代码交互时，您会喜欢

2774
03:23:15,199 --> 03:23:19,199
好的，现在我想把我写的这个源代码变成一个桶，然后

2775
03:23:19,199 --> 03:23:23,519
围绕您的源代码创建了一个存储桶，称为 git 存储库

2776
03:23:23,519 --> 03:23:28,959
它会跟踪您正在进行的所有更改或

2777
03:23:28,959 --> 03:23:33,915
使用相同源代码的其他任何人都在对代码进行处理

2778
03:23:33,915 --> 03:23:39,275
将允许您将这些更改的快照保存在

2779
03:23:39,275 --> 03:23:44,160
在您选择的特定时间，如果您是您的设计师并且您是

2780
03:23:44,160 --> 03:23:48,000
已经与 figma 合作，例如 figma

2781
03:23:48,000 --> 03:23:52,639
在您认为合适的时候自动保存您的工作，因此您永远不会有

2782
03:23:52,639 --> 03:23:57,120
按下保存按钮，如果你看过的话，还有 figma

2783
03:23:57,120 --> 03:24:03,360
它会跟踪它有一个版本历史，所以你可以从字面上去 figma

2784
03:24:03,360 --> 03:24:07,519
并说好吧，我已经完成了我的工作，我想实际提交我的更改

2785
03:24:07,519 --> 03:24:10,160
版本历史，我想给它一个名字

2786
03:24:10,160 --> 03:24:14,080
大多数设计师不这样做，他们立法必须保存他们的工作

2787
03:24:14,080 --> 03:24:18,639
自动地，通过那个 figma 只是说这是您更改的时间表

2788
03:24:18,639 --> 03:24:22,160
在这个时候你这样做了这个时候你这样做了

2789
03:24:22,160 --> 03:24:26,480
即使你是一名设计师，你也隐含地使用了一种叫做 a

2790
03:24:26,480 --> 03:24:30,720
版本控制，在这种情况下是 figma

2791
03:24:30,720 --> 03:24:34,000
但是当你来到我们正在合作的软件开发世界时

2792
03:24:34,000 --> 03:24:38,080
你的颤振应用程序那里没有 figma 并且你正在使用 raw

2793
03:24:38,080 --> 03:24:42,879
代码，因此您将进入 Visual Studio 代码或 sublime 或任何文本编辑器

2794
03:24:42,879 --> 03:24:47,199
您正在使用 android studio 作为 id 或其他

2795
03:24:47,199 --> 03:24:51,275
然后没有服务坐在那里说哦，你做了一些改变让

2796
03:24:51,275 --> 03:24:54,559
我让我帮你把它保存在某种应用程序中

2797
03:24:54,559 --> 03:24:59,199
或云解决方案，因此允许您执行此操作的系统

2798
03:24:59,199 --> 03:25:03,519
您的计算机称为 git，因此 git 是一个允许您跟踪的软件

2799
03:25:03,519 --> 03:25:07,756
您对源代码所做的更改

2800
03:25:07,756 --> 03:25:11,360
所以我可以在这里看到，在我们继续之前，我们实际上要谈一谈

2801
03:25:11,360 --> 03:25:15,040
关于 git 的一点点等等

2802
03:25:15,040 --> 03:25:19,680
我要在这里做什么我要在这里添加一点lib并即兴创作

2803
03:25:19,680 --> 03:25:22,800
我要去这里把屏幕做得大一点我要

2804
03:25:22,800 --> 03:25:27,275
调出终端，您在该屏幕上看不到它，因为它在

2805
03:25:27,275 --> 03:25:31,436
另一个屏幕，所以让我增加尺寸并带来

2806
03:25:31,436 --> 03:25:35,915
它在这里，所以你也看到它，所以我要去这里进行我的开发

2807
03:25:35,915 --> 03:25:43,199
文件夹，我要去我的项目和

2808
03:25:43,199 --> 03:25:47,199
让我们想想去

2809
03:25:47,199 --> 03:25:52,400
做一个文件夹我会说 git 好的

2810
03:25:52,400 --> 03:25:56,480
我应该称它为 git 还是让我们实际创建一个名为

2811
03:25:56,480 --> 03:26:02,239
测试好吧让我们开始测试然后它是一个

2812
03:26:02,239 --> 03:26:07,275
空文件夹，您现在可以看到，我们要做的是

2813
03:26:07,275 --> 03:26:12,480
现在要告诉 git 哪个是安装在我的计算机上的软件

2814
03:26:12,480 --> 03:26:16,559
告诉它好吧突然我想把这里的这个空目录变成

2815
03:26:16,559 --> 03:26:20,639
一个叫做存储库的东西记得它会是一个桶然后那个

2816
03:26:20,639 --> 03:26:25,360
在我们继续之前，现在跟踪当前目录中的更改

2817
03:26:25,360 --> 03:26:29,275
哦，对不起，也许你还需要实际安装

2818
03:26:29,275 --> 03:26:32,639
如果您不是来自软件开发人员，请在您的计算机上安装 git

2819
03:26:32,639 --> 03:26:36,639
背景你可能甚至没有在你的电脑上安装 git 所以我

2820
03:26:36,639 --> 03:26:40,959
将在此处打开一个浏览器窗口并说安装

2821
03:26:40,959 --> 03:26:43,839
所以

2822
03:26:43,839 --> 03:26:49,275
如果我谷歌安装 git 你会看到有类似的信息

2823
03:26:49,275 --> 03:26:53,680
如果你能在你的电脑上安装 git

2824
03:26:53,680 --> 03:27:01,120
在 Macintosh 上，你已经安装了 xcode

2825
03:27:01,120 --> 03:27:05,915
如果你在 Windows 上已经预装了 gits 我相信你

2826
03:27:05,915 --> 03:27:09,436
实际上我必须在我旁边有一台 Windows 机器

2827
03:27:09,436 --> 03:27:14,319
每天使用，我相信对于 Windows，您必须像个人一样安装 git

2828
03:27:14,319 --> 03:27:19,120
手动所以让我们说安装 git windows

2829
03:27:19,120 --> 03:27:24,800
呃 得到下载包 得到时间让人们安装 git

2830
03:27:24,800 --> 03:27:29,120
哎呀，我的 ipad 出于某种原因在这里断开了连接，所以我要

2831
03:27:29,120 --> 03:27:32,239
然后有些困难，嗯

2832
03:27:32,239 --> 03:27:38,480
让我们看看现在在 linux 上安装 git 好吗

2833
03:27:38,480 --> 03:27:42,000
我相信实际上有一个很好的软件包可以在 Windows 上使用它

2834
03:27:42,000 --> 03:27:45,680
我回到这里 Windows 上的安装程序你可以在这里看到

2835
03:27:45,680 --> 03:27:49,360
去吧，我也会稍微增加屏幕尺寸，所以你

2836
03:27:49,360 --> 03:27:54,319
可以在这里看到更好一点，上面写着 go to https get scm com

2837
03:27:54,319 --> 03:27:58,239
下载win所以我要去这里它会开始下载所以

2838
03:27:58,239 --> 03:28:01,519
我只想说取消，因为现在我在 Macintosh 中，所以这里是

2839
03:28:01,519 --> 03:28:04,879
您可以在哪里下载 git 并将其安装在您的计算机上

2840
03:28:04,879 --> 03:28:08,160
如果你在 Windows 机器上并且你有我做的 linux 子系统

2841
03:28:08,160 --> 03:28:12,959
我的 Windows 机器，那么你可能真的想使用 sudo apt 下载 git

2842
03:28:12,959 --> 03:28:15,275
嗯关于那个

2843
03:28:15,275 --> 03:28:18,720
linux 子系统，但有可能是 linux 子系统

2844
03:28:18,720 --> 03:28:22,080
在 windows 上已经附带了 git，所以你不需要做任何事情我

2845
03:28:22,080 --> 03:28:25,120
如果 git 是当时的绝对核心组件之一，我不会感到惊讶

2846
03:28:25,120 --> 03:28:28,319
附带 linux 嗯

2847
03:28:28,319 --> 03:28:32,319
所以这适用于 Macintosh，如果你在 Macintosh 上并且你没有

2848
03:28:32,319 --> 03:28:36,319
无论出于何种原因，xcode

2849
03:28:36,319 --> 03:28:41,120
那么你可能还需要单独下载git所以我们回到这里看看

2850
03:28:41,120 --> 03:28:45,839
如果你在这里说mac os，你怎么能做到呢？

2851
03:28:45,839 --> 03:28:49,436
有几种安装方式 get on mac 用户可能会安装 xcode 命令

2852
03:28:49,436 --> 03:28:54,239
我们已经做过的线工具，所以如果你没有它在奴隶制中，它会

2853
03:28:54,239 --> 03:28:58,639
提示您安装它，否则您可以进入这里获取

2854
03:28:58,639 --> 03:29:03,360
semcom 下载 mac 然后你可以做 brew install git

2855
03:29:03,360 --> 03:29:07,040
所以如果这是你想要做的，那么你首先必须实际安装

2856
03:29:07,040 --> 03:29:09,120
自制所以

2857
03:29:09,120 --> 03:29:13,595
进入这个链接并说自制安装基本上只是按照它说的做

2858
03:29:13,595 --> 03:29:18,879
在这里你看到有命令然后去安装

2859
03:29:18,879 --> 03:29:24,720
git 使用自制软件，如果你在 linux 上，那么 sudo apt

2860
03:29:24,720 --> 03:29:28,000
安装 git 我想如果你正在安装，也许你甚至不需要 sudo

2861
03:29:28,000 --> 03:29:33,436
对于当前用户，所以只是 apt app 是获取还是安装我忘记了，但是

2862
03:29:33,436 --> 03:29:38,080
这里也有关于 linux 的信息

2863
03:29:38,080 --> 03:29:42,160
应用安装是的

2864
03:29:42,160 --> 03:29:45,839
是的，我的意思是我假设你有点像基于 debian 的发行版

2865
03:29:45,839 --> 03:29:50,879
好吧，否则这里有信息如何安装它，否则

2866
03:29:50,879 --> 03:29:54,000
好吧，那是很多信息，之前

2867
03:29:54,000 --> 03:29:57,595
我们继续我只是要尝试确保我已连接回我的

2868
03:29:57,595 --> 03:30:02,480
呃到我的笔记本电脑到我的 ipad 因为在

2869
03:30:02,480 --> 03:30:06,559
我的 ipad 我保留了我必须提供给的所有信息

2870
03:30:06,559 --> 03:30:10,400
你是按时间顺序排列的，所以对我来说很重要

2871
03:30:10,400 --> 03:30:14,720
实际上把我的笔记放在那里，所以我要尝试连接到我的 ipad 和

2872
03:30:14,720 --> 03:30:18,400
是的，没关系

2873
03:30:18,400 --> 03:30:21,360
所以现在你已经我假设你已经

2874
03:30:21,360 --> 03:30:26,160
安装了 git 我假设如果你说哪个 git 就完成了

2875
03:30:26,160 --> 03:30:30,319
那么在这种情况下它会告诉我用户正在获取它

2876
03:30:30,319 --> 03:30:34,400
如果你在 Windows 上安装，老实说我不知道​​命令

2877
03:30:34,400 --> 03:30:39,360
在 Windows 上知道它是否像安装了 git 但在 Windows 上所有你

2878
03:30:39,360 --> 03:30:43,120
必须做的就是输入 git 如果你看到了

2879
03:30:43,120 --> 03:30:47,915
它抛出一个错误它说git不可用或者你没有安装

2880
03:30:47,915 --> 03:30:53,519
git 如果你已经安装了 git 可能 git 不在当前路径中，所以你会

2881
03:30:53,519 --> 03:30:57,436
必须去调整你的环境变量才能得到 git 和

2882
03:30:57,436 --> 03:31:01,680
互联网上有很多信息，所以我们现在不打算关注

2883
03:31:01,680 --> 03:31:05,199
如何安装 git，因为这就像它自己的课程

2884
03:31:05,199 --> 03:31:07,519
也许，但如果你按照说明

2885
03:31:07,519 --> 03:31:11,199
在我刚刚展示的网站上提供了你应该能够走得更远

2886
03:31:11,199 --> 03:31:15,120
所以我假设现在安装了 git

2887
03:31:15,120 --> 03:31:19,040
我们的电脑，你可以在这里看到我们在一个名为 testing 的文件夹中，所以如果我说

2888
03:31:19,040 --> 03:31:23,360
测试在哪里，你可以看到这就是现在我们想要做的

2889
03:31:23,360 --> 03:31:26,800
就是说测试例如是我们将所有的项目

2890
03:31:26,800 --> 03:31:30,480
代码没问题，所以会有我们要在这里写的信息

2891
03:31:30,480 --> 03:31:35,839
在这个 um 这个文件夹里会有一些 dart 文件会有一些

2892
03:31:35,839 --> 03:31:40,639
png 和 jpeg 文件会有我们的应用程序图标所有这些东西

2893
03:31:40,639 --> 03:31:44,239
我们想安全地存储它

2894
03:31:44,239 --> 03:31:51,040
你可能想做的第一件事就是基本上告诉 git 这个当前

2895
03:31:51,040 --> 03:31:57,120
目录本身就是一个 git 的存储库，所以存储桶记住

2896
03:31:57,120 --> 03:32:00,160
存储桶将自己包裹在目录周围，所以

2897
03:32:00,160 --> 03:32:03,595
如果我现在得到这个目录的内容，你可以看到它是

2898
03:32:03,595 --> 03:32:08,319
完全为空，但如果你想创建一个 git 存储桶或 git 存储库

2899
03:32:08,319 --> 03:32:13,120
围绕这个目录，你只需要说 git init dots

2900
03:32:13,120 --> 03:32:16,959
好的，你现在会看到这里说

2901
03:32:16,959 --> 03:32:20,720
在此文件夹中初始化 amt git 存储库

2902
03:32:20,720 --> 03:32:24,319
所以现在如果我得到这个文件夹的内容，你会看到有一个新的

2903
03:32:24,319 --> 03:32:29,120
名为 dot git 的目录和 dot git 目录是 git 基本上保存的地方

2904
03:32:29,120 --> 03:32:33,839
跟踪其内部，例如对该目录的更改等

2905
03:32:33,839 --> 03:32:37,680
保存时保存的内容是谁

2906
03:32:37,680 --> 03:32:42,239
保存了工作等，所以现在你已经完成了，现在你已经创建了一个 git

2907
03:32:42,239 --> 03:32:47,360
存储库基本上围绕这个空目录，您可以发出各种 diff git

2908
03:32:47,360 --> 03:32:50,400
命令，例如其状态

2909
03:32:50,400 --> 03:32:54,800
这将为您提供此 um 的当前状态

2910
03:32:54,800 --> 03:32:58,879
在这个 uh 目录上，你可以尽快看到这里

2911
03:32:58,879 --> 03:33:03,839
当我们突然创建了一个带有 git 的 git 存储库时，我的终端

2912
03:33:03,839 --> 03:33:08,639
在这里改了提示说一下子测试不只是测试

2913
03:33:08,639 --> 03:33:12,800
不再，但它实际上是一个 git 目录，我们在一个名为的分支上

2914
03:33:12,800 --> 03:33:15,436
现在主要

2915
03:33:15,436 --> 03:33:18,959
我现在不想谈论分支，但只知道有

2916
03:33:18,959 --> 03:33:21,839
嗯，是的，让我们不谈论分支

2917
03:33:21,839 --> 03:33:25,360
现在，因为我打算稍后再做，所以

2918
03:33:25,360 --> 03:33:28,800
所以，但我们要讨论的是这里的这条小信息，它说不

2919
03:33:28,800 --> 03:33:34,879
现在在 git 中提交，只要你在工作

2920
03:33:34,879 --> 03:33:38,720
不只是自动保存你的工作，你需要告诉 git

2921
03:33:38,720 --> 03:33:43,120
保存您的工作以及保存工作的那些点

2922
03:33:43,120 --> 03:33:47,839
提交它提交它的名字表明你正在提交你的工作你说我

2923
03:33:47,839 --> 03:33:52,639
致力于此，我想保存它，这就是我的意思是它可以被调用

2924
03:33:52,639 --> 03:33:55,915
保存但保存可能是

2925
03:33:55,915 --> 03:33:59,436
嗯，可能是

2926
03:33:59,436 --> 03:34:04,160
读起来更像是一个动词，比如哦，我现在要保存它还是它是什么，但是

2927
03:34:04,160 --> 03:34:08,480
如果我说这是我的承诺，那么推断可能会更容易一些

2928
03:34:08,480 --> 03:34:13,275
哦，这是您保存并承诺的一条信息

2929
03:34:13,275 --> 03:34:16,800
我想也许这就是它被称为委员会的原因我不确定

2930
03:34:16,800 --> 03:34:20,559
所以这些提交是一个时间点

2931
03:34:20,559 --> 03:34:24,800
有权访问此存储库的人保存了他们的工作，所以只是

2932
03:34:24,800 --> 03:34:30,319
请记住，这是一个提交，如果我们在这里看到状态显示还没有提交

2933
03:34:30,319 --> 03:34:34,000
因为从字面上看，你没有告诉现在要保存我们现在的样子

2934
03:34:34,000 --> 03:34:37,199
要做的是打开 Visual Studio 代码，所以我要带你来

2935
03:34:37,199 --> 03:34:40,720
在这里工作室代码，你可以看到它是一个空文件夹

2936
03:34:40,720 --> 03:34:44,160
我要在这里创建一个文件，让我们打电话

2937
03:34:44,160 --> 03:34:48,199
嗯，我们就叫这个吧

2938
03:34:48,199 --> 03:34:54,160
info.txt 所以只是文本文件，所以这是一个空文件，我只是

2939
03:34:54,160 --> 03:34:57,839
在这里输入 hello 也增加一点大小，这样你就可以看到

2940
03:34:57,839 --> 03:34:59,756
这样更好

2941
03:34:59,756 --> 03:35:03,756
现在如果我在这里说 git status 你可以突然看到它并没有说不

2942
03:35:03,756 --> 03:35:10,400
提交但它很好，基本上它说爸爸，但它也说轨道文件和

2943
03:35:10,400 --> 03:35:16,559
它现在将信息文本放在这里让我然后解释什么吸引文件

2944
03:35:16,559 --> 03:35:21,519
并且 on track file 是一个 track 文件是一个你之前告诉 git 的文件

2945
03:35:21,519 --> 03:35:26,239
所以它正在跟踪对该文件所做的更改

2946
03:35:26,239 --> 03:35:31,360
on track file 是一个你之前还没有告诉过的文件，所以它说 oh

2947
03:35:31,360 --> 03:35:34,959
这是一个你正在用它做某事的文件，但我什至不会看

2948
03:35:34,959 --> 03:35:38,480
我不会跟踪它，因为你不知道你没有告诉我

2949
03:35:38,480 --> 03:35:40,639
这样做

2950
03:35:40,639 --> 03:35:45,275
嗯，我的意思是，一个文件基本上可以在里面

2951
03:35:45,275 --> 03:35:49,915
git 中的三个状态现在你已经学习了其中两个，要么被跟踪，要么在

2952
03:35:49,915 --> 03:35:55,680
跟踪，但它也可能处于另一种状态，我将很快向您展示

2953
03:35:55,680 --> 03:35:58,639
所以现在你可以看到这里有一条消息

2954
03:35:58,639 --> 03:36:02,879
它说让我把终端带到这里一点点，这样你就可以了

2955
03:36:02,879 --> 03:36:08,000
完整查看终端，它说使用 git add 然后是

2956
03:36:08,000 --> 03:36:12,319
文件以包含将要提交的内容，所以让我们这样做，我只是

2957
03:36:12,319 --> 03:36:17,360
要说 git add info txt 现在我要说 git status 和

2958
03:36:17,360 --> 03:36:21,275
突然之间，您会明白这是一个新文件

2959
03:36:21,275 --> 03:36:26,480
committing 提交这个名为 info text 的文件，但你可以看到

2960
03:36:26,480 --> 03:36:30,480
它仍然说你没有提交任何东西，但它说改变是

2961
03:36:30,480 --> 03:36:34,239
提交，突然间这个文件是绿色的

2962
03:36:34,239 --> 03:36:38,400
记得我说过一个文件在被跟踪时可以处于三种状态，这意味着 git

2963
03:36:38,400 --> 03:36:42,800
不知道它被跟踪，这意味着它确实知道它或者它可以

2964
03:36:42,800 --> 03:36:47,519
上演所以如果你在这里看到这个文件是绿色的

2965
03:36:47,519 --> 03:36:51,915
它说要提交的更改，所以阶段是

2966
03:36:51,915 --> 03:36:56,959
你已经对文件进行了更改，并且你已经告诉 git 你想要

2967
03:36:56,959 --> 03:37:00,160
提交但你还没有提交

2968
03:37:00,160 --> 03:37:04,720
现在你可能会问好吧，为什么我会有不应该的文件

2969
03:37:04,720 --> 03:37:09,275
如果您有一些信息，例如，如果您在某些项目中提交

2970
03:37:09,275 --> 03:37:13,756
与其他 10 位开发人员合作，您正在制作一些

2971
03:37:13,756 --> 03:37:17,756
测试，您正在源代码所在的目录中编写一些代码

2972
03:37:17,756 --> 03:37:21,756
代码放置在但你没有真正准备好使用该文件但你

2973
03:37:21,756 --> 03:37:25,040
不想将其提交到其他人都可以看到的分支中，那么您可以

2974
03:37:25,040 --> 03:37:29,595
说哦我不打算提交这不是暂存文件我什至还没准备好

2975
03:37:29,595 --> 03:37:33,360
用于暂存它并将其放入提交中，所以在这种情况下你不会去

2976
03:37:33,360 --> 03:37:36,800
把它添加到暂存区好吧，所以记住

2977
03:37:36,800 --> 03:37:40,639
现在你已经完成了你刚才说的 git add 你可以提交它并且

2978
03:37:40,639 --> 03:37:45,436
提交字面意思是你将把这项工作保存在 git 中

2979
03:37:45,436 --> 03:37:48,480
这样做的方法是使用 git commits

2980
03:37:48,480 --> 03:37:53,915
然后您将在此处使用破折号 m 提供消息，然后引用

2981
03:37:53,915 --> 03:37:58,000
标记好，所以在这里你会写一条消息，将附加到你的

2982
03:37:58,000 --> 03:38:02,720
整个提交，所以我们将在这里做的事情说

2983
03:38:02,720 --> 03:38:08,559
让我们说添加新的信息 txt 文件来娱乐好吧

2984
03:38:08,559 --> 03:38:12,800
然后我就按回车键，在这里看到它说一个文件更改和

2985
03:38:12,800 --> 03:38:17,756
一个插入，它会说是的，它已经创建了这个文件，所以我

2986
03:38:17,756 --> 03:38:23,040
现在要清除我的终端，我们要执行 git status

2987
03:38:23,040 --> 03:38:27,120
突然间关于没有提交的消息消失了，所有这一切

2988
03:38:27,120 --> 03:38:30,959
就是你在一个叫做 main 的分支上，没有什么可做的

2989
03:38:30,959 --> 03:38:33,756
提交好吧

2990
03:38:33,756 --> 03:38:37,915
如果您想查看刚刚提交的提交，您会怎么做？

2991
03:38:37,915 --> 03:38:41,120
你想看看当时的评论是什么

2992
03:38:41,120 --> 03:38:45,120
如果你可以说 git log 和 git blog 将显示

2993
03:38:45,120 --> 03:38:49,275
所有提交的所有提交以及提交者，您将

2994
03:38:49,275 --> 03:38:53,519
还可以看到制作日期和提交信息，你呢

2995
03:38:53,519 --> 03:39:00,400
记得我们说过 git commit dash m 所以这是 get 中提供的消息

2996
03:39:00,400 --> 03:39:04,480
命令然后保存在存储库中好吗

2997
03:39:04,480 --> 03:39:07,040
这就是消息，这就是电子邮件

2998
03:39:07,040 --> 03:39:11,595
基本上做了那个承诺的人

2999
03:39:11,595 --> 03:39:16,080
现在我跳过了一点，嗯

3000
03:39:16,080 --> 03:39:20,160
老实说，我并没有真正考虑过