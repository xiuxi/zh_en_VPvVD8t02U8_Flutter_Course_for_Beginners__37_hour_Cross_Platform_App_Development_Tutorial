1
00:22:50,080 --> 00:22:53,759
确保您的应用程序不是为儿童制作的，因为请记住以下应用程序

2
00:22:53,759 --> 00:22:57,511
专为必须真正符合特定标准的孩子而设计

3
00:22:57,511 --> 00:23:01,592
确保八个四岁以上的孩子在

4
00:23:01,592 --> 00:23:05,360
应用所以我们能做些什么让我们在这里看看如果

5
00:23:05,360 --> 00:23:09,439
您的应用评分为 12 或更低，并且您认为它的内容可能不合适

6
00:23:09,439 --> 00:23:14,639
对于 17 岁以下的儿童，您可以手动将年龄等级设置为 17 岁以上，所以我不是

7
00:23:14,639 --> 00:23:17,279
老实说，我确定这一点，但我只是将其留空

8
00:23:17,279 --> 00:23:20,551
那一刻，按下向下按钮，好的，然后我们可以按下保存

9
00:23:20,551 --> 00:23:24,400
按钮就在这里，接下来我们需要谈谈

10
00:23:24,400 --> 00:23:28,799
about now 是一个叫做 support url 的东西，而 support url 实际上非常

11
00:23:28,799 --> 00:23:33,360
重要，实际上我相信应用程序

12
00:23:33,360 --> 00:23:38,639
让我们看看它在

13
00:23:38,639 --> 00:23:44,159
应用程序信息我相信我认为它在附近的某个地方

14
00:23:44,159 --> 00:23:50,231
评级和评论应用隐私定价和可用性

15
00:23:50,231 --> 00:23:54,231
我们还没有真正到达那里，但我相信无论如何我们都必须提交

16
00:23:54,231 --> 00:23:58,639
如您所见，它就在这里，因此支持网址实际上非常非常

17
00:23:58,639 --> 00:24:01,360
重要，因为您可以看到营销网址不是

18
00:24:01,360 --> 00:24:05,511
可选 抱歉 营销 url 是可选的 支持 url 不是支持 url 它是

19
00:24:05,511 --> 00:24:09,191
基本上是需要在您的网站上托管的网址

20
00:24:09,191 --> 00:24:12,479
如果您的应用程序的用户有任何问题，那么他们可以

21
00:24:12,479 --> 00:24:16,319
转到支持 url 并获取有关该内容的更多信息

22
00:24:16,319 --> 00:24:20,959
所以我之前为我的其他应用程序之一创建了一个支持网址

23
00:24:20,959 --> 00:24:27,119
我的网站，所以我们只说像素 sc，然后我们会说支持

24
00:24:27,119 --> 00:24:32,319
和弦库文本还可以，正如您在此处看到的，它是一个小文本文档，并且

25
00:24:32,319 --> 00:24:34,871
说如果您对此应用程序有任何疑问，可以给我们留言

26
00:24:34,871 --> 00:24:37,680
支持像素点

27
00:24:37,680 --> 00:24:44,231
所以你只需要确保你有一个支持文件，你可以嗯

28
00:24:44,231 --> 00:24:50,159
放置在一个网站中，然后您可以将您的用户发送到那个好的，所以

29
00:24:50,159 --> 00:24:54,231
现在让我们继续创建一个支持文档，我将在这里做什么

30
00:24:54,231 --> 00:24:57,831
我只是要在我的 Macintosh 上显示文字编辑，你可以带上

31
00:24:57,831 --> 00:25:03,439
你最喜欢的十六进制编辑器实际上我最喜欢的技术文本编辑器是

32
00:25:03,439 --> 00:25:06,551
视觉工作室代码，但在这种情况下，它只是一个简单的文本文档，所以我只是

33
00:25:06,551 --> 00:25:11,759
即使你是 linux，也要在 macintosh 上使用 um 普通文本编辑

34
00:25:11,759 --> 00:25:16,551
例如，您可以只使用 vim 并创建或 vi，您可以创建一个简单的文档

35
00:25:16,551 --> 00:25:21,191
让我们基本上复制它并粘贴到这里我说

36
00:25:21,191 --> 00:25:26,080
联系支持并感谢您使用我的真棒

37
00:25:26,080 --> 00:25:28,551
笔记，因为那是我们的名字

38
00:25:28,551 --> 00:25:33,439
正确的应用程序，这是我很棒的笔记，所以我将保存此文档并

39
00:25:33,439 --> 00:25:37,680
我只想在这里说让我们称之为

40
00:25:37,680 --> 00:25:41,439
我的精彩笔记 txt 我将把它保存在

41
00:25:41,439 --> 00:25:46,231
桌面保存好没保存

42
00:25:46,231 --> 00:25:49,592
它没有保存它有点奇怪

43
00:25:49,592 --> 00:25:52,400
让我回到这个文本，现在它保存了它

44
00:25:52,400 --> 00:25:57,279
是的，它就在这里，好吧，所以这是一个文档，现在是简单的文本文件，我是

45
00:25:57,279 --> 00:26:01,592
去我的网站控制面板，你可以看到这里有一个支持

46
00:26:01,592 --> 00:26:03,680
文件夹，所以我要去支持

47
00:26:03,680 --> 00:26:07,759
文件夹，如您所见，我在此像素性 se 中已经有四个文本文件

48
00:26:07,759 --> 00:26:12,319
网站，我只是希望能够将文件拖入

49
00:26:12,319 --> 00:26:17,439
在那里，甚至可能上传，所以我要拖动这个文件繁荣

50
00:26:17,439 --> 00:26:21,439
我可以看到它现在已经上传了

51
00:26:21,439 --> 00:26:25,831
似乎是诚实的所以让我回去看看我是我的

52
00:26:25,831 --> 00:26:29,511
awesomenotes 文本文件就在那里，然后我要进去看看

53
00:26:29,511 --> 00:26:34,000
它实际上上传了我很棒的笔记

54
00:26:34,000 --> 00:26:37,759
txt，我实际上可以看到它已上传

55
00:26:37,759 --> 00:26:41,759
它就在那里，所以如果你没有自己的网站

56
00:26:41,759 --> 00:26:46,231
如果您正在为 ios 和 android 开发应用程序，或者即使您是

57
00:26:46,231 --> 00:26:49,439
开发任何应用程序并将其发布给您应该拥有的客户

58
00:26:49,439 --> 00:26:53,759
您自己的网站，它们就像非常便宜的抓取方式

59
00:26:53,759 --> 00:26:57,592
我不想去喜欢的廉价托管网站

60
00:26:57,592 --> 00:27:02,000
赞助各种服务，我什至不会说出我正在使用的东西，但是

61
00:27:02,000 --> 00:27:06,871
你可以谷歌或只是在网上搜索便宜的主机

62
00:27:06,871 --> 00:27:11,191
并创建一个你自己的网站，但因为这是外面的

63
00:27:11,191 --> 00:27:15,119
在本课程的范围之外，我不会谈论太多，好吧，所以

64
00:27:15,119 --> 00:27:19,191
现在我们有了我的精彩笔记以及我们需要做的事情

65
00:27:19,191 --> 00:27:23,759
是继续添加这个支持网址，所以我要复制它并转到

66
00:27:23,759 --> 00:27:27,511
应用商店连接并在支持网址中，我将其保存在那里，我将

67
00:27:27,511 --> 00:27:31,279
按下保存按钮好吧

68
00:27:31,279 --> 00:27:35,511
就是这样，我们还需要确保添加一些其他信息

69
00:27:35,511 --> 00:27:40,639
在这里促销文字描述以及关键字等

70
00:27:40,639 --> 00:27:44,551
这些事情非常重要，我们需要确保填写这些内容

71
00:27:44,551 --> 00:27:50,400
所以，嗯，让我们看看这里真的好吗，所以在宣传文字中，让我们只是

72
00:27:50,400 --> 00:27:52,959
在此处输入一些信息，如您所见，此商业文本可让您

73
00:27:52,959 --> 00:27:56,319
通知您的应用商店访问者任何当前的应用功能，而无需

74
00:27:56,319 --> 00:27:59,439
一个更新的提交好的，所以让我们说

75
00:27:59,439 --> 00:28:03,439
使用我的精彩笔记

76
00:28:03,439 --> 00:28:08,799
为了将您的笔记安全地存储在云中

77
00:28:08,799 --> 00:28:14,551
好的和描述和这个应用程序模拟这个免费的应用程序允许你

78
00:28:14,551 --> 00:28:18,551
将您的笔记安全地存储在云端

79
00:28:18,551 --> 00:28:20,400
和嗯

80
00:28:20,400 --> 00:28:23,360
就是这样，我的意思是它们彼此非常相似，但没关系

81
00:28:23,360 --> 00:28:26,159
同样，对于此处的关键字，您必须

82
00:28:26,159 --> 00:28:30,159
输入我认为它并没有真正说明多少是 100

83
00:28:30,159 --> 00:28:33,511
您拥有的字符并且您必须在此处使用逗号分隔您的关键字

84
00:28:33,511 --> 00:28:38,080
我只想说并注意并确保安全

85
00:28:38,080 --> 00:28:40,720
哇，并确保你实际上不必

86
00:28:40,720 --> 00:28:45,119
嗯，让我们看看繁荣

87
00:28:45,119 --> 00:28:47,912
我认为你不必在他们之间留出空间，我只是要离开

88
00:28:47,912 --> 00:28:52,231
它就像一个笔记安全云好这些是我的关键字所以

89
00:28:52,231 --> 00:28:55,511
我要保存这个并记住我们在 ios 中准备

90
00:28:55,511 --> 00:28:58,799
提交部分，这样也完成了

91
00:28:58,799 --> 00:29:04,871
我们的应用程序版本就在那里版权我们只能说 2022 像素

92
00:29:04,871 --> 00:29:06,871
嗯嗯

93
00:29:06,871 --> 00:29:11,360
版权所有

94
00:29:11,360 --> 00:29:14,639
好吧，这些只是大词别担心

95
00:29:14,639 --> 00:29:19,592
嗯，差不多就是这样

96
00:29:19,592 --> 00:29:23,119
嗯，我认为我们不需要做更多

97
00:29:23,119 --> 00:29:27,592
老实说在这里，我们甚至不必拥有

98
00:29:27,592 --> 00:29:30,400
现在需要签名和

99
00:29:30,400 --> 00:29:34,639
让我们看看，还需要在这里找到联系信息所以让我们说

100
00:29:34,639 --> 00:29:37,680
破坏者和我的

101
00:29:37,680 --> 00:29:42,319
姓，然后我要输入一些

102
00:29:42,319 --> 00:29:46,871
现在假电话号码

103
00:29:46,871 --> 00:29:52,551
类似的东西，这是我对像素的支持

104
00:29:52,551 --> 00:29:55,511
就像这样不需要签名

105
00:29:55,511 --> 00:29:58,959
在这里我们有版本发布，你可以看到它说这个应用程序

106
00:29:58,959 --> 00:30:01,831
版本通过后可以自动发布，所以

107
00:30:01,831 --> 00:30:05,040
你有一些能力

108
00:30:05,040 --> 00:30:07,831
您希望如何实际发布您的应用程序，所以在您发送您的

109
00:30:07,831 --> 00:30:11,680
二进制到苹果，你可以选择苹果自动释放这个

110
00:30:11,680 --> 00:30:14,799
应用商店中所有用户的版本或

111
00:30:14,799 --> 00:30:17,360
你可以说手动发布这个版本，这意味着在你

112
00:30:17,360 --> 00:30:20,720
申请已被苹果接受并获得苹果批准

113
00:30:20,720 --> 00:30:24,551
您可以在适合您的任何时候手动按下释放按钮

114
00:30:24,551 --> 00:30:27,119
最好，或者你可以说自动释放

115
00:30:27,119 --> 00:30:31,439
应用审查后的这个版本现在不早了，所以你可以为它设置一个日期，但是

116
00:30:31,439 --> 00:30:34,231
我们会说手动发布这个版本好吗

117
00:30:34,231 --> 00:30:38,231
在这一切之后，我只是将这些信息保存在那里

118
00:30:38,231 --> 00:30:45,912
现在让我们转到应用程序隐私，所以这也是非常重要的记住要做

119
00:30:45,912 --> 00:30:49,360
因为我不认为

120
00:30:49,360 --> 00:30:52,720
嗯，我们实际上有

121
00:30:52,720 --> 00:30:57,119
是的，我真的相信现在我可以看到我已经准备了一些

122
00:30:57,119 --> 00:31:00,871
在下一章中有关这方面的信息，所以

123
00:31:00,871 --> 00:31:06,080
我们将在下一章中处理隐私政策，但要知道

124
00:31:06,080 --> 00:31:09,759
它就在那里，我们必须尽快修复它

125
00:31:09,759 --> 00:31:13,759
那么我们需要做的是真正为苹果做一个构建，因为

126
00:31:13,759 --> 00:31:18,400
这就像最重要的部分，你需要确保你

127
00:31:18,400 --> 00:31:22,871
就像本课程的第一章一样，我谈到了准备

128
00:31:22,871 --> 00:31:27,360
我们的ios应用程序在本课程的开头有一章

129
00:31:27,360 --> 00:31:31,191
我们实际上谈论创建我们的证书和配置文件以及所有

130
00:31:31,191 --> 00:31:34,799
用于 ios 发行版，所以我假设

131
00:31:34,799 --> 00:31:38,159
你已经经历过了，所以我们现在不必照顾所有

132
00:31:38,159 --> 00:31:42,959
好吧，现在让我们进入我们在 xcode 中的应用程序，看看我能不能调出

133
00:31:42,959 --> 00:31:47,511
xcode 它在附近的某个地方

134
00:31:47,511 --> 00:31:52,231
所以有我们的应用程序，我将进入跑步者并看看

135
00:31:52,231 --> 00:31:56,159
在签署、能力和发布时，我可以看到绝对有

136
00:31:56,159 --> 00:32:00,551
这个生产证书和配置文件没问题，所以我们需要什么

137
00:32:00,551 --> 00:32:04,231
在这里发布应用商店只是为了看看我们的

138
00:32:04,231 --> 00:32:09,191
runner 并在此处将目标更改为例如任何 ios 设备

139
00:32:09,191 --> 00:32:13,592
然后我们去产品然后我们说存档所以

140
00:32:13,592 --> 00:32:19,680
然后这个存档会为我们创建一个 ipa 文件，因为我

141
00:32:19,680 --> 00:32:22,639
本章开头提到的，这是 ipa 文件

142
00:32:22,639 --> 00:32:25,912
我们将提交给苹果和

143
00:32:25,912 --> 00:32:28,639
xcode 将在这方面为您提供很多帮助

144
00:32:28,639 --> 00:32:33,040
我不确定我是否喜欢这个，老实说我认为 xcode 隐藏了一个

145
00:32:33,040 --> 00:32:36,479
很多细节，通常我习惯喜欢在命令行中做事

146
00:32:36,479 --> 00:32:39,680
并简单地从视觉工作室代码做事，例如

147
00:32:39,680 --> 00:32:42,959
但是 xcode 将帮助您提交您的文件仍然是一件好事

148
00:32:42,959 --> 00:32:47,040
应用程序，因为在以前版本的 xcode 中喜欢

149
00:32:47,040 --> 00:32:50,551
许多年前，xcode 无法做到这一点，所以你有一个单独的应用程序

150
00:32:50,551 --> 00:32:57,360
将您的 ipa 文件实际上传到应用程序，这本身也很

151
00:32:57,360 --> 00:33:00,871
我不会说消极的身体是

152
00:33:00,871 --> 00:33:03,592
你必须经历的事情

153
00:33:03,592 --> 00:33:07,680
xcode 将在我的程序中处理所有这些，这是一个加号和一个减号

154
00:33:07,680 --> 00:33:12,000
至少有意见所以我只是在这里等待xcode

155
00:33:12,000 --> 00:33:16,159
做它的工作，很有可能如果

156
00:33:16,159 --> 00:33:19,912
这是您第一次使用

157
00:33:19,912 --> 00:33:22,400
你的证书

158
00:33:22,400 --> 00:33:26,319
基本上是在本课程开始时创建的，很有可能

159
00:33:26,319 --> 00:33:31,191
当 xcode 真正签署您的二进制文件及其所有内容时

160
00:33:31,191 --> 00:33:35,680
其他相关库你的 Macintosh 可能是

161
00:33:35,680 --> 00:33:40,000
将要求您提供此证书的密码，并且

162
00:33:40,000 --> 00:33:44,080
实际上它会要求你输入钥匙串的密码

163
00:33:44,080 --> 00:33:49,680
该证书存储在您的计算机上，因此通常是

164
00:33:49,680 --> 00:33:54,231
登录钥匙串，所以如果我在这里访问钥匙串，你会看到

165
00:33:54,231 --> 00:33:58,799
我有我的登录钥匙串，我在这里有证书，如您所见

166
00:33:58,799 --> 00:34:01,759
分布所以这就是我现在的那种

167
00:34:01,759 --> 00:34:06,479
在分配这个之后使用复制和嗯，你可以看到它

168
00:34:06,479 --> 00:34:10,319
存档权并没有真正签署过我的

169
00:34:10,319 --> 00:34:15,360
macintosh 会问我那个钥匙串的密码所以

170
00:34:15,360 --> 00:34:20,400
现在非常接近完成归档过程，所以

171
00:34:20,400 --> 00:34:24,551
对不起，让我们基本上看看它是怎么回事

172
00:34:24,551 --> 00:34:28,799
在实际创建我们的应用程序 ipa 文件之后，我们将

173
00:34:28,799 --> 00:34:35,119
将其提交给苹果，该应用程序将首先显示在此处

174
00:34:35,119 --> 00:34:39,831
在应用程序的构建部分

175
00:34:39,831 --> 00:34:43,119
商店连接视图

176
00:34:43,119 --> 00:34:48,319
所以让我们看看我们是否得到了我在这里提到的签名密码

177
00:34:48,319 --> 00:34:57,119
在屏幕底部，因此 5039 个文件中的 4660 个或 70 个文件

178
00:34:57,119 --> 00:35:01,759
编译并创建我们的二进制文件，所以它非常非常

179
00:35:01,759 --> 00:35:06,159
关闭让我们看看它是否可以成功地做到这一点

180
00:35:06,159 --> 00:35:11,912
我可以听到我的 Macintosh 嗯和粉丝现在全速运转

181
00:35:11,912 --> 00:35:15,831
这通常是你在最新的 uh 中听不到的东西

182
00:35:15,831 --> 00:35:20,319
max 或 macbook 专业人士，因为他们通常像风扇一样安静

183
00:35:20,319 --> 00:35:23,680
从来没有踢过，但这显然是一个沉重的

184
00:35:23,680 --> 00:35:30,159
此 Macintosh 执行更快的全速谷歌搜索的过程

185
00:35:30,159 --> 00:35:34,551
让我们看看它是否成功，这就是我们所看到的

186
00:35:34,551 --> 00:35:37,759
正如你所看到的，我正在谈论的那个对话说代码符号想要

187
00:35:37,759 --> 00:35:42,159
使用您的钥匙串中的 van.hawa nippor 进行签名以允许此输入

188
00:35:42,159 --> 00:35:45,759
登录钥匙串密码，因此它与您的证书无关

189
00:35:45,759 --> 00:35:49,191
实际上与您的证书有关，但与密码本身有关

190
00:35:49,191 --> 00:35:53,592
是登录钥匙串密码，所以通常是您计算机的密码，所以

191
00:35:53,592 --> 00:35:57,912
我只是要输入，然后我要说总是允许

192
00:35:57,912 --> 00:36:03,119
好的，所以在这样做之后希望 xcode 不是

193
00:36:03,119 --> 00:36:06,799
会再次用这个密码打扰我，但我知道在一些老

194
00:36:06,799 --> 00:36:10,000
xcode 的版本，当你真的不明白

195
00:36:10,000 --> 00:36:13,759
说总是允许，所以在签署您的申请时，您可能必须

196
00:36:13,759 --> 00:36:17,191
输入密码最多 20 次，具体取决于

197
00:36:17,191 --> 00:36:20,159
关于您的应用程序依赖于多少个库

198
00:36:20,159 --> 00:36:24,080
当我在一家公司工作时，我清楚地记得这一点，我当时是一名测试员

199
00:36:24,080 --> 00:36:27,912
告诉测试人员如何编译归档应用程序

200
00:36:27,912 --> 00:36:31,680
ios和我们都认为他正在输入他的密码

201
00:36:31,680 --> 00:36:35,831
证书不正确，所以现在我们得到了

202
00:36:35,831 --> 00:36:41,912
未找到模块 shareplus，这可能是因为 shareplus 是

203
00:36:41,912 --> 00:36:45,592
基本上是我们在应用程序中使用的东西

204
00:36:45,592 --> 00:36:48,799
因为它甚至还在继续存档

205
00:36:48,799 --> 00:36:52,400
虽然它说有些事情失败了，所以现在我们得到了一个

206
00:36:52,400 --> 00:36:56,639
这里有 pods runner 框架的问题，这看起来我的意思是我实际上是

207
00:36:56,639 --> 00:36:59,191
很高兴我们收到了这些错误，而且可能有些错误

208
00:36:59,191 --> 00:37:04,159
因为我们还没有完成正确的 pod 安装，所以我要做的是去

209
00:37:04,159 --> 00:37:08,400
此处和终端中的 Visual Studio 代码然后让我实际更改

210
00:37:08,400 --> 00:37:10,871
屏幕布局一点点让你看到我在做什么

211
00:37:10,871 --> 00:37:13,592
所以我要提出这个，这样你就可以更好地看到我在做什么，我会

212
00:37:13,592 --> 00:37:18,159
转到此处的 ios 文件夹

213
00:37:18,159 --> 00:37:22,639
好的，然后在这里你可以说 pod d integration

214
00:37:22,639 --> 00:37:26,639
基本上 pod 集成它将从中删除所有 ios 依赖项

215
00:37:26,639 --> 00:37:29,831
你的工作区，然后你可以说 pawn install 好

216
00:37:29,831 --> 00:37:33,759
这将从头开始重新安装所有依赖项，所以

217
00:37:33,759 --> 00:37:37,831
让我们看看，我可以看到 share plus 现在实际上已安装，所以它是

218
00:37:37,831 --> 00:37:40,720
生成 pods 项目和

219
00:37:40,720 --> 00:37:45,439
太好了，所以看起来很好，所以让我们进去看看我们是否可以

220
00:37:45,439 --> 00:37:52,639
呃做一个清理，所以我要去调试 sra 产品清理构建文件夹，让我们

221
00:37:52,639 --> 00:37:56,551
看看我们是否可以重新构建，这实际上可能需要一些时间

222
00:37:56,551 --> 00:38:01,511
因为现在我们真的清理了构建工件所以

223
00:38:01,511 --> 00:38:05,831
它基本上会从绝对开始开始存档过程，所以

224
00:38:05,831 --> 00:38:09,831
我只是要安静一会儿，让我们做它的工作，让我们看看是否

225
00:38:09,831 --> 00:38:14,959
存档过程成功了，所以这是实际的结果

226
00:38:14,959 --> 00:38:19,040
再次归档我们的应用程序，我们现在看到完全相同的问题

227
00:38:19,040 --> 00:38:24,159
在进行了 podly 集成并进行了全新的 pod 安装之后

228
00:38:24,159 --> 00:38:28,400
我们看到与 share plus 说模块 share plus not 完全相同的问题

229
00:38:28,400 --> 00:38:33,912
发现这可能是我们如何完成的问题，例如我们的

230
00:38:33,912 --> 00:38:36,799
嗯酒吧得到

231
00:38:36,799 --> 00:38:40,871
老实说，我可以从整个视频中删掉这个，但我是如此

232
00:38:40,871 --> 00:38:44,639
很高兴我们看到这些问题，因为

233
00:38:44,639 --> 00:38:48,799
归档一个 ios 应用程序，简单来说就是

234
00:38:48,799 --> 00:38:52,159
即使只是为 android 做同样的事情，也不总是会好起来的

235
00:38:52,159 --> 00:38:56,080
并不总是会好起来的，如果我从这个视频中删掉你，你

236
00:38:56,080 --> 00:38:58,871
会认为对我来说一切都很好，但事实并非如此

237
00:38:58,871 --> 00:39:02,400
为你工作，然后你会开始责备自己，但我真的很想

238
00:39:02,400 --> 00:39:07,511
把这些东西放在这门课上，这样你就可以清楚地看到像我这样的人试图

239
00:39:07,511 --> 00:39:12,000
告诉你怎么做的事情也需要自己了解这些怎么做以及为什么

240
00:39:12,000 --> 00:39:16,479
事情出了问题，所以我猜在这种情况下，因为我们已经

241
00:39:16,479 --> 00:39:20,400
已经完成了一个 pod install 它实际上是去清除

242
00:39:20,400 --> 00:39:24,551
为我们的整个颤振应用程序构建文件夹并执行

243
00:39:24,551 --> 00:39:29,439
flutter pop 从头开始​​，所以让我们继续我们的颤振

244
00:39:29,439 --> 00:39:34,159
在这里和底部的应用程序我只想说fluffer clean

245
00:39:34,159 --> 00:39:37,912
这将清理 ios 和 android 的工件

246
00:39:37,912 --> 00:39:40,479
好的，然后你会得到很多

247
00:39:40,479 --> 00:39:44,231
您的应用程序中的错误，因为它什么都不理解，所以我们

248
00:39:44,231 --> 00:39:49,439
然后说flutter pop 没事

249
00:39:49,439 --> 00:39:53,040
所以这将完成它的工作并基本上从头开始获取所有依赖项

250
00:39:53,040 --> 00:39:58,479
并将它们安装在您的应用程序中，然后我将在这里做什么

251
00:39:58,479 --> 00:40:01,191
是的，我们可以就这样离开它

252
00:40:01,191 --> 00:40:06,871
现在回到我们的 xcode，然后尝试从

253
00:40:06,871 --> 00:40:11,592
从头开始，让我们看看这一次是否会好一些

254
00:40:11,592 --> 00:40:16,871
希望这次不应该花太多时间，但你永远不会知道 xcode

255
00:40:16,871 --> 00:40:20,159
并且随着ios开发它有自己的

256
00:40:20,159 --> 00:40:24,799
古董，所以让我们在执行 pop get 之后等着看，如果这个过程是

257
00:40:24,799 --> 00:40:29,592
在 xcode 再次编译应用程序后是否会通过

258
00:40:29,592 --> 00:40:34,159
我可以看到和以前一样的问题，这意味着我们的吊舱

259
00:40:34,159 --> 00:40:38,080
integration 和 flutter clean 确实对

260
00:40:38,080 --> 00:40:42,000
应用程序本身，因为我已经做了很长时间的 ios 开发

261
00:40:42,000 --> 00:40:47,119
是时候我的腰带里还有一些工具可以拖出来使用

262
00:40:47,119 --> 00:40:51,592
作为软件工程师和 ios，我首先会使用的东西之一

263
00:40:51,592 --> 00:40:54,231
开发人员只是先看看

264
00:40:54,231 --> 00:40:59,360
我们的部署 ios 版本，在这里我们支持 ios 9，它非常

265
00:40:59,360 --> 00:41:03,912
这种共享能力很可能内置于

266
00:41:03,912 --> 00:41:07,119
我们拖入应用程序的插件与此不兼容

267
00:41:07,119 --> 00:41:10,720
ios 版本，所以首先我要把它升级到 ios 13

268
00:41:10,720 --> 00:41:15,279
目前他们的 ios 13 14 和 50 非常受欢迎，所以有

269
00:41:15,279 --> 00:41:19,759
录制这个 um 课程时的最新版本的 ios 所以首先我

270
00:41:19,759 --> 00:41:23,511
接下来我要做的是

271
00:41:23,511 --> 00:41:29,119
从我们的项目在这里，所以我在这里看看，你可以看到我在

272
00:41:29,119 --> 00:41:34,159
这个notes项目的ios文件夹，让我们进去吧

273
00:41:34,159 --> 00:41:39,831
那么我要做的第一件事就是删除那个嗯我想知道我是不是

274
00:41:39,831 --> 00:41:43,040
实际上也应该删除 pod 文件

275
00:41:43,040 --> 00:41:49,360
也许让我们删除 podfile.lock 并从

276
00:41:49,360 --> 00:41:55,592
项目好，那么我会在这里做慌乱的清洁

277
00:41:55,592 --> 00:41:59,759
从项目中移除了所有的罐子

278
00:41:59,759 --> 00:42:06,080
然后在撤消之后，我将实际查看我们的 pot 文件

279
00:42:06,080 --> 00:42:10,799
看看我们所有的 ios 依赖项，看看它们的样子，所以我要走了

280
00:42:10,799 --> 00:42:15,119
停止程序的执行，然后我将打开一个名为 pod 的文件

281
00:42:15,119 --> 00:42:18,871
文件，这是你所有的 ios 依赖项基本上存储的地方

282
00:42:18,871 --> 00:42:23,592
可以看到平台是ios 13。所以我们的部署目标很奇怪

283
00:42:23,592 --> 00:42:27,439
是 ios 9，所以这可能是问题的潜在根源

284
00:42:27,439 --> 00:42:32,639
这样做之后，我们就有了我们的 pod 文件，是的，这看起来不错

285
00:42:32,639 --> 00:42:38,000
既然如此，那么让我们进入航站楼

286
00:42:38,000 --> 00:42:41,279
在公寓干净之后让我们说翻牌

287
00:42:41,279 --> 00:42:45,592
flutter pop get 将要重新拖动

288
00:42:45,592 --> 00:42:50,479
例如，我们对 Flutter 项目和 ios 项目的依赖项

289
00:42:50,479 --> 00:42:55,759
然后我们可以回去我实际上要杀死xcode并打开

290
00:42:55,759 --> 00:43:00,231
ios文件夹并打开

291
00:43:00,231 --> 00:43:04,799
再次项目工作区，我现在可以在这里看到豆荚不是

292
00:43:04,799 --> 00:43:09,191
真的安装好了，让我们自己去安装 Pod，所以我

293
00:43:09,191 --> 00:43:13,279
说 pod install 这将安装所有依赖项和

294
00:43:13,279 --> 00:43:17,360
让我们看看这里并说出它在说什么

295
00:43:17,360 --> 00:43:21,191
就使用firebase的商店而言，云火力支持正在定义好的那些看起来

296
00:43:21,191 --> 00:43:24,551
很好，这里说 coco pods 没有看到你项目的基本配置

297
00:43:24,551 --> 00:43:28,159
因为您的项目已经为 cocoapods 设置了自定义配置

298
00:43:28,159 --> 00:43:31,912
集成工作请设置目标的基本配置

299
00:43:31,912 --> 00:43:37,439
跑步者以支持文件为目标等等等等或包含目标支持文件

300
00:43:37,439 --> 00:43:41,511
在您的构建配置中，因此这实际上可能非常重要，因为我们

301
00:43:41,511 --> 00:43:46,000
可以在这里看到，所以我们的设置可能有问题

302
00:43:46,000 --> 00:43:50,551
当我们说我们创建了我们的应用程序时，使用颤振创建项目

303
00:43:50,551 --> 00:43:56,479
但让我们记住这一点并尝试

304
00:43:56,479 --> 00:44:01,191
进去再打开一次我们的工作区，现在我可以看到所有的 pod

305
00:44:01,191 --> 00:44:05,511
在这里开发吊舱还可以

306
00:44:05,511 --> 00:44:10,959
share plus 就在那里 pod 可以，pod 规格 pod 规格是什么

307
00:44:10,959 --> 00:44:14,959
说它实际上说平台应该是 ios 8 所以它支持 ios 8 所以

308
00:44:14,959 --> 00:44:18,799
这不是问题，所以我现在要做的是在完成所有这些之后

309
00:44:18,799 --> 00:44:22,231
我将基本上尝试再次构建这个项目，所以我要

310
00:44:22,231 --> 00:44:28,000
用命令 shift k 在这里清理干净的构建文件夹，所以眨眼基本上是干净的

311
00:44:28,000 --> 00:44:33,511
您的构建文件夹以及所有这些都在进行中

312
00:44:33,511 --> 00:44:38,400
编辑器功能很好，所以我基本上要开始做一个

313
00:44:38,400 --> 00:44:42,551
嗯产品并再次存档，然后我会

314
00:44:42,551 --> 00:44:46,159
在另一边见，无论成功还是失败，如果失败，我们将

315
00:44:46,159 --> 00:44:50,479
会修复它，所以让我们看看好吧，现在我可以看到了

316
00:44:50,479 --> 00:44:54,319
在做完我必须做的所有体操之后

317
00:44:54,319 --> 00:44:59,279
那么我们的应用程序最终编译没有问题并且是

318
00:44:59,279 --> 00:45:02,400
老实说，这是我相信许多课程的事情之一

319
00:45:02,400 --> 00:45:06,080
当您分发您的

320
00:45:06,080 --> 00:45:09,912
您实际上经历了很多应用程序，而不仅仅是您按

321
00:45:09,912 --> 00:45:13,831
按钮并提交您的申请，如果一切顺利，您通常会做得很好

322
00:45:13,831 --> 00:45:18,159
设置正确然后就是这种情况但是你必须设置

323
00:45:18,159 --> 00:45:21,680
一切都正确，所以这里发生的事情是我们有

324
00:45:21,680 --> 00:45:28,400
发布一些事情我所做的只是一步一步地命名它们是我

325
00:45:28,400 --> 00:45:32,319
首先碰到了我们应用的部署目标

326
00:45:32,319 --> 00:45:37,912
从 9 到 13。所以你可以通过在 xcode 中单击你的工作区然后找到它

327
00:45:37,912 --> 00:45:42,639
单击此处的运行器目标常规选项卡，然后单击部署

328
00:45:42,639 --> 00:45:47,040
信息我把它撞到 ios 13 所以这是我做的第一件事

329
00:45:47,040 --> 00:45:50,551
但是我认为这不一定与

330
00:45:50,551 --> 00:45:54,159
解决这个问题我们做的另一件事

331
00:45:54,159 --> 00:45:58,319
终端是清洁我们所有的锅，我说

332
00:45:58,319 --> 00:46:03,360
rmrf pods 现在我们从 ios 发出该命令

333
00:46:03,360 --> 00:46:07,759
文件夹 如果我打开这个 ios 文件夹，你会看到这里有一个文件夹

334
00:46:07,759 --> 00:46:12,959
称为 pod 什么是 pod pod 基本上是您的应用程序依赖项

335
00:46:12,959 --> 00:46:18,319
对于 ios，这就是 Flutter 管理您的 ios 应用程序依赖项的方式

336
00:46:18,319 --> 00:46:22,319
这些库例如 firebase 和这个共享库

337
00:46:22,319 --> 00:46:27,912
我们只是拖进来他们基本上在使用它们是依赖项

338
00:46:27,912 --> 00:46:32,799
Flutter 使用第三方软件 cocoapods 进行管理，您必须

339
00:46:32,799 --> 00:46:36,551
在您的计算机上安装 cocoapods 甚至能够

340
00:46:36,551 --> 00:46:40,551
与 pod 交互，因此互联网上有很多关于如何操作的信息

341
00:46:40,551 --> 00:46:44,799
安装 cocoapods 但它通常是伪果酱安装 cocoapods 我认为

342
00:46:44,799 --> 00:46:49,680
也许你甚至可以使用自制软件来安装 cocoapods 但我通常使用

343
00:46:49,680 --> 00:46:53,040
sudo jam 或 jam 在这种情况下，但你需要 sudo

344
00:46:53,040 --> 00:46:57,191
通常是安装 cocoapods 所以我们做了什么我们移除了花盆

345
00:46:57,191 --> 00:47:01,360
文件夹我们删除了 podfile 锁，这对你来说很舒服

346
00:47:01,360 --> 00:47:05,191
用 npm 支持 web 开发，这就像你的包锁

347
00:47:05,191 --> 00:47:08,639
文件，如果您对后端开发不满意，基本上是一个 pod

348
00:47:08,639 --> 00:47:14,159
文件锁是一个文件，用于存储有关所有依赖项的信息

349
00:47:14,159 --> 00:47:19,511
当前已安装，而 pod 文件存储信息

350
00:47:19,511 --> 00:47:24,799
关于您需要哪些依赖项和 pod 文件日志存储有关信息

351
00:47:24,799 --> 00:47:30,000
现在已集成到您的应用程序中的那些，因此我们将其删除

352
00:47:30,000 --> 00:47:33,439
只是为了确保在下一个 pod install

353
00:47:33,439 --> 00:47:37,592
我们所有的依赖项都将全新安装，无论是什么

354
00:47:37,592 --> 00:47:41,592
在 pod 文件锁内，所以我们必须执行几个步骤

355
00:47:41,592 --> 00:47:46,159
接受，但最后我们管理了哦，我们也不要忘记颤抖干净，我们也

356
00:47:46,159 --> 00:47:50,000
发出flutter clean，所以经过所有这些步骤，我们终于成功了

357
00:47:50,000 --> 00:47:54,400
构建我们的应用程序，正如您在此屏幕中看到的那样，我们来到了这个存档

358
00:47:54,400 --> 00:47:58,799
部分，所以我想在这里看一下

359
00:47:58,799 --> 00:48:01,831
在我的笔记上看到

360
00:48:01,831 --> 00:48:05,119
嗯，是的，我们已经完成了密码签名

361
00:48:05,119 --> 00:48:09,279
等等等等，现在我们基本上嗯

362
00:48:09,279 --> 00:48:13,759
基本上在这里创建了这个 ipa 文件，所以你需要做一个

363
00:48:13,759 --> 00:48:17,191
在这里然后你按下分发应用程序按钮并说应用程序商店连接和

364
00:48:17,191 --> 00:48:20,871
说发送发送，这将对

365
00:48:20,871 --> 00:48:25,511
为您准备的二进制文件，它将连接到应用程序

366
00:48:25,511 --> 00:48:29,191
存储连接，你们中的一些人可能会立即

367
00:48:29,191 --> 00:48:32,871
收到一个错误，说我不知道​​如何连接，那是因为

368
00:48:32,871 --> 00:48:35,831
你还没有进入你的嗯

369
00:48:35,831 --> 00:48:39,680
如果您转到 xcode 首选项，则 xcode 中的个人资料信息有一个部分

370
00:48:39,680 --> 00:48:44,799
调用帐户，您需要确保您基本上添加了您的应用程序 Apple id

371
00:48:44,799 --> 00:48:47,759
使用您在 xcode 中的帐户进行任何操作

372
00:48:47,759 --> 00:48:51,119
为了使分发真正起作用，所以我要说的是应用商店

373
00:48:51,119 --> 00:48:56,231
连接这里和下一个 上传到应用商店 连接下一个

374
00:48:56,231 --> 00:49:03,119
所以让我们进去吧

375
00:49:03,119 --> 00:49:07,360
好的，它说好的上传你的应用符号

376
00:49:07,360 --> 00:49:10,639
管理版本和内部版本号我不太喜欢，所以我们要

377
00:49:10,639 --> 00:49:13,279
关闭，所以我们不会使用它，好吧

378
00:49:13,279 --> 00:49:17,511
让我把屏幕放大一点然后在这里按下一步

379
00:49:17,511 --> 00:49:22,551
在这里你必须选择你的个人资料，看起来不错

380
00:49:22,551 --> 00:49:26,639
按那里的下一步按钮，这将联系应用商店连接

381
00:49:26,639 --> 00:49:31,279
并且根据您的应用程序大小，这实际上可能需要很长时间

382
00:49:31,279 --> 00:49:35,279
我正在处理的一些应用程序的时间

383
00:49:35,279 --> 00:49:40,479
不是针对个人，而是针对各个公司，即使我的一万下载

384
00:49:40,479 --> 00:49:43,439
上传嗯[音乐]

385
00:49:43,439 --> 00:49:48,080
互联网连接这个过程可能需要很长时间所以让我们看看多长时间

386
00:49:48,080 --> 00:49:51,191
之所以需要，是因为您在上传过程中看到它不仅仅是上传

387
00:49:51,191 --> 00:49:54,319
你的二进制文件实际上是在联系苹果和

388
00:49:54,319 --> 00:49:58,799
甚至验证你的很多资产，比如你的图片，它正在评估你的图标

389
00:49:58,799 --> 00:50:03,119
即使您的应用程序中有其他资源，它也是有效的验证

390
00:50:03,119 --> 00:50:06,400
我相信它甚至会检查你是否在做任何

391
00:50:06,400 --> 00:50:10,639
您不应该进行的 api 调用，我不是在谈论网络 api

392
00:50:10,639 --> 00:50:14,799
调用，但我实际上是在谈论 ios sdk api 调用，例如，如果你有

393
00:50:14,799 --> 00:50:20,231
在您的应用程序中隐藏了一些工作，这些工作正在对某些 um 进行呼叫

394
00:50:20,231 --> 00:50:26,720
ios sdk 级别的私有 api，所以现在我们就让它做它的事

395
00:50:26,720 --> 00:50:31,831
然后上传，嗯，我们会等到它完成

396
00:50:31,831 --> 00:50:35,831
好吧，上传过程似乎已经过去了

397
00:50:35,831 --> 00:50:42,080
这次实际上好多了，嗯，我实际上必须承认

398
00:50:42,080 --> 00:50:46,799
这里有一些东西，我的上传过程花了很长时间

399
00:50:46,799 --> 00:50:51,511
非常非常长的时间我说的是超过 30 分钟，即使我在

400
00:50:51,511 --> 00:50:55,191
一千微米光纤

401
00:50:55,191 --> 00:51:00,231
下载我的互联网连接的上传速度，这仍然需要一个

402
00:51:00,231 --> 00:51:05,511
很长一段时间，这可能是一个临时错误，苹果上的一个小故障

403
00:51:05,511 --> 00:51:09,191
苹果的应用商店连接网站，或者它可能只是一个很好的东西

404
00:51:09,191 --> 00:51:13,279
现在事情要花很长时间你永远不知道苹果是什么

405
00:51:13,279 --> 00:51:18,000
这很不幸，但现在它已经过去了，我可以看到那个

406
00:51:18,000 --> 00:51:22,000
您将收到此消息，告诉您您的应用已成功上传

407
00:51:22,000 --> 00:51:26,720
好吧，现在让我们谈谈嗯

408
00:51:26,720 --> 00:51:31,831
您将从苹果收到的推送通知电子邮件，看起来像

409
00:51:31,831 --> 00:51:35,191
提交申请后，您可能会收到一封来自

410
00:51:35,191 --> 00:51:40,231
看起来有点像这样的苹果，在这里你会看到它说我们我我

411
00:51:40,231 --> 00:51:43,360
想在最近提交的应用程序中遇到更多问题我很棒的笔记你

412
00:51:43,360 --> 00:51:45,680
交付成功，但您提到您可能希望更正

413
00:51:45,680 --> 00:51:49,279
在您的下一辆卡车中出现以下问题，缺少推送通知权利

414
00:51:49,279 --> 00:51:52,400
这可能有点

415
00:51:52,400 --> 00:51:55,680
让一些开发人员感到不安，但这仅仅是因为我们现在

416
00:51:55,680 --> 00:51:58,871
在 firebase 上的应用程序中使用 firebase 是

417
00:51:58,871 --> 00:52:02,080
能够处理推送通知，以便您可以发送推送通知

418
00:52:02,080 --> 00:52:07,759
从 firebase 控制台到您的用户，但我们的应用程序不是

419
00:52:07,759 --> 00:52:11,040
目前利用推送通知

420
00:52:11,040 --> 00:52:14,551
你可以忽略这封电子邮件

421
00:52:14,551 --> 00:52:18,959
不要试图修复任何东西，因为这封电子邮件的全部内容是我们已经

422
00:52:18,959 --> 00:52:22,871
分析了你的二进制文件，看起来你正在访问一些推送通知

423
00:52:22,871 --> 00:52:27,680
apis 但是您忘记为应用程序启用推送通知

424
00:52:27,680 --> 00:52:31,680
这仅仅是因为当您捆绑您的应用程序并将其发送给苹果时

425
00:52:31,680 --> 00:52:34,720
一个你可能没有的 ipa

426
00:52:34,720 --> 00:52:39,592
实际上看看，但如果你去 Visual Studio 代码对不起，如果你去 xcode

427
00:52:39,592 --> 00:52:42,720
此存档浏览器右键单击您的跑步者

428
00:52:42,720 --> 00:52:48,000
在这里并在 finder 中说 show 你会看到这个 xcode 存档文件并说 show

429
00:52:48,000 --> 00:52:51,680
包装内容，在这里你可能会看到一些产品和

430
00:52:51,680 --> 00:52:56,799
应用程序运行我们的应用程序，所以这整个事情就像你的苹果的 ipa 文件

431
00:52:56,799 --> 00:53:01,040
现在已在此运行器应用程序中收到有关信息

432
00:53:01,040 --> 00:53:04,871
它本身包含了什么样的库，你实际上可以

433
00:53:04,871 --> 00:53:08,319
右键单击运行或应用程序并说显示包内容，在这里你会看到

434
00:53:08,319 --> 00:53:12,400
您的应用程序附带的所有框架，您可以看到

435
00:53:12,400 --> 00:53:16,720
firebase 等等等等这些框架之一

436
00:53:16,720 --> 00:53:21,680
很可能其中一个 Firebase 框架在内部使用它

437
00:53:21,680 --> 00:53:24,720
正在使用一些与推送通知相关的 api，但事实并非如此

438
00:53:24,720 --> 00:53:29,191
必然意味着它处于活动状态并且正在被积极使用

439
00:53:29,191 --> 00:53:33,592
所以这只是苹果告诉你的一封电子邮件，嘿你可能忘记了

440
00:53:33,592 --> 00:53:36,959
做点什么，但你可以不理会这封电子邮件，说不，我没有

441
00:53:36,959 --> 00:53:40,639
忘记任何事情，因为我们的应用程序中没有推送通知

442
00:53:40,639 --> 00:53:44,720
好的，这就是那封电子邮件

443
00:53:44,720 --> 00:53:48,000
嗯，这似乎很好，然后

444
00:53:48,000 --> 00:53:51,360
电子邮件 您可能还会收到一封类似这样的电子邮件，告诉您

445
00:53:51,360 --> 00:53:56,959
嘿，您使用此 sku 的申请现已提交并已完成

446
00:53:56,959 --> 00:54:01,279
处理，这封电子邮件的字面意思是

447
00:54:01,279 --> 00:54:05,191
此应用程序已完成处理，您可以将其安装在您的 ios 或

448
00:54:05,191 --> 00:54:10,319
mac 设备，您可以像在下一章中看到的那样对其进行测试，但是

449
00:54:10,319 --> 00:54:13,191
就像我们通常在每一章做的那样

450
00:54:13,191 --> 00:54:16,871
在每一章的结尾，我们承诺我们所做的事情，我们确保我们

451
00:54:16,871 --> 00:54:21,119
提交并标记这些更改，所以让我在屏幕上进行一些重新洗牌

452
00:54:21,119 --> 00:54:24,231
在这里，让我们去，我要关闭

453
00:54:24,231 --> 00:54:30,080
像这样的 xcode 转到我们的应用程序我的终端笔记和

454
00:54:30,080 --> 00:54:34,479
让我们看看 git status 有一些变化，所以我要走了

455
00:54:34,479 --> 00:54:37,912
cd 在我们的主文件夹中获取状态

456
00:54:37,912 --> 00:54:43,119
应用我的笔记，因为我在 ios 文件夹中，所以我只是做了 cd dot dot

457
00:54:43,119 --> 00:54:46,720
像这样，所以现在我在主文件夹中，网格状态显示了这个，我只是

458
00:54:46,720 --> 00:54:51,119
会说 git add 好吧，让我们看看我们的日志最后

459
00:54:51,119 --> 00:54:55,191
提交是第 28 步，所以让我们认为它是提交

460
00:54:55,191 --> 00:54:59,191
步骤 29 如屏幕底部的标题所示，我们只需按下我们的

461
00:54:59,191 --> 00:55:03,119
之后的变化现在让我们标记我们的

462
00:55:03,119 --> 00:55:07,592
也改变了，说第 29 步，然后按一下

463
00:55:07,592 --> 00:55:14,159
标签就像那样，所以现在可以作为

464
00:55:14,159 --> 00:55:17,680
预计所以我们通常在结束时

465
00:55:17,680 --> 00:55:20,400
每章的结尾都是我们谈论我们将要做什么

466
00:55:20,400 --> 00:55:24,799
在下一章中讨论以及在下一章中我们需要做什么

467
00:55:24,799 --> 00:55:29,439
实际上是发布我们的 ios 应用程序，我们现在已将其发送给苹果，而苹果已经

468
00:55:29,439 --> 00:55:34,959
终于完成了处理并建立了它现在准备就绪的意义

469
00:55:34,959 --> 00:55:38,720
实际提交给苹果，这就是我们接下来要做的

470
00:55:38,720 --> 00:55:43,439
章节提交应用程序以发布到应用程序商店，所以我会看到

471
00:55:43,439 --> 00:55:47,592
大家好，欢迎来到 Flutter 课程的第 48 章

472
00:55:47,592 --> 00:55:50,000
我们一直在使用的前几章

473
00:55:50,000 --> 00:55:54,799
创建一个 ipa 文件并将其发送到苹果，在本章中，我们将

474
00:55:54,799 --> 00:55:58,959
确保我们正在发布该 ipa 文件，这意味着我们要告诉

475
00:55:58,959 --> 00:56:02,871
苹果，嘿，我们已经准备好使用这个 ipa 文件了，我们希望你

476
00:56:02,871 --> 00:56:06,871
嗯，为我们审查这个文件和审查过程

477
00:56:06,871 --> 00:56:11,360
对于苹果和谷歌来说有点不同，例如

478
00:56:11,360 --> 00:56:15,279
苹果有时呃有一个真正的用户在看你的应用程序并且

479
00:56:15,279 --> 00:56:20,400
有时，例如，如果您要求苹果进行快速审查，他们可能不会

480
00:56:20,400 --> 00:56:24,000
甚至看看它，他们可能只是说好吧它只是工作它不会崩溃

481
00:56:24,000 --> 00:56:29,119
然后他们就通过了，对于谷歌来说，它也可能是一个

482
00:56:29,119 --> 00:56:32,080
完全不同的过程，但我们现在在本章中

483
00:56:32,080 --> 00:56:37,360
将专注于 ios app app 提交的基本工作原理

484
00:56:37,360 --> 00:56:41,040
所以当你像我们一样发送 ipa 文件时

485
00:56:41,040 --> 00:56:46,720
完成到苹果，它将在一个叫做试飞的地方提供，所以让我带上

486
00:56:46,720 --> 00:56:54,639
我们的网络浏览器到屏幕上，让我们去看看我们是否可以，如果你真的可以

487
00:56:54,639 --> 00:56:59,040
带来我们之前的观点，让我们看看应用程序

488
00:56:59,040 --> 00:57:03,279
存储连接，自上次以来我已经重新启动了我的电脑，所以我可能有

489
00:57:03,279 --> 00:57:06,479
基本上

490
00:57:06,479 --> 00:57:10,231
再次登录，感谢上帝，我实际上不必重新启动整个

491
00:57:10,231 --> 00:57:14,080
处理并实际在这里获取我的安全密钥

492
00:57:14,080 --> 00:57:17,759
它只允许我登录，所以让我们去应用商店连接中我很棒的应用程序

493
00:57:17,759 --> 00:57:20,551
然后你会在这里看到一个名为 test flight 的标签

494
00:57:20,551 --> 00:57:25,119
和试飞，你现在会看到我们的构建然后在这里可用

495
00:57:25,119 --> 00:57:30,479
基本上可以测试了

496
00:57:30,479 --> 00:57:34,319
我们还需要做的是在缺少的合规性中进入这里，然后点击

497
00:57:34,319 --> 00:57:38,000
在这个管理上，它说你的应用程序使用加密选择是

498
00:57:38,000 --> 00:57:41,680
并且它说出口日志要求包含加密的产品必须是

499
00:57:41,680 --> 00:57:46,400
呃得到了适当的授权，所以在这里我们可以说是

500
00:57:46,400 --> 00:57:49,360
它说你的应用程序符合出口要求

501
00:57:49,360 --> 00:57:52,551
有资格参加该类别中提供的任何考试确保您的应用

502
00:57:52,551 --> 00:57:55,912
符合标准实际上我们可以去之前在这里说不，因为

503
00:57:55,912 --> 00:58:00,479
如果您有责任，我们不会直接使用 um

504
00:58:00,479 --> 00:58:03,680
遵守出口法规，如果您的

505
00:58:03,680 --> 00:58:06,799
加密存在我只会说废话废话好的

506
00:58:06,799 --> 00:58:11,119
现在好了，然后我们说开始内部测试好了，所以现在合规性

507
00:58:11,119 --> 00:58:15,759
错误将会消失，所以现在我们已经完成了，你会看到

508
00:58:15,759 --> 00:58:19,439
在应用商店连接中有一个名为 test flight 的部分，在这里

509
00:58:19,439 --> 00:58:24,080
例如，您可以邀请第三方测试人员

510
00:58:24,080 --> 00:58:28,799
到你的 um 来测试你的应用程序，你是

511
00:58:28,799 --> 00:58:34,080
还允许向用户授予对您的应用程序的访问权限

512
00:58:34,080 --> 00:58:38,231
你邀请了谁来应用商店连接所以它非常重要

513
00:58:38,231 --> 00:58:41,592
了解区别一个是内部测试，另一个是

514
00:58:41,592 --> 00:58:45,279
例如，如果您想提交申请以供第三方测试

515
00:58:45,279 --> 00:58:48,959
像不为贵公司工作的人这样的聚会，例如在这个

516
00:58:48,959 --> 00:58:52,551
案例我们将在本章中使用内部测试，但只知道

517
00:58:52,551 --> 00:58:57,191
该试飞是在 ios 和 mac os 上的一个应用程序，

518
00:58:57,191 --> 00:59:00,159
您实际上可以在那些操作系统上下载

519
00:59:00,159 --> 00:59:05,592
您可以使用试飞来测试您自己的 ios 应用程序或 ma​​c

520
00:59:05,592 --> 00:59:11,439
将应用程序提交到应用程序商店之前，好的

521
00:59:11,439 --> 00:59:15,912
所以这就是试飞的地方，现在我们正在谈论所有

522
00:59:15,912 --> 00:59:20,231
这些让我们也确保我们知道我们有一点安全性

523
00:59:20,231 --> 00:59:23,912
问题嗯，我们还没有真正讨论过

524
00:59:23,912 --> 00:59:30,400
还有很多，但我用瑞典语的呃呃建造了这个嗯，你说的是中场和那个

525
00:59:30,400 --> 00:59:35,360
就像我故意将其内置到本课程中一样，因此您将

526
00:59:35,360 --> 00:59:38,400
看看重新提交过程是如何运作的

527
00:59:38,400 --> 00:59:43,279
如果我们带来我们的代码，让我们把我们的 mynotes 代码带到这里

528
00:59:43,279 --> 00:59:48,720
看看我们的嗯，我相信这是我们的服务之一

529
00:59:48,720 --> 00:59:51,191
笔记服务哎呀

530
00:59:51,191 --> 00:59:55,191
没有服务是完全的哦，因为那是人群服务所以

531
00:59:55,191 --> 00:59:59,912
让我们看看服务和云笔记，我们有

532
00:59:59,912 --> 01:00:05,119
人群云存储云Firebase云存储它被称为好吧我忘记了

533
01:00:05,119 --> 01:00:10,400
名字，我们在这里有这个小全域，你看

534
01:00:10,400 --> 01:00:16,080
所以现在这个所有领域正在做的是说去得到所有的

535
01:00:16,080 --> 01:00:20,799
笔记集合中的所有笔记中的笔记

536
01:00:20,799 --> 01:00:25,912
所以这样做然后从所有的笔记中记住所有的笔记不是

537
01:00:25,912 --> 01:00:30,720
它只记录您的笔记并创建云笔记

538
01:00:30,720 --> 01:00:37,040
然后它会根据您的身份将它们过滤掉，这是一个巨大的安全问题

539
01:00:37,040 --> 01:00:40,231
因为通过订阅并获得

540
01:00:40,231 --> 01:00:44,159
这个流你几乎在阅读其他人的笔记以及我们的

541
01:00:44,159 --> 01:00:48,400
很快我们会解决的，别担心我们想要的是不

542
01:00:48,400 --> 01:00:53,360
甚至允许任何用户阅读其他人的笔记，然后我们就走了

543
01:00:53,360 --> 01:00:57,191
更改所有注释的此实现并重新提交

544
01:00:57,191 --> 01:00:59,592
我们对苹果的申请

545
01:00:59,592 --> 01:01:03,119
我不希望我们向苹果提交应用程序，然后向谷歌提交应用程序，然后

546
01:01:03,119 --> 01:01:06,799
在两个平台上重新提交它，因为正如我所说的那样，我只是想要

547
01:01:06,799 --> 01:01:10,639
我们只向一个平台提交一些东西，然后把它拉回来，然后

548
01:01:10,639 --> 01:01:14,400
再次发送，但不要担心，我只是给你一些准备

549
01:01:14,400 --> 01:01:18,000
会发生什么

550
01:01:18,000 --> 01:01:21,272
我们现在需要做的首先是作为屏幕底部的标题

551
01:01:21,272 --> 01:01:25,759
如果我们需要为两个 ios 安装试飞，您还必须

552
01:01:25,759 --> 01:01:30,959
在你的mac上安装它，你可以去

553
01:01:30,959 --> 01:01:36,639
到你的 Macintosh 上的应用商店所以应用商店应用然后搜索测试

554
01:01:36,639 --> 01:01:39,119
飞行后就好了

555
01:01:39,119 --> 01:01:42,959
搜索试飞 你可以用这个安装按钮安装它 我有

556
01:01:42,959 --> 01:01:46,551
已经安装在我的电脑上，所以我在这里看不到安装按钮，我可以

557
01:01:46,551 --> 01:01:50,639
只需打开它，在你为你完成之后

558
01:01:50,639 --> 01:01:55,680
macintosh 你还需要为你的 um 安装它

559
01:01:55,680 --> 01:02:01,119
ios 设备，在这里我实际上有我的 iphone 我的小宝贝

560
01:02:01,119 --> 01:02:06,000
iphone 13 pro max 在这里，我有

561
01:02:06,000 --> 01:02:09,831
如您所见，在屏幕上镜像该 iphone，以便您可以看到

562
01:02:09,831 --> 01:02:12,551
屏幕实际上是我的 iphone 就在这里

563
01:02:12,551 --> 01:02:17,272
试飞是一个可以在这里找到的应用程序，所以这是

564
01:02:17,272 --> 01:02:20,799
在 ios 上测试飞行应用程序，所以目前你可以看到我没有

565
01:02:20,799 --> 01:02:26,159
访问我的节点应用程序，但我们将很快解决这个问题，或者我的真棒

566
01:02:26,159 --> 01:02:30,799
笔记，我们称之为好的，所以让我们继续在这里，有一个

567
01:02:30,799 --> 01:02:34,231
看看我们需要讨论的下一件事，那就是添加一个用户到

568
01:02:34,231 --> 01:02:39,511
测试灯，所以我如何访问 um

569
01:02:39,511 --> 01:02:44,159
我们已经提交了这个构建，以便我可以通过试飞很好地测试它

570
01:02:44,159 --> 01:02:48,871
我在这里用来测试的用户，我知道那个用户是

571
01:02:48,871 --> 01:02:53,680
pixelity.sweden gmail.com 所以我现在要做的是

572
01:02:53,680 --> 01:02:58,479
邀请该用户测试此构建，所以让我们进行内部测试并

573
01:02:58,479 --> 01:03:03,511
按加号按钮，在这里我只想说我的用户还好

574
01:03:03,511 --> 01:03:07,912
然后按创建按钮，在这里你会看到一个加号按钮

575
01:03:07,912 --> 01:03:12,400
测试仪 0 我只想说 plus 在这里我将使用一个

576
01:03:12,400 --> 01:03:15,360
像素切换，所以我只想说在这里添加

577
01:03:15,360 --> 01:03:20,000
好的，它说已将一名测试员添加到该组中，这很漂亮

578
01:03:20,000 --> 01:03:23,439
很多，所以我不必在那里做任何额外的事情

579
01:03:23,439 --> 01:03:29,592
所以我接下来要做的就是等待嗯一封电子邮件由应用程序发送

580
01:03:29,592 --> 01:03:33,511
商店连接到我的用户，它刚刚被发送，我要打开它，这样你就可以了

581
01:03:33,511 --> 01:03:37,191
也看看它的样子这是我刚刚收到的电子邮件所以应用商店

582
01:03:37,191 --> 01:03:41,592
连接告诉我，嘿，你现在被邀请来测试这个

583
01:03:41,592 --> 01:03:45,592
应用程序，你可以继续做，所以我只是要点击视图

584
01:03:45,592 --> 01:03:50,551
在试飞中，这将起作用，因为我已经有了

585
01:03:50,551 --> 01:03:55,759
基本上是安装在我的 Macintosh 上的测试灯，所以让我点击它然后

586
01:03:55,759 --> 01:03:59,360
我可以在单独的屏幕上看到试飞打开我会在这里把它带到屏幕上

587
01:03:59,360 --> 01:04:05,439
我可以接受基本上安装

588
01:04:05,439 --> 01:04:09,831
这个应用程序底部的底部标题表明我们已经

589
01:04:09,831 --> 01:04:14,080
已经查看了看起来像这样的电子邮件，现在我们要走了

590
01:04:14,080 --> 01:04:18,400
安装这个应用程序，它是一个颤振应用程序

591
01:04:18,400 --> 01:04:22,231
但我们正在将它安装在 Macintosh 上，这很棒，所以让我们

592
01:04:22,231 --> 01:04:26,871
接受这个，你现在可以看到我可以说安装或完成，所以我只是

593
01:04:26,871 --> 01:04:30,479
会说完成，所以你会看到它，所以这是我们的应用程序，我会

594
01:04:30,479 --> 01:04:34,799
按下安装按钮，这只是去应用商店连接和

595
01:04:34,799 --> 01:04:41,592
抓住那个二进制文件并把它放下，这样我就可以按下打开按钮

596
01:04:41,592 --> 01:04:47,119
如果一切顺利，这就是我们在上面运行的颤振应用程序

597
01:04:47,119 --> 01:04:51,272
macintosh 但它是一个我们实际上没有的 ios 应用程序

598
01:04:51,272 --> 01:04:54,639
将其编译为在 Macintosh 上运行，因此一切正常

599
01:04:54,639 --> 01:04:58,831
因为它应该我什至可以在这里登录

600
01:04:58,831 --> 01:05:04,080
就这样，然后在这里它是一个 foo bar bass

601
01:05:04,080 --> 01:05:08,000
登录，我可以看到我的笔记，所以它的工作原理是

602
01:05:08,000 --> 01:05:12,080
预料之中，所以我现在就关闭应用程序好了

603
01:05:12,080 --> 01:05:15,360
所以我们现在需要做的是提交这个

604
01:05:15,360 --> 01:05:18,720
构建我们已经看过它似乎工作正常，所以我要关闭

605
01:05:18,720 --> 01:05:22,551
在这里试飞并关闭此电子邮件，然后我们去应用商店连接并

606
01:05:22,551 --> 01:05:27,439
让我们去这里的这个应用商店部分和这里的这个 ios 应用部分

607
01:05:27,439 --> 01:05:32,400
1.0 准备提交让我们向下滚动到说 build and we

608
01:05:32,400 --> 01:05:36,720
然后需要说选择一个构建，然后再提交您的应用程序现在好了

609
01:05:36,720 --> 01:05:40,231
记住，如果你没有看到这个蓝色按钮

610
01:05:40,231 --> 01:05:45,119
这是因为你可能刚刚向苹果提交了账单

611
01:05:45,119 --> 01:05:49,191
苹果通常需要 30 分钟甚至更长时间来验证您的

612
01:05:49,191 --> 01:05:53,439
构建所以他们甚至可能没有出现在这里，特别是如果它是第一个

613
01:05:53,439 --> 01:05:56,799
构建您要发送到苹果的版本可能需要一段时间

614
01:05:56,799 --> 01:06:01,592
他们来处理它，所以你可能看不到这个按钮，因为没有

615
01:06:01,592 --> 01:06:06,319
有效的构建，但你可以测试你可以检查你的构建状态

616
01:06:06,319 --> 01:06:10,160
去这个试飞部分，看看那个版本

617
01:06:10,160 --> 01:06:15,120
您已提交，如果该构建仍在处理中，它将只是

618
01:06:15,120 --> 01:06:19,512
说呃括号处理，图标会有点变灰

619
01:06:19,512 --> 01:06:23,120
好的，所以别担心，这不是什么问题，你只需要等待

620
01:06:23,120 --> 01:06:26,232
有点，所以在这里我只想说选择

621
01:06:26,232 --> 01:06:29,591
提交应用程序之前的账单，然后说出我要构建的账单

622
01:06:29,591 --> 01:06:35,591
提交好了，然后我就按保存按钮

623
01:06:35,591 --> 01:06:40,480
所以这是构建应用商店连接中的年龄评级

624
01:06:40,480 --> 01:06:44,232
转到应用信息并填写年龄等级，我相信我们已经完成了

625
01:06:44,232 --> 01:06:48,232
因此，如果您之前没有这样做过，请继续并照顾好

626
01:06:48,232 --> 01:06:51,911
但我在前几章中解释了这一点，所以你可能不得不去

627
01:06:51,911 --> 01:06:56,400
并根据需要编辑您的年龄等级，但如果您已按照章节进行操作

628
01:06:56,400 --> 01:06:58,639
按时间顺序你应该这样做

629
01:06:58,639 --> 01:07:02,800
到此为止还好

630
01:07:02,800 --> 01:07:06,959
我们还需要照顾我们的应用隐私，所以我们需要去应用隐私

631
01:07:06,959 --> 01:07:10,000
正如屏幕底部的标题所示，在这里我们必须得到

632
01:07:10,000 --> 01:07:12,639
从填写开始

633
01:07:12,639 --> 01:07:16,720
我们的应用程序隐私，如果您有

634
01:07:16,720 --> 01:07:20,800
收集大量数据的应用程序我不想吓到你，但你

635
01:07:20,800 --> 01:07:25,760
可能有点麻烦，因为你必须通知苹果所有

636
01:07:25,760 --> 01:07:29,271
那些你从用户那里收集的东西好吧

637
01:07:29,271 --> 01:07:34,720
所以让我们在这里假设您或第三方合作伙伴是否收集数据

638
01:07:34,720 --> 01:07:38,232
从这个应用程序中，我们应该在这里说“是”，因为我们正在收集

639
01:07:38,232 --> 01:07:43,440
数据，这是用户的例如电子邮件地址

640
01:07:43,440 --> 01:07:49,591
密码和注释，所以让我们说是，这里有一个满足所有要求的数据类型

641
01:07:49,591 --> 01:07:53,832
以下标准是可选的披露数据不用于

642
01:07:53,832 --> 01:07:56,552
跟踪我们不使用它来跟踪数据

643
01:07:56,552 --> 01:08:00,480
不用于第三方 我们不这样做 发生数据收集

644
01:08:00,480 --> 01:08:04,480
仅在不常见的情况下可以，所以我们几乎不是

645
01:08:04,480 --> 01:08:08,480
做他们在这里所说的任何跟踪工作

646
01:08:08,480 --> 01:08:11,832
让我们在这里说数据收集是的，我们正在收集您的电子邮件地址

647
01:08:11,832 --> 01:08:14,232
就是这样

648
01:08:14,232 --> 01:08:18,639
我们不收集任何财务信息位置

649
01:08:18,639 --> 01:08:24,232
联系人 用户 内容 照片 音频 游戏 没有那个

650
01:08:24,232 --> 01:08:30,552
任何其他用户生成的内容 是 浏览历史 没有 搜索历史 没有

651
01:08:30,552 --> 01:08:35,360
用户 ID 屏幕名称 句柄 帐户 ID

652
01:08:35,360 --> 01:08:39,040
是的，我们是设备 ID，我们不是

653
01:08:39,040 --> 01:08:42,480
嗯，我们没有做的诊断崩溃数据

654
01:08:42,480 --> 01:08:46,080
目前和其他数据，所以是的，这看起来很好

655
01:08:46,080 --> 01:08:50,319
所以现在我们可以只说用户ID的标识符我们还说其他用户内容

656
01:08:50,319 --> 01:08:54,000
因为我们正在收集用户生成的笔记，而且我们也在

657
01:08:54,000 --> 01:08:57,591
收集他们的电子邮件地址，所以我们只是说在这里保存

658
01:08:57,591 --> 01:09:02,232
好的，它说需要额外的设置，所以让我们继续修复这些

659
01:09:02,232 --> 01:09:05,512
现在在电子邮件地址中，让我们去设置电子邮件地址，所以我要点击

660
01:09:05,512 --> 01:09:08,720
在那里，我们是否将其用于第三方 否

661
01:09:08,720 --> 01:09:14,232
开发者广告没有分析没有产品个性化

662
01:09:14,232 --> 01:09:19,591
自定义用户看到的内容，例如不推荐的产品列表

663
01:09:19,591 --> 01:09:24,080
应用程序功能是的，这就是我们正在做的，所以请按下一步

664
01:09:24,080 --> 01:09:27,360
并且是从这个应用程序收集的电子邮件地址链接到用户的

665
01:09:27,360 --> 01:09:32,319
指向 yes 电子邮件地址收集器的身份链接

666
01:09:32,319 --> 01:09:36,552
指向用户身份的链接在那里我的意思是这是

667
01:09:36,552 --> 01:09:39,440
有点法律问题所以我不是最好的

668
01:09:39,440 --> 01:09:42,480
嗯放在这里

669
01:09:42,480 --> 01:09:47,120
回答这个问题，但我的意思是电子邮件不一定与某人的

670
01:09:47,120 --> 01:09:51,271
作为一个人的身份，因为我可以像私人电子邮件一样去创建，而没有

671
01:09:51,271 --> 01:09:54,800
有人知道，所以我只会回答不

672
01:09:54,800 --> 01:09:59,360
跟踪电子邮件地址 好的，接下来

673
01:09:59,360 --> 01:10:02,400
嗯好的

674
01:10:02,400 --> 01:10:05,911
您或第三方合作伙伴是否使用电子邮件地址似乎不太好

675
01:10:05,911 --> 01:10:11,680
用于跟踪目的不可以，保存好，所以

676
01:10:11,680 --> 01:10:15,760
现在保存电子邮件地址的内容让我们转到其他用户内容

677
01:10:15,760 --> 01:10:20,552
用户生成的注释没问题，所以说明其他用户的内容如何

678
01:10:20,552 --> 01:10:25,512
正在使用从这个应用程序收集的 um 广告 没有分析 没有

679
01:10:25,512 --> 01:10:29,271
定制没有和应用程序功能当然

680
01:10:29,271 --> 01:10:32,872
那么让我们去说是从子链接收集的用户内容到

681
01:10:32,872 --> 01:10:36,800
用户的身份他们被使用他们链接到

682
01:10:36,800 --> 01:10:40,959
用户的电子邮件，因为我们说电子邮件与用户的身份无关，所以我是

683
01:10:40,959 --> 01:10:46,400
只是有理由在这里说不，您或第三方合作伙伴是否使用其他

684
01:10:46,400 --> 01:10:52,720
用于跟踪目的的用户内容不行，所以那部分也完成了

685
01:10:52,720 --> 01:10:56,319
让我们转到用户 ID 的标识符，所以我要点击那里

686
01:10:56,319 --> 01:11:02,000
并记住这里的用户 id 是 firebase 创建的 uid 好记住

687
01:11:02,000 --> 01:11:06,080
所以我们将它用于应用程序功能

688
01:11:06,080 --> 01:11:10,872
从此应用收集的用户 ID 是否与用户身份相关联

689
01:11:10,872 --> 01:11:15,040
用户 id 用户身份

690
01:11:15,040 --> 01:11:19,360
我会说是的，这很明显，所以让我们说是的

691
01:11:19,360 --> 01:11:24,959
您或第三方合作伙伴是否使用用户 ID 进行跟踪？

692
01:11:24,959 --> 01:11:28,639
不，好吧，所以得救了，现在就是这样

693
01:11:28,639 --> 01:11:32,552
您已经阅读了隐私政策，就像这样

694
01:11:32,552 --> 01:11:35,832
基本上发生的事情是苹果会

695
01:11:35,832 --> 01:11:41,271
当他们尝试下载您的应用程序时向用户显示这个非常

696
01:11:41,271 --> 01:11:45,591
重要的是你要尽你的知识和能力填写这是

697
01:11:45,591 --> 01:11:50,160
不是你去的地方，假装什么，说试着隐藏

698
01:11:50,160 --> 01:11:54,080
您从用户那里收集到的信息处于最佳状态

699
01:11:54,080 --> 01:11:58,552
对您的产品的最大利益和贵公司的最大利益感兴趣

700
01:11:58,552 --> 01:12:05,040
确保你尽可能地填写这些，通常在更大的

701
01:12:05,040 --> 01:12:10,080
您可能想咨询的公司

702
01:12:10,080 --> 01:12:14,552
嗯，擅长确保你没有遗漏任何东西，所以在大公司你

703
01:12:14,552 --> 01:12:18,319
通常不要自己做，但因为我们现在假设你是

704
01:12:18,319 --> 01:12:22,319
即使您在像我这样的组织背后，也像单个实体一样简单

705
01:12:22,319 --> 01:12:28,480
但你是一个单一的实体，并尽力做到这一点，好吧

706
01:12:28,480 --> 01:12:33,040
所以现在我们要做的也是填写这个 um

707
01:12:33,040 --> 01:12:38,720
让我们在此处查看隐私政策，您可以在此处看到这是什么

708
01:12:38,720 --> 01:12:43,120
所有应用程序都需要链接到隐私政策隐私政策的网址

709
01:12:43,120 --> 01:12:46,400
正如你在屏幕底部看到的那样，我实际上包含了一些

710
01:12:46,400 --> 01:12:52,480
我自己网站的隐私政策，我已经包含了，让我们看看

711
01:12:52,480 --> 01:12:57,271
如果我可以在这里登录让我们看看我是否可以单独登录

712
01:12:57,271 --> 01:13:03,760
窗户，所以你不必为此烦恼

713
01:13:03,760 --> 01:13:10,319
因为我实际上已经包括了那个，嗯，你知道我实际上会做什么

714
01:13:10,319 --> 01:13:16,232
单独的屏幕，因此您不必为此烦恼，嗯

715
01:13:16,232 --> 01:13:21,512
所以我会去

716
01:13:21,512 --> 01:13:24,872
我会去我的托管网站，我会处理好，然后我会带上它

717
01:13:24,872 --> 01:13:29,271
到屏幕上，这样你就可以真正看到它

718
01:13:29,271 --> 01:13:35,192
让我们看看我是否可以在这里访问我的主机，然后再访问我的

719
01:13:35,192 --> 01:13:39,120
基本上托管

720
01:13:39,120 --> 01:13:43,911
好吧，我所有的文件都在里面，对不起

721
01:13:43,911 --> 01:13:48,400
我会把它带到这里，让我们看看我提供的这个网址

722
01:13:48,400 --> 01:13:51,512
屏幕底部你可以看到像素 dsc 隐私政策，所以我要

723
01:13:51,512 --> 01:13:54,480
去那里的配音配音，我看看

724
01:13:54,480 --> 01:13:58,872
这个文本文件就在那里隐私政策所以如果我输入像素

725
01:13:58,872 --> 01:14:04,160
对不起，隐私政策你看到有一个通用的隐私政策，

726
01:14:04,160 --> 01:14:08,160
我已经放在我的网站上，你需要做同样的事情

727
01:14:08,160 --> 01:14:12,480
所以你基本上需要从某个地方获取隐私政策并查看

728
01:14:12,480 --> 01:14:17,120
在那个隐私政策中，并确保它对你有用，所以我所做的是我

729
01:14:17,120 --> 01:14:20,480
找到了一个网站，我不只是去广告

730
01:14:20,480 --> 01:14:25,911
在这里，但您可以找到由非常优秀和聪明的人编写的免费隐私政策

731
01:14:25,911 --> 01:14:30,319
人们，你可以看看那些调整他们以确保他们做出

732
01:14:30,319 --> 01:14:34,080
对您和您的公司有意义，例如在这里我刚刚采取了

733
01:14:34,080 --> 01:14:38,872
通用隐私政策让我们看看我是否可以在这里找到它

734
01:14:38,872 --> 01:14:43,120
所以我把我的公司名称放在那里，我只是确保它对我有意义

735
01:14:43,120 --> 01:14:47,192
公司，我基本上只是把它放在你可以看到的那个网址中

736
01:14:47,192 --> 01:14:50,872
屏幕底部，所以我将在隐私和应用商店连接处进入

737
01:14:50,872 --> 01:14:54,800
并说隐私政策编辑和隐私政策网址中我只想说

738
01:14:54,800 --> 01:14:59,360
https pixelity dot se 然后我只想说

739
01:14:59,360 --> 01:15:03,680
隐私政策.txt 但对你来说这应该是

740
01:15:03,680 --> 01:15:07,680
其他的好，我只是复制它打开它并确保

741
01:15:07,680 --> 01:15:12,232
它存在，然后我要按下保存按钮

742
01:15:12,232 --> 01:15:17,911
所以在我们完成之后，我们还需要确保我们已经照顾好我们的

743
01:15:17,911 --> 01:15:22,800
类别我们的应用程序所属的类别所以让我们去应用程序

744
01:15:22,800 --> 01:15:26,000
屏幕底部的信息表明我将进入该类别

745
01:15:26,000 --> 01:15:30,000
我们要说的主要类别是我们的应用程序属于生产力和

746
01:15:30,000 --> 01:15:36,232
然后它属于公用事业好吧这里公用事业好吧那我要去

747
01:15:36,232 --> 01:15:39,360
保存此信息

748
01:15:39,360 --> 01:15:44,080
好的，那么在我们提交我们的应用程序进行审核之前我们还需要做的是

749
01:15:44,080 --> 01:15:50,000
请记住，这个应用程序将由一个真正的人来审查，所以

750
01:15:50,000 --> 01:15:54,319
这个人实际上会在他们的队列中获取这些信息

751
01:15:54,319 --> 01:15:57,360
工作他们会说哦，一个名为我的精彩笔记的应用程序

752
01:15:57,360 --> 01:16:00,639
需要审查，然后他们会说好的

753
01:16:00,639 --> 01:16:03,192
他们的屏幕上会有一些控制面板，我真的不知道怎么做

754
01:16:03,192 --> 01:16:07,680
它是在苹果的网站上形成的，但他们会下载这个应用程序

755
01:16:07,680 --> 01:16:12,080
可能会自动在各种设备上，然后他们会打开应用程序并

756
01:16:12,080 --> 01:16:15,192
然后就像我应该如何使用这个应用程序一样

757
01:16:15,192 --> 01:16:19,360
确保您提供所有信息符合您的最大利益

758
01:16:19,360 --> 01:16:24,232
可能给那个人，这样他们就可以审查你的申请，所以你需要什么

759
01:16:24,232 --> 01:16:28,959
然后要做的是进入这里的应用程序，准备在这里应用程序中提交

760
01:16:28,959 --> 01:16:33,680
查看信息，然后在注释下告诉那个人

761
01:16:33,680 --> 01:16:38,160
您的应用程序是如何工作的以及他们需要如何在此处注册

762
01:16:38,160 --> 01:16:42,400
我们要说的是你需要

763
01:16:42,400 --> 01:16:46,160
一个有效的电子邮件地址

764
01:16:46,160 --> 01:16:49,120
注册请按照这些

765
01:16:49,120 --> 01:16:55,591
现在注册的步骤我会说打开注册视图并注册

766
01:16:55,591 --> 01:17:02,000
使用您选择的电子邮件和密码

767
01:17:02,000 --> 01:17:09,192
您选择等待确认电子邮件

768
01:17:09,192 --> 01:17:16,480
等待确认电子邮件发送到您的电子邮件地址

769
01:17:16,480 --> 01:17:20,319
并在确认中

770
01:17:20,319 --> 01:17:24,480
单击链接以确认您的电子邮件

771
01:17:24,480 --> 01:17:29,360
地址没问题，然后第三步是回去

772
01:17:29,360 --> 01:17:34,832
到应用程序和登录屏幕日志中

773
01:17:34,832 --> 01:17:40,720
使用您的电子邮件和密码

774
01:17:40,720 --> 01:17:44,800
就是这样，所以我们现在已经做到了，所以我要

775
01:17:44,800 --> 01:17:48,232
实际上然后在这里提供一个有效的电话号码，因为我不想

776
01:17:48,232 --> 01:17:52,160
真的在互联网上到处分享我喜欢的电话号码我只是

777
01:17:52,160 --> 01:17:55,680
将在此处转到单独的屏幕，然后

778
01:17:55,680 --> 01:18:00,639
在这里写下我的有效电话号码

779
01:18:00,639 --> 01:18:05,512
但那是我的电话号码

780
01:18:05,512 --> 01:18:08,872
去这里然后我也要按保存按钮

781
01:18:08,872 --> 01:18:13,192
然后把屏幕完美地带到这里，所以现在我已经保存了这些信息

782
01:18:13,192 --> 01:18:17,512
包括我的电话号码，此时一切都应该准备就绪

783
01:18:17,512 --> 01:18:22,160
所以你需要做的就是在你休息的时候去拿些爆米花

784
01:18:22,160 --> 01:18:26,552
希望这样做，然后你只需要说提交审核

785
01:18:26,552 --> 01:18:29,591
它说下面的项目需要没问题

786
01:18:29,591 --> 01:18:33,832
我们还没有真正完成定价，然后它看到它说管理员必须

787
01:18:33,832 --> 01:18:37,832
在应用隐私部分提供有关应用隐私惯例的信息

788
01:18:37,832 --> 01:18:42,080
似乎我们错过了一些东西，所以让我们来看看定价和可用性

789
01:18:42,080 --> 01:18:45,760
修复这个应用程序将是免费的，所以我只想说它不会

790
01:18:45,760 --> 01:18:49,040
花费任何东西并保存它，以便定价

791
01:18:49,040 --> 01:18:52,720
让我们去应用程序隐私，看看我们是否真的错过了什么

792
01:18:52,720 --> 01:18:56,400
看起来像，但我们忘记的是实际按下发布按钮，所以

793
01:18:56,400 --> 01:19:00,959
让我们发布吧，好吧，然后我们回到这里，然后我们

794
01:19:00,959 --> 01:19:03,832
说提交

795
01:19:03,832 --> 01:19:09,911
太好了，现在您的应用程序已提交到应用商店和审阅者

796
01:19:09,911 --> 01:19:13,760
从应用商店连接将查看您的应用程序，所以

797
01:19:13,760 --> 01:19:18,232
他们可以确认它根据

798
01:19:18,232 --> 01:19:22,080
您提供的信息，我可以看到我实际上收到了一封电子邮件

799
01:19:22,080 --> 01:19:26,480
从苹果看起来像这样，它说你的应用程序的状态有

800
01:19:26,480 --> 01:19:30,232
更改为等待审核所以这不是等待游戏所以

801
01:19:30,232 --> 01:19:34,552
嗯，但在我们真正做这一切之前，我们

802
01:19:34,552 --> 01:19:39,271
苹果是否有时间审查我们的申请，以及

803
01:19:39,271 --> 01:19:42,720
接受它，否则他们在其中发现了一些错误，并且

804
01:19:42,720 --> 01:19:48,319
拒绝了我们的申请，无论我们需要撤回这个

805
01:19:48,319 --> 01:19:52,160
构建，我将在接下来的章节中向您展示如何，因为我们有

806
01:19:52,160 --> 01:19:56,720
我告诉过你的安全漏洞，所以现在我们可以很高兴我们已经

807
01:19:56,720 --> 01:19:59,440
通过这一章，我们已经做了很多工作

808
01:19:59,440 --> 01:20:04,160
嗯，拍拍自己的背，干得好

809
01:20:04,160 --> 01:20:08,872
拿一些呃也许是茶或咖啡

810
01:20:08,872 --> 01:20:12,959
我们可以开始为下一章做准备，我会告诉你

811
01:20:12,959 --> 01:20:16,959
您实际上是我们需要在下一章中讨论的内容，就是这个

812
01:20:16,959 --> 01:20:21,680
我们在所有笔记中遇到的小问题和

813
01:20:21,680 --> 01:20:26,800
我们需要先解决这个问题，然后我们才能使用 android，所以

814
01:20:26,800 --> 01:20:30,872
现在你知道接下来的章节会发生什么，嗯

815
01:20:30,872 --> 01:20:34,639
我会在那里见到你大家好，欢迎来到这个扑的第 49 章

816
01:20:34,639 --> 01:20:40,000
当然，在前面的章节中，我们已经向 um 提交了我们的申请

817
01:20:40,000 --> 01:20:43,760
应用商店连接，我们也简单地谈到了这个事实

818
01:20:43,760 --> 01:20:47,911
我们的 Firebase Firestore 中存在一些安全问题

819
01:20:47,911 --> 01:20:51,760
数据库所以让我们看看实际的

820
01:20:51,760 --> 01:20:55,680
问题是，所以我在前面的章节中简要解释了这一点，但我会这样做

821
01:20:55,680 --> 01:21:00,160
再次在这里，让我们看看，如果这是我们的代码，我将

822
01:21:00,160 --> 01:21:04,720
增加尺寸，这样我们会更好地看到它，当我们工作时你会看到

823
01:21:04,720 --> 01:21:09,192
在屏幕上为用户显示所有注释，例如用户 a

824
01:21:09,192 --> 01:21:13,271
已登录应用程序并在我们的内部

825
01:21:13,271 --> 01:21:16,480
笔记视图如果你去那里我们会看到我们是

826
01:21:16,480 --> 01:21:20,720
在我们的流构建器中订阅所有节点，所以我们说我们是

827
01:21:20,720 --> 01:21:25,680
基本上构建我们的整个列表视图，现在它是列表视图和

828
01:21:25,680 --> 01:21:30,232
我们在来自所有节点函数的数据之上构建它

829
01:21:30,232 --> 01:21:34,800
目前在我们的 Firebase 云存储中

830
01:21:34,800 --> 01:21:39,120
但是，如果您查看此代码，您会发现它在做什么是指

831
01:21:39,120 --> 01:21:44,400
到这个节点的私有 um 或者这个节点的局部变量和哪个

832
01:21:44,400 --> 01:21:48,080
就在这里，此刻的笔记是

833
01:21:48,080 --> 01:21:54,080
指向笔记集合以及它的作用它确实需要所有

834
01:21:54,080 --> 01:21:59,911
笔记集合中的笔记，所以这看起来本质上意味着任何

835
01:21:59,911 --> 01:22:04,720
登录到我们应用程序的用户真正检索了

836
01:22:04,720 --> 01:22:07,360
整个数据库虽然

837
01:22:07,360 --> 01:22:11,760
在该代码的末尾，我们正在做的是说我们在检索后没问题

838
01:22:11,760 --> 01:22:16,552
数据库中的所有节点，然后我们将它们映射到云

839
01:22:16,552 --> 01:22:20,232
节点，以便我们可以在本地使用它们

840
01:22:20,232 --> 01:22:25,120
就在最后我们说嘿，但我们只对那些

841
01:22:25,120 --> 01:22:27,680
对于丢弃用户，但

842
01:22:27,680 --> 01:22:31,040
即使当前登录用户不会看到

843
01:22:31,040 --> 01:22:36,639
数据库，但当前用户正在阅读数据库中的所有笔记，如果您

844
01:22:36,639 --> 01:22:40,720
例如，如果您使用 charles 代理，则执行中间人攻击

845
01:22:40,720 --> 01:22:45,832
在电脑上，然后你正在使用你的手机，你正在使用

846
01:22:45,832 --> 01:22:49,271
例如，假设您的计算机上有 charles 代理，然后您是

847
01:22:49,271 --> 01:22:53,591
通过 wi-fi 从以太网连接共享您的 wi-fi 连接

848
01:22:53,591 --> 01:22:57,120
如果我不坐在中间，一部正在运行您的应用程序的 iphone

849
01:22:57,120 --> 01:23:00,232
使用 charles 代理并查看来自您的颤动的所有流量

850
01:23:00,232 --> 01:23:05,040
应用到firebase然后我实际上可以看到你在请求信息

851
01:23:05,040 --> 01:23:09,911
关于所有这些笔记，然后这些笔记回到应用程序，所以

852
01:23:09,911 --> 01:23:15,040
中间人可能会暴露我们的所有数据

853
01:23:15,040 --> 01:23:18,639
至少在数据库或笔记集合中，所以我们需要

854
01:23:18,639 --> 01:23:23,512
我们需要解决这个问题，所以我们要做的是开始

855
01:23:23,512 --> 01:23:28,552
如果您记得在

856
01:23:28,552 --> 01:23:33,192
之前的章节我们将我们的应用程序发送给苹果进行审查，以及什么

857
01:23:33,192 --> 01:23:38,000
我已经在这里完成了，我的开发人员基本上拒绝了这个应用程序，所以

858
01:23:38,000 --> 01:23:42,400
让我看看我是否可以增加屏幕的大小，所以我们

859
01:23:42,400 --> 01:23:46,800
将我们的应用程序提交到 app store connect 以供 apple um 审核

860
01:23:46,800 --> 01:23:51,271
团队审查团队，但就在它真正去审查之前，我刷新了

861
01:23:51,271 --> 01:23:55,360
屏幕在这里，你没有看到这个，但我说删除这个应用程序

862
01:23:55,360 --> 01:23:59,591
如果您将自己的应用程序从审核中删除，则进行审核

863
01:23:59,591 --> 01:24:04,552
会变成这个它会去状态开发者拒绝所以这基本上是

864
01:24:04,552 --> 01:24:08,480
通知你嘿这不是苹果基本上拒绝你的申请

865
01:24:08,480 --> 01:24:13,760
是你自己做的吗，所以我可以给你举个例子

866
01:24:13,760 --> 01:24:16,480
来自苹果的确认电子邮件将看起来

867
01:24:16,480 --> 01:24:20,232
像这样我会在一个单独的屏幕上打开它

868
01:24:20,232 --> 01:24:24,400
它看起来像这样 我会把它带到这个主屏幕上让你看到

869
01:24:24,400 --> 01:24:26,720
没关系

870
01:24:26,720 --> 01:24:30,959
所以我们开始了，然后我收到了一封来自苹果的电子邮件，上面写着那个状态

871
01:24:30,959 --> 01:24:36,400
您的应用程序已更改为开发者拒绝应用程序名称等等等等

872
01:24:36,400 --> 01:24:39,911
这是您将收到的电子邮件，所以我需要您基本上拒绝您的

873
01:24:39,911 --> 01:24:43,192
应用您发送到的版本一零

874
01:24:43,192 --> 01:24:47,040
苹果因为我们的应用程序存在安全问题

875
01:24:47,040 --> 01:24:50,639
我在前面的章节中已经提到过，我是故意这样做的

876
01:24:50,639 --> 01:24:53,680
我们可以像某人一样理解，因为这是那种

877
01:24:53,680 --> 01:24:56,232
作为一名软件开发人员，你会经历有时你会

878
01:24:56,232 --> 01:25:00,872
向苹果或谷歌提交一些东西，然后你就明白你犯了一个错误

879
01:25:00,872 --> 01:25:05,192
那么你如何解决这个问题，我真的希望这成为其中的一部分

880
01:25:05,192 --> 01:25:09,360
嗯，当然，所以你明白你是如何拒绝的

881
01:25:09,360 --> 01:25:12,319
您的申请 您如何解决问题以及如何重新提交申请

882
01:25:12,319 --> 01:25:16,552
好的，但我不想为 ios 和 android 都这样做，因为它只是得到

883
01:25:16,552 --> 01:25:20,000
无聊，如果你必须先提交，从两个提交整个提交

884
01:25:20,000 --> 01:25:23,591
平台，然后再次提交，这就是我们首先提交 ios 的原因

885
01:25:23,591 --> 01:25:26,639
然后我们会修复它，一旦修复了，我们也会

886
01:25:26,639 --> 01:25:31,120
提交 android 好的，所以在拒绝您的申请后，您

887
01:25:31,120 --> 01:25:36,400
还需要基本上从 1.0 中删除你的构建，所以我相信我已经

888
01:25:36,400 --> 01:25:39,760
已经这样做了哦，不，我没有，所以实际上很好，我没有这样做

889
01:25:39,760 --> 01:25:44,400
所以让我们在 1.0 中继续前进，然后删除这个构建好吧，所以我们说我们

890
01:25:44,400 --> 01:25:49,832
不想提交任何东西然后按保存好

891
01:25:49,832 --> 01:25:53,911
好吧，正如你在屏幕底部看到的那样，我们将

892
01:25:53,911 --> 01:25:59,760
现在把这个1.0版本更新到1.1，我们去看看他能不能找到那个

893
01:25:59,760 --> 01:26:04,232
信息所以现在我也看到我收到了一封电子邮件

894
01:26:04,232 --> 01:26:07,911
苹果在这里说好的，现在它已准备好提交意味着

895
01:26:07,911 --> 01:26:12,480
它不再被开发或拒绝，让我们把这个版本放到这里

896
01:26:12,480 --> 01:26:17,760
到 1.1 0.0 好的，然后我要保存它

897
01:26:17,760 --> 01:26:22,232
好吧，我的意思是这有点像，如果你的话，这取决于你的口味

898
01:26:22,232 --> 01:26:27,192
想重新提交 1.0 非常欢迎您这样做，但通常是

899
01:26:27,192 --> 01:26:32,639
如果您更改代码中的某些内容，那么您通常会去

900
01:26:32,639 --> 01:26:36,552
更新这个 um 次要版本，之所以这样称呼它是因为

901
01:26:36,552 --> 01:26:39,832
第一个版本是主要版本，所以如果有一个巨大的未来

902
01:26:39,832 --> 01:26:44,400
应用程序，这是次要版本，这是我的意思的补丁

903
01:26:44,400 --> 01:26:48,319
你可能会争辩说我们基本上可以改变我们的应用程序

904
01:26:48,319 --> 01:26:53,832
版本为一零一，因为这是一个补丁，但我只是选择做一

905
01:26:53,832 --> 01:26:58,000
零好吧，让我们继续，我假设

906
01:26:58,000 --> 01:27:00,160
你在做同样的事情，因为我要提供一些信息

907
01:27:00,160 --> 01:27:03,832
本章稍后会提供给你一点，这取决于你有

908
01:27:03,832 --> 01:27:07,591
实际上将您的应用程序版本更改为一一零好吧

909
01:27:07,591 --> 01:27:12,000
所以这部分已经完成，我们现在需要做的是作为标题以防万一

910
01:27:12,000 --> 01:27:16,400
我们要清理 Firestore 中的所有笔记和用户

911
01:27:16,400 --> 01:27:21,680
数据库所以让我们继续看看我们是否可以让它工作

912
01:27:21,680 --> 01:27:24,639
我的笔记颤动项目，所以它在你的

913
01:27:24,639 --> 01:27:29,192
firebase 控制台，我将首先对用户进行身份验证

914
01:27:29,192 --> 01:27:32,720
只有一个用户在这里我只是要删除该帐户好的然后我要走了

915
01:27:32,720 --> 01:27:36,720
去firestore数据库，注释中可能有两个注释

916
01:27:36,720 --> 01:27:41,360
集合，我也将删除它们，因此删除那里的文档并

917
01:27:41,360 --> 01:27:45,832
然后删除这个文件，好吧，所以我们有一个干净的石板没有用户也没有

918
01:27:45,832 --> 01:27:51,192
数据库中的注释，因此您可能想知道我们是否有

919
01:27:51,192 --> 01:27:54,800
我们数据库的安全问题不应该 Firebase 足够智能

920
01:27:54,800 --> 01:27:58,400
知道这一点，而firebase实际上足够聪明，知道这一点

921
01:27:58,400 --> 01:28:02,480
有时您会收到来自我的意思的电子邮件，具体取决于安全漏洞

922
01:28:02,480 --> 01:28:06,720
您的数据库，您将收到来自 firebase 的电子邮件，告诉您嘿

923
01:28:06,720 --> 01:28:10,552
你的安全规则有问题，我准备了一些

924
01:28:10,552 --> 01:28:14,639
那种电子邮件表明我只是想告诉你那种

925
01:28:14,639 --> 01:28:17,911
电子邮件看起来像这样，您可以查看是否有安全性

926
01:28:17,911 --> 01:28:21,832
您可能收到的 Fire Firebase 和 Firestore 数据库的问题

927
01:28:21,832 --> 01:28:24,552
像这样你看到它说我们已经检测到以下问题

928
01:28:24,552 --> 01:28:28,720
您的安全规则任何用户都可以读取您的整个数据库，因此

929
01:28:28,720 --> 01:28:33,192
它看起来像这样没关系，所以只要知道如果你收到这样的电子邮件

930
01:28:33,192 --> 01:28:37,271
那你至少知道它的原因好吗

931
01:28:37,271 --> 01:28:41,911
如果您想了解更多关于安全规则和

932
01:28:41,911 --> 01:28:44,720
尽管我将告诉你我们将如何配置它们，但你必须如何配置它们

933
01:28:44,720 --> 01:28:47,512
在本章中配置我们的安全规则，但如果你想知道如何

934
01:28:47,512 --> 01:28:51,360
自己做，你很想了解更多关于它的信息，我已经

935
01:28:51,360 --> 01:28:55,760
在这里准备了一个小链接，让我看看我是否真的可以带上它

936
01:28:55,760 --> 01:28:59,760
通过打开到屏幕

937
01:28:59,760 --> 01:29:03,440
一个链接，它看起来像这样，所以你首先看到 firebase google.com docs

938
01:29:03,440 --> 01:29:06,639
我们的安全规则和条件

939
01:29:06,639 --> 01:29:11,040
所以你可以读到这个，我做到了，我从中得到了很多灵感

940
01:29:11,040 --> 01:29:15,360
如何解决我们的安全问题

941
01:29:15,360 --> 01:29:18,400
firestore 数据库，所以我强烈建议您实际阅读此内容

942
01:29:18,400 --> 01:29:22,872
文档您现在不必这样做，但请至少，嗯

943
01:29:22,872 --> 01:29:27,360
将此页面添加为书签，以便稍后返回

944
01:29:27,360 --> 01:29:32,720
好的，那么现在让我们开始在我们的 Firestore 中解决我们的安全问题

945
01:29:32,720 --> 01:29:37,271
数据库好的，所以我也在这里准备了我们必须如何实际操作，你

946
01:29:37,271 --> 01:29:41,760
可以看到让我真正提出我们的安全规则，所以去火店

947
01:29:41,760 --> 01:29:46,552
您的firebase控制台中的数据库选项卡，然后转到规则好吧让我们有一个

948
01:29:46,552 --> 01:29:50,319
查看目前的所有角色以及它们的设置方式以及设置方式

949
01:29:50,319 --> 01:29:54,319
当你看到它说匹配任何数据库和任何文档的时候都可以

950
01:29:54,319 --> 01:29:58,720
这也是我们在这里所做的，它说匹配那里的任何文件，所以

951
01:29:58,720 --> 01:30:02,319
目前我们只允许读写访问权限，前提是您

952
01:30:02,319 --> 01:30:08,959
已通过身份验证，所以现在让我们说我们允许创建

953
01:30:08,959 --> 01:30:13,832
如果您已通过身份验证，那么我们说您应该能够创建一个节点

954
01:30:13,832 --> 01:30:17,120
当您通过身份验证时，假设创建，您可以看到我们得到了一些帮助

955
01:30:17,120 --> 01:30:21,760
来自 firebase 也在这里 好的，所以就是这样，然后我们

956
01:30:21,760 --> 01:30:27,360
说允许读写和更新

957
01:30:27,360 --> 01:30:30,400
好的，这就是我们要写在这里的规则，你可以看到阅读

958
01:30:30,400 --> 01:30:34,800
更新实际上读取更新和删除所以

959
01:30:34,800 --> 01:30:40,160
所以阅读更新和删除，我们必须设置它的方式当然是你

960
01:30:40,160 --> 01:30:44,959
可以在这里看到我更喜欢的是我们首先需要确保有人尝试

961
01:30:44,959 --> 01:30:49,192
从我们的数据库中读取或更新数据库或删除文档应该

962
01:30:49,192 --> 01:30:53,040
进行身份验证，所以让我们进去说好吧，如果

963
01:30:53,040 --> 01:30:56,800
经过身份验证，我们将把代码带到这里好吧

964
01:30:56,800 --> 01:31:01,192
但我们还将为其添加更多信息和信息

965
01:31:01,192 --> 01:31:05,832
应该看起来像这样，您可以在此处的此文档中看到

966
01:31:05,832 --> 01:31:11,760
你可能会说好的，但我怎么知道，因为好的，在我真正说之前

967
01:31:11,760 --> 01:31:16,872
我们想要的是当前经过身份验证的用户 id

968
01:31:16,872 --> 01:31:23,360
只能访问具有相同用户 ID 的他或她的文档

969
01:31:23,360 --> 01:31:28,552
记住在我们的代码中我们有这个用户 ID 字段让我在这里提出来

970
01:31:28,552 --> 01:31:33,192
所以如果你去我们这里的存储，我们有这些常量，我们有这个用户 ID

971
01:31:33,192 --> 01:31:39,271
字段，因此我们存储在 Firestore 数据库中的每个节点都有一个用户 ID 字段

972
01:31:39,271 --> 01:31:45,591
所以我们在这里想要的基本上是从请求中获取用户 ID 所以如果

973
01:31:45,591 --> 01:31:50,480
你在这里说请求你会看到我们有偏离路径的资源所以让我们出发吧

974
01:31:50,480 --> 01:31:54,552
然后你会看到有一个叫做 uid 的东西，那就是用户 id

975
01:31:54,552 --> 01:31:59,192
好的，所以如果我们看看我们必须如何实际做到这一点，所以我们说的是用户

976
01:31:59,192 --> 01:32:04,552
请求 rtu id 应该等于资源数据用户 id 和这个资源

977
01:32:04,552 --> 01:32:09,360
是用户尝试访问的当前资源，如果您阅读

978
01:32:09,360 --> 01:32:13,120
我之前提供给你的文档你会知道的

979
01:32:13,120 --> 01:32:17,120
让我们进去说好吧请求身份验证uid应该等于

980
01:32:17,120 --> 01:32:21,120
资源 beta 点用户 ID，因为那是

981
01:32:21,120 --> 01:32:27,911
正如您在此处的代码中看到的那样，我们提供的字段让我们然后嗯

982
01:32:27,911 --> 01:32:31,760
是的，我认为这很好，所以我们可以发布这些更改

983
01:32:31,760 --> 01:32:34,959
说发布更改可能需要一分钟才能传播，那就是

984
01:32:34,959 --> 01:32:38,639
完全没问题，因为我们实际上需要一些时间来

985
01:32:38,639 --> 01:32:43,192
更新我们的代码也可以，这就是我们的

986
01:32:43,192 --> 01:32:46,800
安全规则，所以让我们确保它们看起来像这样，我会

987
01:32:46,800 --> 01:32:50,872
实际上把它带到两行，这样你就可以看到它的全部

988
01:32:50,872 --> 01:32:55,911
嗯，如果你需要从中获得一些灵感，你也可以建立

989
01:32:55,911 --> 01:32:59,512
明天除此之外，您可以为此添加更多安全性，以便您更

990
01:32:59,512 --> 01:33:03,040
欢迎来到嗯

991
01:33:03,040 --> 01:33:07,360
那么我们需要做的是开始清理我们在飞镖上的代码

992
01:33:07,360 --> 01:33:11,512
飞镖方面的网站，所以让我们看看这段代码

993
01:33:11,512 --> 01:33:14,400
我们在这里写过我要稍微改变一下屏幕布局所以

994
01:33:14,400 --> 01:33:19,040
你看得更清楚所以让我们去这个函数获取笔记

995
01:33:19,040 --> 01:33:22,800
你可能已经注意到了，但目前我们没有使用它

996
01:33:22,800 --> 01:33:28,160
目前功能，所以我们只使用所有节点，所以让我们继续吧

997
01:33:28,160 --> 01:33:31,911
只需删除它就可以从 Firebase 云存储中获取注释

998
01:33:31,911 --> 01:33:35,680
就像我在

999
01:33:35,680 --> 01:33:39,832
此刻，让我们只使用命令，我可以看到没有问题，因为没有人

1000
01:33:39,832 --> 01:33:43,120
实际上是使用get notes并且没有

1001
01:33:43,120 --> 01:33:46,720
我们的代码中的错误，您可以看到没有标记为的文件或文件夹

1002
01:33:46,720 --> 01:33:50,080
红色所以嗯，那就是那个是其中之一

1003
01:33:50,080 --> 01:33:52,959
我们必须做的事情只是为了删除 get 节点

1004
01:33:52,959 --> 01:33:57,120
然后我们需要在这里做的是确保我们真正的时候

1005
01:33:57,120 --> 01:34:04,000
说我们在实际阅读之前过滤快照的所有注释

1006
01:34:04,000 --> 01:34:09,760
他们所以让我们进入这里并在像这样的快照之前说笔记

1007
01:34:09,760 --> 01:34:13,760
我会说在哪里，你可以看到它说好的哪个字段

1008
01:34:13,760 --> 01:34:16,552
你在找然后我们说所有者用户ID

1009
01:34:16,552 --> 01:34:21,360
字段名称，实际上应该等于

1010
01:34:21,360 --> 01:34:26,319
我们有所有者，它已经准备好了

1011
01:34:26,319 --> 01:34:32,872
所以就是那个，然后我们说快照和快照映射

1012
01:34:32,872 --> 01:34:37,680
这实际上也很好

1013
01:34:37,680 --> 01:34:40,720
老实说，我们也可以清理这段代码，所以让我们说

1014
01:34:40,720 --> 01:34:43,832
在这里，我们拿着这个，我们说这是我们的

1015
01:34:43,832 --> 01:34:46,872
笔记对不起

1016
01:34:46,872 --> 01:34:53,832
最后的音符等于所有音符的最后音符

1017
01:34:53,832 --> 01:34:59,271
我们可以直接退货所以现在我们有了这个和你

1018
01:34:59,271 --> 01:35:04,400
基本上可以争辩说好吧，我们在这里有一个 where 子句，所以我们

1019
01:35:04,400 --> 01:35:08,959
不必在这里有这个词子句，我实际上会说是的

1020
01:35:08,959 --> 01:35:13,271
确实有道理，因为是的，为什么我们会有两个单词从句，所以让我们

1021
01:35:13,271 --> 01:35:16,400
删除那个单词子句并将分号放在这里

1022
01:35:16,400 --> 01:35:21,040
好的，所以我们在读取所有快照之前进行过滤，我们得到一个

1023
01:35:21,040 --> 01:35:24,480
这里的错误让我看看可能是什么问题，因为有一张地图

1024
01:35:24,480 --> 01:35:27,192
好的，所以你的代码基本上应该看起来像

1025
01:35:27,192 --> 01:35:31,360
现在，我们现在可以做的是实际上

1026
01:35:31,360 --> 01:35:35,120
对此进行测试以确保一切都按预期工作，所以我

1027
01:35:35,120 --> 01:35:38,872
将我们的 ios 模拟器带到这里运行应用程序

1028
01:35:38,872 --> 01:35:43,680
已经要进行热重启了，让我们注册一个用户，所以我要

1029
01:35:43,680 --> 01:35:46,480
说van.np

1030
01:35:46,480 --> 01:35:51,680
gmail.com foo barbeaus，请不要使用这个呃密码说注册和

1031
01:35:51,680 --> 01:35:56,319
然后它说验证电子邮件没问题，让我继续并提出我的

1032
01:35:56,319 --> 01:36:01,591
邮件并查看我的电子邮件，看看是否有

1033
01:36:01,591 --> 01:36:08,160
验证电子邮件已发送给我，我们已发送电子邮件验证

1034
01:36:08,160 --> 01:36:12,480
请打开它以验证您的帐户，我希望我确实输入了我的电子邮件

1035
01:36:12,480 --> 01:36:16,959
正确，因为我还没有收到验证电子邮件

1036
01:36:16,959 --> 01:36:22,959
所以也许我可以在单独的选项卡中打开 gmail，因为我在使用 gmail

1037
01:36:22,959 --> 01:36:28,872
该特定用户的时刻，看看该电子邮件是否出现在我的

1038
01:36:28,872 --> 01:36:32,319
gmail收件箱没问题

1039
01:36:32,319 --> 01:36:36,160
我要切换用户，让我们看看

1040
01:36:36,160 --> 01:36:39,760
这是我在单独的屏幕上执行此操作，这就是您没有看到的原因

1041
01:36:39,760 --> 01:36:44,232
发生任何这种情况，嗯，我看不到任何电子邮件

1042
01:36:44,232 --> 01:36:49,832
那一刻，嗯，让我在我们的 Firebase 控制台中继续，所以

1043
01:36:49,832 --> 01:36:54,872
嗯，让我们去这里，然后我们去认证和

1044
01:36:54,872 --> 01:37:00,720
我可以看到这里有一个用户，这实际上是正确的，但我没有看到

1045
01:37:00,720 --> 01:37:06,160
任何发送给我的验证电子邮件，让我们继续看看我们的

1046
01:37:06,160 --> 01:37:09,680
注册视图，让我们看看按钮

1047
01:37:09,680 --> 01:37:14,080
如果我们真的忘记做某事，那么当我们通过这个时执行

1048
01:37:14,080 --> 01:37:18,319
注册事件你可以看到身份验证事件注册然后我们必须去我们的关闭

1049
01:37:18,319 --> 01:37:21,591
阻止并看看我们是如何实现的

1050
01:37:21,591 --> 01:37:25,512
实现了，我可以看到我们说创建用户，然后我们正在等待

1051
01:37:25,512 --> 01:37:31,120
提供商发送电子邮件验证，所以它似乎工作正常但是我

1052
01:37:31,120 --> 01:37:34,552
仍然没有收到任何验证电子邮件，这就是为什么我要

1053
01:37:34,552 --> 01:37:37,911
在此屏幕上说在此处发送电子邮件验证

1054
01:37:37,911 --> 01:37:41,680
通过按下我将刷新我的电子邮件，现在我可以看到我

1055
01:37:41,680 --> 01:37:46,160
收到一封验证电子邮件，我将把它带到这里点击链接，我

1056
01:37:46,160 --> 01:37:50,160
可以看到我看到了这个嗯我可以看到那个

1057
01:37:50,160 --> 01:37:54,480
您的电子邮件已通过验证已显示给我，所以

1058
01:37:54,480 --> 01:37:59,760
太好了，让我们现在继续，然后去申请，我要去

1059
01:37:59,760 --> 01:38:04,080
在此处重新启动转到登录页面，我将使用该用户登录

1060
01:38:04,080 --> 01:38:06,800
福巴巴兹

1061
01:38:06,800 --> 01:38:10,552
使用用户登录，没有问题我可以登录应用程序按

1062
01:38:10,552 --> 01:38:13,192
加号按钮，我要说我的第一个音符

1063
01:38:13,192 --> 01:38:16,639
好的，已经保存了，然后我要保存

1064
01:38:16,639 --> 01:38:21,271
我的第二个音符很好，那也被保存了

1065
01:38:21,271 --> 01:38:25,360
我要注销并尝试使用其他用户重新登录

1066
01:38:25,360 --> 01:38:30,319
所以让我们注册一个新用户，因为记住我们删除了所有用户

1067
01:38:30,319 --> 01:38:34,959
firestore 数据库，所以谁又来了，请不要使用此密码

1068
01:38:34,959 --> 01:38:38,800
然后我要看看我的电子邮件

1069
01:38:38,800 --> 01:38:42,639
我实际上可以看到一封新的验证电子邮件已发送给我，所以

1070
01:38:42,639 --> 01:38:46,080
太好了，我要把它带到这里

1071
01:38:46,080 --> 01:38:51,120
如果我可以打开该电子邮件，它看起来像这样，我将验证我的用户很棒

1072
01:38:51,120 --> 01:38:55,760
然后我将重新启动该过程并尝试使用该用户登录

1073
01:38:55,760 --> 01:38:58,319
好的，通过barbaz

1074
01:38:58,319 --> 01:39:02,000
用用户登录，我看不到 van dot 的

1075
01:39:02,000 --> 01:39:08,000
笔记，所以我要说另一个第一个笔记

1076
01:39:08,000 --> 01:39:11,512
另一个第一个音符和

1077
01:39:11,512 --> 01:39:16,872
创建一个新笔记说另一个第二个笔记好吧，所以在这两个用户之后

1078
01:39:16,872 --> 01:39:21,911
已经创建了他们自己的两个单独的笔记让我们继续我们的数据库

1079
01:39:21,911 --> 01:39:26,080
刷新用户我们可以看到这里有两个用户一个以pg开头

1080
01:39:26,080 --> 01:39:31,192
这是这个像素然后有一个 9v 这是另一个用户好的

1081
01:39:31,192 --> 01:39:34,639
让我们去我们的数据库看看我们有多少个节点，我们可以看到我们

1082
01:39:34,639 --> 01:39:36,959
有四个节点 9v

1083
01:39:36,959 --> 01:39:41,040
9v 用于 default.user 然后我们有两个

1084
01:39:41,040 --> 01:39:46,552
嗯，由像素电子邮件创建的文档，以

1085
01:39:46,552 --> 01:39:52,552
pg 的用户 ID，如您在此处看到的，他们可以完全访问自己的

1086
01:39:52,552 --> 01:39:57,120
文件，所以现在这个用户你实际上可以去删除这个文件

1087
01:39:57,120 --> 01:40:01,512
例如另一个第一条笔记，这样他就可以说好的，我想删除这条笔记

1088
01:40:01,512 --> 01:40:04,552
如此繁荣，你可以立即看到它

1089
01:40:04,552 --> 01:40:09,512
也从 firebase 中删除，因此他们可以完全访问自己的笔记

1090
01:40:09,512 --> 01:40:14,000
但他们绝对无法访问其他任何人的笔记，好吧，那就是

1091
01:40:14,000 --> 01:40:18,720
如果这甚至是一个词，工作得非常好

1092
01:40:18,720 --> 01:40:22,800
所以我们现在需要做的下一件事就是继续更新

1093
01:40:22,800 --> 01:40:27,760
我们的 pop 规范 yaml 文件中的内部版本号，所以现在我会告诉你这个让我们走吧

1094
01:40:27,760 --> 01:40:31,680
将 Visual Studio 代码转到我们的代码，然后说 pop spec

1095
01:40:31,680 --> 01:40:35,360
嗯骆驼，你会在这个文件的顶部看到

1096
01:40:35,360 --> 01:40:38,720
在这里的某个地方，我们目前有这个版本是一零零

1097
01:40:38,720 --> 01:40:43,680
加一但我们在这里要做的只是说它是一一零加

1098
01:40:43,680 --> 01:40:48,720
一个，所以我们也在这里更新我们的内部版本号

1099
01:40:48,720 --> 01:40:54,720
所以在这样做之后，因为这是一个很大的变化，你也许可以看看

1100
01:40:54,720 --> 01:41:00,000
您的终端并查看并执行 git status ，您可以通过更新它来查看

1101
01:41:00,000 --> 01:41:05,040
版本号在这里 嗯，它没有立即更新版本

1102
01:41:05,040 --> 01:41:09,192
我们的应用程序的编号，因为如果它完成了，它也应该是

1103
01:41:09,192 --> 01:41:14,080
在 info plist 文件中更新了我们的 ios 应用程序，因此很遗憾

1104
01:41:14,080 --> 01:41:18,400
没有更新，因此发出颤动可能是个好主意

1105
01:41:18,400 --> 01:41:22,552
干净，所以我要带上这样的代码让我们说颤动

1106
01:41:22,552 --> 01:41:26,400
干净还可以

1107
01:41:26,400 --> 01:41:30,872
这将完成它的工作，让我们说颤动

1108
01:41:30,872 --> 01:41:34,872
弹出获取

1109
01:41:34,872 --> 01:41:39,360
那和

1110
01:41:39,360 --> 01:41:42,720
好吧，我们会说 git status 让我们看看我们的

1111
01:41:42,720 --> 01:41:49,680
状态并且仍然没有任何改变所以让我们说flutter run ios

1112
01:41:49,680 --> 01:41:53,591
看看它是否会听好颤动运行，因为这是我们的默认设置

1113
01:41:53,591 --> 01:41:58,480
目前的目标是一个ios模拟器所以也许flutter rom会接受

1114
01:41:58,480 --> 01:42:02,552
多个设备都正常

1115
01:42:02,552 --> 01:42:08,480
请向我们展示设备列表

1116
01:42:08,480 --> 01:42:12,639
也许它有哦，现在它找到了请

1117
01:42:12,639 --> 01:42:17,832
选择一个好吧我想选择iphone 13 pro所以我会选择嗯

1118
01:42:17,832 --> 01:42:23,440
iphone 13 pro 2 号在这里还可以，所以现在它会用它来构建项目

1119
01:42:23,440 --> 01:42:26,232
xcode build 和我这些天的经验

1120
01:42:26,232 --> 01:42:30,720
xcode 构建速度非常慢，所以

1121
01:42:30,720 --> 01:42:35,680
我基本上会保持安静现在让它做它的工作，当它完成时我们

1122
01:42:35,680 --> 01:42:41,440
将继续播放视频，因为我怀疑这个过程

1123
01:42:41,440 --> 01:42:45,832
实际上花了很长时间，我想我们实际上可以在这里看到

1124
01:42:45,832 --> 01:42:50,720
xcode 构建耗时 164 秒

1125
01:42:50,720 --> 01:42:55,271
好吧，我不打算讨论它已经很长时间了，所以让我们看看

1126
01:42:55,271 --> 01:42:59,360
现在，如果版本实际上已正确更新，那么我将去另一个

1127
01:42:59,360 --> 01:43:04,319
在这里进入另一个外壳，让我们说 git status ，我仍然看不到任何

1128
01:43:04,319 --> 01:43:08,160
info plist 文件在 ios 端已被更改，所以我只是

1129
01:43:08,160 --> 01:43:12,872
会很好奇这里然后去这里的ios文件看看

1130
01:43:12,872 --> 01:43:16,959
xcode 工作区，让我们看看版本

1131
01:43:16,959 --> 01:43:20,872
在这里，版本似乎已经更新，所以它是 1 1 0

1132
01:43:20,872 --> 01:43:26,000
正是我们在流行规范 yaml 中指定的内容，因此您可以确保

1133
01:43:26,000 --> 01:43:29,591
此文件已更新，如果您没有 xcode，例如，如果您是

1134
01:43:29,591 --> 01:43:32,160
在 Linux 上运行

1135
01:43:32,160 --> 01:43:35,591
ubuntu什么的，你还是要检查一下版本号

1136
01:43:35,591 --> 01:43:39,591
已针对 ios 应用程序进行了更新，您始终可以通过打开它来做到这一点

1137
01:43:39,591 --> 01:43:44,959
在 ios runner 中文件信息 plist 然后你可以让我相信你

1138
01:43:44,959 --> 01:43:49,120
可以在这里查看您的颤振内部版本号

1139
01:43:49,120 --> 01:43:53,591
让我们看看是否在某处设置了颤振内部版本号

1140
01:43:53,591 --> 01:43:57,192
那个我实际上没有看到颤振构建的那个

1141
01:43:57,192 --> 01:44:01,680
数字被设置在任何地方，所以如果我们搜索一一零

1142
01:44:01,680 --> 01:44:05,360
实际上让我们在整个应用程序中搜索一一零和唯一的

1143
01:44:05,360 --> 01:44:09,120
我在这里看到的就像我们的一些流行规格

1144
01:44:09,120 --> 01:44:13,040
这里是一一零

1145
01:44:13,040 --> 01:44:18,080
不幸的是，这行不通，所以我真的不知道背后的魔力

1146
01:44:18,080 --> 01:44:22,000
Flutter 团队实际上已经将 110 注入

1147
01:44:22,000 --> 01:44:26,400
它可能是某种构建变量，所以如果你想进入

1148
01:44:26,400 --> 01:44:29,680
关于这个的细节也许我们可以打开 xcode

1149
01:44:29,680 --> 01:44:34,480
看看那个应用程序让我们在这里进入构建设置和

1150
01:44:34,480 --> 01:44:39,832
看看版本 看看有没有一一零

1151
01:44:39,832 --> 01:44:43,512
在这里颤动构建名称，这就是他们注入它的方式

1152
01:44:43,512 --> 01:44:47,760
他们有一个名为 slot 的用户定义变量被构建和颤振构建

1153
01:44:47,760 --> 01:44:51,760
然后为我们的 info p 列表注入名称，所以

1154
01:44:51,760 --> 01:44:56,000
如果你去这里，你可以看到哦，这是颤振内部版本号，所以是的，但无论如何

1155
01:44:56,000 --> 01:45:00,000
就是 this 这一定是 Flutter 团队注入的变量

1156
01:45:00,000 --> 01:45:05,040
xcode 以某种方式构建没问题，但提出 xcode 可以确认

1157
01:45:05,040 --> 01:45:09,680
版本号正确设置为 110，这就是我们需要做的所有事情

1158
01:45:09,680 --> 01:45:13,360
那么本章的下一步对我们来说是

1159
01:45:13,360 --> 01:45:16,552
这次做一个构建并将它发送给苹果，所以

1160
01:45:16,552 --> 01:45:19,591
不是这次，我们上次也这样做了，我们把它寄给了苹果，那又怎样

1161
01:45:19,591 --> 01:45:23,591
我要做的是我需要再次打开 xcode 我不应该关闭它

1162
01:45:23,591 --> 01:45:28,319
也许让我们进去吧，当我们在那里的时候，我们可以去说我们是

1163
01:45:28,319 --> 01:45:32,872
为任何 ios 设备构建，然后我只想说产品存档为

1164
01:45:32,872 --> 01:45:35,512
我们在前面的章节中也做过

1165
01:45:35,512 --> 01:45:38,959
所以让它做它的工作

1166
01:45:38,959 --> 01:45:44,552
好的，现在我们的构建已经由 xcode 创建，在这里它非常重要

1167
01:45:44,552 --> 01:45:47,360
你实际上检查了这里的版本号

1168
01:45:47,360 --> 01:45:51,192
对应于您在应用商店连接中创建的版本号，并且

1169
01:45:51,192 --> 01:45:55,192
只是应用商店中的一个提醒，如果你回到那里，你会看到

1170
01:45:55,192 --> 01:45:58,480
我们准备的版本是110，这就是我在开头说的原因

1171
01:45:58,480 --> 01:46:02,080
本章实际上对你来说遵循相同的版本控制很重要

1172
01:46:02,080 --> 01:46:06,160
我在当前章节做所以让我们说 110 我要说

1173
01:46:06,160 --> 01:46:10,720
分发到苹果或分发应用上传

1174
01:46:10,720 --> 01:46:16,080
我们进去吧

1175
01:46:16,080 --> 01:46:20,480
分析应用版本获取应用商店配置

1176
01:46:20,480 --> 01:46:24,552
我要取消选中管理版本和内部版本号，因为我想要颤动

1177
01:46:24,552 --> 01:46:29,591
能够做到这一点，然后我将选择生产配置文件

1178
01:46:29,591 --> 01:46:35,360
我们已经为应用程序创建了在这里也按下下一个按钮

1179
01:46:35,360 --> 01:46:39,680
然后根据您的网络连接和您的不同

1180
01:46:39,680 --> 01:46:42,872
你为你的网络所拥有的配置，这个过程实际上可能需要

1181
01:46:42,872 --> 01:46:47,591
很久以前我什至尝试过这个

1182
01:46:47,591 --> 01:46:50,959
虽然我在光纤网络网络连接上

1183
01:46:50,959 --> 01:46:55,512
一千次上传一千次下载仍然需要大约 30 分钟

1184
01:46:55,512 --> 01:46:59,591
一个简单的应用程序被发送到苹果，它实际上被困在这个

1185
01:46:59,591 --> 01:47:03,360
请求应用程序信息超过 20 分钟，所以

1186
01:47:03,360 --> 01:47:07,760
这是一个不幸的事实，我们只能接受并让它发挥作用

1187
01:47:07,760 --> 01:47:11,040
我会见到你的

1188
01:47:11,040 --> 01:47:15,760
终于把应用程序发送到苹果了，所以现在我可以看到我们的

1189
01:47:15,760 --> 01:47:18,959
申请已经提交给苹果，我不得不承认这一次

1190
01:47:18,959 --> 01:47:22,800
这个过程只花了大约一分钟，所以非常

1191
01:47:22,800 --> 01:47:26,639
比我们必须提交的前几章快得多

1192
01:47:26,639 --> 01:47:30,000
对我来说花费了 30 分钟以上的应用程序

1193
01:47:30,000 --> 01:47:33,680
因此，在您完成此操作后，您将收到一封来自的电子邮件

1194
01:47:33,680 --> 01:47:37,512
如果我能把它带到屏幕上，苹果那种看起来像这样

1195
01:47:37,512 --> 01:47:40,232
它看起来像这样，它会告诉你

1196
01:47:40,232 --> 01:47:45,040
仅在此电子邮件完成后，以下构建才完成处理

1197
01:47:45,040 --> 01:47:48,319
已发送您可以去应用商店连接和

1198
01:47:48,319 --> 01:47:52,480
去吧，我们还必须修复我们缺失的合规性，所以让我们说管理和

1199
01:47:52,480 --> 01:47:54,959
说不使用加密

1200
01:47:54,959 --> 01:48:00,639
完成后开始内部测试，你需要去应用商店

1201
01:48:00,639 --> 01:48:04,400
你怎么说选项卡，在那个选项卡中让我们选择一个新的

1202
01:48:04,400 --> 01:48:09,680
比尔，这是我们的 110 版本，我会说在那里完成之后

1203
01:48:09,680 --> 01:48:13,040
你已经完成了，你可以按下保存按钮，然后你可以提交你的

1204
01:48:13,040 --> 01:48:17,680
应用新鲜到苹果，这样

1205
01:48:17,680 --> 01:48:23,440
然后依次结束将我们的应用程序提交到应用程序商店，嗯，如果有的话

1206
01:48:23,440 --> 01:48:26,400
此应用程序的任何并发症，例如如果苹果出于某种原因不能

1207
01:48:26,400 --> 01:48:29,591
注册用户或他们将向您发送一封电子邮件告诉您的内容

1208
01:48:29,591 --> 01:48:33,040
关于那个所以你需要经历那个过程

1209
01:48:33,040 --> 01:48:37,360
并帮助应用商店审核团队开始使用

1210
01:48:37,360 --> 01:48:40,160
您的应用程序，但如果您还记得之前的章节，我们已经

1211
01:48:40,160 --> 01:48:44,959
实际上在那里留下了一些信息，例如评论信息

1212
01:48:44,959 --> 01:48:50,000
并告诉审核小组如何注册

1213
01:48:50,000 --> 01:48:52,872
用户在我们的应用程序中，这样信息就足够了

1214
01:48:52,872 --> 01:48:57,591
他们了解如何使用该应用程序太棒了，我们已经完成了起源

1215
01:48:57,591 --> 01:49:03,192
像往常一样将我们的 ios 应用程序提交到应用程序商店，因为我们现在

1216
01:49:03,192 --> 01:49:07,911
更改了我们的代码让我们进入 Visual Studio 代码并

1217
01:49:07,911 --> 01:49:11,832
我要关闭所有这些选项卡，因为它只是非常填充

1218
01:49:11,832 --> 01:49:17,192
我的屏幕摆脱了资源管理器并转到

1219
01:49:17,192 --> 01:49:21,680
我的终端在这里查看艺术状态，我可以看到只有

1220
01:49:21,680 --> 01:49:26,800
两个文件已更改，因此我将添加它们，然后像​​您一样按照第 30 步提交

1221
01:49:26,800 --> 01:49:30,232
可以在屏幕底部看到好的，所以如果您查看我们的日志，我们有步骤

1222
01:49:30,232 --> 01:49:34,400
29 然后我们有第 30 步所以我要说 git push

1223
01:49:34,400 --> 01:49:40,160
这将推动我们的提交并且少于标签 v 所以第 30 步和

1224
01:49:40,160 --> 01:49:46,872
我们只是说获取推送标签，现在就完成了，我们的标签 30 是

1225
01:49:46,872 --> 01:49:51,440
也发送到 github 我们现在像往常一样需要做的是

1226
01:49:51,440 --> 01:49:55,591
我们在接下来的章节中讨论我们需要讨论的内容的传统

1227
01:49:55,591 --> 01:50:00,160
在下一章中，我们将讨论将我们的应用程序发送到

1228
01:50:00,160 --> 01:50:03,832
google play store 我们已经为 ios 完成了它，我们必须为

1229
01:50:03,832 --> 01:50:06,552
谷歌游戏商店，所以如果你愿意，可以去点点心，我会看到的

1230
01:50:06,552 --> 01:50:10,160
你在下一章大家好，欢迎来到开槽的第 50 章

1231
01:50:10,160 --> 01:50:13,360
当然，在前面的章节中，我们已经做了很多工作来提交我们的

1232
01:50:13,360 --> 01:50:18,319
使用 app store connect 和本章中的 ios 应用商店应用程序

1233
01:50:18,319 --> 01:50:21,360
我们将专注于做同样的事情，但为了

1234
01:50:21,360 --> 01:50:25,680
谷歌和游戏商店，所以当你有应用商店和应用程序的后面

1235
01:50:25,680 --> 01:50:29,911
商店你有 um app store connect 它允许你作为

1236
01:50:29,911 --> 01:50:32,872
一个开发人员去与你的产品进行交互

1237
01:50:32,872 --> 01:50:37,040
提交到应用商店谷歌为您的产品提供了类似的东西

1238
01:50:37,040 --> 01:50:40,720
在这种情况下，您的 android 应用程序将在我们的 Flutter 应用程序中可用

1239
01:50:40,720 --> 01:50:43,911
谷歌游戏商店，用户下载你的

1240
01:50:43,911 --> 01:50:50,872
您作为开发人员的应用程序必须转到 google play 控制台，所以

1241
01:50:50,872 --> 01:50:53,512
我们会处理好这个，为此我们会创造一些东西

1242
01:50:53,512 --> 01:50:58,480
调用了一个应用程序包，而如果您还记得我们何时创建我们的 ios

1243
01:50:58,480 --> 01:51:01,440
应用程序我们去 xcode 并归档我们的应用程序并创建

1244
01:51:01,440 --> 01:51:05,680
一种叫做 xc 存档文件的东西，有点像 zip 文件

1245
01:51:05,680 --> 01:51:09,360
你所有的文件都是你的二进制文件，至少所有你喜欢的链接

1246
01:51:09,360 --> 01:51:15,680
库您的所有 pod 应用程序本身的二进制文件已使用您的签名

1247
01:51:15,680 --> 01:51:19,760
生产证书和配置文件的应用程序包

1248
01:51:19,760 --> 01:51:25,360
你的 um android 设备也是一个签名包，所以它相当于

1249
01:51:25,360 --> 01:51:30,160
您的 um xc 存档，我们也会尽快处理

1250
01:51:30,160 --> 01:51:34,800
在本章中，我们有一个嗯

1251
01:51:34,800 --> 01:51:37,911
我的意思是有些东西我实际上更喜欢这个但我不想要

1252
01:51:37,911 --> 01:51:41,512
之前提到它，因为我们非常接近实际提升我们的 ios

1253
01:51:41,512 --> 01:51:44,800
应用程序，我们必须对我们的代码以及

1254
01:51:44,800 --> 01:51:49,591
您很快就会看到我们何时开始使用

1255
01:51:49,591 --> 01:51:53,760
截取我们在各种 android 上运行的 Flutter 应用程序的 android 屏幕截图

1256
01:51:53,760 --> 01:51:59,591
设备，这是一个滚动问题，我们通常在我们的

1257
01:51:59,591 --> 01:52:03,440
我们显示键盘的屏幕这些屏幕是

1258
01:52:03,440 --> 01:52:06,800
嗯登录视图，我相信有

1259
01:52:06,800 --> 01:52:11,360
注册视图以及我们在哪里显示关键字 i

1260
01:52:11,360 --> 01:52:15,360
相信我们也登录注册以获得密码视图

1261
01:52:15,360 --> 01:52:19,120
因为我们在那里也向用户询问了她的电子邮件地址

1262
01:52:19,120 --> 01:52:23,192
例如一年，实际上我们没有问题

1263
01:52:23,192 --> 01:52:26,480
编辑注释视图所以这不是问题所以

1264
01:52:26,480 --> 01:52:30,160
我们在验证电子邮件视图登录视图注册视图时遇到此问题并忘记了

1265
01:52:30,160 --> 01:52:33,760
密码查看所以嗯

1266
01:52:33,760 --> 01:52:37,192
实际上验证电子邮件视图，您可能会争辩说是的，这不是问题

1267
01:52:37,192 --> 01:52:39,680
但是我们目前遇到的问题

1268
01:52:39,680 --> 01:52:43,512
是不是想象你的应用程序正在运行在一个非常小的

1269
01:52:43,512 --> 01:52:46,160
屏幕和嗯

1270
01:52:46,160 --> 01:52:49,680
然后用户例如有一个非常非常小的屏幕，然后他们

1271
01:52:49,680 --> 01:52:53,760
在登录视图上，然后我们在哪里显示键盘，例如哪里

1272
01:52:53,760 --> 01:52:57,680
他们点击电子邮件字段并尝试编写电子邮件，然后

1273
01:52:57,680 --> 01:53:01,911
键盘弹出像一半屏幕一样阻塞，具体取决于屏幕的大小

1274
01:53:01,911 --> 01:53:05,120
筛选剩下的一半可能实际上无法

1275
01:53:05,120 --> 01:53:08,639
显示视图的全部内容

1276
01:53:08,639 --> 01:53:11,192
所以这是一个小问题，我们必须

1277
01:53:11,192 --> 01:53:16,160
修复它，但它很容易修复，然后你可能会决定说好 ios

1278
01:53:16,160 --> 01:53:20,480
我们已经完成的申请被发送到苹果它已经被接受了

1279
01:53:20,480 --> 01:53:22,959
我要发布它，你肯定可以这样做，所以它是

1280
01:53:22,959 --> 01:53:26,800
如果您想按原样发布您的 is 应用程序，这实际上是一种很好的做法

1281
01:53:26,800 --> 01:53:30,800
继续这样做，然后你可以稍后再做一个补丁并发布另一个

1282
01:53:30,800 --> 01:53:34,959
应用程序来解决这个问题，我认为你发布的越多

1283
01:53:34,959 --> 01:53:40,400
应用程序更好，因为这样您就可以学习更新事物的过程和

1284
01:53:40,400 --> 01:53:44,832
发送发行说明等这是一个很好的做法

1285
01:53:44,832 --> 01:53:52,232
通常所以让我们现在继续讨论一下文档

1286
01:53:52,232 --> 01:53:55,271
创建一个应用程序包，所以我会提出来

1287
01:53:55,271 --> 01:53:58,552
在这里，你可以在底部看到

1288
01:53:58,552 --> 01:54:03,192
它所在的屏幕分发控制台和嗯

1289
01:54:03,192 --> 01:54:07,120
这里有很多文档，你可以去阅读更多关于它的信息，所以我

1290
01:54:07,120 --> 01:54:12,400
只是想解释一下这里的谷歌游戏控制台

1291
01:54:12,400 --> 01:54:16,319
给你，这样你就可以在这里登录，然后你可以阅读更多关于所有

1292
01:54:16,319 --> 01:54:21,040
这些主题，所以我认为这对您来说只是一个很好的网址

1293
01:54:21,040 --> 01:54:24,232
如果您希望将来能够发布您的应用程序，请添加书签

1294
01:54:24,232 --> 01:54:28,800
如果您像我和您一样，也可以使用 Google 和 Play 商店

1295
01:54:28,800 --> 01:54:32,080
有时只是想跳入你可以开始的事情

1296
01:54:32,080 --> 01:54:39,271
嗯，登录到谷歌游戏控制台，所以让我带你到下一个网址

1297
01:54:39,271 --> 01:54:45,872
可以看到 url 在 google.com 控制台播放，所以我只想说嗯

1298
01:54:45,872 --> 01:54:51,440
play.google.com 斜线 控制台斜线

1299
01:54:51,440 --> 01:54:55,832
如果我能拼写，那是我们的谷歌游戏控制台好吧

1300
01:54:55,832 --> 01:54:59,680
我只是用我的

1301
01:54:59,680 --> 01:55:04,000
一个用户帐户，我在这里有这个用户帐户，我可以用它登录

1302
01:55:04,000 --> 01:55:07,911
让我们看看我是否可以成功登录

1303
01:55:07,911 --> 01:55:13,040
好的，然后它说再次选择开发人员，如果你还没有完成

1304
01:55:13,040 --> 01:55:18,160
在你可能必须先去创建一个开发者帐户之前，但我

1305
01:55:18,160 --> 01:55:20,319
但在本章的开头，我们

1306
01:55:20,319 --> 01:55:24,000
谈了很多关于为 ios 和

1307
01:55:24,000 --> 01:55:27,680
android所以我假设你已经这样做了，但如果你还没有，你可以去

1308
01:55:27,680 --> 01:55:31,040
并创建一个开发者帐户它是免费的，您无需支付任何费用

1309
01:55:31,040 --> 01:55:35,192
所以请继续创建您的开发者帐户

1310
01:55:35,192 --> 01:55:38,639
所以现在我要在这里选择我的开发者帐户，然后进入这里

1311
01:55:38,639 --> 01:55:43,440
好的，这是我的谷歌游戏控制台，你可以在这里看到

1312
01:55:43,440 --> 01:55:49,360
至少对我来说是控制台网址，我们需要在这里做的是

1313
01:55:49,360 --> 01:55:55,040
前进并创建一个应用程序，让我们继续前进，如您所见

1314
01:55:55,040 --> 01:55:59,192
屏幕底部让我们继续点击此处和现在的创建应用程序

1315
01:55:59,192 --> 01:56:04,160
这里它要求我们提供一些信息

1316
01:56:04,160 --> 01:56:09,512
嗯，我也刚看到我有一点

1317
01:56:09,512 --> 01:56:13,832
ipo 在我的行动中，所以我会带上正确的标题

1318
01:56:13,832 --> 01:56:17,512
在这里，你会看到我们必须通过这些步骤才能

1319
01:56:17,512 --> 01:56:22,720
好吧，创建我们的应用程序，所以我要进去，让我们说我的

1320
01:56:22,720 --> 01:56:25,440
惊人的

1321
01:56:25,440 --> 01:56:28,319
注意默认语言让我们离开它

1322
01:56:28,319 --> 01:56:32,872
作为英语我们，它会问你是应用程序还是游戏，然后我们会说

1323
01:56:32,872 --> 01:56:36,319
这是一个应用程序，它是一个免费的应用程序

1324
01:56:36,319 --> 01:56:41,440
而且我们会说它符合开发者政策并接受

1325
01:56:41,440 --> 01:56:46,832
我们出口法律没问题，然后我们创建应用程序，这可能需要一些时间

1326
01:56:46,832 --> 01:56:52,552
时间还可以，所以我们现在需要做的就是通过

1327
01:56:52,552 --> 01:56:56,319
嗯应用程序访问在这里所以我要带

1328
01:56:56,319 --> 01:57:01,120
增加标题，所以我们需要通过让我们看看是否

1329
01:57:01,120 --> 01:57:04,400
您实际上可以找到有关您的应用程序的提供信息，并且当您

1330
01:57:04,400 --> 01:57:07,271
可以看到它就在此处提供有关您的应用程序的信息并设置

1331
01:57:07,271 --> 01:57:11,512
你的商店听得很好，所以我要看看，这些是

1332
01:57:11,512 --> 01:57:14,800
你必须经历的事情，我们实际上会一起经历

1333
01:57:14,800 --> 01:57:18,800
为了能够为您的应用程序创建列表，因此它是

1334
01:57:18,800 --> 01:57:25,360
好的检查清单基本上是嗯，我不得不说我的意思是我更习惯了

1335
01:57:25,360 --> 01:57:29,512
应用商店连接界面有点像我发现的不太混乱

1336
01:57:29,512 --> 01:57:32,800
老实说，谷歌游戏控制台有点混乱

1337
01:57:32,800 --> 01:57:36,552
事情只是在你的脸上有这么多，但曾经

1338
01:57:36,552 --> 01:57:40,232
你习惯了我想你会明白目的和

1339
01:57:40,232 --> 01:57:44,319
然后你只要知道在哪里可以找到东西就可以了

1340
01:57:44,319 --> 01:57:48,639
仪表板和您的应用程序只需向下滚动以设置您的应用程序提供

1341
01:57:48,639 --> 01:57:52,480
此处有关您的应用程序而不是您的商品详情的信息，让我们转到

1342
01:57:52,480 --> 01:57:57,832
应用程序访问并设置好然后这里问我们好吗

1343
01:57:57,832 --> 01:58:00,720
我们要说的任何受限内容

1344
01:58:00,720 --> 01:58:05,120
无需特殊访问即可使用所有功能按保存按钮

1345
01:58:05,120 --> 01:58:09,271
例如，您可以看到我保存了它，现在我必须手动返回

1346
01:58:09,271 --> 01:58:13,832
仪表板它本可以保存它并把我送回去，但它不这样做

1347
01:58:13,832 --> 01:58:18,552
如您所见，现在应用程序访问权限已被划掉

1348
01:58:18,552 --> 01:58:22,800
让我们去广告部分，所以对于广告，我们会说不，我的应用没有

1349
01:58:22,800 --> 01:58:27,360
包含广告好按保存按钮，然后按仪表板按钮

1350
01:58:27,360 --> 01:58:33,040
所以这是广告，让我们继续处理

1351
01:58:33,040 --> 01:58:36,232
内容评级，这有点像我们必须为应用商店连接做的事情

1352
01:58:36,232 --> 01:58:39,680
以及例如说我们的应用程序不包含暴力

1353
01:58:39,680 --> 01:58:43,512
不包含成人内容等所以让我们去

1354
01:58:43,512 --> 01:58:47,271
内容评级和说开始问卷

1355
01:58:47,271 --> 01:58:51,192
让我们填写我们的电子邮件地址，所以我会在这里

1356
01:58:51,192 --> 01:58:58,080
提供我是否可以拼写支持像素

1357
01:58:58,080 --> 01:59:02,000
我现在有一些问题

1358
01:59:02,000 --> 01:59:06,639
支持pixelity ab.sc，我相信是的，那是我的

1359
01:59:06,639 --> 01:59:11,512
网站所以嗯所以我想这就是我的电子邮件

1360
01:59:11,512 --> 01:59:15,760
一直在应用商店连接中使用所以呃让我也

1361
01:59:15,760 --> 01:59:18,720
在我的笔记中仔细检查一下，所以我要把它单独拿出来

1362
01:59:18,720 --> 01:59:23,192
网站只是我要在我的网站上检查这个

1363
01:59:23,192 --> 01:59:27,271
我认为它实际上是所以我没有使用它

1364
01:59:27,271 --> 01:59:30,720
现在让我们选择一些约会，在这里你只需要

1365
01:59:30,720 --> 01:59:35,680
输入您自己的电子邮件，所以不要在这里输入我的电子邮件，以防万一他们需要

1366
01:59:35,680 --> 01:59:38,720
如您所见，如果他们需要与您联系，那么我们的类别

1367
01:59:38,720 --> 01:59:42,959
应用程序我们说所有其他应用程序类型，因为它不是游戏或社交或

1368
01:59:42,959 --> 01:59:47,680
通信应用程序，所以接下来该应用程序是否包含任何评级

1369
01:59:47,680 --> 01:59:51,360
评级作为应用程序包的一部分下载的相关内容

1370
01:59:51,360 --> 01:59:54,800
代码或资产 否

1371
01:59:54,800 --> 01:59:58,400
和用户会计是否应用程序本身允许用户交互或

1372
01:59:58,400 --> 02:00:03,832
通过语音通信文本与其他用户交换内容 no

1373
02:00:03,832 --> 02:00:07,360
然后假设在线内容具有应用功能

1374
02:00:07,360 --> 02:00:10,959
推广不属于初始应用下载但可以访问的内容

1375
02:00:10,959 --> 02:00:15,512
从应用程序没有年龄限制的促销或销售

1376
02:00:15,512 --> 02:00:19,760
产品 无杂 应用程序是否共享用户当前和精确的

1377
02:00:19,760 --> 02:00:24,000
物理位置不，该应用程序是否允许用户购买

1378
02:00:24,000 --> 02:00:28,639
购买数字商品 不，该应用程序是网络浏览器还是搜索引擎

1379
02:00:28,639 --> 02:00:32,232
不，他主要是新闻或教育

1380
02:00:32,232 --> 02:00:37,760
产品不行，所以我们保存它，然后转到下一页摘要和

1381
02:00:37,760 --> 02:00:43,040
你可以看到它说巴西所有年龄段的评分为 30 佩吉 3

1382
02:00:43,040 --> 02:00:46,959
每个人都可以使用这个应用程序评价它三加

1383
02:00:46,959 --> 02:00:49,440
不确定对你说实话这三个加

1384
02:00:49,440 --> 02:00:53,360
嗯，然后我们可以说

1385
02:00:53,360 --> 02:00:56,872
提交没问题

1386
02:00:56,872 --> 02:00:59,512
这样那部分就完成了

1387
02:00:59,512 --> 02:01:03,760
看起来是这样，然后我们就可以去我们的仪表板

1388
02:01:03,760 --> 02:01:08,232
好的，然后让我们去取出我们的目标受众

1389
02:01:08,232 --> 02:01:16,639
我们说在这里我们选择 13 到 15 16 到 17 18 及以上也可以使用

1390
02:01:16,639 --> 02:01:20,552
我们的申请没问题，这有点像你可以决定你的

1391
02:01:20,552 --> 02:01:24,400
拥有是否像您一样必须添加隐私政策目标受众包含

1392
02:01:24,400 --> 02:01:28,400
或 13 岁以下，这就是为什么我们不喜欢针对 13 岁以下的任何人。

1393
02:01:28,400 --> 02:01:31,832
基本上你可能会说哦，我的应用程序只适合 18 岁及以上，那就是

1394
02:01:31,832 --> 02:01:35,192
这完全取决于您，非常欢迎您这样做，但是

1395
02:01:35,192 --> 02:01:40,800
我认为我们的应用程序甚至适用于 13 甚至可能更少 13 相当

1396
02:01:40,800 --> 02:01:44,480
基本上喜欢甜蜜点，我会说是的，因为如果你低于

1397
02:01:44,480 --> 02:01:48,800
然后你必须为那些特定的人提供你的隐私政策

1398
02:01:48,800 --> 02:01:51,760
目标所以我们不会那样做

1399
02:01:51,760 --> 02:01:55,591
然后我们要按下下一个按钮，让我们看看这里

1400
02:01:55,591 --> 02:01:59,832
是什么要求我们吸引孩子们可以您的商品详情

1401
02:01:59,832 --> 02:02:04,552
无意中出现在孩子面前，我们说是

1402
02:02:04,552 --> 02:02:07,832
因为我们可能不希望这个应用程序成为

1403
02:02:07,832 --> 02:02:12,872
为孩子们出现，但它可能仍然出现，所以让我们在那儿说是

1404
02:02:12,872 --> 02:02:18,232
在这里你可以看到目标群体是 13 到 18 岁。现在太好了，我们

1405
02:02:18,232 --> 02:02:22,232
保存它，让我们回到我们的仪表板，你可以在这里看到一个目标

1406
02:02:22,232 --> 02:02:27,040
观众也完成了

1407
02:02:27,040 --> 02:02:31,591
所以让我们去这里新闻应用程序的新部分是我们的应用程序和新闻应用程序，我们

1408
02:02:31,591 --> 02:02:35,271
说不好吧，然后我们保存并返回

1409
02:02:35,271 --> 02:02:38,800
你可以看到新闻应用的东西已经完成了

1410
02:02:38,800 --> 02:02:44,232
所以现在让我们看看这个 covet 19 联系人应用程序，我们说嗯

1411
02:02:44,232 --> 02:02:49,440
我的应用程序不是带有 19 个联系人跟踪或状态应用程序的公开代码，所以

1412
02:02:49,440 --> 02:02:54,319
保存它，我们说返回仪表板，以便申请流程的一部分

1413
02:02:54,319 --> 02:02:58,080
也完成了现在我们要填写数据安全

1414
02:02:58,080 --> 02:03:00,639
所以让我们来看看所有这些

1415
02:03:00,639 --> 02:03:04,160
这可能需要一些时间，但没关系您的应用收集器是否共享任何

1416
02:03:04,160 --> 02:03:08,800
您的应用程序是否收集或共享任何所需的用户数据类型

1417
02:03:08,800 --> 02:03:12,959
所需收集所需

1418
02:03:12,959 --> 02:03:18,232
用户数据类型所需的含义是什么

1419
02:03:18,232 --> 02:03:22,232
个人信息是的，我们会收集电子邮件地址，所以当然可以

1420
02:03:22,232 --> 02:03:25,512
所以让我们说是的

1421
02:03:25,512 --> 02:03:29,591
让我们删除所有收集的有关您的应用的用户数据已加密

1422
02:03:29,591 --> 02:03:33,591
在运输过程中是的，那是因为我们使用的是 firebase 并且使用的是 https 所以

1423
02:03:33,591 --> 02:03:37,271
那是在传输中加密的，您是否为用户提供了一种方法来请求他们的

1424
02:03:37,271 --> 02:03:41,591
数据被删除不，我们不这样做，我真的相信它会

1425
02:03:41,591 --> 02:03:45,591
如果你这样做真的很好，如果你对此感到好奇，如果

1426
02:03:45,591 --> 02:03:49,120
例如，您希望允许用户能够做到这一点

1427
02:03:49,120 --> 02:03:51,832
可以检查一下，看看你可以如何请求

1428
02:03:51,832 --> 02:03:56,000
他们要删除的数据，您可以为此创建一个单独的视图

1429
02:03:56,000 --> 02:04:01,680
从那里你基本上可以对firebase进行api调用并删除

1430
02:04:01,680 --> 02:04:05,271
这个用户，所以如果你愿意，你可以这样做，我实际上可能会提供

1431
02:04:05,271 --> 02:04:08,319
我不知道的一章，但目前

1432
02:04:08,319 --> 02:04:12,959
我们说没有数据类型可以，让我们看看

1433
02:04:12,959 --> 02:04:17,760
这可能需要相当长的时间所以让我们看看

1434
02:04:17,760 --> 02:04:20,959
嗯数据类型你必须选择任何用户数据

1435
02:04:20,959 --> 02:04:24,800
这是收集好的，我们不做嗯位置

1436
02:04:24,800 --> 02:04:29,760
个人信息，我们正在收集电子邮件

1437
02:04:29,760 --> 02:04:32,872
与可识别的人相关的个人标识符，例如

1438
02:04:32,872 --> 02:04:37,360
帐户 ID 帐号或帐户名称 是的 个人标识符 是的

1439
02:04:37,360 --> 02:04:39,440
绝对嗯

1440
02:04:39,440 --> 02:04:43,360
以及我们没有收集的其他个人信息，因此我们只有一个用户 ID 和

1441
02:04:43,360 --> 02:04:46,552
一个电子邮件地址，就是这样，我们甚至不要求他们

1442
02:04:46,552 --> 02:04:50,160
名字所以财务信息没有健康没有

1443
02:04:50,160 --> 02:04:54,800
消息让我们看看 uh 包含哪些消息

1444
02:04:54,800 --> 02:04:59,680
这里在哪里你去哪里这里消息

1445
02:04:59,680 --> 02:05:03,911
电子邮件 没有照片和视频 音频文件 文件和

1446
02:05:03,911 --> 02:05:07,440
文件 um 文件和文档

1447
02:05:07,440 --> 02:05:10,959
用户的文件或文件或有关用户文件的任何信息或

1448
02:05:10,959 --> 02:05:15,192
文件，例如文件名是的，因为我们实际上是在存储它们的

1449
02:05:15,192 --> 02:05:20,872
归档他们的笔记，以便应用程序活动没有联系人日历没有网页浏览没有

1450
02:05:20,872 --> 02:05:24,872
应用程序信息和性能没有设备或其他标识符没有所以让我们就在那时

1451
02:05:24,872 --> 02:05:28,400
按下一步然后

1452
02:05:28,400 --> 02:05:33,512
还没开始，让我们看看开始这封电子邮件

1453
02:05:33,512 --> 02:05:38,720
在这里处理，我们说选择所有适用的是收集的数据共享

1454
02:05:38,720 --> 02:05:44,872
或者两者都只能收集好，并且以这种方式收集的数据必须

1455
02:05:44,872 --> 02:05:49,760
仍会被披露，但不会在您的商品详情中向用户显示

1456
02:05:49,760 --> 02:05:53,832
此数据是否是临时处理的进程系列意味着

1457
02:05:53,832 --> 02:05:58,160
数据仅存储在内存中，并且保留时间不会超过必要时间，因此

1458
02:05:58,160 --> 02:06:01,911
不，它不仅存储在内存中，所以

1459
02:06:01,911 --> 02:06:05,192
我们说这是您的应用程序所需的数据，在这种情况下，我

1460
02:06:05,192 --> 02:06:08,552
相信我们正在谈论电子邮件地址，是的，这些数据是必需的，所以

1461
02:06:08,552 --> 02:06:13,271
我只想说是的，它是必需的，为什么收集用户数据是为了

1462
02:06:13,271 --> 02:06:17,512
应用程序功能还可以，嗯

1463
02:06:17,512 --> 02:06:21,040
用于设置和管理用户帐户实际上是帐户

1464
02:06:21,040 --> 02:06:24,720
管理所以让我们说帐户管理

1465
02:06:24,720 --> 02:06:27,512
嗯，然后按保存按钮，所以现在

1466
02:06:27,512 --> 02:06:31,680
我们已经提交了电子邮件地址，虽然我们是我们使用它的原因

1467
02:06:31,680 --> 02:06:35,120
现在让我们转到个人标识符并开始该过程，所以我们说我们只是

1468
02:06:35,120 --> 02:06:39,440
收集它，因为它是一个用户 ID，我们不是

1469
02:06:39,440 --> 02:06:43,040
临时处理它我认为这就是它的发音

1470
02:06:43,040 --> 02:06:48,872
我们说数据收集是必需的，我们说它用于

1471
02:06:48,872 --> 02:06:52,639
应用程序功能还可以，因为我们正在使用用户标识符记住什么时候

1472
02:06:52,639 --> 02:06:55,760
我们存储他们的笔记，因此它更多地用于应用程序功能而不是用于

1473
02:06:55,760 --> 02:06:59,040
注册所以这就是我们这样做的原因，那就是

1474
02:06:59,040 --> 02:07:03,192
现在完成了，让我们去文件和文档看看这个过程

1475
02:07:03,192 --> 02:07:06,959
文件和文档，并说它只是收集的，但不是

1476
02:07:06,959 --> 02:07:11,120
shared 请记住，即使我们添加了，我们也不会共享用户的数据

1477
02:07:11,120 --> 02:07:14,959
共享表供用户与其他人共享自己的信息

1478
02:07:14,959 --> 02:07:19,680
但那是他们的选择，这不是我们做得好的事情

1479
02:07:19,680 --> 02:07:23,911
是不是这些数据是临时处理的，然后我们说不，我再说一次

1480
02:07:23,911 --> 02:07:26,319
不知道这是否是正确的发音

1481
02:07:26,319 --> 02:07:30,000
然后是您的应用程序需要这些数据吗？记住我们正在谈论

1482
02:07:30,000 --> 02:07:35,760
文件和文档用户可以选择是否可以收集此数据

1483
02:07:35,760 --> 02:07:39,832
因为这不是我们强迫他们做的事

1484
02:07:39,832 --> 02:07:46,160
为什么收集这些数据然后我们说它是为了

1485
02:07:46,160 --> 02:07:50,080
广告个性化我应该推荐它没有帐户

1486
02:07:50,080 --> 02:07:55,271
管理不，所以我们会说这是应用程序功能，我们保存它，那就是

1487
02:07:55,271 --> 02:07:59,271
完成后，我们可以转到下一个屏幕并查看

1488
02:07:59,271 --> 02:08:02,319
这看起来像你实际上可以阅读你所有的信息

1489
02:08:02,319 --> 02:08:06,000
进入这里所以嗯，在这里你可以在底部看到

1490
02:08:06,000 --> 02:08:10,400
屏幕上显示提供指向您的隐私政策的链接，我有

1491
02:08:10,400 --> 02:08:15,911
已经是隐私政策，所以我有，嗯，我相信我在隐私政策文本中有它

1492
02:08:15,911 --> 02:08:21,440
所以我要复制它并转到此处的隐私政策实际上离开

1493
02:08:21,440 --> 02:08:24,000
并丢弃留在嗯

1494
02:08:24,000 --> 02:08:28,160
所以我们可能不得不实际提供我还没有这样做的隐私政策

1495
02:08:28,160 --> 02:08:31,911
但我们必须这样做

1496
02:08:31,911 --> 02:08:36,232
在隐私政策页面上，所以是的，我们需要这样做

1497
02:08:36,232 --> 02:08:40,800
让我们继续，嗯，我实际上不想让我们把它保存为

1498
02:08:40,800 --> 02:08:44,400
草稿并转到此处，然后在中输入隐私政策

1499
02:08:44,400 --> 02:08:48,400
在这里，我只想说 https 让我们确保它是 https 是的

1500
02:08:48,400 --> 02:08:52,800
保存好，然后我要回到我们所在的仪表板

1501
02:08:52,800 --> 02:08:59,591
为了数据安全，我们已经结束了，所以让我们去呃下一个

1502
02:08:59,591 --> 02:09:05,440
下一个 下一个 在这个底部 现在我们有了我们的隐私政策，所以现在我们可以

1503
02:09:05,440 --> 02:09:08,080
保存这个，让我们看看是否有什么我们必须做的

1504
02:09:08,080 --> 02:09:12,959
实际上提交它所以它看起来不像所以它是

1505
02:09:12,959 --> 02:09:17,040
保存成功所以如果我们回到仪表板然后看看

1506
02:09:17,040 --> 02:09:21,192
我们的数据安全现在我们应该能够看到它被划掉了

1507
02:09:21,192 --> 02:09:27,440
太棒了，所以数据安全已经完成，现在我们

1508
02:09:27,440 --> 02:09:32,872
必须看看这个应用程序类别并提供联系方式好吗

1509
02:09:32,872 --> 02:09:37,680
所以让我们在这里进入应用程序类别，我们说它是一个应用程序，它是类别

1510
02:09:37,680 --> 02:09:42,160
如果它们存在的话，我们就说实用程序

1511
02:09:42,160 --> 02:09:46,959
嗯，让我们说这是我们应该说的

1512
02:09:46,959 --> 02:09:52,480
通讯 教育 活动 食品屋 图书馆 blah blah 医疗新闻

1513
02:09:52,480 --> 02:09:57,271
个性化生产力也许还可以，然后标签让我们说

1514
02:09:57,271 --> 02:10:00,800
嗯，哦，这太可怕了，好吧

1515
02:10:00,800 --> 02:10:07,040
嗯，让我们说一个便条笔记本是的，让我们保持它好吧

1516
02:10:07,040 --> 02:10:10,160
如果您愿意，您可以选择更多标签

1517
02:10:10,160 --> 02:10:12,959
然后完成

1518
02:10:12,959 --> 02:10:16,639
让我们看看我要说的商品详情联系方式和电子邮件地址

1519
02:10:16,639 --> 02:10:20,872
支持应用pixelity.se电话号码，我要去

1520
02:10:20,872 --> 02:10:26,400
在这里输入一些电话号码 好吧，现在只是一个假电话号码

1521
02:10:26,400 --> 02:10:31,360
和 https pixelity.se 外部营销

1522
02:10:31,360 --> 02:10:34,480
您可以选择宣传您的

1523
02:10:34,480 --> 02:10:39,040
如果您愿意，可以在 google play 之外的应用程序，也许没关系

1524
02:10:39,040 --> 02:10:43,512
嗯，在我保存这个之前，我要把屏幕带到另一个屏幕上，然后

1525
02:10:43,512 --> 02:10:47,440
实际上输入我的真实电话号码，好吧，所以我要这样做，让我们看看

1526
02:10:47,440 --> 02:10:53,760
如果我能做到这一点，它似乎并不喜欢这个事实

1527
02:10:53,760 --> 02:10:58,160
我把它拖到另一个屏幕现在它喜欢它了

1528
02:10:58,160 --> 02:11:02,872
所以让我看看

1529
02:11:02,872 --> 02:11:07,271
它真的不喜欢我把它拖到我的 ipad 所以我要把它带到

1530
02:11:07,271 --> 02:11:10,720
我的麦金塔

1531
02:11:10,720 --> 02:11:15,271
是的，所以我在这里所做的只是输入该信息，所以让我带来

1532
02:11:15,271 --> 02:11:18,552
再次启动，然后让我们看看你是否可以按

1533
02:11:18,552 --> 02:11:22,319
保存按钮好，所以我所做的只是将屏幕移动到另一个

1534
02:11:22,319 --> 02:11:26,232
物理屏幕输入我的真实电话号码就是这样

1535
02:11:26,232 --> 02:11:28,160
哎呀

1536
02:11:28,160 --> 02:11:35,680
保持安全您的更改无法保存为什么不让我去看看我是否

1537
02:11:35,680 --> 02:11:39,680
输入一个有效的哦，我输入了我的电话号码不正确，所以我要

1538
02:11:39,680 --> 02:11:43,192
保存并滚动到屏幕顶部

1539
02:11:43,192 --> 02:11:47,832
把它恢复，然后让我们去所有应用程序好吧

1540
02:11:47,832 --> 02:11:54,319
哎呀，我想在这里回到我的应用程序，所以在这里我们完成了选择

1541
02:11:54,319 --> 02:12:00,319
应用程序类别太棒了，现在它是我们必须设置的多汁部分

1542
02:12:00,319 --> 02:12:05,760
在我们的商店列表中，嗯，这实际上也将是相当的

1543
02:12:05,760 --> 02:12:11,440
设置过程的一个重要部分，因此这实际上可能需要一些时间，但是

1544
02:12:11,440 --> 02:12:15,911
没关系，我们会在适当的时候解决这个问题，所以现在我们必须看看

1545
02:12:15,911 --> 02:12:19,832
在设置我们的商店聆听时，商店聆听是其中之一

1546
02:12:19,832 --> 02:12:23,192
绝对的核心组件或者和我们必须做的核心事情

1547
02:12:23,192 --> 02:12:28,319
发布我们的应用程序，让我们在这里设置您的商品详情

1548
02:12:28,319 --> 02:12:31,360
让我们做一个简短的描述并说商店

1549
02:12:31,360 --> 02:12:36,160
你的笔记安全没问题，并有完整的描述

1550
02:12:36,160 --> 02:12:40,400
应用程序，您可以将笔记存储在

1551
02:12:40,400 --> 02:12:45,680
云好吧，我也强烈建议你写一些适当的

1552
02:12:45,680 --> 02:12:49,760
这些东西的描述，如果你记住这一点也很重要

1553
02:12:49,760 --> 02:12:54,552
我们为我们的应用程序使用了一个图标，而那个图标我们

1554
02:12:54,552 --> 02:13:01,680
从 stock io 带来，所以如果你进入 stock io，我们使用便笺

1555
02:13:01,680 --> 02:13:06,400
图标，因此在您的商店描述中在 ios 和

1556
02:13:06,400 --> 02:13:12,232
android 你只是说 um app icon 提供的然后给

1557
02:13:12,232 --> 02:13:16,552
一些归因，好吧，所以阅读这些内容非常重要

1558
02:13:16,552 --> 02:13:20,872
事物，并在应归属的地方给出归属

1559
02:13:20,872 --> 02:13:25,911
所以现在我们来到应用程序图标部分，你可以在这里看到

1560
02:13:25,911 --> 02:13:29,760
说应用程序图标应该是五十二乘五十二，而我们没有

1561
02:13:29,760 --> 02:13:33,040
不幸的是，目前我们所拥有的是一千二十四

1562
02:13:33,040 --> 02:13:36,959
一千二十四，所以如果我们回到我们的下载，例如在这里

1563
02:13:36,959 --> 02:13:40,872
你会看到我们在前面的章节中下载了我们的应用程序图标，并且

1564
02:13:40,872 --> 02:13:44,400
我们在这里有这个应用商店的图片，我相信它是千二十四

1565
02:13:44,400 --> 02:13:47,591
现在一千二十四，所以我要做的是我要复制

1566
02:13:47,591 --> 02:13:51,271
这个文件命令 d 在我的 Macintosh on windows 和 linux 你可能必须做

1567
02:13:51,271 --> 02:13:56,000
别的东西，如果你有例如油漆和油漆

1568
02:13:56,000 --> 02:14:00,080
再加上它被称为paint.net或Windows上的东西，你也可以调整大小

1569
02:14:00,080 --> 02:14:03,360
您的图像，但您需要做的只是在您的主机操作系统中

1570
02:14:03,360 --> 02:14:06,639
需要确保这个图像是 512512 所以在 mac 我只是要去

1571
02:14:06,639 --> 02:14:09,360
单击此处它会在单独的屏幕上打开，然后

1572
02:14:09,360 --> 02:14:13,120
我要去工具那里说调整大小，我只想说它是 5

1573
02:14:13,120 --> 02:14:17,440
12 5 12 好的，这些是指导方针，所以我在这里

1574
02:14:17,440 --> 02:14:23,591
只是要把那个文件放在那里好吗

1575
02:14:23,591 --> 02:14:28,552
好的，这适用于您的应用程序图标，即 5 12 5 12。

1576
02:14:28,552 --> 02:14:32,639
现在我们还需要它是一种必需的感觉，因为您可以看到它标有

1577
02:14:32,639 --> 02:14:36,080
星号在这里，这是一个未来的图形，未来的图形是什么

1578
02:14:36,080 --> 02:14:40,232
例如，如果您的应用程序有时可以使用 Google Play 商店

1579
02:14:40,232 --> 02:14:44,639
在 Play 商店 um 中有特色，他们将在

1580
02:14:44,639 --> 02:14:49,680
为了基本上嗯为应用程序做广告所以

1581
02:14:49,680 --> 02:14:52,232
有这方面的指导方针，应该是你

1582
02:14:52,232 --> 02:14:56,800
可以看到它应该是 1024x500，因为我们没有，所以我们是

1583
02:14:56,800 --> 02:15:01,192
将使用我们的应用程序图标来创建未来的图像，所以

1584
02:15:01,192 --> 02:15:04,232
我认为我们应该做的只是打开 figma

1585
02:15:04,232 --> 02:15:09,040
在我们的 figma 文档打开后，我们可以在这里做的是

1586
02:15:09,040 --> 02:15:14,639
创建一个 1024x500 的小矩形，我相信指南是

1587
02:15:14,639 --> 02:15:18,872
告诉我们用 1024 x 500 创建它，所以我要选择这个

1588
02:15:18,872 --> 02:15:24,319
矩形，我说它的宽度是 1024，然后高度是 500，我喜欢什么

1589
02:15:24,319 --> 02:15:29,440
要做的就是去我信赖的调色板，它来自东京之夜

1590
02:15:29,440 --> 02:15:32,720
让我们去 github 上的东京骑士，就像我们之前看到的那样

1591
02:15:32,720 --> 02:15:36,959
章节我要在这里向下滚动一点，说我有我

1592
02:15:36,959 --> 02:15:41,680
想要编辑器背景颜色，所以它是 2428 3b 然后我要复制它

1593
02:15:41,680 --> 02:15:46,552
关闭选项卡来到 figma 并将该图层的填充颜色更改为

1594
02:15:46,552 --> 02:15:51,120
所以我们要用这个作为我们的背景，我要做的是

1595
02:15:51,120 --> 02:15:56,680
我要去我们的下载文件夹并获取该应用程序图标 png

1596
02:15:56,680 --> 02:16:00,160
1024024 我们在前一章中下载过，所以我要带上

1597
02:16:00,160 --> 02:16:03,271
它在这里然后它是巨大的我要按住

1598
02:16:03,271 --> 02:16:07,120
shift 键，然后按比例调整它的大小，以便将其重置为

1599
02:16:07,120 --> 02:16:10,639
像这样的东西好吧，所以我要把它放在中间现在我要

1600
02:16:10,639 --> 02:16:15,271
将此名称更改为 bg 通过双击将其名称更改为图标

1601
02:16:15,271 --> 02:16:20,319
就可以了，然后我将在这里创建一个文本字段并保存我的真棒

1602
02:16:20,319 --> 02:16:22,720
笔记，让我们

1603
02:16:22,720 --> 02:16:27,271
像这样把它们分成三行，让我们也确保

1604
02:16:27,271 --> 02:16:32,400
这个的填充颜色是白色的也确保你可以看到像我的一样

1605
02:16:32,400 --> 02:16:37,760
它是正确对齐的，然后我要把它放在中间的某个地方

1606
02:16:37,760 --> 02:16:42,160
好吧，也许我们甚至可以增加字体的大小，所以让我们看看

1607
02:16:42,160 --> 02:16:47,440
我们这里有大约 200 个，比如说 120 个，它有点大

1608
02:16:47,440 --> 02:16:51,680
在你的脸上有点大胆的东西所以这是我们的文字所以这是

1609
02:16:51,680 --> 02:16:55,680
我们的文本我要在这里做什么然后我要

1610
02:16:55,680 --> 02:16:59,512
嗯基本上把这些像bg图标和

1611
02:16:59,512 --> 02:17:03,440
文本，然后在这里复制这个背景，因为这将是我们的面具

1612
02:17:03,440 --> 02:17:06,800
抓住它并把它带到底部然后我要右键单击

1613
02:17:06,800 --> 02:17:11,591
它说用作面具，现在它有自己的组，然后我要抓住所有

1614
02:17:11,591 --> 02:17:15,271
这三个图层，然后将它们拖到这里，现在你可以看到那个面具

1615
02:17:15,271 --> 02:17:21,040
基本上掩盖了整个内容，所以它掩盖了我们的图标

1616
02:17:21,040 --> 02:17:25,192
好吧，所以它对我来说看起来很不错，有点成比例，很好，那么

1617
02:17:25,192 --> 02:17:30,639
你可以点击它，然后在 figma 中转到底部，如果

1618
02:17:30,639 --> 02:17:35,832
我改变了这里的嗯，这样你也许可以看得更清楚

1619
02:17:35,832 --> 02:17:41,591
然后滚动以确保选择了您的蒙版组，然后转到导出，然后

1620
02:17:41,591 --> 02:17:46,000
我们要把它作为一个 x 导出，然后现在导出，所以现在我们有了我们的

1621
02:17:46,000 --> 02:17:52,160
图像看起来像这样，它是 1024x500 所以我们可以去呃

1622
02:17:52,160 --> 02:17:57,271
我们的游戏机 谷歌游戏机 就在我们必须扔的地方

1623
02:17:57,271 --> 02:18:01,680
特色图形我要去下载和我们刚刚的图像

1624
02:18:01,680 --> 02:18:07,120
下载的就在这里，我就把它放在那里

1625
02:18:07,120 --> 02:18:10,720
所以那也很好，然后我要

1626
02:18:10,720 --> 02:18:15,040
保存我的更改，某些语言的更改有问题

1627
02:18:15,040 --> 02:18:18,080
错误好吧，那可能是因为我们没有

1628
02:18:18,080 --> 02:18:22,232
真的上传了任何截图，我们会尽快处理它

1629
02:18:22,232 --> 02:18:25,591
有点奇怪，它不让我让

1630
02:18:25,591 --> 02:18:30,000
我将更改保存为草稿我必须保存整个屏幕，因为我

1631
02:18:30,000 --> 02:18:33,440
没有在屏幕上输入一些需要的信息

1632
02:18:33,440 --> 02:18:38,000
允许我实际保存它，但我们很快就会处理好它，嗯

1633
02:18:38,000 --> 02:18:41,832
我们需要在这里做的是确保我们首先运行我们最新的

1634
02:18:41,832 --> 02:18:45,271
在正确的手机上应用程序也是如此

1635
02:18:45,271 --> 02:18:49,040
让我们在这里看看我要把我们的源代码带到这里然后我要去

1636
02:18:49,040 --> 02:18:53,271
说选择设备，然后我要全部选择我的安卓手机

1637
02:18:53,271 --> 02:18:57,271
对，就是这样，然后我实际上要

1638
02:18:57,271 --> 02:19:01,040
拿起我的安卓手机，看看我能不能做到这一点而不会造成太多问题

1639
02:19:01,040 --> 02:19:04,639
像这样在屏幕上

1640
02:19:04,639 --> 02:19:08,800
并经过验证

1641
02:19:08,800 --> 02:19:11,512
确保它也连接到 wi-fi

1642
02:19:11,512 --> 02:19:16,872
太棒了，所以我的安卓手机现在已经设置好了

1643
02:19:16,872 --> 02:19:21,911
然后让我们继续我们的源代码让我改变一些

1644
02:19:21,911 --> 02:19:25,760
屏幕布局在我们的源代码中然后我要去

1645
02:19:25,760 --> 02:19:34,319
如果我可以拼写 dart 文件，则转到主暗文件，并在我们的终端中

1646
02:19:34,319 --> 02:19:39,192
我有两个终端，所以我通常在这里专门为嗯

1647
02:19:39,192 --> 02:19:43,680
scr cpy 所以我只想说 scr cpy 这会调出 android

1648
02:19:43,680 --> 02:19:47,911
就在那儿打电话，既然我们已经选择了，我们现在可以说运行

1649
02:19:47,911 --> 02:19:51,591
没有调试所以这里的目标是在这个上运行应用程序

1650
02:19:51,591 --> 02:19:56,872
特定的 android 手机并让 sdrcpy 为我们截屏

1651
02:19:56,872 --> 02:20:02,552
正如你很快就会看到的，所以有一个非常好的命令叫做 adb 和 adb 就像

1652
02:20:02,552 --> 02:20:06,000
低级和低级android调试器

1653
02:20:06,000 --> 02:20:10,959
通过使用 adb，您实际上可以与您的

1654
02:20:10,959 --> 02:20:14,800
你知道例如你的模拟器 android 模拟器和你的 android

1655
02:20:14,800 --> 02:20:18,080
电话，就像我们在这里一样

1656
02:20:18,080 --> 02:20:23,680
如果你没有 adb 你实际上必须安装它所以如果我说哪个 adb

1657
02:20:23,680 --> 02:20:28,232
在我的电脑上你可以看到它说它是自制的 bin adb 基本上告诉

1658
02:20:28,232 --> 02:20:31,271
你我已经使用自制软件安装了 adb

1659
02:20:31,271 --> 02:20:36,480
如果您没有 adb 如果您的计算机上没有 adb 您可能需要安装

1660
02:20:36,480 --> 02:20:40,400
如果你正在做的事情是按照我正在做的步骤进行的

1661
02:20:40,400 --> 02:20:44,232
为您提供您正在尝试截屏的意思

1662
02:20:44,232 --> 02:20:48,872
来自连接到您计算机的实际设备，好的，所以我现在可以看到

1663
02:20:48,872 --> 02:20:53,271
我们的应用程序在 scr cpy 中运行，看起来像这样，所以我们可以

1664
02:20:53,271 --> 02:20:57,911
要做的就是发出你看到的命令，所以让我们继续说

1665
02:20:57,911 --> 02:21:04,720
um adb exec exec out screen cap key 然后我们保存

1666
02:21:04,720 --> 02:21:10,800
它进入例如file1.png，如果我看看Visual Studio

1667
02:21:10,800 --> 02:21:15,832
您很快就会看到的代码 现在这里存储了一个文件 file1png 就是这样

1668
02:21:15,832 --> 02:21:18,800
包含我们应用程序的屏幕截图的文件

1669
02:21:18,800 --> 02:21:24,160
然后我们可以转到另一个屏幕，例如我忘记密码屏幕

1670
02:21:24,160 --> 02:21:29,120
在这里，我们也可以把我们的键盘放下

1671
02:21:29,120 --> 02:21:32,639
看起来像这样，然后我们可以发出另一个

1672
02:21:32,639 --> 02:21:38,400
文件转换为 png 以便同时存储让我们进入注册屏幕并

1673
02:21:38,400 --> 02:21:43,040
将键盘向下发送，然后假设文件三个 png 并发送

1674
02:21:43,040 --> 02:21:48,160
键盘向下或向上或离开它是它是一个它是一种味道它是

1675
02:21:48,160 --> 02:21:52,552
完全取决于你你想怎么做，所以在这里我要去这里

1676
02:21:52,552 --> 02:21:58,000
vandal mp 并以真实用户身份实际登录

1677
02:21:58,000 --> 02:22:04,232
并转到应用程序的主屏幕，我要为 png 保存文件

1678
02:22:04,232 --> 02:22:07,832
然后我要用键盘打开我的一个笔记

1679
02:22:07,832 --> 02:22:11,591
也许在这种情况下，然后说文件五 png 好

1680
02:22:11,591 --> 02:22:16,720
然后我会说打开，所以我会在这里看到我所有的 png 文件然后我要走了

1681
02:22:16,720 --> 02:22:21,760
把这些文件带到桌面上，这样它们就不会污染

1682
02:22:21,760 --> 02:22:26,720
Visual Studio 代码中的工作区让我们回到这里，你可以看到

1683
02:22:26,720 --> 02:22:31,512
你可以把两个手机或平板电脑的屏幕截图放在那里

1684
02:22:31,512 --> 02:22:34,872
所以让我们继续我的桌面文件夹

1685
02:22:34,872 --> 02:22:40,959
我在哪里存储了所有这些屏幕截图，然后把所有这些图像都放在这里好了

1686
02:22:40,959 --> 02:22:46,160
我可以看到他们在这里填充我要抓住登录屏幕看看是否

1687
02:22:46,160 --> 02:22:48,872
它实际上可以先带来它，不幸的是这里不允许我

1688
02:22:48,872 --> 02:22:53,120
以正确的顺序放置东西所以不幸的是我必须删除它们并且

1689
02:22:53,120 --> 02:22:58,000
就像以正确的顺序放置它们，所以先提交一个

1690
02:22:58,000 --> 02:23:02,400
然后我也必须上传文件，所以有点奇怪

1691
02:23:02,400 --> 02:23:06,552
不允许我重新排列这些图像

1692
02:23:06,552 --> 02:23:11,440
但也许有一个我不知道的功能

1693
02:23:11,440 --> 02:23:17,192
所以让我们说文件四，然后我们必须上传文件五

1694
02:23:17,192 --> 02:23:21,360
好吧，那也有

1695
02:23:21,360 --> 02:23:23,271
嗯好的

1696
02:23:23,271 --> 02:23:27,591
所以这就是我们现在需要照顾的是创造一个五英寸

1697
02:23:27,591 --> 02:23:32,480
平板电脑，因为我这里没有一个五英寸的平板电脑

1698
02:23:32,480 --> 02:23:38,000
物理设备然后我们必须去创建一个所以如果我们看这里

1699
02:23:38,000 --> 02:23:42,400
视觉工作室代码并去颤振选择设备你会看到有

1700
02:23:42,400 --> 02:23:45,911
各种嗯基本的嗯

1701
02:23:45,911 --> 02:23:50,319
我用我的设备管理器创建的平板电脑

1702
02:23:50,319 --> 02:23:55,040
android studio 所以如果你有 android studio 你可以随时打开它

1703
02:23:55,040 --> 02:23:58,160
android studio 嗯哦

1704
02:23:58,160 --> 02:24:04,160
哦，它确实打开了它，所以它就在这里，你可以随时去我相信嗯

1705
02:24:04,160 --> 02:24:08,959
avd manager 这是虚拟设备管理器，然后创建您的虚拟

1706
02:24:08,959 --> 02:24:13,680
如您所见，您需要创建一个文件的设备是这个 7 英寸和 10.1

1707
02:24:13,680 --> 02:24:18,000
英寸平板电脑，因为我们要用这些截图，所以我要做什么

1708
02:24:18,000 --> 02:24:22,959
实际上要做的是推出这两款平板电脑，以便它们准备好

1709
02:24:22,959 --> 02:24:28,552
当我们需要它们的时候去，这是第一台平板电脑，我真的要去

1710
02:24:28,552 --> 02:24:33,680
把它转过来，让它处于纵向模式，这就是那个，然后我

1711
02:24:33,680 --> 02:24:38,872
还要在这里要求 avd 经理运行第二台平板电脑

1712
02:24:38,872 --> 02:24:44,232
在这里，速度非常快，我看到我什至不知道它是怎么做到的

1713
02:24:44,232 --> 02:24:49,040
老实说，这台平板电脑怎么运行得这么快有点吓人

1714
02:24:49,040 --> 02:24:53,832
现在坐在那里，嗯，让我们看看它是否会完成它的工作

1715
02:24:53,832 --> 02:24:58,319
正确，虽然我可以看到七英寸平板电脑做得不太好，让我们

1716
02:24:58,319 --> 02:25:03,760
看看我是否可以关闭它，我会说是的，所以也许我应该关闭它

1717
02:25:03,760 --> 02:25:08,160
打算关闭这个，不知道我们是否要

1718
02:25:08,160 --> 02:25:13,911
实际上最好先运行 7 英寸平板电脑，看看是不是这样

1719
02:25:13,911 --> 02:25:16,872
成功也许发生了什么事

1720
02:25:16,872 --> 02:25:21,680
10英寸和7英寸的加工我真的不知道

1721
02:25:21,680 --> 02:25:26,000
这完全取决于设备管理器

1722
02:25:26,000 --> 02:25:30,480
我可以看到这个设备的性能不太好，所以我按下

1723
02:25:30,480 --> 02:25:34,400
电源按钮在这里，我现在可以看到它正在运行，所以我要按下

1724
02:25:34,400 --> 02:25:38,552
主页按钮和嗯方向并没有真正起作用

1725
02:25:38,552 --> 02:25:42,552
很好，所以我可以看到

1726
02:25:42,552 --> 02:25:45,832
现在也许它工作得更好一点，所以让我们就这样吧

1727
02:25:45,832 --> 02:25:50,400
那是七英寸的显示器，它已经启动并运行了，然后我要做什么

1728
02:25:50,400 --> 02:25:55,440
并且颤振守护进程已经终止，完全可以重新加载它

1729
02:25:55,440 --> 02:26:00,959
那么我们要做的是在这里说选择设备

1730
02:26:00,959 --> 02:26:04,800
flutter 选择 vibe 可能是因为 flutter 恶魔

1731
02:26:04,800 --> 02:26:09,832
实际上在这里撞到了我们，所以我要再试一次，如果它不起作用

1732
02:26:09,832 --> 02:26:12,959
然后我要退出 Visual Studio 代码所以

1733
02:26:12,959 --> 02:26:17,271
让我开始视觉工作室代码和新鲜

1734
02:26:17,271 --> 02:26:20,552
好吧，现在视觉工作室重新开始了，让我们再试一次，然后说

1735
02:26:20,552 --> 02:26:24,400
颤振选择设备，这次我要选择一个7英寸的

1736
02:26:24,400 --> 02:26:29,591
android 平板电脑然后我会说运行没有调试所以让我们看看我们是否

1737
02:26:29,591 --> 02:26:33,512
在此平板电脑上运行此应用程序将取得任何成功

1738
02:26:33,512 --> 02:26:38,319
如果 gradle build 今天对我们来说效果很好，那么它就是

1739
02:26:38,319 --> 02:26:42,639
将允许我们进行 lse 执行流安装失败安装

1740
02:26:42,639 --> 02:26:47,760
启动应用程序和 sdk g phone 64 rm64 所以可能有一些问题

1741
02:26:47,760 --> 02:26:51,680
这个安卓平板电脑在这里所以我要关闭它

1742
02:26:51,680 --> 02:26:57,440
如果我在这里的某个地方找不到它，我会回到 android studio

1743
02:26:57,440 --> 02:27:00,480
让我们看看安卓

1744
02:27:00,480 --> 02:27:05,120
工作室好的，它现在正在运行

1745
02:27:05,120 --> 02:27:09,680
让我们进去然后我要去avd经理

1746
02:27:09,680 --> 02:27:15,360
让我们看看我们是否可以关闭这些并杀死这两个平板电脑

1747
02:27:15,360 --> 02:27:20,080
完全像那样，当我在它的时候，我也要去

1748
02:27:20,080 --> 02:27:23,271
杀了这个，所以我没有任何用处，所以我要创建一个新的

1749
02:27:23,271 --> 02:27:29,832
虚拟设备然后我要说的是nexus 7和7的平板电脑

1750
02:27:29,832 --> 02:27:33,120
英寸显示像这样的东西

1751
02:27:33,120 --> 02:27:38,319
没关系，1920 是 100 200 所以这里需要什么

1752
02:27:38,319 --> 02:27:40,720
从我们这里说，呃

1753
02:27:40,720 --> 02:27:45,040
七寸平板截图 好的 太棒了 所以没有

1754
02:27:45,040 --> 02:27:49,832
具体尺寸要求，然后我将按下一个

1755
02:27:49,832 --> 02:27:54,080
绝对没问题，在肖像和

1756
02:27:54,080 --> 02:27:57,680
然后我会说完成然后让我们看看他是否可以运行这个

1757
02:27:57,680 --> 02:28:01,440
这台电脑上的模拟器

1758
02:28:01,440 --> 02:28:04,872
如果一切顺利，我们将在这里看到欢迎屏幕，我可以看到

1759
02:28:04,872 --> 02:28:08,800
谷歌的标志，所以这是一个很好的标志，我会保留屏幕

1760
02:28:08,800 --> 02:28:13,040
在这里以防万一，虽然它正在发挥作用，但我们正在

1761
02:28:13,040 --> 02:28:17,360
会回到颤动，我可以看到模拟器已经启动

1762
02:28:17,360 --> 02:28:21,760
现在，我要说选择设备，我要在这里选择它让我们

1763
02:28:21,760 --> 02:28:26,160
然后说在没有调试的情况下运行运行，希望这次我们有更好的

1764
02:28:26,160 --> 02:28:31,832
在给定的模拟器中运行该应用程序的运气，让我们看看

1765
02:28:31,832 --> 02:28:36,872
哇，这真的很快，实际上它出奇地快，所以现在它

1766
02:28:36,872 --> 02:28:40,639
在那里运行，我可以看到我们的应用程序在模拟器中运行，所以

1767
02:28:40,639 --> 02:28:46,160
我们在这里需要做的是实际拍摄一些截图，所以嗯

1768
02:28:46,160 --> 02:28:50,400
当我们需要你在这里看到的一切时，实际上我们都必须提供 7 英​​寸平板电脑

1769
02:28:50,400 --> 02:28:54,959
屏幕截图，我们还必须修复 10 英寸平板电脑屏幕截图，但我

1770
02:28:54,959 --> 02:28:58,959
要提的是取决于屏幕的大小

1771
02:28:58,959 --> 02:29:02,639
当您看到一切正常时，您就没有问题

1772
02:29:02,639 --> 02:29:06,232
可以去注册屏幕我也忘记了我的密码，所有这些都在工作

1773
02:29:06,232 --> 02:29:11,120
很好但是我们有一个滚动问题

1774
02:29:11,120 --> 02:29:14,800
我可以在这里看到我在

1775
02:29:14,800 --> 02:29:18,552
屏幕底部，七英寸的显示屏实际上会挡住视线

1776
02:29:18,552 --> 02:29:23,760
这可能是因为嗯现在在这种情况下实际上并不是

1777
02:29:23,760 --> 02:29:27,192
挡住视野，但如果您的屏幕较小，则可能会挡住视野

1778
02:29:27,192 --> 02:29:31,271
因为你可以看到这个屏幕是不可滚动的，所以如果你有一个较小的

1779
02:29:31,271 --> 02:29:36,480
屏幕然后这个键盘可以弹出你在这里的内容之上

1780
02:29:36,480 --> 02:29:40,232
阻止内容，所以在开始服用之前我们需要做些什么

1781
02:29:40,232 --> 02:29:44,720
我们的 android um 平板电脑的屏幕截图让我们去解决这些问题

1782
02:29:44,720 --> 02:29:48,639
让我们首先进入我们的应用程序中的验证电子邮件视图 哎呀，我按下

1783
02:29:48,639 --> 02:29:52,800
再次错误地启动按钮对不起，我要停止这个

1784
02:29:52,800 --> 02:29:59,271
让我们去验证电子邮件视图，您将在代码中看到验证

1785
02:29:59,271 --> 02:30:02,959
返回时的电子邮件视图状态是脚手架，它有一个按顺序排列的列

1786
02:30:02,959 --> 02:30:06,080
要使此列垂直滚动，您只需

1787
02:30:06,080 --> 02:30:10,552
用一个小部件包装它，然后说一个孩子

1788
02:30:10,552 --> 02:30:14,720
世界观，如屏幕底部的注释所示，好的，这就是

1789
02:30:14,720 --> 02:30:20,400
向下滚动，让我们现在转到登录视图，以便登录视图并换行

1790
02:30:20,400 --> 02:30:26,000
本专栏中的全部内容，假设用

1791
02:30:26,000 --> 02:30:30,232
一个小部件好的，我要说单身孩子

1792
02:30:30,232 --> 02:30:35,832
滚动视图就像那样好吧，我稍微改变了屏幕布局

1793
02:30:35,832 --> 02:30:40,800
位，以便您更好地查看代码让我们也转到我们的寄存器视图

1794
02:30:40,800 --> 02:30:46,000
注册视图，在屏幕顶部我们有脚手架和一列，所以

1795
02:30:46,000 --> 02:30:50,800
让我们也在这个专栏中说用单个子滚动小部件包装它

1796
02:30:50,800 --> 02:30:56,800
好吧，最后但并非最不重要的是，我们要去找回我们忘记的密码

1797
02:30:56,800 --> 02:31:00,232
查看并看看我们是如何创建屏幕的 我们有一个脚手架

1798
02:31:00,232 --> 02:31:04,232
填充列就像我们在其他地方所做的标准一样

1799
02:31:04,232 --> 02:31:10,080
在单个子滚动视图中使用小部件，这就是现在

1800
02:31:10,080 --> 02:31:13,120
我们已经完成了我们实际上已经准备好再次启动这个应用程序

1801
02:31:13,120 --> 02:31:17,360
所以选择设备到nexus然后我会说运行而不调试所有

1802
02:31:17,360 --> 02:31:22,872
对，所以我们现在需要做的是再次使用 adb 作为低级调试器

1803
02:31:22,872 --> 02:31:27,512
android 但这次我们要截取模拟器的截图，就像你在

1804
02:31:27,512 --> 02:31:30,319
上一节我们谈到服用时

1805
02:31:30,319 --> 02:31:36,080
在 scr cpy 中运行的实际 android 手机的屏幕截图，我们必须使用 adb 作为

1806
02:31:36,080 --> 02:31:40,800
好吧，但我们不必告诉它它是一个模拟器，正如您在

1807
02:31:40,800 --> 02:31:47,040
现在屏幕底部，如果您为 adb 指定 e 标志，则表示

1808
02:31:47,040 --> 02:31:51,591
adb，您想截取模拟器的屏幕截图，好吧

1809
02:31:51,591 --> 02:31:56,000
这是正在运行的设备，对不起，我们的应用程序

1810
02:31:56,000 --> 02:32:00,959
我们现在需要做的是去命令行让我做一些

1811
02:32:00,959 --> 02:32:05,271
在屏幕上重新洗牌，这是我们的

1812
02:32:05,271 --> 02:32:11,911
scrcpy 我会在这里做一些屏幕洗牌所以摆脱这个

1813
02:32:11,911 --> 02:32:15,591
让我们去终端好吧

1814
02:32:15,591 --> 02:32:19,512
让我们发出命令，正如您在屏幕底部看到的那样

1815
02:32:19,512 --> 02:32:24,552
我会这样做，呃，那样做

1816
02:32:24,552 --> 02:32:31,040
adb 退出，但在此之前我只想说破折号 e 和屏幕截图

1817
02:32:31,040 --> 02:32:36,552
e 然后让我们说文件一个 png 好吧

1818
02:32:36,552 --> 02:32:40,400
如果我现在转到项目结构，我可以看到有一个名为 file

1819
02:32:40,400 --> 02:32:45,832
一个png，它是我们模拟器的截图，好吧，所以我要重新

1820
02:32:45,832 --> 02:32:51,040
做同样的事情我要去忘记我的密码屏幕然后我们起床

1821
02:32:51,040 --> 02:32:54,400
并摆脱这里的键盘，让我们删除我刚刚的那个空间

1822
02:32:54,400 --> 02:32:59,040
输入，然后将第二个屏幕截图作为文件转换为 png

1823
02:32:59,040 --> 02:33:03,360
然后让我们去登录页面和注册页面摆脱这个

1824
02:33:03,360 --> 02:33:08,319
键盘文件免费png好的，所以现在我们有了

1825
02:33:08,319 --> 02:33:12,720
哎呀，我要去我要按后退按钮我要去

1826
02:33:12,720 --> 02:33:18,232
使用我的电子邮件地址和我们的

1827
02:33:18,232 --> 02:33:22,000
foo barb ads 的可怕密码现在我们在应用程序中让我们来看看

1828
02:33:22,000 --> 02:33:28,160
第四个屏幕截图名为 file for png 并在此处，而这与

1829
02:33:28,160 --> 02:33:31,512
键盘也许也让我们看看

1830
02:33:31,512 --> 02:33:37,512
然后拍摄屏幕截图 5 或文件 5 png 所以现在我们有 5 个屏幕截图

1831
02:33:37,512 --> 02:33:40,720
我们的 7 英寸显示屏也让我们

1832
02:33:40,720 --> 02:33:45,512
对不起，我们去收集那些截图文件一二五然后

1833
02:33:45,512 --> 02:33:50,400
我要删除桌面上的那些，然后从

1834
02:33:50,400 --> 02:33:54,800
我们的应用程序然后让我们去嗯

1835
02:33:54,800 --> 02:33:59,440
我们的 google play 控制台在 7 英寸的显示屏上，我要扔掉这些

1836
02:33:59,440 --> 02:34:04,160
一个一个地把文件一个一个放在这里

1837
02:34:04,160 --> 02:34:08,639
然后让我们在这之后立即删除文件二然后我们可以说文件三四

1838
02:34:08,639 --> 02:34:13,512
还有五个，所以我呃，这样你就知道我怎么样了

1839
02:34:13,512 --> 02:34:18,000
考虑截图的顺序好吗

1840
02:34:18,000 --> 02:34:23,120
所以这是文件四，然后我们有文件五，我们需要什么

1841
02:34:23,120 --> 02:34:27,440
要做的是我们需要基本上做同样的事情

1842
02:34:27,440 --> 02:34:32,552
一个 10 英寸的显示屏，你可以在这里看到，上面写着 10 英寸平板电脑屏幕截图，所以让我们

1843
02:34:32,552 --> 02:34:36,480
现在再去一次，我们可以关闭这个模拟器

1844
02:34:36,480 --> 02:34:41,760
就在那里然后我们可以回到 android studio 所以如果我能找到 android

1845
02:34:41,760 --> 02:34:46,319
工作室在这里 好的，让我们去 avd 经理，在这里

1846
02:34:46,319 --> 02:34:49,360
我们将创建一个新的虚拟设备在这种情况下它会说

1847
02:34:49,360 --> 02:34:54,319
平板电脑和nexus 10是一个10英寸的显示器，我要按下

1848
02:34:54,319 --> 02:35:00,639
next 然后 sdk 也很好，只是运行它 ooh 景观不确定

1849
02:35:00,639 --> 02:35:04,480
关于那个，但那可能很好，但你知道

1850
02:35:04,480 --> 02:35:07,832
我实际上要删除它并创建一个新的，因为我们有一些

1851
02:35:07,832 --> 02:35:13,040
横向模式之前的问题所以我接下来要再说一次nexus 10

1852
02:35:13,040 --> 02:35:17,512
下一张肖像，然后完成，所以希望这会在肖像中开始

1853
02:35:17,512 --> 02:35:22,000
模式，然后我将在那里按下播放按钮，不幸的是

1854
02:35:22,000 --> 02:35:25,512
以横向模式开始，但没关系希望我们能够

1855
02:35:25,512 --> 02:35:29,832
旋转它，我现在可以看到它正在运行

1856
02:35:29,832 --> 02:35:33,911
希望你是这样的

1857
02:35:33,911 --> 02:35:39,760
我们现在应该看到主屏幕让我们看看我们是否可以旋转这个呃

1858
02:35:39,760 --> 02:35:44,319
不幸的是它实际上并没有旋转所以我想看看是否有

1859
02:35:44,319 --> 02:35:48,552
这里的属性允许我们更改显示

1860
02:35:48,552 --> 02:35:55,512
从横向到纵向，因此启用了快照录制设置

1861
02:35:55,512 --> 02:35:59,512
光代理高级展示窗口框架

1862
02:35:59,512 --> 02:36:04,319
没有任何东西可以让我们改变这个设备

1863
02:36:04,319 --> 02:36:08,800
嗯方向键不，它不会改变

1864
02:36:08,800 --> 02:36:12,720
从横向显示到纵向，我现在

1865
02:36:12,720 --> 02:36:17,680
基本上我可以尝试任何事情，即使我在这里使用 chrome

1866
02:36:17,680 --> 02:36:22,639
说不，谢谢，然后如果我旋转这个，我可以看到它很不幸

1867
02:36:22,639 --> 02:36:27,591
不旋转实际的应用程序，所以我们可能不得不

1868
02:36:27,591 --> 02:36:33,360
以横向模式截取屏幕截图，让我们看看您是否真的可以这样做

1869
02:36:33,360 --> 02:36:36,639
所以如果有人知道如何解决这个问题，我会

1870
02:36:36,639 --> 02:36:40,959
感谢也知道，因为此刻即使在做

1871
02:36:40,959 --> 02:36:44,232
左右命令它不听我的命令它不是

1872
02:36:44,232 --> 02:36:48,319
基本上是旋转的，所以这个图标怎么样

1873
02:36:48,319 --> 02:36:52,800
嗯，说实话对你没有太大帮助

1874
02:36:52,800 --> 02:36:57,040
嗯，我不是说我可以去这里

1875
02:36:57,040 --> 02:37:01,440
然后在这里哦，现在是肖像，好吧我做了一些事情，所以我点击了一个

1876
02:37:01,440 --> 02:37:05,271
旋转后左上角的小图标，所以它旋转到纵向所以

1877
02:37:05,271 --> 02:37:09,040
这只是纯粹的运气让我们去视觉工作室代码说

1878
02:37:09,040 --> 02:37:13,040
macintosh 上的命令 shift p 或 linux 和 windows 中的 ctrl shift p 并保存

1879
02:37:13,040 --> 02:37:16,800
闪光灯或选择设备 选择我们的 10 英寸显示屏

1880
02:37:16,800 --> 02:37:20,400
然后我会说运行运行没有调试，如果

1881
02:37:20,400 --> 02:37:24,720
一切正常，然后 gradle 对我们有利

1882
02:37:24,720 --> 02:37:29,192
gradle 任务会很快过去，我真的很感激

1883
02:37:29,192 --> 02:37:32,639
老实说，所以 gradle 现在工作得更好了

1884
02:37:32,639 --> 02:37:38,080
比 xcode 构建过程，所以这是我们的应用程序并显示在 10 英寸

1885
02:37:38,080 --> 02:37:42,160
显示，让我们继续并开始截取一些屏幕截图，所以我要

1886
02:37:42,160 --> 02:37:46,400
到这里的终端，然后开始截图

1887
02:37:46,400 --> 02:37:51,832
在登录视图中归档一个然后让我们去忘记密码并说

1888
02:37:51,832 --> 02:37:55,680
文件二我要摆脱键盘，不截图

1889
02:37:55,680 --> 02:37:59,512
键盘我要去这里到注册视图摆脱

1890
02:37:59,512 --> 02:38:06,872
键盘，然后说文件三，这样我们就不用用户登录了

1891
02:38:06,872 --> 02:38:11,760
嗯，像这样说 foobar baz 用那个用户登录哦，错了

1892
02:38:11,760 --> 02:38:16,000
凭证没关系呃 foo barbaz

1893
02:38:16,000 --> 02:38:19,680
登录，登录后我们将采取

1894
02:38:19,680 --> 02:38:23,192
另一个屏幕截图，这是我们的屏幕截图 4，然后我们将

1895
02:38:23,192 --> 02:38:27,911
用键盘截取另一个屏幕截图给我们的嗯

1896
02:38:27,911 --> 02:38:33,040
文件 5. 好的，这也是我要打开的

1897
02:38:33,040 --> 02:38:36,872
当前文件夹我可以在这里看到五个屏幕截图转到我的桌面获取

1898
02:38:36,872 --> 02:38:40,872
去掉旧的，把新的贴进去

1899
02:38:40,872 --> 02:38:44,800
好的，现在我们有了可以清理和删除的

1900
02:38:44,800 --> 02:38:49,832
模拟器我们没有，我也要关闭 avd 我可以看到

1901
02:38:49,832 --> 02:38:55,512
已经关门了，让我们回到我们这里的游戏商店

1902
02:38:55,512 --> 02:39:00,080
所以玩商店嗯控制台所以我要上传

1903
02:39:00,080 --> 02:39:06,160
这个新的 um png 文件文件一个，然后为十英寸平板电脑文件两个文件，所以所有

1904
02:39:06,160 --> 02:39:10,080
这五张截图是针对十寸平板的

1905
02:39:10,080 --> 02:39:14,959
三，然后我们要去四这里

1906
02:39:14,959 --> 02:39:19,512
然后最后但并非最不重要的是，我们将上传屏幕截图五然后正确

1907
02:39:19,512 --> 02:39:22,872
上传完成后，我将删除所有这些文件以保留我的

1908
02:39:22,872 --> 02:39:26,639
桌面清洁，所以在这样做之后让我们保存它，现在你可以看到

1909
02:39:26,639 --> 02:39:31,440
它说您的更改已保存非常棒

1910
02:39:31,440 --> 02:39:37,591
所以现在已经完成了，我们需要创建一个发布应用程序，所以如果我

1911
02:39:37,591 --> 02:39:42,720
把我的笔记在这里稍微提一下，太棒了

1912
02:39:42,720 --> 02:39:46,319
我们需要做的，我们需要看看这里的一个小 url，如你所见

1913
02:39:46,319 --> 02:39:50,800
在屏幕底部它被称为 docslatter dev deployment android 它是

1914
02:39:50,800 --> 02:39:55,040
一份非常重要的文件，在这里我强烈建议任何试图这样做的人

1915
02:39:55,040 --> 02:39:59,192
创建一个发布应用程序来完成它，它有信息

1916
02:39:59,192 --> 02:40:05,832
windows 和 macintosh 和 linux 用户，这些命令绝对是 um

1917
02:40:05,832 --> 02:40:09,512
充满价值，所以你可能不得不谷歌这些否则

1918
02:40:09,512 --> 02:40:15,680
但这份文件确实把所有这些放在了同一个地方

1919
02:40:15,680 --> 02:40:19,360
所以正如你在这里看到的，我们需要做的第一件事就是创建一个

1920
02:40:19,360 --> 02:40:25,040
我们的应用程序的签名密钥，您需要遵循这些

1921
02:40:25,040 --> 02:40:30,160
此处为您创建的命令，您可以查看，如果我带了

1922
02:40:30,160 --> 02:40:34,080
终端，所以如果我说终端，我会在这里提出来

1923
02:40:34,080 --> 02:40:40,080
如果我像这样在我的计算机上转到这个文件夹 dot android 并且我已经有了

1924
02:40:40,080 --> 02:40:44,800
你可以在这里看到一些键所以我已经设置了一些键但是在

1925
02:40:44,800 --> 02:40:47,591
命令我们实际上嗯

1926
02:40:47,591 --> 02:40:53,911
能够遵循这一点并指导我们去创造这些

1927
02:40:53,911 --> 02:40:59,440
我们的钥匙也好，所以我要做的就是我要做的

1928
02:40:59,440 --> 02:41:03,040
让我们看看我是否可以为您调出命令，正如您在底部看到的那样

1929
02:41:03,040 --> 02:41:06,872
屏幕，所以我将实际复制我为您提供的命令

1930
02:41:06,872 --> 02:41:11,512
屏幕底部没问题，我要去终端

1931
02:41:11,512 --> 02:41:16,800
嗯，让我们去桌面，然后我要发出那个命令

1932
02:41:16,800 --> 02:41:20,319
正如您在屏幕底部看到的那样，让我们​​看看会发生什么

1933
02:41:20,319 --> 02:41:24,480
现在这里它说输入密钥存储密码所以这是你的密码

1934
02:41:24,480 --> 02:41:28,639
然后需要在属性文件中提供，我很快就会告诉你，所以

1935
02:41:28,639 --> 02:41:32,319
记住这个密码直到我们一直在使用的这门课程

1936
02:41:32,319 --> 02:41:36,319
foob​​ar baz 作为密码是一个绝对可怕的密码，所以请

1937
02:41:36,319 --> 02:41:40,000
不要使用它，但因为我们在本课程中一直使用它并且因为

1938
02:41:40,000 --> 02:41:44,319
这个意义上的密码对于这门课程没有任何意义，我只是要去

1939
02:41:44,319 --> 02:41:48,639
说 foo bar pass 但请不要使用那么弱的密码

1940
02:41:48,639 --> 02:41:53,120
让我们说 foo barbaz，让我们看看它所说的 java 作为

1941
02:41:53,120 --> 02:41:56,959
密钥库被篡改或密码不正确，所以

1942
02:41:56,959 --> 02:42:01,911
嗯，这可能是因为我实际上正在尝试创建一个上传密钥

1943
02:42:01,911 --> 02:42:06,720
像这样的商店，我已经有一个以前的所以我要做的是

1944
02:42:06,720 --> 02:42:10,959
实际删除这个文件，所以我要说删除那个文件好

1945
02:42:10,959 --> 02:42:15,360
像这样上传密钥库，我将再次发出这个命令，我

1946
02:42:15,360 --> 02:42:20,872
会说 foo bar house 和 fubarba 所以如果你已经

1947
02:42:20,872 --> 02:42:24,872
之前有一个密钥库，你可以使用它，但我假设

1948
02:42:24,872 --> 02:42:30,160
你没有，但是当我发出这个命令时，我已经有了一个，所以

1949
02:42:30,160 --> 02:42:33,760
很可能您之前没有密钥库

1950
02:42:33,760 --> 02:42:37,911
删除它，但在我的情况下，我实际上必须先删除它然后发出

1951
02:42:37,911 --> 02:42:41,040
您可以在屏幕底部的标题中看到的命令

1952
02:42:41,040 --> 02:42:44,720
你的名字和姓氏是什么我只是要保存，我有安迪穷人

1953
02:42:44,720 --> 02:42:47,832
好的，你的组织单位我只是

1954
02:42:47,832 --> 02:42:52,480
要说发展，然后你的组织的名称是

1955
02:42:52,480 --> 02:42:58,080
像素 a b 好的 城市或地方 好的 我只能说斯德哥尔摩 好的

1956
02:42:58,080 --> 02:43:03,832
和状态或好的斯德哥尔摩再次让我们看看呃两个字母的国家代码我要去

1957
02:43:03,832 --> 02:43:09,760
说 s e 并说它是否正确，然后我要按 enter 按钮

1958
02:43:09,760 --> 02:43:13,760
呃，我已经输入了所有这些，也许我在这里犯了一个错误，所以让我们

1959
02:43:13,760 --> 02:43:20,080
只是说什么是正确的问题不我必须输入是的我是

1960
02:43:20,080 --> 02:43:24,232
只是要说是，所以你必须在结束时提供是

1961
02:43:24,232 --> 02:43:29,832
如果与密钥库密码相同，则返回相同的内容是的，只需输入

1962
02:43:29,832 --> 02:43:34,552
好的，现在它为我们创建了一个密钥库，在这里你可以看到

1963
02:43:34,552 --> 02:43:40,959
android 文件夹上传密钥库 jks 好的，所以这非常重要

1964
02:43:40,959 --> 02:43:44,872
既然已经创建了，我们需要做的是如果你有

1965
02:43:44,872 --> 02:43:48,800
跟着this你可以看到我们现在需要做的就是去我们的flutter

1966
02:43:48,800 --> 02:43:52,872
项目在这里你看到它说去你的颤振项目

1967
02:43:52,872 --> 02:43:55,512
然后转到 android 文件夹并创建

1968
02:43:55,512 --> 02:44:01,832
一个名为 key dot properties 的文件好吧，让我们继续创建它，所以我

1969
02:44:01,832 --> 02:44:06,959
将在此处打开 Visual Studio 代码，然后我将转到 cd

1970
02:44:06,959 --> 02:44:10,480
让我们看看我们现在所处的位置

1971
02:44:10,480 --> 02:44:14,319
我们项目标准项目的根文件夹我要去android

1972
02:44:14,319 --> 02:44:18,400
那里建议的文件夹，然后我将创建一个新文件

1973
02:44:18,400 --> 02:44:23,512
在这里被称为关键点属性好的所以关键点属性像这样然后

1974
02:44:23,512 --> 02:44:26,959
我将粘贴提到的内容

1975
02:44:26,959 --> 02:44:30,480
如您所见，在这里

1976
02:44:30,480 --> 02:44:34,959
所以也许是整个内容，所以我只是将它粘贴在这里好吧，所以它说

1977
02:44:34,959 --> 02:44:40,000
上一步的上一步密码，我们刚刚说的是 fubar bass

1978
02:44:40,000 --> 02:44:45,192
就像那个和密钥密码一样，那是 foo bar bass 的密钥

1979
02:44:45,192 --> 02:44:49,040
别名，我们将其保留为上传，在这里我们将说文件

1980
02:44:49,040 --> 02:44:54,720
存储在让我们看看你是否可以获得完整的路径，所以它是正确的

1981
02:44:54,720 --> 02:45:01,192
在这里所以我要复制那个路径路径抱歉然后我要删除它

1982
02:45:01,192 --> 02:45:05,680
信息在这里，然后粘贴在那里好吗

1983
02:45:05,680 --> 02:45:10,400
所以这应该很好，所以我也要仔细检查我的笔记

1984
02:45:10,400 --> 02:45:14,959
这就是我们以前也是这样做的，这似乎完全是

1985
02:45:14,959 --> 02:45:18,232
很好，然后在用空行完成之后

1986
02:45:18,232 --> 02:45:23,040
最后我要关闭这个文件并保存它的内容，所以现在

1987
02:45:23,040 --> 02:45:26,800
如果您转到应用程序的主文件夹并说 git status 那么您

1988
02:45:26,800 --> 02:45:31,040
应该看到你基本上只有这些东西

1989
02:45:31,040 --> 02:45:35,120
致力于您的项目，因为您的关键属性不会

1990
02:45:35,120 --> 02:45:37,760
承诺好吧

1991
02:45:37,760 --> 02:45:41,120
这就是为什么我在这里提到你总是需要确保

1992
02:45:41,120 --> 02:45:45,440
该特定文件不会与您的项目一起提交到

1993
02:45:45,440 --> 02:45:50,232
github 所以你总是可以去你的 git 忽略文件并实际添加它

1994
02:45:50,232 --> 02:45:55,192
您忽略的特定文件，所以我们只说 veeam git ignore

1995
02:45:55,192 --> 02:46:00,040
不要忽略，在这里我们只是要添加一个新文件并说任何

1996
02:46:00,040 --> 02:46:04,639
key.properties 文件不应该被提交然后我们做一个好的状态

1997
02:46:04,639 --> 02:46:09,120
再一次，如果你像我一样偏执，我们的 get ignore 会改变，你会这样做

1998
02:46:09,120 --> 02:46:14,400
就像我做的很好，所以在做了之后我们需要做的

1999
02:46:14,400 --> 02:46:19,120
其实基本上就是创造嗯

2000
02:46:19,120 --> 02:46:23,271
抱歉，我们必须更新构建 gradle 以进行签名和

2001
02:46:23,271 --> 02:46:30,000
我提供了一个链接，我会自己去看看，嗯

2002
02:46:30,000 --> 02:46:33,591
如果我能自己找到那个链接

2003
02:46:33,591 --> 02:46:38,319
配置登录 gradle 就在这里

2004
02:46:38,319 --> 02:46:42,400
它准确地告诉我们要做什么它说添加密钥库信息

2005
02:46:42,400 --> 02:46:46,872
从 android 块之前的属性文件中，您会看到这个 android 块

2006
02:46:46,872 --> 02:46:52,480
在这里，我们需要做的是在我们的项目android应用程序中转到这个文件

2007
02:46:52,480 --> 02:47:00,080
构建 gradle 所以 Visual Studio 代码让我们去 android 中的 um build.gradle

2008
02:47:00,080 --> 02:47:04,160
应用程序没问题，所以我们在那里，它说我们必须找到这个

2009
02:47:04,160 --> 02:47:08,000
你看到的 android 部分让我们找到正确的 android 块

2010
02:47:08,000 --> 02:47:13,832
那里只有一个所以就在那里然后让我们复制上面提到的这段文字

2011
02:47:13,832 --> 02:47:18,959
在那里并在 android 好的繁荣之前粘贴它，我要带它一个

2012
02:47:18,959 --> 02:47:21,591
也退后一步

2013
02:47:21,591 --> 02:47:24,639
嗯，基本上格式正确，所以

2014
02:47:24,639 --> 02:47:28,872
那就是那部分，它说然后将 key.properties 文件加载到

2015
02:47:28,872 --> 02:47:32,872
密钥库属性对象，这就是这家伙正在做的事情，然后我们

2016
02:47:32,872 --> 02:47:37,271
需要这样做说找到构建类型块所以让我们去发现你可以

2017
02:47:37,271 --> 02:47:41,760
看到发布，我们基本上也会编辑它，所以我要去我的

2018
02:47:41,760 --> 02:47:45,591
注释以及构建 gradle 呃抱歉只是为了确保我

2019
02:47:45,591 --> 02:47:50,872
正确执行所有步骤，在这里它说释放添加

2020
02:47:50,872 --> 02:47:54,080
您自己的签名配置，现在使用调试密钥进行发布构建签名

2021
02:47:54,080 --> 02:47:59,271
所以颤振运行发布工作，它说然后用这个替换它，所以你只是

2022
02:47:59,271 --> 02:48:04,872
必须在此处获取此信息并完全替换此构建类型

2023
02:48:04,872 --> 02:48:09,512
有了提供的那个东西，我要稍微修复一下凹痕

2024
02:48:09,512 --> 02:48:14,319
位也是如此，所以这里的密钥别名密码是从正确的

2025
02:48:14,319 --> 02:48:19,760
放置，然后使用此处的发布密钥对发布进行签名

2026
02:48:19,760 --> 02:48:24,552
这就是真的，所以你不必做更多，我们将要做的

2027
02:48:24,552 --> 02:48:27,760
现在做的就是你可以在屏幕底部看到的，我们要做一些

2028
02:48:27,760 --> 02:48:32,400
清理构建工件的 um 所以在你的项目中你需要

2029
02:48:32,400 --> 02:48:37,832
现在去终端，你可以在我的屏幕上看到，所以我要走了

2030
02:48:37,832 --> 02:48:42,959
然后说flutter clean好吗

2031
02:48:42,959 --> 02:48:46,639
就这样

2032
02:48:46,639 --> 02:48:51,832
好的，然后我们会说颤动

2033
02:48:51,832 --> 02:48:54,959
酒吧得到

2034
02:48:54,959 --> 02:48:59,040
好的

2035
02:48:59,040 --> 02:49:02,639
在这样做之后，我们实际上要

2036
02:49:02,639 --> 02:49:07,040
嗯，创建我们的应用程序包，所以在执行 flutter pop get 之后，您必须发出

2037
02:49:07,040 --> 02:49:12,319
颤振构建应用程序包，因此通过发出此命令，您可以看到

2038
02:49:12,319 --> 02:49:16,319
现在它将开始使用所有这些使用 griddle 构建您的应用程序

2039
02:49:16,319 --> 02:49:19,680
您在这些不同文件中指定的属性，所以有很多

2040
02:49:19,680 --> 02:49:24,000
我们必须做的工作，但谢天谢地，它被记录得很好

2041
02:49:24,000 --> 02:49:28,639
如果不是所有这些人，它会使整个过程变得容易得多

2042
02:49:28,639 --> 02:49:33,192
文档点点滴滴，这将是一个如此艰难的过程

2043
02:49:33,192 --> 02:49:38,400
通过所以让我们等待这个构建 gradle 过程现在完成它的工作

2044
02:49:38,400 --> 02:49:41,911
好吧，现在你可以看到这个过程已经完成了它已经创建了

2045
02:49:41,911 --> 02:49:46,639
我们的小应用程序包就是这个 aab 文件

2046
02:49:46,639 --> 02:49:50,959
我们需要做的是能够将这个应用程序包上传到谷歌

2047
02:49:50,959 --> 02:49:55,440
play store 所以让我们回到我们的 play store 在这里我要关闭它

2048
02:49:55,440 --> 02:50:00,080
关闭 figma，让我们现在回到我们的仪表板

2049
02:50:00,080 --> 02:50:04,160
在这里，你可以看到我很棒的笔记和

2050
02:50:04,160 --> 02:50:08,080
让我们看看我们在这里发生了什么以及我们需要做什么

2051
02:50:08,080 --> 02:50:15,360
是在这里进行我们的生产，然后创建一个新版本，好吧

2052
02:50:15,360 --> 02:50:19,271
按那里的创建新版本，你现在可以看到它要求你

2053
02:50:19,271 --> 02:50:23,192
上传您的应用程序包，所以我要做的是回到视觉工作室

2054
02:50:23,192 --> 02:50:29,271
代码，看看这个文件的位置，所以我要打开那个文件夹，我

2055
02:50:29,271 --> 02:50:34,959
可以在这里看到 aab，我将把它拖到这里并放在那里

2056
02:50:34,959 --> 02:50:38,319
好的

2057
02:50:38,319 --> 02:50:41,760
所以上传完成后可能需要

2058
02:50:41,760 --> 02:50:45,192
有时我可以看到它是 25 兆字节，尽管我在一千行

2059
02:50:45,192 --> 02:50:49,440
嗯光纤网络在这里上传需要一段时间我不

2060
02:50:49,440 --> 02:50:52,400
真的知道为什么，但在发布名称中，如您所见

2061
02:50:52,400 --> 02:50:56,959
它说这不是我们实际上与任何人分享的东西

2062
02:50:56,959 --> 02:51:03,120
所以让我们先说嗯，我们称它为第一个版本，好吧，在这里

2063
02:51:03,120 --> 02:51:07,120
您的发行说明基本上是从以前的版本中复制的，我们

2064
02:51:07,120 --> 02:51:12,000
没有那个听这里只是说嗯第一个

2065
02:51:12,000 --> 02:51:18,319
我们的应用程序版本可以，然后我们可以保存此信息

2066
02:51:18,319 --> 02:51:21,591
好吧，对不起

2067
02:51:21,591 --> 02:51:27,760
所以现在我们有了，嗯，我们有第一个版本

2068
02:51:27,760 --> 02:51:30,319
和

2069
02:51:30,319 --> 02:51:33,591
应该是这样，所以让我们在这里查看评论版本，我们有

2070
02:51:33,591 --> 02:51:36,872
一个错误可能是因为我们没有提供国家/地区

2071
02:51:36,872 --> 02:51:40,720
并添加至少一个国家或地区，这很好，我们会，我们会

2072
02:51:40,720 --> 02:51:46,400
添加它，让我们去看看我们必须添加这些的概述

2073
02:51:46,400 --> 02:51:49,911
如果我们无法以某种方式弄清楚的国家

2074
02:51:49,911 --> 02:51:56,160
让我们点击那里 android 好的，这很好

2075
02:51:56,160 --> 02:52:01,192
嗯，我们需要进入生产状态

2076
02:52:01,192 --> 02:52:04,800
您可以在 google 中看到的所有国家/地区或发行版在下面播放控制台

2077
02:52:04,800 --> 02:52:09,040
生产所以我相信我们已经在生产中所以如果我点击

2078
02:52:09,040 --> 02:52:13,271
生产现在我们可以看到国家和地区所以让我们进去说添加

2079
02:52:13,271 --> 02:52:16,319
国家和地区，我相信我们可以在这里

2080
02:52:16,319 --> 02:52:20,400
希望选择所有国家，如果你

2081
02:52:20,400 --> 02:52:24,080
卖得这么好，确保你的国家的价格很好，我们可以不卖哦

2082
02:52:24,080 --> 02:52:28,400
是的，我看到了，如果我点击这里，我可以选择所有

2083
02:52:28,400 --> 02:52:32,800
国家所以让我们这样做并说添加国家和地区，然后按

2084
02:52:32,800 --> 02:52:38,080
添加按钮太棒了，然后我们将进入我们的版本

2085
02:52:38,080 --> 02:52:40,639
呃在这里

2086
02:52:40,639 --> 02:52:44,872
我们有这个版本，所以让我们去发布仪表板

2087
02:52:44,872 --> 02:52:48,400
好的，那很好，然后我要按下编辑版本

2088
02:52:48,400 --> 02:52:51,832
既然我们已经选择了所有这些，我将按下评论发布

2089
02:52:51,832 --> 02:52:54,639
我们有一个警告应用程序包包含本机代码的国家，如果

2090
02:52:54,639 --> 02:52:57,832
你没有上传调试符号好吧，这些调试符号是什么

2091
02:52:57,832 --> 02:53:01,680
我实际上鼓励你去阅读因为这些会让你

2092
02:53:01,680 --> 02:53:07,192
查看您的应用程序何时以及是否发生任何崩溃

2093
02:53:07,192 --> 02:53:09,591
您的用户在任何地方使用您的

2094
02:53:09,591 --> 02:53:13,440
申请所以我真的建议你这样做

2095
02:53:13,440 --> 02:53:16,800
并上传您的 d 框符号，尽管我相信这是

2096
02:53:16,800 --> 02:53:20,480
超出了本课程的范围，但对您来说应该很简单

2097
02:53:20,480 --> 02:53:24,480
弄清楚，这里有链接，你可以阅读更多关于它的信息

2098
02:53:24,480 --> 02:53:29,040
所以现在我们可以开始推出生产，然后说推出

2099
02:53:29,040 --> 02:53:33,120
你现在会看到这将被审查和

2100
02:53:33,120 --> 02:53:38,160
像在游戏控制台上的谷歌呃缺点可能需要一些时间

2101
02:53:38,160 --> 02:53:42,080
to rel to review the first version of our application 有些人说

2102
02:53:42,080 --> 02:53:46,319
需要一周以上的时间，对我来说，有时实际上需要大约

2103
02:53:46,319 --> 02:53:50,319
八九天 所以取决于你做了什么

2104
02:53:50,319 --> 02:53:53,760
如果您发布之前的任何应用程序，您之前的记录

2105
02:53:53,760 --> 02:53:58,552
实际上可能能够被放置在队列中的第一个位置，或者也许

2106
02:53:58,552 --> 02:54:01,680
最后我不知道我不知道他们的流程所以

2107
02:54:01,680 --> 02:54:05,040
嗯，那真的就像我们的机器人的发布一样

2108
02:54:05,040 --> 02:54:08,480
应用程序，我们在中间经历了很多甚至 figma 设计

2109
02:54:08,480 --> 02:54:12,720
恭喜你和我一起经历这一切

2110
02:54:12,720 --> 02:54:16,400
既然我们已经改变了一些代码，让我们继续吧

2111
02:54:16,400 --> 02:54:21,040
嗯实际上提交了我们所有的更改，所以我要说良好的状态

2112
02:54:21,040 --> 02:54:25,040
并确保您的属性文件是关键属性文件

2113
02:54:25,040 --> 02:54:28,872
没有添加所以我们就说 git add all

2114
02:54:28,872 --> 02:54:32,959
然后我要说 git commit step

2115
02:54:32,959 --> 02:54:36,319
31，如果你看看我们的日志，我们

2116
02:54:36,319 --> 02:54:41,271
有第 30 步和第 31 步，所以让我们将这些更改推送到我们的遥控器，然后我就走了

2117
02:54:41,271 --> 02:54:46,480
说得到一个标签也是第31步好的

2118
02:54:46,480 --> 02:54:51,040
并获得推送标签

2119
02:54:51,040 --> 02:54:56,800
就是这样，现在您已经发布了适用于 ios 和 android 的应用程序，嗯

2120
02:54:56,800 --> 02:55:02,959
这可能是你将在 um 中学到的最后一件事

2121
02:55:02,959 --> 02:55:07,120
如果您是本课程的早期采用者之一

2122
02:55:07,120 --> 02:55:12,232
但我计划发布更多我要附加的视频

2123
02:55:12,232 --> 02:55:18,232
本课程包含更多材料，敬请期待，我实际上可能会在

2124
02:55:18,232 --> 02:55:22,959
下一章大家好，欢迎来到上一章

2125
02:55:22,959 --> 02:55:25,760
你一直在关注的章节

2126
02:55:25,760 --> 02:55:29,120
当然你知道我们已经创建了我们的应用程序并且我们也发布了它

2127
02:55:29,120 --> 02:55:32,800
到iOS的应用商店和谷歌的Play商店

2128
02:55:32,800 --> 02:55:37,120
使用 Play 商店控制台，现在您将

2129
02:55:37,120 --> 02:55:41,271
我的意思是任何应用程序或任何软件都不是你会做的事情，并且

2130
02:55:41,271 --> 02:55:45,192
它刚刚完成，每个应用程序都必须继续存在，你会在那里

2131
02:55:45,192 --> 02:55:50,552
向它添加新功能，然后你必须让它保持活力

2132
02:55:50,552 --> 02:55:53,591
就像我会继续这门课程一样，你也必须保持你的

2133
02:55:53,591 --> 02:55:56,872
应用程序活着所以你可能想要添加到你的东西之一

2134
02:55:56,872 --> 02:56:01,271
应用程序现在是本地化的

2135
02:56:01,271 --> 02:56:03,832
如果你不知道我的意思是如果你没有做过软件

2136
02:56:03,832 --> 02:56:07,040
在您可能不知道本地化是什么之前进行开发，但是

2137
02:56:07,040 --> 02:56:12,232
简而言之，本地化是您提出申请的过程

2138
02:56:12,232 --> 02:56:16,872
不同国家的其他人更容易接触到

2139
02:56:16,872 --> 02:56:21,360
比如你住的那个

2140
02:56:21,360 --> 02:56:24,872
到目前为止，我们一直在创建带有用户界面的应用程序

2141
02:56:24,872 --> 02:56:29,512
那主要是英语，但你甚至可能不是来自英国

2142
02:56:29,512 --> 02:56:34,400
可能不是来自澳大利亚或我们您可能只会说英语

2143
02:56:34,400 --> 02:56:39,120
嗯，例如我住在瑞典，所以我们开发的应用程序

2144
02:56:39,120 --> 02:56:43,360
现在在瑞典并不是每个人都能接触到的

2145
02:56:43,360 --> 02:56:47,680
尽管瑞典的大多数人英语说得非常流利，但事实并非如此

2146
02:56:47,680 --> 02:56:53,192
他们的母语，所以本地化是嗯制作的过程

2147
02:56:53,192 --> 02:56:56,000
您的应用程序更容易被那些不会说

2148
02:56:56,000 --> 02:56:59,192
您为用户界面设计的语言

2149
02:56:59,192 --> 02:57:04,000
不仅仅是语言和文本

2150
02:57:04,000 --> 02:57:07,512
你正在使用它还需要很多其他的

2151
02:57:07,512 --> 02:57:10,800
包括许多其他事情，例如您如何

2152
02:57:10,800 --> 02:57:14,720
在您的应用程序中显示货币和价值

2153
02:57:14,720 --> 02:57:18,319
现在我们没有像购物篮或任何我们没有电子商务的东西

2154
02:57:18,319 --> 02:57:22,232
应用程序以及我们迄今为止开发的，因此用户无需进行任何操作

2155
02:57:22,232 --> 02:57:26,000
在应用程序中购买，但是嗯

2156
02:57:26,000 --> 02:57:29,512
如果您正在开发用户可以购买的应用程序

2157
02:57:29,512 --> 02:57:32,480
那么你的购物篮需要的东西

2158
02:57:32,480 --> 02:57:37,271
实例显示数量 um for um like the product

2159
02:57:37,271 --> 02:57:41,360
那个人的价格

2160
02:57:41,360 --> 02:57:46,400
货币，例如，如果您要向瑞典的某个人展示用户界面

2161
02:57:46,400 --> 02:57:49,591
例如，该人不希望看到以美元为单位的价格

2162
02:57:49,591 --> 02:57:52,160
期望看到瑞典克朗的价格

2163
02:57:52,160 --> 02:57:56,872
嗯，或者如果你正在为某人做这个应用程序

2164
02:57:56,872 --> 02:58:01,192
英格兰你可能想用 gbp 做，这是伟大的

2165
02:58:01,192 --> 02:58:05,440
我认为英镑或只是英镑

2166
02:58:05,440 --> 02:58:10,080
本地化不仅仅是改变我们的应用程序的文本，而是

2167
02:58:10,080 --> 02:58:14,480
因为我们的应用程序没有任何我们没有展示的东西

2168
02:58:14,480 --> 02:58:17,360
例如在我们没有展示的那一刻的日期

2169
02:58:17,360 --> 02:58:22,400
任何类似的货币或价值对我们来说基本上只意味着

2170
02:58:22,400 --> 02:58:27,591
改变我们的应用程序的文本，所以我们将在这个

2171
02:58:27,591 --> 02:58:31,680
章节将本地化我们的应用程序

2172
02:58:31,680 --> 02:58:34,480
我们要用两种语言来做

2173
02:58:34,480 --> 02:58:37,591
到目前为止我们已经完成的英语，这是我们已经完成的文本

2174
02:58:37,591 --> 02:58:41,591
为应用程序的用户界面提供了这一点，我们也

2175
02:58:41,591 --> 02:58:44,959
要用瑞典语做，现在你不必懂瑞典语就可以了

2176
02:58:44,959 --> 02:58:48,160
看完这一章，我会帮你的，有一个 github

2177
02:58:48,160 --> 02:58:51,832
此项目的存储库，您可以复制和粘贴

2178
02:58:51,832 --> 02:58:56,319
例如瑞典语文本，您甚至不必在以下位置写瑞典语

2179
02:58:56,319 --> 02:58:59,360
所有你甚至不必跟着写我正在写的确切文本

2180
02:58:59,360 --> 02:59:03,040
例如在瑞典语中，你可以在里面放一些乱码，因为

2181
02:59:03,040 --> 02:59:05,760
你真正要做的就是理解什么的概念

2182
02:59:05,760 --> 02:59:08,872
本地化需要您的应用程序如何使用

2183
02:59:08,872 --> 02:59:11,440
颤振，然后当涉及到实际本地化你自己的

2184
02:59:11,440 --> 02:59:16,080
应用程序然后您可以例如选择 um bangladeshi 或者如果您想

2185
02:59:16,080 --> 02:59:21,440
例如，选择印度的任何语言，或者嗯，或者如果在巴基斯坦，或者

2186
02:59:21,440 --> 02:59:26,400
无论您选择哪种语言，基本上都可以使用

2187
02:59:26,400 --> 02:59:29,040
所以你不必真的懂瑞典语 这就是我的意思 这就是我要说的

2188
02:59:29,040 --> 02:59:32,000
但是你也可以在底部看到

2189
02:59:32,000 --> 02:59:35,512
屏幕本地化也可能适用于非传统语言

2190
02:59:35,512 --> 02:59:40,160
像波斯语或阿拉伯语一样左右，所以这些语言是写的

2191
02:59:40,160 --> 02:59:43,440
从右到左，所以需要一些特别的

2192
02:59:43,440 --> 02:59:47,911
如果您尝试支持，请考虑为您的 um 代码

2193
02:59:47,911 --> 02:59:51,760
从右到左的语言，例如 c 和 um

2194
02:59:51,760 --> 02:59:55,192
所以例如一个人的名字

2195
02:59:55,192 --> 02:59:59,440
例如，如果您要展示名人名单，您可能希望能够

2196
02:59:59,440 --> 03:00:02,480
例如用户可以阅读的人

2197
03:00:02,480 --> 03:00:06,319
关于这些名字可能不一定是

2198
03:00:06,319 --> 03:00:11,360
嗯，以阿拉伯名字出现，就像他们的拼写不一样

2199
03:00:11,360 --> 03:00:14,160
必须是阿拉伯语，也可以是英语，但

2200
03:00:14,160 --> 03:00:17,911
例如一个人的年龄，如果你说比尔盖茨，你可以

2201
03:00:17,911 --> 03:00:21,120
即使用户界面的语言是英文，也要用英文写名字

2202
03:00:21,120 --> 03:00:25,192
阿拉伯语，但如果您要介绍该人的年龄，则可能需要

2203
03:00:25,192 --> 03:00:30,872
被翻译成类似 um 理解的数值

2204
03:00:30,872 --> 03:00:34,959
谁会说那种语言，嗯

2205
03:00:34,959 --> 03:00:37,680
我想说的是，如果你试图支持从右到左

2206
03:00:37,680 --> 03:00:41,680
您可能需要考虑的语言

2207
03:00:41,680 --> 03:00:44,319
但在本章中，我们不会这样做，我们只是要

2208
03:00:44,319 --> 03:00:50,000
涵盖英语和瑞典语，这两种语言从左到右

2209
03:00:50,000 --> 03:00:53,040
现在让我们看一下文档，因为

2210
03:00:53,040 --> 03:00:58,959
混乱应用程序本地化的文档非常详尽

2211
03:00:58,959 --> 03:01:03,120
我强烈建议在看完本章并了解之后

2212
03:01:03,120 --> 03:01:07,512
从我的角度来看，我认为您实际上拥有一个

2213
03:01:07,512 --> 03:01:11,760
看看嗯官方变成文档我会的

2214
03:01:11,760 --> 03:01:18,000
尝试在这里打开一个标签，所以我会把它带到屏幕上，这样你就可以了

2215
03:01:18,000 --> 03:01:21,512
看到所以我会摆脱它

2216
03:01:21,512 --> 03:01:24,480
我会提出

2217
03:01:24,480 --> 03:01:28,872
屏幕有点像这样对不起，我必须重新安排一下，所以你看

2218
03:01:28,872 --> 03:01:34,000
屏幕更好，所以你可以在这里看到它的官方文档

2219
03:01:34,000 --> 03:01:38,639
无障碍本地化和国际化

2220
03:01:38,639 --> 03:01:40,400
和嗯

2221
03:01:40,400 --> 03:01:44,872
例如，在国际化过程中，您有时会看到一些术语

2222
03:01:44,872 --> 03:01:50,160
和本地化，您会看到一些术语，例如 i 18 n

2223
03:01:50,160 --> 03:01:56,800
有时你还会看到 l 10 n 你会想知道这些是什么

2224
03:01:56,800 --> 03:02:03,040
事情它甚至意味着什么 l 10 n 以及喜欢什么 i 18n 的原因

2225
03:02:03,040 --> 03:02:07,040
实际上意味着它是国际化

2226
03:02:07,040 --> 03:02:12,080
嗯，如果你看它国际化

2227
03:02:12,080 --> 03:02:16,400
如果我这样写亚洲人

2228
03:02:16,400 --> 03:02:21,440
然后如果你拿 1 2 3 4 5 6 7 8 9 10

2229
03:02:21,440 --> 03:02:26,959
一 二 三 四 五 六 七 八 所以 18 之间的字符总数

2230
03:02:26,959 --> 03:02:32,720
i 和 n 所以我们知道写 i 18 n 只是

2231
03:02:32,720 --> 03:02:37,271
提到国际化，同样的事情也适用于

2232
03:02:37,271 --> 03:02:41,512
本地化，因为让我们举出例如 Visual Studio 代码

2233
03:02:41,512 --> 03:02:45,440
也许我们实际上可以在 Visual Studio 代码中看到更好一点

2234
03:02:45,440 --> 03:02:48,959
嗯，如果我在这里提出来，我

2235
03:02:48,959 --> 03:02:54,680
增加字体的大小，如果我写输入

2236
03:02:54,680 --> 03:03:00,639
国有化的国际国际非线性

2237
03:03:00,639 --> 03:03:05,832
好的，然后写本地化，这样是一二三四五六七

2238
03:03:05,832 --> 03:03:12,000
八 九 十 一 二 三 四 五 六 七 八 所以 总共 18 如果

2239
03:03:12,000 --> 03:03:16,959
如果你数一二三四五，我们会​​查看 l 和 n 之间的本地化

2240
03:03:16,959 --> 03:03:22,040
六七八九十字所以很多人把这些东西称为

2241
03:03:22,040 --> 03:03:28,720
i18n 和 l10n i18n 基本上意味着国际化，而 l10n 意味着

2242
03:03:28,720 --> 03:03:32,720
本地化，所以现在你知道原因了，只是程序员而已

2243
03:03:32,720 --> 03:03:37,120
懒惰并试图尽可能地缩短一切，如果现在

2244
03:03:37,120 --> 03:03:41,360
您看到这两个术语，然后您就知道它们指的是什么

2245
03:03:41,360 --> 03:03:45,832
好吧，所以我一开始所说的基本上是为了取悦之后

2246
03:03:45,832 --> 03:03:50,000
观看此视频继续阅读官方文档，因为它是

2247
03:03:50,000 --> 03:03:53,680
非常重要 非常透彻 它谈论了我们甚至不知道的事情

2248
03:03:53,680 --> 03:03:57,271
在本章中讨论所以我

2249
03:03:57,271 --> 03:04:01,120
强烈建议您也阅读此文档

2250
03:04:01,120 --> 03:04:04,720
好的，就是这样，现在我们需要

2251
03:04:04,720 --> 03:04:09,440
做的就是基本上手了 um 国际化本地化

2252
03:04:09,440 --> 03:04:13,591
支持我们的颤振应用程序，所以我要带一个视觉工作室

2253
03:04:13,591 --> 03:04:18,552
代码在这里，可能会减小一点大小

2254
03:04:18,552 --> 03:04:22,160
我要改变屏幕布局，所以

2255
03:04:22,160 --> 03:04:25,192
嗯，这就是我们将应用程序留到这一点的方式，所以我们

2256
03:04:25,192 --> 03:04:28,160
需要做的是我要关闭所有标签然后我要按

2257
03:04:28,160 --> 03:04:33,040
例如，在 Visual Studio 中命令和命令 p 打开文件

2258
03:04:33,040 --> 03:04:37,911
然后我们将查看我们的 pop spec yaml 文件

2259
03:04:37,911 --> 03:04:42,800
如果你去那里，我们需要做的是向我们的

2260
03:04:42,800 --> 03:04:45,760
流行特别让我们在这里看看，你可以

2261
03:04:45,760 --> 03:04:49,120
看到，你可能真的想知道我为什么

2262
03:04:49,120 --> 03:04:52,872
我什至在说什么是颤振嗯

2263
03:04:52,872 --> 03:04:57,360
本地化，我没有弥补它基本上记录在这里

2264
03:04:57,360 --> 03:05:00,800
让我们看看它，因为你可以看到它说的第一件事

2265
03:05:00,800 --> 03:05:04,800
我们需要做的是转到我们的pop spec yaml文件并添加flutter

2266
03:05:04,800 --> 03:05:08,872
现在本地化这基本上对我们有什么作用

2267
03:05:08,872 --> 03:05:15,040
应用程序是它允许我们的应用程序

2268
03:05:15,040 --> 03:05:20,232
本地化，它还为我们的应用程序添加了类似自动生成的代码

2269
03:05:20,232 --> 03:05:23,911
你很快就会看到，所以有点难以解释

2270
03:05:23,911 --> 03:05:27,911
在你看到结果之前它到底做了什么所以我们需要做什么

2271
03:05:27,911 --> 03:05:32,800
现在只是在这里找到我们流行的斑点弹药的依赖项部分

2272
03:05:32,800 --> 03:05:37,040
我在这里找到了它，我们需要做的是你可以看到它说你只需要

2273
03:05:37,040 --> 03:05:40,872
添加颤振本地化，我将在颤振之后立即执行此操作

2274
03:05:40,872 --> 03:05:46,232
好的，还有一个专栏，然后我们要说 sdk flutter

2275
03:05:46,232 --> 03:05:50,639
好的，就是这样，这个应用程序目前没有运行

2276
03:05:50,639 --> 03:05:55,512
所以我要做的就是说 um select device 然后我要

2277
03:05:55,512 --> 03:06:00,872
使用我的安卓手机，你可以按照你知道的课程学习

2278
03:06:00,872 --> 03:06:04,800
我个人更喜欢拥有

2279
03:06:04,800 --> 03:06:10,720
真正的设备正在运行，所以现在我有 um scr cpy 我想在某个地方让我们看看

2280
03:06:10,720 --> 03:06:13,591
如果我们能把它提出来，让我们去终端

2281
03:06:13,591 --> 03:06:17,440
scr cpy 所以这是

2282
03:06:17,440 --> 03:06:21,680
我的安卓手机，然后在旁边我也有一个

2283
03:06:21,680 --> 03:06:26,319
实际的 iphone 在这里运行所以基本上有两个设备

2284
03:06:26,319 --> 03:06:30,800
已经安装了我们的应用程序，嗯，一个 iphone 和一个 android，我们就可以工作了

2285
03:06:30,800 --> 03:06:33,271
和他们两个 嗯

2286
03:06:33,271 --> 03:06:38,959
所以我们要做的是在安卓手机上运行我们的应用程序

2287
03:06:38,959 --> 03:06:42,400
例如我会说命令 shift p on uh when

2288
03:06:42,400 --> 03:06:47,360
在 Mac 上，然后在 Linux 机器或 Windows 上按 ctrl shift b，然后说选择

2289
03:06:47,360 --> 03:06:51,680
设备，我要选择这个 android 手机，然后我要去

2290
03:06:51,680 --> 03:06:57,680
主 dart 文件，然后只说运行而不进行调试，所以让它完成它的工作

2291
03:06:57,680 --> 03:07:00,959
我要稍微减小字体，因为它在

2292
03:07:00,959 --> 03:07:07,192
片刻之后，在此处添加流行斑点弹药之后，我们还需要

2293
03:07:07,192 --> 03:07:11,591
确保我们遵循如您在此处看到的那样，它说是的，您

2294
03:07:11,591 --> 03:07:14,959
必须做这些事情，我们会处理好

2295
03:07:14,959 --> 03:07:18,639
但我们还要做的是将这个国际化包添加到

2296
03:07:18,639 --> 03:07:22,720
我们的应用程序，所以让我从那里删除那个屏幕，确保我们的

2297
03:07:22,720 --> 03:07:26,480
android 应用程序正在运行，这是我离开应用程序的状态

2298
03:07:26,480 --> 03:07:31,120
我现在已经登录，所以我要做的就是注销

2299
03:07:31,120 --> 03:07:34,639
好吧，到目前为止，我们唯一真正做的就是添加

2300
03:07:34,639 --> 03:07:40,400
flutter 本地化 sdk true sorry sdk flutter here 那么我们需要做的是

2301
03:07:40,400 --> 03:07:46,000
将国际化包添加到我们的应用程序中，好吧，让我们开始吧

2302
03:07:46,000 --> 03:07:51,120
我将在 Visual Studio 代码中打开一个新终端并更改

2303
03:07:51,120 --> 03:07:54,400
布局一点，这样你就可以更好地看到它

2304
03:07:54,400 --> 03:07:58,872
让我们继续说flutter pop add intel好吗

2305
03:07:58,872 --> 03:08:04,080
你可以在 popdev 上阅读更多关于这个 intel 包的信息，例如，如果我们

2306
03:08:04,080 --> 03:08:09,760
去在这里创建一个新标签，我把它带到这里，我们只是说 puff.dev

2307
03:08:09,760 --> 03:08:14,319
让我把尺寸增加到更大一点

2308
03:08:14,319 --> 03:08:20,000
让我们说 intl 好吧，你可以看到这里是 intl 包

2309
03:08:20,000 --> 03:08:24,480
它来自 darkdev 所以它实际上是一个官方包，你可以包含

2310
03:08:24,480 --> 03:08:29,120
在您的应用程序中，并且有关于如何使用它的文档

2311
03:08:29,120 --> 03:08:33,512
所以你也可以看到你如何处理日期格式

2312
03:08:33,512 --> 03:08:38,080
不同的语言，所以现在我们已经添加了这个，如果我带来这个

2313
03:08:38,080 --> 03:08:41,360
像这样的屏幕，这样您就可以看到将该包添加到我们的

2314
03:08:41,360 --> 03:08:46,080
应用程序，我可以看到它说有依赖关系，所以

2315
03:08:46,080 --> 03:08:51,192
那是在英特尔说颤振流行的结果

2316
03:08:51,192 --> 03:08:54,480
我们需要做的另一件事是

2317
03:08:54,480 --> 03:08:59,360
如果我改变屏幕，请在我们的流行规范中颤抖

2318
03:08:59,360 --> 03:09:03,271
布局多一点，嗯，我们需要去，你可以在

2319
03:09:03,271 --> 03:09:07,512
屏幕底部我们需要在flutter部分下添加一个generate true

2320
03:09:07,512 --> 03:09:14,232
它就在这里，所以这会生成真的，我们就像这样添加它是嗯

2321
03:09:14,232 --> 03:09:17,911
基本上对于如何

2322
03:09:17,911 --> 03:09:23,360
代码生成会起作用，所以我基本上会在这里看看

2323
03:09:23,360 --> 03:09:28,959
在此处生成并添加空间可以，所以如果您在此处添加此生成 true 它

2324
03:09:28,959 --> 03:09:33,040
允许本地化包，并且喜欢本地化代码

2325
03:09:33,040 --> 03:09:38,552
在您的应用程序中运行以生成自动生成

2326
03:09:38,552 --> 03:09:44,319
我的意思是你很快就会看到的代码

2327
03:09:44,319 --> 03:09:53,360
Flutter 内部使用了一个文件，文件类型叫做 marb

2328
03:09:53,360 --> 03:09:57,271
这些 arb 文件有点像键值

2329
03:09:57,271 --> 03:10:03,911
文件，我的意思是有点像 json 并且在键中你指定了一些

2330
03:10:03,911 --> 03:10:07,192
例如你说登录屏幕标题的名字

2331
03:10:07,192 --> 03:10:12,000
然后该值将是您在该特定文件中翻译的实际值

2332
03:10:12,000 --> 03:10:14,872
语言，您将拥有多个这样的套利

2333
03:10:14,872 --> 03:10:18,400
文件，我想实际上我会

2334
03:10:18,400 --> 03:10:23,760
尽快解释一下 rb 但它代表应用程序资源包

2335
03:10:23,760 --> 03:10:26,639
但只要知道我的意思是我不想深入

2336
03:10:26,639 --> 03:10:29,760
现在关于 arb 文件的详细信息，因为有一个部分即将出现

2337
03:10:29,760 --> 03:10:33,360
我会在哪里解释，但你现在需要知道的是

2338
03:10:33,360 --> 03:10:38,639
在弹出特别允许的颤振部分下生成真正的标志

2339
03:10:38,639 --> 03:10:44,232
自动生成的代码基本上将自己挂钩到您的项目中，以及何时

2340
03:10:44,232 --> 03:10:49,040
您将新的键和值添加到您的 arb 文件中，您很快就会看到如何

2341
03:10:49,040 --> 03:10:53,680
然后向上然后代码生成将在您每次进行热重启时启动

2342
03:10:53,680 --> 03:10:58,000
或者你重新运行你的应用程序，它会通过你的 arb 文件和它

2343
03:10:58,000 --> 03:11:00,639
将生成密钥

2344
03:11:00,639 --> 03:11:04,872
里面就像一个飞镖你的源代码

2345
03:11:04,872 --> 03:11:08,080
这个飞镖源代码将是你可以从字面上导入的东西

2346
03:11:08,080 --> 03:11:12,319
进入你的应用程序，就像使用你添加到 json 中的键一样

2347
03:11:12,319 --> 03:11:16,800
你的应用程序中的 dart 代码，所以这很像

2348
03:11:16,800 --> 03:11:20,872
抽象的谈话，但你很快就会明白这些事情是如何运作的，所以不要

2349
03:11:20,872 --> 03:11:25,680
担心这个，所以我们现在需要做的是在我们完成之后

2350
03:11:25,680 --> 03:11:30,480
完成了所有这些工作，我们基本上需要将本地化支持添加到我们的

2351
03:11:30,480 --> 03:11:34,800
ios 应用程序，您现在可以在标题中的屏幕底部看到

2352
03:11:34,800 --> 03:11:40,552
当我们开始将本地化添加到我们的

2353
03:11:40,552 --> 03:11:43,832
应用程序 android 应用程序刚刚完全理解的新语言

2354
03:11:43,832 --> 03:11:48,319
好的，这是一种我可以处理的新语言，我会刷新我的

2355
03:11:48,319 --> 03:11:52,552
ui 以显示您输入的所有值，但 ios 有点

2356
03:11:52,552 --> 03:11:56,160
更老式的你必须帮助它了解这个应用程序

2357
03:11:56,160 --> 03:12:00,552
实际上支持各种语言所以我真的很高兴说你

2358
03:12:00,552 --> 03:12:04,080
不必为了通过这个特定的 xcode

2359
03:12:04,080 --> 03:12:07,360
本章的部分，但我们需要如您所见

2360
03:12:07,360 --> 03:12:12,552
屏幕底部，我们必须转到我们的 info plist 文件并更新一个特殊的

2361
03:12:12,552 --> 03:12:15,680
部分或创建一个称为核心基础包的特殊部分

2362
03:12:15,680 --> 03:12:21,512
本地化好的，所以让我们继续，现在就开始处理它，所以

2363
03:12:21,512 --> 03:12:24,639
我也会拿出我的笔记来确保我告诉你所有

2364
03:12:24,639 --> 03:12:30,160
我打算告诉你的一切，看看我能不能找到那个部分

2365
03:12:30,160 --> 03:12:32,639
好吧，我要在这里做什么

2366
03:12:32,639 --> 03:12:36,480
将关闭该文件我也将关闭主 dar 文件，然后我

2367
03:12:36,480 --> 03:12:40,720
将在 Visual Studio 代码中按命令 p，我将寻找一个

2368
03:12:40,720 --> 03:12:46,000
名为 info.plist 的文件应该在 ios 文件夹 slash runner 和

2369
03:12:46,000 --> 03:12:50,800
有一个 info p 列表，如果你想知道那是你

2370
03:12:50,800 --> 03:12:54,639
将能够例如去终端，我要清理

2371
03:12:54,639 --> 03:12:58,872
终端，我只想说打开你可以看到这是文件夹

2372
03:12:58,872 --> 03:13:03,192
如果我说开放的话，这整个课程源代码都是基于

2373
03:13:03,192 --> 03:13:06,480
好的，我们要开门了，你可以在这里看到

2374
03:13:06,480 --> 03:13:09,271
所以这是我们所在的源代码

2375
03:13:09,271 --> 03:13:12,400
目前，有一个名为 ios 的文件夹，其中有一个

2376
03:13:12,400 --> 03:13:16,872
名为 runner 的文件夹，其中有一个名为 info plist 的文件，所以

2377
03:13:16,872 --> 03:13:19,591
那就是我们必须打开的文件

2378
03:13:19,591 --> 03:13:22,480
现在好吧，所以我要再次说命令 p 并且

2379
03:13:22,480 --> 03:13:26,720
然后 info plist 让我们打开它，这些就像您所看到的键值

2380
03:13:26,720 --> 03:13:32,160
这是一个奇怪的像 p list 有点像 xml 格式的东西

2381
03:13:32,160 --> 03:13:36,872
但是你需要在这里寻找 cf bundle 本地化

2382
03:13:36,872 --> 03:13:40,552
如果您没有 cf bundle 本地化，那么您必须创建

2383
03:13:40,552 --> 03:13:45,120
就像在这里一样，所以只要你看到这个字典，让我们

2384
03:13:45,120 --> 03:13:48,959
继续创建一个新密钥，所以我们只说密钥，我们要说核心

2385
03:13:48,959 --> 03:13:53,040
基础捆绑本地化还可以

2386
03:13:53,040 --> 03:13:58,080
然后我们在此处结束密钥以及您必须执行的操作

2387
03:13:58,080 --> 03:14:02,480
这个键的不仅仅是一个字符串，它实际上是一个数组，一个数组的含义

2388
03:14:02,480 --> 03:14:06,872
那是事物的列表 它是语言的列表或

2389
03:14:06,872 --> 03:14:09,832
您的应用程序支持的本地化

2390
03:14:09,832 --> 03:14:14,232
当你看到这里的所有其他东西时，它们就像这些钥匙一样，然后

2391
03:14:14,232 --> 03:14:17,680
价值观，但对我们来说，我们必须做这样的事情，你看有一个

2392
03:14:17,680 --> 03:14:22,000
关键是 cf um 捆绑本地化和本地化

2393
03:14:22,000 --> 03:14:25,440
然后我们必须创建一个数组，所以让我们在这之后马上上去

2394
03:14:25,440 --> 03:14:28,639
数组，然后我们像关闭数组一样

2395
03:14:28,639 --> 03:14:32,080
你看到这也是他们在这里的做法

2396
03:14:32,080 --> 03:14:36,080
然后我们需要在这里添加两个字符串所以一个字符串我们关闭它

2397
03:14:36,080 --> 03:14:39,360
字符串和另一个好的，所以因为我们是

2398
03:14:39,360 --> 03:14:44,319
支持英语和瑞典语，所以你的数组列表中的每个字符串都会

2399
03:14:44,319 --> 03:14:47,512
嗯表明你的语言代码

2400
03:14:47,512 --> 03:14:51,832
应用程序支持好吧，所以首先我们要支持英语，然后我们

2401
03:14:51,832 --> 03:14:55,680
会甜蜜并支持瑞典语和瑞典语的语言代码是 suv 因为在

2402
03:14:55,680 --> 03:14:59,832
瑞典和瑞典本身，我们不称之为

2403
03:14:59,832 --> 03:15:05,192
国家瑞典，我们称之为 sevia，这就是 sv 的来源

2404
03:15:05,192 --> 03:15:10,552
from 但你也可以谷歌这个，你可以喜欢寻找本地化

2405
03:15:10,552 --> 03:15:15,120
国家代码，你会看到维基百科上的列表或告诉你的东西

2406
03:15:15,120 --> 03:15:19,271
正是你必须使用的东西，例如，如果你想写 um

2407
03:15:19,271 --> 03:15:24,480
印度或巴基斯坦的一种特殊语言，如乌尔都语或任何你必须要的语言

2408
03:15:24,480 --> 03:15:30,872
找到正确的语言代码，但是你可以很容易地用谷歌搜索，嗯

2409
03:15:30,872 --> 03:15:35,040
我不会在此展示所有这些语言代码语言代码

2410
03:15:35,040 --> 03:15:40,080
章，但我只是给你必要的工具，让你自己找出来

2411
03:15:40,080 --> 03:15:44,400
好的，这就是我们必须为 ios 应用程序做的所有事情，所以我们已经

2412
03:15:44,400 --> 03:15:49,440
在此处添加了 cf 捆绑包本地化，我们很高兴获得信息 p

2413
03:15:49,440 --> 03:15:53,760
列出然后我们需要在这里做的是我们

2414
03:15:53,760 --> 03:15:58,639
需要进入我们应用程序的根文件夹，然后我们需要添加一个

2415
03:15:58,639 --> 03:16:02,080
文件，你可以在屏幕底部看到名为 l10n 的文件，正如我告诉你的那样

2416
03:16:02,080 --> 03:16:07,192
这个 l10n 是一个它意味着一个本地化是 10

2417
03:16:07,192 --> 03:16:11,760
这意味着本地化中 l 和 n 之间有 10 个字母，所以让我们

2418
03:16:11,760 --> 03:16:16,800
在这里继续，我将在这里右键单击此文件夹，然后

2419
03:16:16,800 --> 03:16:20,160
实际上在这里然后让我们添加一个新文件并调用

2420
03:16:20,160 --> 03:16:23,192
它 lpn yamo 好吧

2421
03:16:23,192 --> 03:16:27,440
在这里然后我们必须写一些东西，我会带来官方

2422
03:16:27,440 --> 03:16:31,192
文档，因为它在这种情况下非常有用，所以让我们开始吧

2423
03:16:31,192 --> 03:16:35,440
查看文档我们必须在这个 ltn 文件中输入什么

2424
03:16:35,440 --> 03:16:41,360
让我们看看我们是否可以在某个地方找到它，它是一个 arb 文件，所以 l10n

2425
03:16:41,360 --> 03:16:45,271
它看起来像这样所以这就像我们的内容

2426
03:16:45,271 --> 03:16:51,040
需要放在我们的 l10 文件中，这样你就可以看到它说

2427
03:16:51,040 --> 03:16:55,832
arb 目录，它被称为 lib el tenen 好吧，我们很快就会有一个

2428
03:16:55,832 --> 03:17:00,232
看看这实际上意味着什么对不起

2429
03:17:00,232 --> 03:17:04,872
然后我们有一个叫做模板arb文件的东西，然后是一些东西

2430
03:17:04,872 --> 03:17:09,760
调用输出本地化文件好吧，嗯，我要向你解释什么

2431
03:17:09,760 --> 03:17:13,591
这就是这些实际上意味着什么

2432
03:17:13,591 --> 03:17:17,271
这个 arb 目录是什么意思

2433
03:17:17,271 --> 03:17:22,552
对您的指示，您正在告诉 um flutters 自动生成的本地化

2434
03:17:22,552 --> 03:17:25,512
引擎在哪里可以找到你的

2435
03:17:25,512 --> 03:17:28,800
文件在哪里可以找到您看到的本地化

2436
03:17:28,800 --> 03:17:32,400
当您为新语言创建本地化时，您必须创建一个

2437
03:17:32,400 --> 03:17:36,959
arb 文件，在这种情况下你基本上是在告诉飞镖或在这种情况下颤动

2438
03:17:36,959 --> 03:17:41,192
如果我要创建的这些 arb 文件将驻留在此

2439
03:17:41,192 --> 03:17:46,400
文件夹，所以如果你在这里查看 Visual Studio 代码，我们现在有一个来自所有文件夹

2440
03:17:46,400 --> 03:17:50,400
当我们基本上创建了名为 lib 的项目时，您可以在

2441
03:17:50,400 --> 03:17:53,040
在这里好吧

2442
03:17:53,040 --> 03:17:59,271
在这个库中，我们将创建一个文件夹，如此处所示

2443
03:17:59,271 --> 03:18:03,760
l10n 好吧，你实际上不必称它为 altenent，这就是为什么你有

2444
03:18:03,760 --> 03:18:08,800
此配置，因此您可以将其称为其他名称

2445
03:18:08,800 --> 03:18:13,760
本地化，如果你想或者我的字符串你想要的，它只是

2446
03:18:13,760 --> 03:18:17,512
颤动的迹象和您所在的本地化引擎

2447
03:18:17,512 --> 03:18:21,120
替换那些文件没问题，就是这样，这就是你说的

2448
03:18:21,120 --> 03:18:26,552
飞镖在哪里找到你的本地化信息然后在这里

2449
03:18:26,552 --> 03:18:31,680
模板 arv 文件是您所在目录中的一个文件

2450
03:18:31,680 --> 03:18:36,959
基本上选择作为应用程序的主要语言，例如

2451
03:18:36,959 --> 03:18:40,872
在瑞典语文件 arb 文件中找不到瑞典语的密钥，它会掉下来

2452
03:18:40,872 --> 03:18:46,000
回到英语，这就像为或设置

2453
03:18:46,000 --> 03:18:49,591
本地化应用程序的基础

2454
03:18:49,591 --> 03:18:53,271
您可以将其视为您的应用程序支持的默认语言

2455
03:18:53,271 --> 03:18:56,319
在我们的例子中，语言将是英语，所以我们将离开这个

2456
03:18:56,319 --> 03:19:02,959
此处指示的文件名 其他输出本地化文件

2457
03:19:02,959 --> 03:19:09,512
它是一个自动生成的文件，基本上是为你创建的，所以你会

2458
03:19:09,512 --> 03:19:14,959
很快就会看到自动生成非常特别，我的意思是它非常神奇

2459
03:19:14,959 --> 03:19:19,591
所以嗯，但你可以控制它，这就像其中之一

2460
03:19:19,591 --> 03:19:22,639
你可以控制你实际上可以控制自动生成的飞镖的位置

2461
03:19:22,639 --> 03:19:27,192
将生成代码，并且文件名是什么

2462
03:19:27,192 --> 03:19:30,639
它有点抽象，所以我不会过多介绍它，你会

2463
03:19:30,639 --> 03:19:34,480
很快就会看到我们如何配置它以及这实际上意味着什么所以我们需要什么

2464
03:19:34,480 --> 03:19:38,080
要在这个国际化文档中做，让我们复制这个

2465
03:19:38,080 --> 03:19:42,232
内容，然后我将进入这个 l10 和

2466
03:19:42,232 --> 03:19:46,720
我们创建的 yaml 文件，然后将其粘贴到那里就可以了

2467
03:19:46,720 --> 03:19:51,512
我们需要在这里做的我们将保留 arb 目录目录为

2468
03:19:51,512 --> 03:19:55,040
lib l10 因为那是有道理的

2469
03:19:55,040 --> 03:20:00,319
呃，但在这里应用程序而不是应用程序 ian 我只想说英特尔是的，它是

2470
03:20:00,319 --> 03:20:04,080
对我来说，使用它更有意义

2471
03:20:04,080 --> 03:20:10,720
intl 下划线 en 作为默认文件，所以我们要创建 intl en

2472
03:20:10,720 --> 03:20:15,832
然后 intl sv for swedish 好的，然后我们就

2473
03:20:15,832 --> 03:20:19,512
将保持原样，所以我只是将这个文件保存在那里

2474
03:20:19,512 --> 03:20:24,232
那么我们能做的就是做一个热重启

2475
03:20:24,232 --> 03:20:27,832
现在记住热重启是国际化的东西，它非常

2476
03:20:27,832 --> 03:20:32,872
重要的颤振，因为热重载不会触发你的自动生成

2477
03:20:32,872 --> 03:20:36,552
国际化代码意味着如果你有一些

2478
03:20:36,552 --> 03:20:40,639
如果您在 arb 文件中添加了一些新字符串，我们将讨论

2479
03:20:40,639 --> 03:20:46,160
很快，这些东西不会自动注入并生成到您的代码中

2480
03:20:46,160 --> 03:20:50,959
直到你做一个热重启热重载不会削减它所以你要么做一个

2481
03:20:50,959 --> 03:20:54,959
热重启或完全停止应用程序并从头开始构建它

2482
03:20:54,959 --> 03:20:59,440
这是一个巨大的开销，所以你可能不想这样做，但热重启是

2483
03:20:59,440 --> 03:21:05,591
是必要的，好吧，让我们现在看看

2484
03:21:05,591 --> 03:21:09,271
正如我之前提到的，什么是 arb 文件

2485
03:21:09,271 --> 03:21:14,000
arb 文件是应用程序资源包，它们几乎是 json

2486
03:21:14,000 --> 03:21:20,232
文件它们是那里的关键值，而您的密钥基本上是如何处理

2487
03:21:20,232 --> 03:21:24,080
您的应用程序然后进入您的本地化并获取例如

2488
03:21:24,080 --> 03:21:28,160
字符串和这些键的值是实际的字符串

2489
03:21:28,160 --> 03:21:32,872
显示在您的用户界面中，它们不仅仅是键值

2490
03:21:32,872 --> 03:21:36,800
因为您实际上可以将逻辑放在您的 arb 文件中，例如

2491
03:21:36,800 --> 03:21:40,552
你很快就会在这个屏幕里面看到让我把它调出来

2492
03:21:40,552 --> 03:21:45,832
scr cpy 如果您在此处使用有效用户登录

2493
03:21:45,832 --> 03:21:50,080
我认为我们有 foobarbas 作为我们的密码

2494
03:21:50,080 --> 03:21:52,959
嗯，在这个屏幕上，在屏幕顶部的那一刻，我们正在看到你的

2495
03:21:52,959 --> 03:21:56,319
注释，但我们在本章中要做的只是为了演示如何使用 arp

2496
03:21:56,319 --> 03:22:00,160
文件工作我们会说如果你有一张便条

2497
03:22:00,160 --> 03:22:05,360
它只是会写不，你有一个类似的笔记或

2498
03:22:05,360 --> 03:22:08,000
一张便条 如果你有不止一张便条

2499
03:22:08,000 --> 03:22:13,512
例如，如果你有三个音符，它会说三个音符

2500
03:22:13,512 --> 03:22:17,760
或者如果你的音符为零，根本没有音符，它会说

2501
03:22:17,760 --> 03:22:22,319
你没有笔记所以同名

2502
03:22:22,319 --> 03:22:26,480
这是屏幕顶部的标题，我们实际上可以将逻辑放入 arb

2503
03:22:26,480 --> 03:22:31,680
文件说嘿，这不是标题，但我想

2504
03:22:31,680 --> 03:22:36,232
如果这个特定的计数为零，就说这个

2505
03:22:36,232 --> 03:22:40,480
想说如果帐户是我要说的帐户，您没有笔记

2506
03:22:40,480 --> 03:22:45,440
你有一个音符，或者如果计数超过一个我想说你有

2507
03:22:45,440 --> 03:22:48,800
x 数量的音符并且 x 是实际的

2508
03:22:48,800 --> 03:22:53,591
我们将提供给它的数字，因此 rb 文件不仅仅是 json 它们

2509
03:22:53,591 --> 03:22:57,680
实际上可以在其中包含逻辑，并且它们就像您在底部看到的那样

2510
03:22:57,680 --> 03:23:02,552
它们代表应用程序资源包的屏幕

2511
03:23:02,552 --> 03:23:09,040
好的，现在我们需要做的是实际去创建这些 um 文件

2512
03:23:09,040 --> 03:23:15,040
所以让我们进入这个lib文件夹，让我们去创建我们的文件夹

2513
03:23:15,040 --> 03:23:19,911
我们在这个 l10 中提到过，你看我们说过在 lib 下我们要

2514
03:23:19,911 --> 03:23:25,832
有一个名为 l10n 的文件夹，在该 l10n 下我们将有一个名为 intl 的文件

2515
03:23:25,832 --> 03:23:30,959
en arb 好的，让我们继续看看我们是否可以让它在 lib 中工作，让我们

2516
03:23:30,959 --> 03:23:36,639
去说新文件然后我要说 l10n 斜线

2517
03:23:36,639 --> 03:23:40,720
intl en arb 你可以看到它创建了

2518
03:23:40,720 --> 03:23:46,720
文件夹以及 lib l10n 和 intl enarb，这就是我们所说的文件

2519
03:23:46,720 --> 03:23:50,000
在这里创建让我们继续说新文件

2520
03:23:50,000 --> 03:23:56,400
intl 然后我们会说 sv arv OK

2521
03:23:56,400 --> 03:24:01,192
正如我之前提到的，这些都是非常简单的 json，所以我们可以

2522
03:24:01,192 --> 03:24:04,959
只需在此处创建一个 json，然后先在英文中创建一个

2523
03:24:04,959 --> 03:24:08,639
就像这样，在这里我只想说我的头衔

2524
03:24:08,639 --> 03:24:15,040
然后我的标题的值就可以了，让我们复制并粘贴它

2525
03:24:15,040 --> 03:24:18,639
在瑞典语中也是如此，现在还可以

2526
03:24:18,639 --> 03:24:22,639
所以我只是要做一个热重启

2527
03:24:22,639 --> 03:24:28,639
好吧，自从我们添加了自动生成以来，这一切都做了什么

2528
03:24:28,639 --> 03:24:32,872
在我们的流行语弹药中，如果您还记得我们添加之前的内容，则生成 true

2529
03:24:32,872 --> 03:24:38,000
现在在这里你应该能够做的是看看结构

2530
03:24:38,000 --> 03:24:40,872
您的项目，现在突然之间您应该能够看到一个文件夹

2531
03:24:40,872 --> 03:24:44,872
称为 dot dart 工具，如果您向下钻取，您应该能够看到

2532
03:24:44,872 --> 03:24:48,639
一种叫做颤动生成的东西，如果你深入那里你会看到生成

2533
03:24:48,639 --> 03:24:55,040
l10n 在那里你会看到三个文件

2534
03:24:55,040 --> 03:25:01,040
sv 和应用程序 en 现在这个应用程序的本地化是什么，如果

2535
03:25:01,040 --> 03:25:08,080
你记得从我们的 um l10n 我们实际上告诉这一代人

2536
03:25:08,080 --> 03:25:12,720
生成生成的代码以命名为应用程序本地化，这就是

2537
03:25:12,720 --> 03:25:17,760
基本上就是我们说需要调用它的那个文件，所以我们

2538
03:25:17,760 --> 03:25:22,232
可以打开它，你会看到这里有一些信息

2539
03:25:22,232 --> 03:25:26,080
例如，有一个语言环境名称，然后有一些委托的东西和

2540
03:25:26,080 --> 03:25:30,959
我会解释所有这些，但你现在在这里看到的是我的

2541
03:25:30,959 --> 03:25:36,400
标题和是一个字符串，这正是我们在我的标题中写的

2542
03:25:36,400 --> 03:25:41,192
我的标题在这里，你可以看到然后如果你去

2543
03:25:41,192 --> 03:25:45,832
英文你的字符串在那里我的标题在这里

2544
03:25:45,832 --> 03:25:50,319
瑞典人也说我的头衔在这里所以不是所以不是

2545
03:25:50,319 --> 03:25:54,232
如此令人印象深刻，因为我们实际上选择在

2546
03:25:54,232 --> 03:25:59,271
英文版和瑞典文版，所以我们能做的就是去英文版

2547
03:25:59,271 --> 03:26:03,911
在这个英特尔 en arb 中，将 eng 放在末尾

2548
03:26:03,911 --> 03:26:09,040
去瑞典人那里说 swe like in sweden

2549
03:26:09,040 --> 03:26:15,271
好的，然后我现在保存这个文件，然后如果你进入这里，你会

2550
03:26:15,271 --> 03:26:18,872
看到什么都没有改变，这就是我的意思

2551
03:26:18,872 --> 03:26:23,911
重新加载不会削减它你必须做一个热重启，如果你做一个热重启

2552
03:26:23,911 --> 03:26:29,360
那么这段代码基本上应该会更新让我们继续看看它是否更新了

2553
03:26:29,360 --> 03:26:33,760
你可以看到这里是英文的，哎呀，我不是故意要改变它的，这里是

2554
03:26:33,760 --> 03:26:38,160
瑞典人，所以现在你知道这些东西到底是什么了

2555
03:26:38,160 --> 03:26:41,911
代表和

2556
03:26:41,911 --> 03:26:48,319
我们现在有了一个很好的立足点，因为我们创造了我们的

2557
03:26:48,319 --> 03:26:54,000
本地化 yaml 配置文件 我们有英文和瑞典文

2558
03:26:54,000 --> 03:26:58,872
如果您在这里查看 lib 中的本地化文件

2559
03:26:58,872 --> 03:27:05,360
ltn 和下面我们有 intel en 和 intel sv 这意味着 intel

2560
03:27:05,360 --> 03:27:09,120
国际化英语和国际化瑞典语

2561
03:27:09,120 --> 03:27:15,271
现在我们真正要做的就是基本上现在就开始

2562
03:27:15,271 --> 03:27:21,192
在我们的应用程序中填充这些 um 字符串和 um kind

2563
03:27:21,192 --> 03:27:24,080
抱歉在这些中填充它们

2564
03:27:24,080 --> 03:27:27,680
arb 文件，然后在我们的应用程序中的位置

2565
03:27:27,680 --> 03:27:33,192
文本硬编码然后我们将切换到使用这些

2566
03:27:33,192 --> 03:27:37,440
我们 l10n 文件中的字符串

2567
03:27:37,440 --> 03:27:42,800
为了让我们的应用程序真正理解什么

2568
03:27:42,800 --> 03:27:48,080
我们已经在我们的 arb 文件中进行了本地化，我们必须实际告诉

2569
03:27:48,080 --> 03:27:53,040
我们支持哪些语言环境的应用程序，以便

2570
03:27:53,040 --> 03:27:57,192
提到抱歉以解释我们必须回到主 dart 文件

2571
03:27:57,192 --> 03:27:59,680
所以让我们去主 dart 文件并有一个

2572
03:27:59,680 --> 03:28:03,591
看看我们是如何创建我们的应用程序的，你可以看到我们有这个

2573
03:28:03,591 --> 03:28:07,760
代码就在这里，目前说运行应用程序，然后我们正在创建一个

2574
03:28:07,760 --> 03:28:12,552
材料应用和有两个重要的特性

2575
03:28:12,552 --> 03:28:16,639
在创建我们迄今为止尚未使用的材料应用程序中，因为在

2576
03:28:16,639 --> 03:28:21,271
之前的章节到目前为止我们还没有对应用程序进行任何本地化

2577
03:28:21,271 --> 03:28:25,832
所以这两个属性是本地化委托和支持

2578
03:28:25,832 --> 03:28:29,512
语言环境，所以让我提出这个标题

2579
03:28:29,512 --> 03:28:34,872
嗯，flutter 本地化与 ios 应用程序通信的方式和

2580
03:28:34,872 --> 03:28:39,440
android 应用程序或例如 Web 应用程序或桌面，无论您是什么

2581
03:28:39,440 --> 03:28:44,552
在它上面运行更平坦需要告诉底层操作系统什么语言环境

2582
03:28:44,552 --> 03:28:48,639
它的支持基本上就是在告诉你

2583
03:28:48,639 --> 03:28:54,160
材料应用程序构建您的应用程序可以使用的语言

2584
03:28:54,160 --> 03:29:00,160
所以这是语言环境，所以你可以说瑞典语英语波斯语和阿拉伯语或

2585
03:29:00,160 --> 03:29:05,120
你有什么，所以这些是语言环境，但你也有这个概念

2586
03:29:05,120 --> 03:29:09,760
您现在看到的小部件的本地化，我们已经创建了一些

2587
03:29:09,760 --> 03:29:14,639
字符串，然后我们很快就会去把这些字符串放在我们的

2588
03:29:14,639 --> 03:29:18,959
ui 而且flutter本身也有各种本地化支持

2589
03:29:18,959 --> 03:29:22,800
语言有这么多的语言，目前支持和

2590
03:29:22,800 --> 03:29:27,760
它还可以在内部本地化自己的小部件，例如，如果您调出一个

2591
03:29:27,760 --> 03:29:31,911
日期选择器，例如在您的颤振应用程序中供用户选择日期

2592
03:29:31,911 --> 03:29:36,232
那天选择器本身可以根据系统的本地化

2593
03:29:36,232 --> 03:29:39,680
语言或您的应用程序的语言，所以如果您选择了阿拉伯语职业

2594
03:29:39,680 --> 03:29:43,040
应用程序语言与操作系统级别

2595
03:29:43,040 --> 03:29:46,639
然后，如果您调出日期选择器，那么该日期选择器将是

2596
03:29:46,639 --> 03:29:51,440
默认情况下由颤振团队本地化为该语言，所以

2597
03:29:51,440 --> 03:29:55,440
你需要告诉材料应用你的应用程序的语言环境

2598
03:29:55,440 --> 03:30:01,040
还支持它应该如何本地化例如内部小部件以及您的

2599
03:30:01,040 --> 03:30:05,591
自定义小部件，所以我们需要做的是真正去和

2600
03:30:05,591 --> 03:30:11,440
在这里添加这两个属性，我们要做的就是参考

2601
03:30:11,440 --> 03:30:15,440
这个应用程序本地化文件，所以如果你去飞镖工具，你可以看到有

2602
03:30:15,440 --> 03:30:19,832
这个应用程序本地化就在这里，你可以看到有一个流行语

2603
03:30:19,832 --> 03:30:24,480
ammo 然后这基本上是一个包所以它是一个包

2604
03:30:24,480 --> 03:30:28,720
为你创建你没有做任何事情它只是为你生成所以

2605
03:30:28,720 --> 03:30:33,911
我们如何继续并在我们的应用程序中导入它，那就是去

2606
03:30:33,911 --> 03:30:38,000
例如，你的主文件的顶部说导入，然后你说包

2607
03:30:38,000 --> 03:30:41,120
然后在这里我们只说flutter underscore gen

2608
03:30:41,120 --> 03:30:45,512
这就像为您生成的代码，然后是 gen l10n 并在那里

2609
03:30:45,512 --> 03:30:48,552
你会看到有应用程序的暗文件所以我需要

2610
03:30:48,552 --> 03:30:52,480
请继续将此文件导入您的

2611
03:30:52,480 --> 03:30:56,552
完成后我们需要去的主要 dart 文件

2612
03:30:56,552 --> 03:31:01,512
材料应用程序，在我们做任何其他事情之前，我们首先要说

2613
03:31:01,512 --> 03:31:06,552
支持的语言环境这是一个属性，它允许我们告诉颤振哪个

2614
03:31:06,552 --> 03:31:11,192
我们的应用程序现在支持的了望台您可能想知道好吧什么数据

2615
03:31:11,192 --> 03:31:15,271
键入 this 这实际上是一个列表，因为您可以看到它是一个可迭代的语言环境

2616
03:31:15,271 --> 03:31:19,040
有些人会错误地创建自定义帐户列表

2617
03:31:19,040 --> 03:31:22,480
然后把它放在这里，但你不必这样做，我实际上建议

2618
03:31:22,480 --> 03:31:26,000
即使可以，你也不会那样做，因为如果你进入这个

2619
03:31:26,000 --> 03:31:30,552
应用程序启动文件，你在这里看到了一些东西

2620
03:31:30,552 --> 03:31:33,760
它是为您调用支持的语言环境而创建的

2621
03:31:33,760 --> 03:31:37,192
因此它已经了解您的应用程序支持的语言环境

2622
03:31:37,192 --> 03:31:42,080
在你提供给 um flutter gen 的 arb 文件上，所以

2623
03:31:42,080 --> 03:31:47,680
请不要在你的主 dart 文件中创建相同的列表，这里是什么

2624
03:31:47,680 --> 03:31:51,040
你需要做的只是说应用

2625
03:31:51,040 --> 03:31:56,080
然后你就说支持的语言环境好了，这样就可以使用你的 arb

2626
03:31:56,080 --> 03:32:01,360
文件就像指南一样让我们快速查看 lib ltn 和 ar b 它只知道

2627
03:32:01,360 --> 03:32:04,480
你现在支持英语和瑞典语好吧

2628
03:32:04,480 --> 03:32:07,512
所以这是我们必须做的第一件事 我们必须做的另一件事

2629
03:32:07,512 --> 03:32:12,959
在这里只是说它被称为本地化代表

2630
03:32:12,959 --> 03:32:16,720
你可以看到它说这个应用程序本地化小部件的代表

2631
03:32:16,720 --> 03:32:20,480
这基本上是你告诉颤振嘿我的一种方式

2632
03:32:20,480 --> 03:32:24,319
支持例如瑞典语和英语请本地化您自己的小部件

2633
03:32:24,319 --> 03:32:28,160
所以在这里你不必创建自定义委托，因为它们也是

2634
03:32:28,160 --> 03:32:32,480
在您的应用程序中提供，因此如果您进入那里，您会看到

2635
03:32:32,480 --> 03:32:38,080
这里的东西本地化代表好吧

2636
03:32:38,080 --> 03:32:43,271
我们现在需要做的就是说应用

2637
03:32:43,271 --> 03:32:47,680
本地化应用程序本地化

2638
03:32:47,680 --> 03:32:52,319
然后本地化代表，然后提供，我要做一个

2639
03:32:52,319 --> 03:32:56,639
热重启只是因为我们更改了应用程序中的 main 函数，并且

2640
03:32:56,639 --> 03:33:01,192
在您进行热重启之前，这些更改不会生效

2641
03:33:01,192 --> 03:33:05,120
我们现在能做的就是继续测试这些变化

2642
03:33:05,120 --> 03:33:09,120
嗯，真正很棒的实际上是

2643
03:33:09,120 --> 03:33:14,400
如果你能提取出我们在 intel en arb 中写的那个小标题

2644
03:33:14,400 --> 03:33:18,160
并将其放在某种小部件上的某个位置，以查看它是否正在工作

2645
03:33:18,160 --> 03:33:21,680
英语和瑞典语所以我要做的是我要带上 scr cpy

2646
03:33:21,680 --> 03:33:24,720
屏幕就在这里，你现在可以看到

2647
03:33:24,720 --> 03:33:29,680
我们在登录页面，所以让我们去登录页面，你不必做

2648
03:33:29,680 --> 03:33:34,552
所以我自己做这个只是为了展示一些东西，而

2649
03:33:34,552 --> 03:33:39,512
我们在登录页面，让我们也清理这两个未使用的导入，好吧

2650
03:33:39,512 --> 03:33:44,000
让我们在这里进入我们的代码登录，你可以看到有一个缺点

2651
03:33:44,000 --> 03:33:49,120
文本登录，但在这里我们想使用该标题，您不必再次使用

2652
03:33:49,120 --> 03:33:52,639
这样做，我实际上建议你不要这样做，这只是为了我演示

2653
03:33:52,639 --> 03:33:57,360
你，嘿，它按预期工作，好吧，所以请继续看看

2654
03:33:57,360 --> 03:34:00,720
这部分不必自己做，所以我们需要在这里做

2655
03:34:00,720 --> 03:34:03,760
让我们去导入相同的本地化，所以我只想说

2656
03:34:03,760 --> 03:34:06,400
导入包

2657
03:34:06,400 --> 03:34:11,192
然后我们有颤振锁定它叫什么让我们去主飞镖

2658
03:34:11,192 --> 03:34:15,192
文件并准确复制并粘贴该颤振生成器，我会带上它

2659
03:34:15,192 --> 03:34:19,192
进入登录视图 dot dart 我要把它粘贴在那里，所以我们也有

2660
03:34:19,192 --> 03:34:24,000
访问我们的本地化和获取本地化的方法就是这样

2661
03:34:24,000 --> 03:34:27,911
代码所以如果我写这个例如就在这里我要删除

2662
03:34:27,911 --> 03:34:31,760
实际上让缺点在那里我只是想让你看看为什么我们必须删除 const

2663
03:34:31,760 --> 03:34:36,232
在未来，这样我们就能够抓住这个字符串，这是我的标题

2664
03:34:36,232 --> 03:34:40,319
我们的登录视图我们不得不说应用本地化

2665
03:34:40,319 --> 03:34:44,872
上下文，然后我们可以说出我的标题和

2666
03:34:44,872 --> 03:34:50,080
然后我们必须明确地打开 wrapless 好的，所以这就是你如何抓取

2667
03:34:50,080 --> 03:34:54,959
你的本地化支持的本地化基本上是那些

2668
03:34:54,959 --> 03:34:58,400
你放在你的arv文件中好吗

2669
03:34:58,400 --> 03:35:02,480
所以现在我们有了我的头衔，在这里你可以看到

2670
03:35:02,480 --> 03:35:06,872
它说嘿，不能分配 null 类型的值，所以

2671
03:35:06,872 --> 03:35:11,512
基本上这是在这里设置常量的问题，因为在前面

2672
03:35:11,512 --> 03:35:14,872
我的意思是到目前为止，我们创建应用栏的方式是我们所说的

2673
03:35:14,872 --> 03:35:19,120
那是一个常量字符串它是一个常量文本，表示登录但现在

2674
03:35:19,120 --> 03:35:22,480
突然间我们说我​​们正在从我们的

2675
03:35:22,480 --> 03:35:26,720
不幸的是，这些属性不是应用程序

2676
03:35:26,720 --> 03:35:30,000
定义为常量，所以如果你进入这里，你可以

2677
03:35:30,000 --> 03:35:33,512
看到它只是一个字符串吸气剂，这就是你在这里不能有缺点的原因

2678
03:35:33,512 --> 03:35:36,319
所以我只是要消除它的缺点，它会很开心而且

2679
03:35:36,319 --> 03:35:40,000
我们在这里有这个感叹号的原因是应用程序本地化已关闭

2680
03:35:40,000 --> 03:35:44,639
函数，你可以看到它返回一个可选的应用程序它有点

2681
03:35:44,639 --> 03:35:48,000
不幸的是，我真的不喜欢我们必须继续的语法

2682
03:35:48,000 --> 03:35:51,120
上下文的应用和

2683
03:35:51,120 --> 03:35:55,192
嗯，这里有一个感叹号，我们是

2684
03:35:55,192 --> 03:35:59,192
实际上会在这次演示之后马上解决这个问题，因为

2685
03:35:59,192 --> 03:36:02,720
这是你很快就会看到的

2686
03:36:02,720 --> 03:36:06,552
不得不总是说上下文感叹的应用，这很烦人

2687
03:36:06,552 --> 03:36:10,872
标记点，然后是您的财产的名称，但请稍等，我们会解决这个问题

2688
03:36:10,872 --> 03:36:15,591
很快，现在我们在这里登录，我将进行热重启

2689
03:36:15,591 --> 03:36:20,319
让我们看看我们得到了什么我将带来 scrcpy 现在你可以看到我看到了

2690
03:36:20,319 --> 03:36:25,760
我的标题是瑞典语，这就是我们放入的标题

2691
03:36:25,760 --> 03:36:28,480
情报

2692
03:36:28,480 --> 03:36:33,680
瑞典语，你看就在这里，好吧，所以我们有那个英语的让我带来

2693
03:36:33,680 --> 03:36:37,440
瑞典语旁边的英语​​也是这样

2694
03:36:37,440 --> 03:36:40,000
所以我们这里有英文版和瑞典文版，你可以在

2695
03:36:40,000 --> 03:36:43,192
那一刻我们看到了瑞典语和实际改变语言的方式

2696
03:36:43,192 --> 03:36:47,911
你的 um 手机在 android 上与 ios 有点不同所以我在这里

2697
03:36:47,911 --> 03:36:52,080
要去安装尼娜，这就是设置和

2698
03:36:52,080 --> 03:36:58,232
在这里，我相信它在系统中的某个地方，我相信

2699
03:36:58,232 --> 03:37:01,680
然后是spirowak，意思是语言，然后我要去语言和

2700
03:37:01,680 --> 03:37:07,120
目前这里的spirowak是瑞典语，我只想把英语放在首位

2701
03:37:07,120 --> 03:37:11,360
你现在可以看到英语在最前面所以让我们回到我们的应用程序看看

2702
03:37:11,360 --> 03:37:14,720
如果它的标题要改变，现在你突然发现它是

2703
03:37:14,720 --> 03:37:20,480
显示英文标题，所以它在我的 android 上运行得非常好

2704
03:37:20,480 --> 03:37:25,440
将摆脱屏幕上的 scr cpy 并调出

2705
03:37:25,440 --> 03:37:30,639
一个我用 um 创建的 ios 设备

2706
03:37:30,639 --> 03:37:35,591
所以这是一个 iphone 12 pro 就在我的桌子上，我有

2707
03:37:35,591 --> 03:37:41,040
quicktime 在这里镜像那个 iphone 屏幕，所以让我们继续前进

2708
03:37:41,040 --> 03:37:45,512
在这里停止 android 上的进程，然后在 macintosh 上命令 shift b 到

2709
03:37:45,512 --> 03:37:48,480
选择设备或控件应该在 windows 和 linux 上，然后说选择

2710
03:37:48,480 --> 03:37:53,271
设备，然后我会选择那个 iphone 12 pro，然后我会去

2711
03:37:53,271 --> 03:37:56,800
主 dart 文件，因为这就是我们应该运行应用程序的方式，因为如果

2712
03:37:56,800 --> 03:37:59,680
当您在此文件上时尝试运行应用程序

2713
03:37:59,680 --> 03:38:04,400
给你一个错误，告诉你嘿我不知道如何运行 arb 文件所以

2714
03:38:04,400 --> 03:38:08,232
这就是你总是必须去一个飞镖文件的原因

2715
03:38:08,232 --> 03:38:11,911
在您的应用程序中，以便 Visual Studio 代码至少知道如何运行

2716
03:38:11,911 --> 03:38:14,639
你的申请

2717
03:38:14,639 --> 03:38:19,680
现在让我们提起嗯我们的嗯

2718
03:38:19,680 --> 03:38:24,959
quicktime 在这里，让我们基本上等待这个正在运行的 xcode 构建过程

2719
03:38:24,959 --> 03:38:27,360
完成，正如我之前提到的有时

2720
03:38:27,360 --> 03:38:32,232
xcode 实际上可能比使用 gradle 构建要慢得多，所以

2721
03:38:32,232 --> 03:38:37,120
这很烦人，所以我会在这里等到这个过程完成

2722
03:38:37,120 --> 03:38:41,271
完成让我们看看需要多长时间哦，它正在安装，所以我不

2723
03:38:41,271 --> 03:38:45,440
实际上必须做任何事情，所以安装和启动它说

2724
03:38:45,440 --> 03:38:48,872
时刻，让我们准备好

2725
03:38:48,872 --> 03:38:52,319
让我们看看这需要多长时间，我现在可以看到它将安装

2726
03:38:52,319 --> 03:38:55,440
应用程序在这里我们应该看到一些进展

2727
03:38:55,440 --> 03:39:02,000
在我的笔记上

2728
03:39:02,000 --> 03:39:06,080
好吧，现在它正在启动应用程序和

2729
03:39:06,080 --> 03:39:12,160
我们可以看到，目前用户和面孔是英语，嗯，所以我要

2730
03:39:12,160 --> 03:39:15,832
关闭此小部件，然后将 Visual Studio 代码带到此处

2731
03:39:15,832 --> 03:39:20,800
好吧，太棒了，所以不幸的是镜像

2732
03:39:20,800 --> 03:39:25,512
一个 iphone 一个真正的 iphone 在你的电脑屏幕上用 quicktime 是不会的

2733
03:39:25,512 --> 03:39:30,639
让您完全可以与该 iphone 进行交互，并且 scr cpy 在

2734
03:39:30,639 --> 03:39:34,720
它与 adb 连接，并且在低级别它允许您与

2735
03:39:34,720 --> 03:39:37,512
屏幕但是同样的事情不是真的

2736
03:39:37,512 --> 03:39:41,192
你正在镜像一个 iphone 屏幕，所以现在我必须去与

2737
03:39:41,192 --> 03:39:46,872
这个手机是手工的，所以我要抓住这个手机

2738
03:39:46,872 --> 03:39:52,080
就在这里，我不知道电缆是否足够长，我可以给你看

2739
03:39:52,080 --> 03:39:58,319
所以这是电话，我要去然后去系统

2740
03:39:58,319 --> 03:40:03,271
设置就在这里，然后我要去一般

2741
03:40:03,271 --> 03:40:07,360
嗯，然后让我们去语言和地区

2742
03:40:07,360 --> 03:40:11,832
在那里我要在这里选择瑞典语

2743
03:40:11,832 --> 03:40:15,192
在 ios 中有点令人失望的是

2744
03:40:15,192 --> 03:40:18,872
您为系统选择的语言适用于整个系统，并且当您这样做时

2745
03:40:18,872 --> 03:40:24,319
它将杀死所有正在运行的应用程序，因为 ios 应用程序

2746
03:40:24,319 --> 03:40:27,680
没有可能即时更改他们的语言

2747
03:40:27,680 --> 03:40:31,192
像android这样的东西在这方面做得很好

2748
03:40:31,192 --> 03:40:34,720
您可以更改整个系统的语言，无需重新启动

2749
03:40:34,720 --> 03:40:38,720
应用程序继续运行您甚至可以看到我们何时更改了语言

2750
03:40:38,720 --> 03:40:43,832
嗯，我们不能，我们基本上没有看到应用程序

2751
03:40:43,832 --> 03:40:49,360
终止或任何事情，所以我们现在需要做的是确保

2752
03:40:49,360 --> 03:40:53,192
我们不会更改整个系统的语言，而是我将向您展示

2753
03:40:53,192 --> 03:40:58,000
您可以选择在 ios 中执行的仅更改您的应用程序的方式

2754
03:40:58,000 --> 03:41:02,552
语言所以让我们回到这里，让我们去找到我们的应用程序

2755
03:41:02,552 --> 03:41:07,120
被称为我的笔记，我相信在某个地方，让我们看看你能不能找到它，

2756
03:41:07,120 --> 03:41:10,639
我的笔记就在那儿，现在你可以看到在

2757
03:41:10,639 --> 03:41:13,680
屏幕底部显示语言，然后我将点击它并

2758
03:41:13,680 --> 03:41:17,360
那么我会选择瑞典语以及你看到这两个的原因

2759
03:41:17,360 --> 03:41:22,080
这里的选项是因为我们在信息 p 列表中所做的更改所以如果我说主要

2760
03:41:22,080 --> 03:41:25,440
抱歉信息 p 列表我们可以看到我们说的是英语和

2761
03:41:25,440 --> 03:41:29,271
瑞典语按这个顺序，这就是为什么它们也显示在这里

2762
03:41:29,271 --> 03:41:33,271
订购所以我要然后选择瑞典语，一旦我这样做你就会

2763
03:41:33,271 --> 03:41:38,080
在这里看到我们的应用程序将终止，因为 ios 无法处理

2764
03:41:38,080 --> 03:41:41,271
所以我们去应用程序的

2765
03:41:41,271 --> 03:41:44,639
现在完全终止了，但没关系，所以我要回去了

2766
03:41:44,639 --> 03:41:48,639
在这里然后在ios上打开应用程序哦现在我们也必须调试它

2767
03:41:48,639 --> 03:41:51,911
好的，因为我们处于调试模式，所以让我们继续主暗文件和

2768
03:41:51,911 --> 03:41:56,232
然后再次运行应用程序，你可以看到它在 ios 14 plus 中显示

2769
03:41:56,232 --> 03:41:59,832
调试模式更扁平的应用程序只能从颤振工具 id 启动

2770
03:41:59,832 --> 03:42:04,872
颤振插件或来自xcode所以这有点不幸

2771
03:42:04,872 --> 03:42:08,720
嗯，因为那时你必须基本上运行

2772
03:42:08,720 --> 03:42:10,720
你的构建

2773
03:42:10,720 --> 03:42:14,800
在你测试的时候一遍又一遍，这是另一个

2774
03:42:14,800 --> 03:42:19,271
我想说这也是在 ios 上运行应用程序的缺点之一

2775
03:42:19,271 --> 03:42:23,192
好像有很多东西我觉得 android 领先于 ios

2776
03:42:23,192 --> 03:42:27,512
我想说的是，它只是 android 对开发人员更友好一点

2777
03:42:27,512 --> 03:42:31,120
整个操作系统的工具有点

2778
03:42:31,120 --> 03:42:35,760
更友好一点，所以让我们看看，嗯，我现在可以在底部看到

2779
03:42:35,760 --> 03:42:40,319
屏幕显示正在安装和启动，所以现在让我们在这里看看我们的用户

2780
03:42:40,319 --> 03:42:47,680
如果一切顺利，界面当然应该是瑞典语

2781
03:42:47,680 --> 03:42:50,720
如果事情进展顺利，那么在 ios 上我们

2782
03:42:50,720 --> 03:42:54,552
不必一遍又一遍地做这个过程，所以它只是为了

2783
03:42:54,552 --> 03:42:58,080
确保它是第一次工作，正如您在更改后现在所看到的那样

2784
03:42:58,080 --> 03:43:02,400
我们应用到瑞典语的语言现在我们可以看到瑞典语的标题

2785
03:43:02,400 --> 03:43:05,760
显示在顶部，所以我要关闭小部件

2786
03:43:05,760 --> 03:43:09,760
检查员就在那里，我要停止这个过程

2787
03:43:09,760 --> 03:43:14,552
我要摆脱这个，现在我们应该只专注于

2788
03:43:14,552 --> 03:43:18,400
部署在 android 上，因为它更容易

2789
03:43:18,400 --> 03:43:22,872
所以让我们做一个更快的选择然后我会说我选择

2790
03:43:22,872 --> 03:43:28,160
在我的 android 设备上运行我的应用程序，然后我要收起我的 iphone

2791
03:43:28,160 --> 03:43:32,080
太好了，这就是那个和那个

2792
03:43:32,080 --> 03:43:37,360
我们现在需要谈论的是这个应用程序本地化的可选性，所以

2793
03:43:37,360 --> 03:43:40,832
如果您返回我们的登录视图，您会看到

2794
03:43:40,832 --> 03:43:44,800
上下文的应用是一个可选值，因为这个函数

2795
03:43:44,800 --> 03:43:48,959
返回一个可选的应用程序本地化，并且有一种方法可以使它更好

2796
03:43:48,959 --> 03:43:53,512
这是我最喜欢的方式之一，就像我们可以编写的最短扩展

2797
03:43:53,512 --> 03:43:58,080
在我们扑朔迷离的职业发展中，但它是最强大的

2798
03:43:58,080 --> 03:44:02,000
您很快就会看到，为了不必重复此代码

2799
03:44:02,000 --> 03:44:07,040
我们可以做的是在构建上下文上创建一个扩展来抓取

2800
03:44:07,040 --> 03:44:12,440
它的应用并将其作为非可选值返回，所以这里我们有

2801
03:44:12,440 --> 03:44:17,040
通过传递上下文返回的应用程序，但我们是什么

2802
03:44:17,040 --> 03:44:23,040
要做的就是从上下文本身抓取应用程序好吧

2803
03:44:23,040 --> 03:44:28,160
所以让我们来看看我们如何才能真正做到这一点

2804
03:44:28,160 --> 03:44:31,760
为了开始，让我们留下这段代码，因为它就在那里，我们没有

2805
03:44:31,760 --> 03:44:35,360
做任何特别的事情，但我们要做的就是如你所见

2806
03:44:35,360 --> 03:44:38,800
屏幕底部我们必须去并在 lib 下创建一个新文件

2807
03:44:38,800 --> 03:44:42,319
扩展，然后我们将创建一个新文件夹，也称为 build

2808
03:44:42,319 --> 03:44:47,192
上下文锁定点 dart 和锁定，如我们将要在这个文件中的本地化

2809
03:44:47,192 --> 03:44:51,832
在构建联系人上创建我们的扩展，使我们能够

2810
03:44:51,832 --> 03:44:56,400
将我们的本地化返回给调用者

2811
03:44:56,400 --> 03:45:00,959
所以让我们继续做吧，我会在这里然后去lib

2812
03:45:00,959 --> 03:45:04,872
我们有 um 作为屏幕底部的底部表示我们已经扩展

2813
03:45:04,872 --> 03:45:09,832
有扩展文件夹，但我们只有列表文件夹和过滤器

2814
03:45:09,832 --> 03:45:14,000
文件所以在扩展我只是要右键单击并说新文件然后让我们

2815
03:45:14,000 --> 03:45:19,271
继续创建构建上下文斜线锁飞镖好吧

2816
03:45:19,271 --> 03:45:22,480
在这里我们要做的是说

2817
03:45:22,480 --> 03:45:26,639
嗯导入我们的颤振

2818
03:45:26,639 --> 03:45:30,552
像我们在其他地方所做的那样，很抱歉在 gen 之后打包

2819
03:45:30,552 --> 03:45:36,080
然后 gen l10n 应用开始好了

2820
03:45:36,080 --> 03:45:42,080
所以这是第一次导入，在这里我们不需要几个符号或

2821
03:45:42,080 --> 03:45:44,959
实际上是应用程序的一个符号，但我们将讨论

2822
03:45:44,959 --> 03:45:49,192
很快，所以让我们继续说扩展名，我们会说

2823
03:45:49,192 --> 03:45:54,400
构建上下文的本地化，你会看到它说我还必须导入这个

2824
03:45:54,400 --> 03:45:57,832
因为它在材料中所以我会说继续导入它

2825
03:45:57,832 --> 03:46:01,680
我真的不喜欢你跟着这门课我不喜欢

2826
03:46:01,680 --> 03:46:06,400
喜欢导入材料中的所有内容，例如我只需要构建上下文

2827
03:46:06,400 --> 03:46:09,760
需要构建上下文，所以我不会导入所有内容，所以让我们继续吧

2828
03:46:09,760 --> 03:46:14,480
并说显示构建上下文，这只会带来构建上下文

2829
03:46:14,480 --> 03:46:16,959
这个语境

2830
03:46:16,959 --> 03:46:19,591
所以我们需要在这里做什么

2831
03:46:19,591 --> 03:46:26,832
基本上创建一个返回应用程序本地化的getter

2832
03:46:26,832 --> 03:46:30,800
applocalizations 我们会说这是一个getter，它被称为lock

2833
03:46:30,800 --> 03:46:34,720
它所做的是返回应用程序

2834
03:46:34,720 --> 03:46:36,552
这个的

2835
03:46:36,552 --> 03:46:41,192
它在它的末尾放了一个感叹号，所以

2836
03:46:41,192 --> 03:46:45,512
而且您还会看到我们已将应用程序作为一个整体导入，但我们只需要

2837
03:46:45,512 --> 03:46:50,400
来自该文件的应用程序本地化，所以我只想说显示这个没问题

2838
03:46:50,400 --> 03:46:55,911
所以这就是那个文件现在它已经创建了，虽然这一切都在发生，但我会

2839
03:46:55,911 --> 03:47:01,040
选择它，我也会说运行，因为拥有

2840
03:47:01,040 --> 03:47:04,872
应用程序在我们进行热重启和热重载时运行，所以我们可以看到

2841
03:47:04,872 --> 03:47:08,639
屏幕上的结果，所以现在有了这个扩展，你很快就可以了

2842
03:47:08,639 --> 03:47:11,680
说构建上下文点

2843
03:47:11,680 --> 03:47:16,959
然后你可以得到你的本地化所以让我们现在回到这个登录视图

2844
03:47:16,959 --> 03:47:21,271
如您所见，我们在这里写的是目前的这种语法，但是您

2845
03:47:21,271 --> 03:47:26,000
如果我们删除它并且我们只是说上下文，可以用 is 替换语法

2846
03:47:26,000 --> 03:47:30,720
这是我们的构建上下文，然后你说点锁，你会在这里看到它说

2847
03:47:30,720 --> 03:47:34,000
哦，我不知道什么是锁，这是正确的，它不知道什么是锁

2848
03:47:34,000 --> 03:47:36,720
因为我们还没有导入那个扩展

2849
03:47:36,720 --> 03:47:39,832
抱歉，我将关闭开关检查器

2850
03:47:39,832 --> 03:47:43,040
所以它不知道那是什么所以我只想说命令点它是

2851
03:47:43,040 --> 03:47:48,232
为我自动导入它很棒，现在我们可以说出我的标题

2852
03:47:48,232 --> 03:47:52,552
我的意思是告诉我这不是更好这对我来说好 100 倍就像如果你

2853
03:47:52,552 --> 03:47:57,512
将此与我们之前的进行比较，我的意思是来吧

2854
03:47:57,512 --> 03:48:02,800
它要短很多很多都是一样的，我个人认为是这样

2855
03:48:02,800 --> 03:48:07,271
更好的代码所以让我回去好吧让我们离开

2856
03:48:07,271 --> 03:48:12,080
这个暂时在这里好吧只是我的标题让我们把它留在那里，让我们去我们的

2857
03:48:12,080 --> 03:48:15,591
这里是 scrcpy 的 android 应用程序，我们可以看到它正在显示

2858
03:48:15,591 --> 03:48:19,512
正确的标题，所以如果我也进行热重启，它仍然可以工作

2859
03:48:19,512 --> 03:48:24,080
并显示来自我们 um 的字符串

2860
03:48:24,080 --> 03:48:29,192
现在我们已经完成了从我们的 arb 文件中

2861
03:48:29,192 --> 03:48:34,872
我们实际上必须谈论好的，我们将如何进行

2862
03:48:34,872 --> 03:48:39,512
很好地本地化事物这是您看到的重要部分

2863
03:48:39,512 --> 03:48:44,480
本地化在很多地方都是一项非常无聊的工作，你必须

2864
03:48:44,480 --> 03:48:48,720
从字面上看，如果你是我的意思是如果你这样做很无聊

2865
03:48:48,720 --> 03:48:52,232
我们在本章中这样做的方式，你必须去收集所有

2866
03:48:52,232 --> 03:48:55,360
这些字符串对不起，然后你必须去

2867
03:48:55,360 --> 03:48:59,120
将它们放在您的 arb 文件中，然后您还必须将它们放在

2868
03:48:59,120 --> 03:49:02,400
瑞典阿拉伯文件，然后你必须做翻译

2869
03:49:02,400 --> 03:49:05,360
等等，所以你必须为所有这些创建密钥

2870
03:49:05,360 --> 03:49:09,760
这是一项相当无聊的工作，我们不会做

2871
03:49:09,760 --> 03:49:13,440
本章是因为我已经为你准备好了所有这些，所以你不要

2872
03:49:13,440 --> 03:49:16,639
必须自己去写

2873
03:49:16,639 --> 03:49:20,872
我要在这里做的是我要真的去把所有这些

2874
03:49:20,872 --> 03:49:25,120
我为你准备的琴弦，让我看看能不能找到

2875
03:49:25,120 --> 03:49:28,480
在en rb的某个地方

2876
03:49:28,480 --> 03:49:32,639
好吧，我在这里找到了他们，然后我要做的是

2877
03:49:32,639 --> 03:49:37,192
将所有这些字符串带上并放置它们

2878
03:49:37,192 --> 03:49:42,800
在我们的 intel en arabi 文件中，所以您现在可以在这里看到

2879
03:49:42,800 --> 03:49:47,360
我们有我的头衔，我将把我的头衔留在那里，因为我们是

2880
03:49:47,360 --> 03:49:51,680
现在使用它，但我们将不得不尽快将其删除

2881
03:49:51,680 --> 03:49:56,639
我要粘贴我为我们准备的所有这些字符串

2882
03:49:56,639 --> 03:50:02,000
我们现在所有这些都在这里，并且有一个 github 存储库用于这个呃

2883
03:50:02,000 --> 03:50:06,080
当然，对于这个呃课程，你可以去

2884
03:50:06,080 --> 03:50:08,232
本章完成了你可以去那个

2885
03:50:08,232 --> 03:50:11,512
github 存储库并检索所有这些字符串，因此您不必键入它们

2886
03:50:11,512 --> 03:50:16,800
手工制作，所以没什么特别的

2887
03:50:16,800 --> 03:50:20,720
正如你所看到的，我们只有一个注销按钮，上面写着 log

2888
03:50:20,720 --> 03:50:26,232
我们有一个取消按钮，我们有验证电子邮件，这是什么

2889
03:50:26,232 --> 03:50:29,591
我们在验证电子邮件屏幕中使用的例如我们有注册

2890
03:50:29,591 --> 03:50:33,512
按钮我们有重启按钮让我们看看在哪里使用重启

2891
03:50:33,512 --> 03:50:38,000
这是我相信哦重启我相信它在里面

2892
03:50:38,000 --> 03:50:42,160
验证电子邮件屏幕，所以如果我创建了例如 um

2893
03:50:42,160 --> 03:50:46,720
如果我对 a b gmail foo bar 说像素，然后我说

2894
03:50:46,720 --> 03:50:51,680
嗯哦抱歉注册屏幕所以让我们说像素

2895
03:50:51,680 --> 03:50:56,720
gmail.com foo barbaz 我要注册这个用户然后我们要进入

2896
03:50:56,720 --> 03:51:00,959
这个屏幕现在说重启，这就是这个键重启好了

2897
03:51:00,959 --> 03:51:06,080
所以我真的浏览了我们所有的屏幕，我们所有的对话以及

2898
03:51:06,080 --> 03:51:09,911
收集所有这些字符串并将它们放在这里

2899
03:51:09,911 --> 03:51:14,232
国际化 enarb 文件，我也做过同样的事情

2900
03:51:14,232 --> 03:51:18,959
瑞典语，所以我要去带那些文件，对不起，带上那些钥匙

2901
03:51:18,959 --> 03:51:23,440
在这里，我已经完成了瑞典语的翻译，我不是我的母语

2902
03:51:23,440 --> 03:51:28,000
不是瑞典人，但我在瑞典生活了很长时间，所以我不能

2903
03:51:28,000 --> 03:51:32,319
说一点瑞典语其实够我能说够了

2904
03:51:32,319 --> 03:51:35,680
我要把这些字符串粘贴到这里的字符串中，你可以看到它们是

2905
03:51:35,680 --> 03:51:39,760
完全是瑞典语，好吧，所以我所做的实际上是我们有英语

2906
03:51:39,760 --> 03:51:44,160
你可以在这里看到的，我们有瑞典的，所以它的钥匙是一样的，但是

2907
03:51:44,160 --> 03:51:47,591
不同的价值观，别担心，我明白如果

2908
03:51:47,591 --> 03:51:50,639
你在看这门课你就像哦，但我怎么能得到所有这些

2909
03:51:50,639 --> 03:51:54,400
请转到 github 存储库，您可以提取这些值

2910
03:51:54,400 --> 03:51:57,591
不必手动输入

2911
03:51:57,591 --> 03:52:02,480
你应该很高兴所以现在我们有这些以便我们的

2912
03:52:02,480 --> 03:52:06,639
在这些黑暗的工具文件中生成的本地化让我们去

2913
03:52:06,639 --> 03:52:09,680
flutter jan 看看这个 gen 10 l

2914
03:52:09,680 --> 03:52:15,120
gen l10n 你可以看到这些字符串现在不在这里，因为只有

2915
03:52:15,120 --> 03:52:20,720
我的标题应该在这里某处让我们看看你能不能找到它

2916
03:52:20,720 --> 03:52:25,360
让我们看看语言环境应该重新加载你看到的我的标题

2917
03:52:25,360 --> 03:52:30,319
这里没有其他内容，但如果我们热重启所有这些字符串

2918
03:52:30,319 --> 03:52:34,232
应该生成然后我们应该把它们都在这里你可以看到登录

2919
03:52:34,232 --> 03:52:37,591
验证电子邮件所有这些都在这里提供好吗

2920
03:52:37,591 --> 03:52:40,720
所以这就是那部分所以现在我们拥有我们所有的

2921
03:52:40,720 --> 03:52:45,512
字符串，我们应该能够做编码部分，这是有趣的部分，所以

2922
03:52:45,512 --> 03:52:49,680
让我们继续处理，我将关闭所有这些文件

2923
03:52:49,680 --> 03:52:54,232
目前在那里，所以我们有一个干净的名单可以使用

2924
03:52:54,232 --> 03:52:59,271
我们要做的第一件事就是本地化我们的 um 它叫什么

2925
03:52:59,271 --> 03:53:03,760
不能分享空笔记对话所以让我们继续在那里然后我

2926
03:53:03,760 --> 03:53:08,080
要说命令 shift p 和 go to cannot share empty now 对话框

2927
03:53:08,080 --> 03:53:12,080
如果您还记得如果您是如果用户正在尝试共享拨号共享注释

2928
03:53:12,080 --> 03:53:17,680
它的内容是空的，所以在这种情况下共享我们有一个密钥

2929
03:53:17,680 --> 03:53:21,360
为此，我们只需要说 context.lock

2930
03:53:21,360 --> 03:53:24,720
记住这个锁是我们的扩展

2931
03:53:24,720 --> 03:53:28,160
除非我们导入它，否则我们无法访问它，所以我只是要去

2932
03:53:28,160 --> 03:53:31,120
在 Visual Studio 代码中说命令点，它还将导入该文件

2933
03:53:31,120 --> 03:53:34,080
如你所见，对我来说就在这里

2934
03:53:34,080 --> 03:53:37,360
现在我们可以访问我们所有的字符串了，所以我们在这里

2935
03:53:37,360 --> 03:53:41,040
说分享是我创造的钥匙，记住所有

2936
03:53:41,040 --> 03:53:45,680
这些密钥在 arb 文件中，您不能共享空注释，因此

2937
03:53:45,680 --> 03:53:51,512
我们要说 context.log 不能共享空节点提示

2938
03:53:51,512 --> 03:53:55,760
这又是一个关键，我已经打过电话了，我们也有

2939
03:53:55,760 --> 03:53:58,160
好的对

2940
03:53:58,160 --> 03:54:02,400
好的，现在我们已经本地化了我们的节目

2941
03:54:02,400 --> 03:54:07,271
不能分享空笔记对话框太棒了

2942
03:54:07,271 --> 03:54:11,440
所以让我们继续本地化我们的删除对话，所以我

2943
03:54:11,440 --> 03:54:14,959
要说 mac 或 control 上的 command shift p visual studio code 应该是

2944
03:54:14,959 --> 03:54:19,911
通常是 Windows 和 linux 的代码，比如删除对话框

2945
03:54:19,911 --> 03:54:25,360
在这里，我们有这个嗯，小呃标题，所以让我们

2946
03:54:25,360 --> 03:54:29,680
说嗯上下文点锁定并记住我们在一个我们无权访问的新文件中

2947
03:54:29,680 --> 03:54:34,000
记录让我们自动导入它，在这里我只想说删除

2948
03:54:34,000 --> 03:54:38,000
那并提示我们要说上下文

2949
03:54:38,000 --> 03:54:44,400
解锁和删除节点提示取消上下文点日志取消

2950
03:54:44,400 --> 03:54:50,232
在这里 context.lock 是好的还是好的，所以让我们说好的

2951
03:54:50,232 --> 03:54:55,120
所以这也是这个文件的本地化，我要说命令命令

2952
03:54:55,120 --> 03:54:59,832
s 或者只是热重启整个事情可能会更好，我可以看到一个 crcy

2953
03:54:59,832 --> 03:55:03,120
不幸地坠毁了，这就是我在使用这个 cr cpy 时遇到的问题

2954
03:55:03,120 --> 03:55:06,720
很长一段时间没关系这是一个开源软件我只想说

2955
03:55:06,720 --> 03:55:10,160
选择设备和这个，我要运行

2956
03:55:10,160 --> 03:55:13,271
应用程序，所以我们让它在后台运行

2957
03:55:13,271 --> 03:55:17,832
太棒了，这就是删除对话框，我现在

2958
03:55:17,832 --> 03:55:20,232
必须在屏幕底部捕捉，以防我们不得不去

2959
03:55:20,232 --> 03:55:24,480
本地化我们应用程序中的几乎所有内容，现在

2960
03:55:24,480 --> 03:55:29,512
下一步是本地化错误对话框，让我们说错误对话框

2961
03:55:29,512 --> 03:55:34,160
在这里，你可以看到它说发生了错误，我们已经调用了

2962
03:55:34,160 --> 03:55:38,552
如果您看这里，我们的 arb 文件中会出现一般错误提示

2963
03:55:38,552 --> 03:55:42,720
一般错误进展和错误发生正常

2964
03:55:42,720 --> 03:55:48,552
所以让我们继续在这里使用它，所以我只想说 context.lock

2965
03:55:48,552 --> 03:55:52,639
自动导入我不必再解释了，然后我们说一般错误

2966
03:55:52,639 --> 03:55:56,872
提示我们也有一个好的所以上下文锁定

2967
03:55:56,872 --> 03:56:01,591
好的，这也完成了

2968
03:56:01,591 --> 03:56:06,480
然后我们必须去本地化我们的注销对话框所以让我们去注销对话框

2969
03:56:06,480 --> 03:56:10,480
并在此处注销对话框

2970
03:56:10,480 --> 03:56:14,639
我们将在这里做同样的事情所以让我们继续说

2971
03:56:14,639 --> 03:56:19,040
我们将在这里使用注销按钮，您会看到我们已经注销

2972
03:56:19,040 --> 03:56:23,591
很少有地方像你记得在主应用程序界面中

2973
03:56:23,591 --> 03:56:27,680
以实际用户登录，我将引入 crcpy，这样你就知道我在做什么

2974
03:56:27,680 --> 03:56:31,832
谈论如果我说如果你看这个屏幕

2975
03:56:31,832 --> 03:56:37,591
重新启动，如果我用用户登录，我说 van.mp gmail.com

2976
03:56:37,591 --> 03:56:40,552
富巴作为

2977
03:56:40,552 --> 03:56:44,160
当您使用实际用户登录时，您将在此处登录并退出

2978
03:56:44,160 --> 03:56:47,832
它说注销，同时当您点击它时，就会出现这个

2979
03:56:47,832 --> 03:56:52,160
显示注销的对话框，因此我们可以在这里选择您去定义

2980
03:56:52,160 --> 03:56:57,271
在您的 arb 文件中使用不同的键注销两个字符串，或者您只需定义一个

2981
03:56:57,271 --> 03:57:01,120
这正是我所做的，所以我们在这里，我只想说

2982
03:57:01,120 --> 03:57:06,872
context.lock 是如何导入的，在这里我们只说 log

2983
03:57:06,872 --> 03:57:11,271
退出按钮没问题，它说退出按钮我明白

2984
03:57:11,271 --> 03:57:14,400
这是对话的标题，我们正在调用注销按钮，您可能只是

2985
03:57:14,400 --> 03:57:18,720
如果您愿意，请继续将此键注销，我将调用该日志

2986
03:57:18,720 --> 03:57:24,080
注销按钮记住这些只是您可以轻松更改它们的键

2987
03:57:24,080 --> 03:57:29,591
现在这就是我们的标题，然后是我们要说的内容

2988
03:57:29,591 --> 03:57:34,552
上下文日志注销和对话框提示，我们有一个

2989
03:57:34,552 --> 03:57:39,440
取消按钮在这里，让我们说让我们说上下文日志取消

2990
03:57:39,440 --> 03:57:43,591
再次，我们有另一个注销按钮，您可以在此处看到，因此请在此处注销 注销

2991
03:57:43,591 --> 03:57:48,000
在这里然后在这里注销，所以有三个地方使用相同的东西或

2992
03:57:48,000 --> 03:57:52,639
相同的字符串上下文日志，然后我们要说注销

2993
03:57:52,639 --> 03:57:56,400
按钮没问题

2994
03:57:56,400 --> 03:58:00,400
所以那太好了，所以这也是那部分，我只是要对 hot 执行命令

2995
03:58:00,400 --> 03:58:03,120
重新加载

2996
03:58:03,120 --> 03:58:05,760
接下来我们必须在屏幕底部做的事情

2997
03:58:05,760 --> 03:58:10,319
标题我们必须去本地化我们的密码重置对话所以我要去

2998
03:58:10,319 --> 03:58:15,512
在此处删除注销对话框并关闭选项卡，让我们去密码重置

2999
03:58:15,512 --> 03:58:20,480
电子邮件发送对话框，在这里我们有这个密码重置

3000
03:58:20,480 --> 03:58:25,271
我也要去我的笔记，所以让我们在这里看看标题和

3001
15:56:50,543 --> 15:56:54,631
说上下文块自动导入

3002
15:56:54,631 --> 15:56:58,783
我们将把它称为密码重置它是我定义的密钥之一

3003
15:56:58,783 --> 15:57:03,432
在这里我们要说上下文锁定密码重置对话框提示好的

3004
15:57:03,432 --> 15:57:07,823
我们有一个 ok 按钮，所以你现在我们有一个 ok 键

3005
15:57:07,823 --> 15:57:12,072
在我们的 arb 文件中

3006
15:57:12,072 --> 15:57:16,543
所以现在我们基本上已经完成了，呃本地化显示密码最近

3007
15:57:16,543 --> 15:57:22,391
对话 uh uh show password reset 发送对话

3008
15:57:22,391 --> 15:57:28,864
好的，下一个 uh 对话框是 um forgot password so let's go to

3009
15:57:28,864 --> 15:57:31,752
那个屏幕，对不起，这不是对话

3010
15:57:31,752 --> 15:57:36,312
实际上是一个视图所以我们要去忘记密码视图

3011
15:57:36,312 --> 15:57:40,144
在这里我的意思是当涉及到视图时，我们的工作有点困难

3012
15:57:40,144 --> 15:57:43,671
因为到目前为止，我们几乎无处不在

3013
15:57:43,671 --> 15:57:47,911
使用常量，例如，如果您查看 this is a constant string here's a constant

3014
15:57:47,911 --> 15:57:51,671
这里的文字是不变的，所以到处都是

3015
15:57:51,671 --> 15:57:56,543
我们将本地化我们的字符串，并且在我们必须使用 const 之前

3016
15:57:56,543 --> 15:58:00,783
现在消除这个缺点，因为我们在 arv 基金中的本地化属性

3017
15:58:00,783 --> 15:58:05,991
不幸的是没有被定义为 const 我真的不知道原因

3018
15:58:05,991 --> 15:58:08,543
背后可能只是因为有

3019
15:58:08,543 --> 15:58:12,543
吸气剂，也许吸气剂不能保持不变，或者有一些

3020
15:58:12,543 --> 15:58:18,464
这一代人的其他问题也许是颤振团队决定的

3021
15:58:18,464 --> 15:58:22,072
好吧，这些不可能是常数，但这就是我们所拥有的事实

3022
15:58:22,072 --> 15:58:26,711
活在当下，所以让我们继续寻找我们所有的字符串

3023
15:58:26,711 --> 15:58:31,504
在我获得密码视图之前，我们将开始一次本地化它们

3024
15:58:31,504 --> 15:58:36,631
所以在这个显示错误对话框中，我称这个键忘记密码

3025
15:58:36,631 --> 15:58:41,183
查看一般错误，所以让我们删除这个字符串，然后说

3026
15:58:41,183 --> 15:58:45,103
上下文锁定让我们自动导入日志

3027
15:58:45,103 --> 15:58:50,543
我们说忘记密码

3028
15:58:50,543 --> 15:58:54,312
查看一般错误，我将在末尾添加一个逗号，以便格式化

3029
15:58:54,312 --> 15:58:59,103
很好，让我们看看这个忘记密码的标题本身，所以我要

3030
15:58:59,103 --> 15:59:01,991
删除 const 记住我刚刚解释过，所以我们要说

3031
15:59:01,991 --> 15:59:06,312
上下文日志，我们会说忘记密码，这是我定义的密钥

3032
15:59:06,312 --> 15:59:10,631
你也可以在这里看到它的描述，你可以看到它说忘记了

3033
15:59:10,631 --> 15:59:14,312
密码好的英文这条消息翻译成

3034
15:59:14,312 --> 15:59:19,592
忘记密码了，所以这个东西我叫它忘记了

3035
15:59:19,592 --> 15:59:24,631
密码查看提示，所以让我们删除 const 删除字符串本身，我们

3036
15:59:24,631 --> 15:59:27,183
要说

3037
15:59:27,183 --> 15:59:32,543
上下文日志忘记密码提示忘记密码查看提示并放一个

3038
15:59:32,543 --> 15:59:35,823
最后的逗号，让我们尽可能地看一下文档

3039
15:59:35,823 --> 15:59:38,631
看到它说如果您忘记了密码，只需输入您的电子邮件，我们将发送

3040
15:59:38,631 --> 15:59:42,864
你一个密码最近的链接好的，所以这是一回事，然后在你的

3041
15:59:42,864 --> 15:59:46,631
电子邮件地址，它说输入修饰您的电子邮件

3042
15:59:46,631 --> 15:59:49,752
地址，因为那是一个忘记密码的屏幕，让我们去这里看看

3043
15:59:49,752 --> 15:59:55,103
看看这里的样子我忘记了密码所以就是这样

3044
15:59:55,103 --> 15:59:57,911
很少输入装饰所以

3045
15:59:57,911 --> 16:00:02,312
我可以看到我将其称为电子邮件文本字段占位符，所以让我们删除它

3046
16:00:02,312 --> 16:00:07,504
const 在这里我们将说上下文日志电子邮件占位符文本字段

3047
16:00:07,504 --> 16:00:10,631
好吧，让我们继续看看这个

3048
16:00:10,631 --> 16:00:15,991
一个所以让我们删除它说向我发送密码最近链接的const，我可以

3049
16:00:15,991 --> 16:00:23,032
看到我已经调用了忘记密码视图给我发送链接所以

3050
16:00:23,032 --> 16:00:29,823
上帝密码的上下文日志忘记在这里给我发送链接并在

3051
16:00:29,823 --> 16:00:34,072
结束，所以飞镖格式化程序忙于格式化代码和

3052
16:00:34,072 --> 16:00:38,312
在这里回到登录视图我可以看到我称之为忘记了

3053
16:00:38,312 --> 16:00:43,183
密码视图回到登录所以上下文

3054
16:00:43,183 --> 16:00:46,631
这里上下文锁忘记了

3055
16:00:46,631 --> 16:00:50,864
好的，所以这是一种你也可以使用的技术，比如 if

3056
16:00:50,864 --> 16:00:53,823
你想得到像这样一个名字很长的属性，你想要

3057
16:00:53,823 --> 16:00:58,312
要立即获得正确的名称，您只需编写几个关键字即可

3058
16:00:58,312 --> 16:01:02,543
例如名字我知道对于上帝和背部是非常独特的名字所以如果我

3059
16:01:02,543 --> 16:01:06,543
说忘了它会告诉我的

3060
16:01:06,543 --> 16:01:10,711
它的智能中具有类似部分搜索的功能，非常非常

3061
16:01:10,711 --> 16:01:14,631
有用的接下来我们要做的就是

3062
16:01:14,631 --> 16:01:18,631
继续本地化我们的登录视图，所以我要关闭屏幕忘记了

3063
16:01:18,631 --> 16:01:22,951
密码视图并转到登录视图登录视图就在这里，我们将

3064
16:01:22,951 --> 16:01:25,752
从屏幕顶部的底部开始，然后

3065
16:01:25,752 --> 16:01:29,752
我们将在登录视图中删除这个未使用的导入

3066
16:01:29,752 --> 16:01:34,783
让我们继续，从呃本地化我们的对话框开始，所以第一个

3067
16:01:34,783 --> 16:01:38,312
找不到具有输入凭据的用户，我称它不能

3068
16:01:38,312 --> 16:01:41,592
查找用户或登录视图找不到用户所以我

3069
16:01:41,592 --> 16:01:48,231
只是说 context.log 让我们自动导入日志

3070
16:01:48,231 --> 16:01:52,711
或者它已经被导入了，这很好，我们就说它被称为

3071
16:01:52,711 --> 16:01:57,103
登录错误 找不到用户 找不到用户 正常

3072
16:01:57,103 --> 16:02:00,631
下一个我要在这里放一些逗号让暗格式化程序去做

3073
16:02:00,631 --> 16:02:04,072
它的工作正确，我要按命令来保存文件，那就是

3074
16:02:04,072 --> 16:02:07,823
将为我格式化文件以获得错误的凭据我称之为登录

3075
16:02:07,823 --> 16:02:13,752
错误的凭据，因此上下文日志和错误的凭据

3076
16:02:13,752 --> 16:02:17,911
下一个是身份验证错误，我们称之为登录错误作者，所以

3077
16:02:17,911 --> 16:02:24,951
上下文锁定作者好的，所以现在也是登录顶部的那个

3078
16:02:24,951 --> 16:02:27,911
登录视图我们有这个小文字说请按顺序登录您的帐户

3079
16:02:27,911 --> 16:02:32,312
互动并创建笔记，我可以看到这个

3080
16:02:32,312 --> 16:02:37,103
我刚刚调用了登录视图提示，但我想知道是什么

3081
16:02:37,103 --> 16:02:41,991
正如你所看到的，我们的标题发生了，现在我们有了这个我的标题

3082
16:02:41,991 --> 16:02:45,351
登录视图现在是真正去摆脱它的好时机，好吧，所以我要走了

3083
16:02:45,351 --> 16:02:48,864
打开嗯英特尔

3084
16:02:48,864 --> 16:02:52,783
e 和 arb 我要杀了这基本上是我的

3085
16:02:52,783 --> 16:02:59,032
标题，我建议你也去瑞典文件，它是 intel sv 和

3086
16:02:59,032 --> 16:03:03,032
也杀了这个标题好吧，所以我们已经删除了它，我要摆脱它

3087
16:03:03,032 --> 16:03:06,864
然后我要热重启以便代码生成

3088
16:03:06,864 --> 16:03:11,823
开始了，正如你在这里看到的那样，我的头衔不再有效，在这我

3089
16:03:11,823 --> 16:03:15,752
如果您可以查看文档，则表示此标题现在称为登录

3090
16:03:15,752 --> 16:03:19,823
在这里你可以看到英文它只是说登录太棒了

3091
16:03:19,823 --> 16:03:24,711
所以让我们也从提示中删除这个常量，我们就开始吧

3092
16:03:24,711 --> 16:03:29,752
说上下文锁定，让我们说登录提示，所以我要做一个提示

3093
16:03:29,752 --> 16:03:34,951
好的，所以输入电子邮件

3094
16:03:34,951 --> 16:03:39,271
文本字段占位符在此处输入您的电子邮件我们将删除 const

3095
16:03:39,271 --> 16:03:45,183
让我们说上下文锁定，我们会说电子邮件占位符

3096
16:03:45,183 --> 16:03:48,231
好的，我们也有输入您的密码

3097
16:03:48,231 --> 16:03:52,072
这里占位符所以让我们删除这里的缺点我只想说上下文

3098
16:03:52,072 --> 16:03:55,671
锁定密码

3099
16:03:55,671 --> 16:04:00,312
占位符 好的 密码字段 密码文本字段 占位符是完整的

3100
16:04:00,312 --> 16:04:05,271
名字，我们在这里登录，所以

3101
16:04:05,271 --> 16:04:09,351
我们需要做的只是改变这个文本，所以让我们删除

3102
16:04:09,351 --> 16:04:14,631
内容在这里我只想说上下文点走

3103
16:04:14,631 --> 16:04:19,183
登录，我忘记了密码，所以我要去

3104
16:04:19,183 --> 16:04:25,103
说上下文锁定，我相信它被称为忘记密码

3105
16:04:25,103 --> 16:04:29,911
登录视图忘记密码好吧它不再是一个常数并放一个

3106
16:04:29,911 --> 16:04:33,103
逗号在这里将逗号放在参数末尾是一个好习惯

3107
16:04:33,103 --> 16:04:37,271
即使它只是您传递给函数的一个参数，我的意思是我的

3108
16:04:37,271 --> 16:04:40,951
原因虽然这有点偏颇，但我的理由是任何时候

3109
16:04:40,951 --> 16:04:45,504
将来任何人都想向此文本小部件添加新参数

3110
16:04:45,504 --> 16:04:48,951
那么他们将不得不去把那个逗号放在那里，但如果你作为一个

3111
16:04:48,951 --> 16:04:52,464
一开始写这段代码的程序员你把逗号放在那里

3112
16:04:52,464 --> 16:04:56,072
你有点像承认嘿，我很感激你的时间

3113
16:04:56,072 --> 16:05:00,072
现在可能想要添加您可能想要为此添加新参数

3114
16:05:00,072 --> 16:05:04,631
我已经为你准备好了，所以如果你不这样做，如果我愿意的话

3115
16:05:04,631 --> 16:05:08,391
程序员在这里添加新参数，我必须说哦，好吧，逗号

3116
16:05:08,391 --> 16:05:12,144
诫命在这里等等等等，但如果你已经添加了，我会

3117
16:05:12,144 --> 16:05:19,103
只是说输入然后写我的参数

3118
16:05:19,103 --> 16:05:24,464
好的很好，所以我们现在可以做的是在这里向前滚动并本地化

3119
16:05:24,464 --> 16:05:28,144
这些属性的其余部分，我不能在这里看到我们有一个

3120
16:05:28,144 --> 16:05:32,543
财产留在此处，目前显示未注册尚未在此处注册

3121
16:05:32,543 --> 16:05:36,783
所以让我们继续像往常一样删除 const 并说联系人

3122
16:05:36,783 --> 16:05:41,032
锁，我可以看到它被称为未注册

3123
16:05:41,032 --> 16:05:45,032
所以让我们在这里使用它和一个逗号，以便我们为下一个程序员做准备

3124
16:05:45,032 --> 16:05:48,543
说，我们现在可以说我们有

3125
16:05:48,543 --> 16:05:52,864
目前已成功本地化我们的登录视图，因此我们可以关闭它

3126
16:05:52,864 --> 16:05:57,183
下一步是本地化我们的

3127
16:05:57,183 --> 16:06:02,144
注册视图所以注册视图也有很多我们必须要做的事情

3128
16:06:02,144 --> 16:06:05,671
本地化所以让我们继续并去注册视图

3129
16:06:05,671 --> 16:06:09,671
当我们在这里时，我的意思是这就是我再次

3130
16:06:09,671 --> 16:06:12,951
当我开始这门课程时，我希望你成为一名软件工程师，即使

3131
16:06:12,951 --> 16:06:16,783
你就像一个设计师，一个用户体验或其他什么或项目

3132
16:06:16,783 --> 16:06:21,032
经理，你必须把自己和你自己放在软件的鞋子里

3133
16:06:21,032 --> 16:06:25,432
开发人员 软件开发人员，您通常总是处于类似的时间限制中

3134
16:06:25,432 --> 16:06:28,783
我们的时间关注交付，但同时

3135
16:06:28,783 --> 16:06:33,752
当您偶然发现可以快速修复的东西时，请继续

3136
16:06:33,752 --> 16:06:37,183
就在那个时候，因为如果你离开这些东西，他们会

3137
16:06:37,183 --> 16:06:40,783
堆积和许多可能的小东西

3138
16:06:40,783 --> 16:06:44,864
如果你把它们放在一边，它们就会变成一大堆

3139
16:06:44,864 --> 16:06:48,631
那么你将没有足够的时间来修复它们

3140
16:06:48,631 --> 16:06:51,911
我们在这里我们有两个未使用的导入让我们删除它们，因为那是

3141
16:06:51,911 --> 16:06:55,752
最好的做法是不要有未使用的进口

3142
16:06:55,752 --> 16:06:59,032
现在让我们进入我们的注册视图，我们可以看到有很多错误

3143
16:06:59,032 --> 16:07:03,183
有四个错误所以我要做的第一件事就是把逗号放在最后

3144
16:07:03,183 --> 16:07:05,823
这些就在那里，我要按

3145
16:07:05,823 --> 16:07:09,991
macintosh 上的 command 或 windows linux 上的 control 就可以了

3146
16:07:09,991 --> 16:07:13,351
格式化第一个被称为弱密码，所以

3147
16:07:13,351 --> 16:07:18,464
让我们说上下文锁定并导入它

3148
16:07:18,464 --> 16:07:23,671
这个消息是注册错误弱密码所以弱密码

3149
16:07:23,671 --> 16:07:28,072
就像下一个被称为上下文日志和

3150
16:07:28,072 --> 16:07:35,752
它被称为电子邮件已经在使用 好的 注册失败 我已经调用了注册

3151
16:07:35,752 --> 16:07:37,991
通用错误

3152
16:07:37,991 --> 16:07:41,671
所以上下文锁通用

3153
16:07:41,671 --> 16:07:47,592
这里是注册错误通用，这个无效的电子邮件被称为上下文

3154
16:07:47,592 --> 16:07:52,711
锁定并注册无效的电子邮件好吧，所以这些是我们没有的错误

3155
16:07:52,711 --> 16:07:56,231
用常数改变任何东西，因为这些消息在

3156
16:07:56,231 --> 16:08:00,144
它们被传递到这个构造函数中

3157
16:08:00,144 --> 16:08:04,783
然后我们必须修复这个寄存器的标题，它只是被称为寄存器，所以

3158
16:08:04,783 --> 16:08:09,592
我要删除 con const 我要说上下文日志寄存器

3159
16:08:09,592 --> 16:08:13,032
在这里，然后我们输入了您的电子邮件和

3160
16:08:13,032 --> 16:08:17,991
密码来查看你的笔记，我称之为注册视图提示

3161
16:08:17,991 --> 16:08:24,231
所以上下文锁定寄存器视图提示我们再次有这个输入声明

3162
16:08:24,231 --> 16:08:28,543
我们以前用电子邮件和密码做过这个，所以这并不奇怪

3163
16:08:28,543 --> 16:08:33,592
所以让我们说上下文阻止电子邮件占位符，这个是

3164
16:08:33,592 --> 16:08:37,183
一个密码占位符，所以让我们删除 const

3165
16:08:37,183 --> 16:08:44,231
上下文锁定密码占位符好吧，就是这样

3166
16:08:44,231 --> 16:08:48,072
然后我们有注册按钮，我们也必须

3167
16:08:48,072 --> 16:08:52,783
本地化，让我们在这里删除常量，只说上下文

3168
16:08:52,783 --> 16:08:57,032
锁定寄存器和已注册的已调用

3169
16:08:57,032 --> 16:09:01,183
已注册，所以让我们也删除常量 const

3170
16:09:01,183 --> 16:09:04,864
我们说上下文锁已经注册

3171
16:09:04,864 --> 16:09:08,312
好的，最后还有一个逗号，我们可以在这里做同样的事情

3172
16:09:08,312 --> 16:09:11,823
最后用逗号只是为了正确格式化

3173
16:09:11,823 --> 16:09:16,711
所以这似乎准备好了我们现在已经本地化了寄存器视图

3174
16:09:16,711 --> 16:09:20,951
下一步是本地化验证电子邮件视图，所以我要关闭

3175
16:09:20,951 --> 16:09:25,271
这个文件，让我们继续验证电子邮件视图

3176
16:09:25,271 --> 16:09:30,072
再次，我们有两个未使用的导入让我们删除它们，让我们继续

3177
16:09:30,072 --> 16:09:34,231
在此处验证电子邮件，我们刚刚将其称为验证电子邮件，因此我要删除

3178
16:09:34,231 --> 16:09:39,351
删除 const 说锁的上下文和

3179
16:09:39,351 --> 16:09:44,231
假设验证电子邮件没问题，这是我也修复的一件事，你

3180
16:09:44,231 --> 16:09:48,391
可以看出，到目前为止，在我们开发应用程序的方式中，我们有两个

3181
16:09:48,391 --> 16:09:52,464
验证电子邮件视图顶部的文本，如果我看起来像这样

3182
16:09:52,464 --> 16:09:55,432
提出来，我们去吧

3183
16:09:55,432 --> 16:09:58,711
尝试使用未验证的用户登录

3184
16:09:58,711 --> 16:10:02,144
他的电子邮件

3185
16:10:02,144 --> 16:10:05,032
你可以看到我们在这里结束了我们已经给你发送了一封电子邮件验证请

3186
16:10:05,032 --> 16:10:08,783
打开它以验证您的帐户，这就像有两个文本

3187
16:10:08,783 --> 16:10:13,911
字段，但我所做的是我已经将其设置为一个文本提示，所以让我们删除

3188
16:10:13,911 --> 16:10:19,911
第二个文本字段和我创建它的方式，如果我们去我们的

3189
16:10:19,911 --> 16:10:24,951
英特尔 en rb，如果您查看验证

3190
16:10:24,951 --> 16:10:28,464
提示您可以看到我已经写了我们已经给您发送了一封电子邮件验证请

3191
16:10:28,464 --> 16:10:31,504
打开你的打开它来验证你的帐户，然后

3192
16:10:31,504 --> 16:10:36,312
它只是跟随的其余字符串，所以它只是一个段落

3193
16:10:36,312 --> 16:10:40,464
这就是为什么我们要删除这里的第二个文本

3194
16:10:40,464 --> 16:10:44,711
所以我们要删除这个 const 我要删除文本

3195
16:10:44,711 --> 16:10:49,032
然后我们要说上下文锁

3196
16:10:49,032 --> 16:10:53,671
验证提示没问题和逗号

3197
16:10:53,671 --> 16:10:57,991
我们在这里有一个小文本按钮，上面写着发送电子邮件验证

3198
16:10:57,991 --> 16:11:02,711
这看起来像这样让我们也改变它，我们在这里

3199
16:11:02,711 --> 16:11:06,464
会说上下文锁定

3200
16:11:06,464 --> 16:11:12,864
它被称为验证发送电子邮件验证在这里放一个逗号

3201
16:11:12,864 --> 16:11:15,432
好的，对于重启按钮，我们有一个

3202
16:11:15,432 --> 16:11:19,752
重新启动文本，所以我们只会说上下文日志重新启动

3203
16:11:19,752 --> 16:11:24,631
最后一个逗号就好了，这就是这个的本地化

3204
16:11:24,631 --> 16:11:29,351
屏幕也是如此，所以我们可以说我们已经完成了验证电子邮件

3205
16:11:29,351 --> 16:11:33,504
本地化也是如此，虽然我们在这里说实话

3206
16:11:33,504 --> 16:11:37,504
你我们也可以在这封验证电子邮件中清理一下，而我们

3207
16:11:37,504 --> 16:11:42,072
基本上清理视图本身你可以看到这个文本没有

3208
16:11:42,072 --> 16:11:47,103
我们可以做的任何填充实际上是在整个专栏中

3209
16:11:47,103 --> 16:11:51,504
也许填充这个文本所以我们要说这个文本是填充的

3210
16:11:51,504 --> 16:11:55,103
填充没问题，我们可以说填充 16。所以

3211
16:11:55,103 --> 16:11:59,103
你现在可以看到它有点干净了只是有点少

3212
16:11:59,103 --> 16:12:03,103
努力使用户界面看起来更干净

3213
16:12:03,103 --> 16:12:07,911
所以我们已经完成了那个屏幕，我们需要做的是我们实际上需要做的

3214
16:12:07,911 --> 16:12:11,991
本地化创建更新节点视图，让我们继续创建更新说明

3215
16:12:11,991 --> 16:12:16,231
查看另一个未使用的导入让我们删除它

3216
16:12:16,231 --> 16:12:19,592
让我们看看我们到底要做什么

3217
16:12:19,592 --> 16:12:23,991
在这里本地化它可能是视图标题，所以如果我们向下滚动到

3218
16:12:23,991 --> 16:12:27,752
我们在哪里显示新笔记所以如果我用拥有的用户登录

3219
16:12:27,752 --> 16:12:31,911
验证了此用户的电子邮件地址

3220
16:12:31,911 --> 16:12:34,543
我们的 baz 可怕的密码请不要使用它

3221
16:12:34,543 --> 16:12:37,671
现在的密码你可以在这里看到

3222
16:12:37,671 --> 16:12:42,312
我们基本上是在说对不起，这里有新的注释

3223
16:12:42,312 --> 16:12:47,183
我们说的是新的音符，这就是这个东西，所以让我们改变它并说

3224
16:12:47,183 --> 16:12:51,911
上下文点锁自动导入磁盘哎呀如何

3225
16:12:51,911 --> 16:12:55,911
导入这个然后我们会说注意

3226
16:12:55,911 --> 16:12:58,711
好的，您可以在文档中看到它

3227
16:12:58,711 --> 16:13:02,711
只是用英语说的一个说注意所以这里我们不是说新的笔记

3228
16:13:02,711 --> 16:13:05,823
其背后的原因是，到目前为止，我们的应用程序是

3229
16:13:05,823 --> 16:13:10,631
正在说新笔记，但是如果您点击现有笔记会发生什么

3230
16:13:10,631 --> 16:13:14,144
它仍然显示新注释，所以这就是我决定基本上改变的原因

3231
16:13:14,144 --> 16:13:18,072
这段文字只是说注意并在此处放置一个逗号以备不时之需

3232
16:13:18,072 --> 16:13:21,592
下一个人以及我们将要做的事情也是

3233
16:13:21,592 --> 16:13:26,711
更改此文本装饰，此处显示开始输入您的笔记

3234
16:13:26,711 --> 16:13:31,991
好的，所以删除 const 然后在这里我们称之为开始输入

3235
16:13:31,991 --> 16:13:36,783
你的笔记，所以上下文日志开始输入你的笔记

3236
16:13:36,783 --> 16:13:40,631
很好，所以我们也要保存它

3237
16:13:40,631 --> 16:13:45,592
我们已经完成了，所以现在我们要去本地化我们的

3238
16:13:45,592 --> 16:13:49,351
注释视图，这就是我想说的最令人兴奋的本地化

3239
16:13:49,351 --> 16:13:53,504
部分是因为我们需要做更多的编码它不是

3240
16:13:53,504 --> 16:13:58,391
对两个人来说很容易，因为记住

3241
16:13:58,391 --> 16:14:02,631
本章开头我提到了 arb 文件比

3242
16:14:02,631 --> 16:14:06,951
只是普通的 json，因为它们可以在其中包含逻辑，如果我们现在去

3243
16:14:06,951 --> 16:14:12,231
回到我们的让我们看看我是否将 scr cpy 带到这里

3244
16:14:12,231 --> 16:14:14,864
你可以看到它只是说你的笔记

3245
16:14:14,864 --> 16:14:18,864
我想演示一下 arb 文件是如何非常动态的，并且可以

3246
16:14:18,864 --> 16:14:22,543
他们有逻辑，我想好吧，我怎么向你证明这一点

3247
16:14:22,543 --> 16:14:25,504
我决定做的是嗯

3248
16:14:25,504 --> 16:14:27,752
如果你

3249
16:14:27,752 --> 16:14:31,991
登陆这个页面，你现在没有像这种情况下的笔记

3250
16:14:31,991 --> 16:14:37,432
你的笔记，但我们要做的是说好的，我们有一些关键在我们的

3251
16:14:37,432 --> 16:14:42,543
本地化文件，称为您的笔记 好吧或抱歉，它被称为笔记

3252
16:14:42,543 --> 16:14:45,823
标题是一个键，但这个键将有

3253
16:14:45,823 --> 16:14:50,432
某些具有实际逻辑的值，并且该逻辑与复数有关

3254
16:14:50,432 --> 16:14:55,103
如果你没有音符，这个键的复数形式

3255
16:14:55,103 --> 16:14:59,032
用英语我们会说还没有笔记

3256
16:14:59,032 --> 16:15:04,072
如果你有一个音符，它只会说一个音符

3257
16:15:04,072 --> 16:15:08,464
如果您有其他数量的音符，例如二三

3258
16:15:08,464 --> 16:15:12,103
四 然后它会说 x

3259
16:15:12,103 --> 16:15:16,464
音符例如 x 是三个音符四个音符所以它只会说四个

3260
16:15:16,464 --> 16:15:21,911
注释所以还没有注释 一个注释或 x 个注释

3261
16:15:21,911 --> 16:15:27,271
所以它内置了多元化，我们必须如何做到这一点是使用

3262
16:15:27,271 --> 16:15:32,631
arb 中称为占位符的东西，我现在将向您展示如何执行此操作

3263
16:15:32,631 --> 16:15:38,464
所以让我们先进入我们的英特尔

3264
16:15:38,464 --> 16:15:41,432
在屏幕底部，我们要做的是首先

3265
16:15:41,432 --> 16:15:43,823
创建我们的密钥，这是最重要的，所以我们要

3266
16:15:43,823 --> 16:15:46,783
称它为注释标题，在这里我们知道我们要

3267
16:15:46,783 --> 16:15:53,183
有一些价值，让我们看看我们还有一个半对不起的冒号，好吧

3268
16:15:53,183 --> 16:15:58,312
所以我们有注释标题我们如何把我们的逻辑放在这里

3269
16:15:58,312 --> 16:16:03,592
我们只知道我们需要有某种

3270
16:16:03,592 --> 16:16:07,752
您看到您的本地化 arb 文件不知道的帐户

3271
16:16:07,752 --> 16:16:11,592
关于计数的任何事情，因为它是知道有多少的应用程序

3272
16:16:11,592 --> 16:16:15,271
节点在火存储数据库中可用，因此

3273
16:16:15,271 --> 16:16:19,504
不知何故，我们需要将此计数传递给我们的应用程序

3274
16:16:19,504 --> 16:16:24,464
对不起我们的 arb 文件，你用参数化来做，所以你继续

3275
16:16:24,464 --> 16:16:28,312
并在这里创建大括号，你会说好吧，嘿，我想要一个

3276
16:16:28,312 --> 16:16:33,823
名为 count 的参数需要将此计数传递给此

3277
16:16:33,823 --> 16:16:37,271
嗯注意标题，以便它能够

3278
16:16:37,271 --> 16:16:40,864
准确计算它必须返回的内容，所以只有你

3279
16:16:40,864 --> 16:16:46,072
如果您想获取注释标题本地化字符串，请说嘿应用程序

3280
16:16:46,072 --> 16:16:49,991
你必须传递一个参数给我调用计数好的

3281
16:16:49,991 --> 16:16:54,631
现在我们要做的是去打电话，基本上创造折扣

3282
16:16:54,631 --> 16:16:58,951
作为一个参数，所以你要做的就是转到下一行，然后说添加

3283
16:16:58,951 --> 16:17:03,592
注释标题这是你告诉 arb 嘿的方式

3284
16:17:03,592 --> 16:17:08,783
这个笔记标题键有一些额外的逻辑

3285
16:17:08,783 --> 16:17:12,144
那么这里有一个键叫做占位符

3286
16:17:12,144 --> 16:17:17,032
所以你必须写好占位符，在这里基本上你说

3287
16:17:17,032 --> 16:17:23,032
占位符，然后每个键都是参数本身的名称，所以帐户

3288
16:17:23,032 --> 16:17:27,271
好吧，然后你基本上就开始了，然后你要做的就是你

3289
16:17:27,271 --> 16:17:30,231
必须在这里定义两个键一个是类型

3290
16:17:30,231 --> 16:17:34,543
和 oops 类型，然后另一个是

3291
16:17:34,543 --> 16:17:37,183
例子

3292
16:17:37,183 --> 16:17:41,351
像这样，让我们​​来看看它实际上是什么样子

3293
16:17:41,351 --> 16:17:44,391
所以基本上我们所说的

3294
16:17:44,391 --> 16:17:50,231
arb is that or dart 在这种情况下，我们说嘿，这个注释标题键

3295
16:17:50,231 --> 16:17:56,312
我们的阿拉伯人有一个叫做 count 的参数，在这里我们说嘿

3296
16:17:56,312 --> 16:17:59,432
这些是占位符，它的名字很重要，现在你必须输入

3297
16:17:59,432 --> 16:18:02,072
定义一个你必须实际告诉飞镖嘿的类型

3298
16:18:02,072 --> 16:18:05,504
这是使用什么数据类型 它是一个字符串 它是一个整数 它是一个

3299
16:18:05,504 --> 16:18:09,592
boolean 它是什么所以在这里你只是说它是一个整数然后你会

3300
16:18:09,592 --> 16:18:14,951
很快看到代码生成然后看看这个并说好吧我期待你

3301
16:18:14,951 --> 16:18:18,951
发送一个整数，它将创建一个名为节点标题的函数

3302
16:18:18,951 --> 16:18:23,752
使用 account 一个整数类型的参数，所以这非常重要，它是数据

3303
16:18:23,752 --> 16:18:28,783
该计数参数的类型可以，一个示例仅供您了解

3304
16:18:28,783 --> 16:18:32,864
好的，这将如何使用，所以一个例子是三个节点，好的

3305
16:18:32,864 --> 16:18:35,671
所以我们只想说一个例子，说明这件事的结果

3306
16:18:35,671 --> 16:18:39,103
看起来不错

3307
16:18:39,103 --> 16:18:45,351
所以我们现在要做的就是在这里告诉这个 erb 和 dart 代码生成器

3308
16:18:45,351 --> 16:18:50,864
这个计数实际上有一个关于它是复数的逻辑，所以它有

3309
16:18:50,864 --> 16:18:54,711
复数逻辑和做到这一点的方法是你在这里放一个逗号然后你说

3310
16:18:54,711 --> 16:18:58,864
复数和逗号之后因为你必须指定逻辑

3311
16:18:58,864 --> 16:19:01,911
那个复数

3312
16:19:01,911 --> 16:19:06,543
作为旁注，我完全理解这太奇怪了，我的意思是它是

3313
16:19:06,543 --> 16:19:11,752
奇怪的语法我觉得不舒服我有时用我有时看

3314
16:19:11,752 --> 16:19:14,391
在文档中只是为了提醒这一点

3315
16:19:14,391 --> 16:19:18,231
逻辑，但我看待它的方式是，这是我们拥有的最好的东西，我们不要

3316
16:19:18,231 --> 16:19:22,543
讨厌它让我们使用它让我们了解它有力量

3317
16:19:22,543 --> 16:19:27,671
尽管我们不是 100 岁，但它是这样的原因

3318
16:19:27,671 --> 16:19:29,504
像

3319
16:19:29,504 --> 16:19:32,464
因为我们没有参与其中的推理，我们甚至不知道是什么

3320
16:19:32,464 --> 16:19:35,592
推理是，但这就是格式，这就是我们基本上必须要做的

3321
16:19:35,592 --> 16:19:41,752
去吧，所以创建这个的方法是给你的

3322
16:19:41,752 --> 16:19:44,391
呃有你的逻辑，所以我们要走了

3323
16:19:44,391 --> 16:19:50,631
说等于零，让我们这样做，然后

3324
16:19:50,631 --> 16:19:55,351
我们会说等于一，然后我们会说其他

3325
16:19:55,351 --> 16:19:58,711
好的，这就是你创建它的方式，所以你

3326
16:19:58,711 --> 16:20:02,864
说如果这个计数的值为零

3327
16:20:02,864 --> 16:20:08,072
那么我们将在这里做一些事情，如果该计数的值是我们

3328
16:20:08,072 --> 16:20:12,072
会在这里做点什么，如果它是其他的东西，我们就是

3329
16:20:12,072 --> 16:20:16,231
在这里做点什么所以让我们说当它等于零时我们会说

3330
16:20:16,231 --> 16:20:19,432
没有注释还可以，这就是字符串

3331
16:20:19,432 --> 16:20:24,144
如果计数等于 1，我们将显示计数是否为零

3332
16:20:24,144 --> 16:20:28,464
说一个音符然后重要的是如果我们

3333
16:20:28,464 --> 16:20:32,631
以这种情况结束，如果不是，那么我们想说在这种情况下，我们

3334
16:20:32,631 --> 16:20:36,864
实际上想要得到计数所以如果你传递了我们想说的三的值

3335
16:20:36,864 --> 16:20:41,671
三个音符，因此获得该计数的方法是使用另一个大括号对和

3336
16:20:41,671 --> 16:20:45,271
你说count然后你说notes好吗

3337
16:20:45,271 --> 16:20:50,951
所以这就是你创造这些东西的方式所以嗯，我认为我们实际上错过了一个

3338
16:20:50,951 --> 16:20:56,391
花括号，那是最后的花括号是的

3339
16:20:56,391 --> 16:21:00,072
这个大括号属于喜欢如果我们

3340
16:21:00,072 --> 16:21:05,504
如果你看这里如果我删除这些

3341
16:21:05,504 --> 16:21:09,103
另一个有两个大括号和

3342
16:21:09,103 --> 16:21:14,864
这是两个大括号，这里是另一个大括号，那里是一个大括号

3343
16:21:14,864 --> 16:21:20,711
这里的括号一个在这里结束一个在这里结束所以最后一个大括号是

3344
16:21:20,711 --> 16:21:25,671
对于从这里开始的大括号，我又不知道该说什么

3345
16:21:25,671 --> 16:21:30,231
格式是它的方式吗？我们只需要忍受它就可以了，所以我们创建了

3346
16:21:30,231 --> 16:21:33,911
笔记标题和我们要做的就是继续做同样的事情

3347
16:21:33,911 --> 16:21:37,752
但是对于瑞典语，我已经准备好了，所以我要走了

3348
16:21:37,752 --> 16:21:41,504
向前，从我手上的瑞典绳子上抓起那根绳子

3349
16:21:41,504 --> 16:21:45,823
已经制作好了，所以我们不必再次输入所有内容

3350
16:21:45,823 --> 16:21:48,864
所以让我去抓住它并把它带进去

3351
16:21:48,864 --> 16:21:52,864
l10n sv 用于瑞典语，然后带上

3352
16:21:52,864 --> 16:21:57,351
它在屏幕的底部并粘贴在那里并带有

3353
16:21:57,351 --> 16:22:02,951
该行末尾的逗号，所以你可以看到复数，它说还没有注释

3354
16:22:02,951 --> 16:22:07,351
对于一个它说一个音符，对于另一个它只是说

3355
16:22:07,351 --> 16:22:10,543
x笔记没问题

3356
16:22:10,543 --> 16:22:14,231
所以我要保存这个 我要保存这个 我要热重启

3357
16:22:14,231 --> 16:22:18,072
让我们只希望 scr cpy 不会崩溃，也不会崩溃

3358
16:22:18,072 --> 16:22:22,543
所以我们现在要做的是按照计划我们要去我们的

3359
16:22:22,543 --> 16:22:25,432
笔记视图，我也要去我的笔记

3360
16:22:25,432 --> 16:22:31,183
在这里让我们去笔记视图看看我们的标题在这里

3361
16:22:31,183 --> 16:22:35,103
你看到我们此刻我们正在看到你的笔记，但我们真正的

3362
16:22:35,103 --> 16:22:39,351
想要的是能够显示音符的数量

3363
16:22:39,351 --> 16:22:45,271
在我们的节点提供者里面，所以如果我们有

3364
16:22:45,271 --> 16:22:48,391
看看我们如何阅读 num 以及您可以看到我们正在使用的注释

3365
16:22:48,391 --> 16:22:52,464
注意服务，然后我们说所有节点，这是一个流

3366
16:22:52,464 --> 16:22:57,504
i 三倍的云节点，所以我们想要一个流构建器，我们想要一个

3367
16:22:57,504 --> 16:23:01,831
流构建器来创建我们的标题我们的应用栏，我们将要做

3368
16:23:01,831 --> 16:23:05,351
同样的事情，所以我们将有一个流构建器来创建我们的应用栏

3369
16:23:05,351 --> 16:23:07,271
好的，但是

3370
16:23:07,271 --> 16:23:12,072
或者实际上它会创建文本但我们如何获得计数

3371
16:23:12,072 --> 16:23:15,911
笔记和做到这一点的方法是我要去的一个方便的扩展

3372
16:23:15,911 --> 16:23:21,504
向您展示如何创建，让我们进入我们的笔记视图和

3373
16:23:21,504 --> 16:23:25,504
我们要说扩展，我们要说计数

3374
16:23:25,504 --> 16:23:29,991
我们想在流上创建它，所以我们要说任何流都必须是

3375
16:23:29,991 --> 16:23:33,831
能够喜欢任何包含可迭代对象的流

3376
16:23:33,831 --> 16:23:38,223
它的值是可迭代的，我们想要创建一个

3377
16:23:38,223 --> 16:23:42,383
称为长度的属性，例如它获取长度，所以

3378
16:23:42,383 --> 16:23:47,351
让我们进去说好吧，这个流有一些价值，但我们想要那个

3379
16:23:47,351 --> 16:23:50,144
可迭代的值

3380
16:23:50,144 --> 16:23:55,911
好的，所以在这里我们基本上是说我们正在扩展任何包含

3381
16:23:55,911 --> 16:24:00,711
呃，我很麻烦，因为它的价值会有这个扩展

3382
16:24:00,711 --> 16:24:04,144
然后我们会说好吧，这将是一个提示

3383
16:24:04,144 --> 16:24:08,551
我们将把它称为获取链接好

3384
16:24:08,551 --> 16:24:11,271
这基本上要做的是

3385
16:24:11,271 --> 16:24:16,711
说它映射流的值所以让我们说事件

3386
16:24:16,711 --> 16:24:20,943
在这里我们只是说它返回事件的长度，所以我理解这可能

3387
16:24:20,943 --> 16:24:24,304
对你来说有点神秘，但是嗯

3388
16:24:24,304 --> 16:24:29,911
你必须知道每个流都是一个通用函数，如果你很抱歉

3389
16:24:29,911 --> 16:24:34,072
它是一个泛型类，你可以看到它是抽象类它有一个参数

3390
16:24:34,072 --> 16:24:39,111
称为 t 这是它的泛型类型，所以我们在这里说的是

3391
16:24:39,111 --> 16:24:44,144
好的，我们正在为其参数或类型的任何流创建扩展

3392
16:24:44,144 --> 16:24:47,663
are and i treble and iterable 有一个长度

3393
16:24:47,663 --> 16:24:51,759
这意味着我们可以扩展和扩展任何具有 i 的流

3394
16:24:51,759 --> 16:24:56,072
高音，然后我们返回其名为 get length 的属性 OK

3395
16:24:56,072 --> 16:25:02,471
所以我们现在需要做的是继续前进并进入应用程序栏内

3396
16:25:02,471 --> 16:25:07,191
当我们需要首先删除这个常量时，我​​们有一个常量文本实际上让我们

3397
16:25:07,191 --> 16:25:11,504
保留它，我会看看我们是否可以用流包裹它

3398
16:25:11,504 --> 16:25:16,072
builder 现在好了 所以在这里我们要做的是我们说这里是一个流

3399
16:25:16,072 --> 16:25:20,471
builder，我们还不知道它的流是什么

3400
16:25:20,471 --> 16:25:26,551
像这样的笔记服务，我们有所有笔记

3401
16:25:26,551 --> 16:25:33,432
所有者用户 id 是我们的用户 id，就像我们在这里一样

3402
16:25:33,432 --> 16:25:36,943
好的，但是这里的流我们实际上并不想要我们想要的笔记

3403
16:25:36,943 --> 16:25:40,223
音符的长度，所以让我们说获取长度

3404
16:25:40,223 --> 16:25:46,304
它在哪里可以得到长度，现在我们知道快照可以

3405
16:25:46,304 --> 16:25:52,144
为我们返回那个 uh 值，所以如果我在这里按 command s，让我们放一个

3406
16:25:52,144 --> 16:25:56,304
逗号也在这里你可以看到没有什么改变它只是

3407
16:25:56,304 --> 16:25:59,271
说你的笔记，因为我们仍然在这里看到你的笔记，但是什么

3408
16:25:59,271 --> 16:26:04,304
我们想要的是从我们的快照中获取数据，这个快照是异步的

3409
16:26:04,304 --> 16:26:07,911
整数的快照

3410
16:26:07,911 --> 16:26:13,191
让我们看看未定义的类，它被称为异步快照，是的，就像那样

3411
16:26:13,191 --> 16:26:16,223
对，所以你可以告诉一个流

3412
16:26:16,223 --> 16:26:19,432
int 的生成器，然后我相信你的快照

3413
16:26:19,432 --> 16:26:24,383
自动将面临抢夺，或者你可以

3414
16:26:24,383 --> 16:26:28,072
只是说流构建器普通流构建器和它的异步快照，所以

3415
16:26:28,072 --> 16:26:31,584
你可以用两种不同的方式输入它，而我只是选择了这种方式

3416
16:26:31,584 --> 16:26:35,191
好吧，我们在这里需要做的就是看到

3417
16:26:35,191 --> 16:26:39,911
一旦快照有数据，我们就会抓取该数据，这意味着它具有长度

3418
16:26:39,911 --> 16:26:45,024
内置它没关系，所以我们要说如果快照有

3419
16:26:45,024 --> 16:26:49,432
data 这意味着它有长度，否则我们将返回

3420
16:26:49,432 --> 16:26:54,383
const of text 没什么意思 我们没有什么可显示的

3421
16:26:54,383 --> 16:26:57,911
如果此快照没有文本，则在屏幕顶部

3422
16:26:57,911 --> 16:27:01,759
然后在这里我们会说它会说最后的音符计数

3423
16:27:01,759 --> 16:27:05,584
snapchat 日期可以吗

3424
16:27:05,584 --> 16:27:09,911
或为零，因为它只是说是的，我可能没有数据

3425
16:27:09,911 --> 16:27:12,711
很奇怪，因为您实际上是在说有数据，但是这两个属性

3426
16:27:12,711 --> 16:27:15,271
有点像他们和你不一样 我是说

3427
16:27:15,271 --> 16:27:18,304
它们并没有什么不同，但它们彼此分开只是因为

3428
16:27:18,304 --> 16:27:21,584
你正在检查的东西有数据并不一定意味着下一个

3429
16:27:21,584 --> 16:27:25,271
行应该明白它有数据的数据类型

3430
16:27:25,271 --> 16:27:30,072
这个数据属性的仍然是 final t 所以你不能改变那好吧

3431
16:27:30,072 --> 16:27:33,663
为什么我们这里有这个 um elvis 标志

3432
16:27:33,663 --> 16:27:37,271
或问号问号只是说这是否没有任何价值

3433
16:27:37,271 --> 16:27:40,711
现在我们有节点数，我们必须使用零

3434
16:27:40,711 --> 16:27:44,144
获取该上下文块

3435
16:27:44,144 --> 16:27:48,383
我们哦，我们没有日志，让我们导入它

3436
16:27:48,383 --> 16:27:54,072
并记住我们使用英特尔我的密钥，它被称为笔记标题让我们说

3437
16:27:54,072 --> 16:27:58,711
注释标题，现在突然你可以看到它是一个函数

3438
16:27:58,711 --> 16:28:03,432
一个整数你好，它是我们内置到我们的 arb 和

3439
16:28:03,432 --> 16:28:07,351
它返回一个你可以在这里看到的完美的字符串，因为这样我们就可以通过

3440
16:28:07,351 --> 16:28:10,144
这里的笔记数没问题

3441
16:28:10,144 --> 16:28:14,711
这将是我们的文本

3442
16:28:14,711 --> 16:28:17,831
然后我们可以说返回

3443
16:28:17,831 --> 16:28:21,663
一个带有该文本的文本小部件，就像这样

3444
16:28:21,663 --> 16:28:24,551
好的，然后我们可以保存这个，你可以

3445
16:28:24,551 --> 16:28:28,631
现在看到，只要我点击 command s 它说还没有笔记

3446
16:28:28,631 --> 16:28:33,111
如果我说，如果我在这里按下加号按钮，你可以看到我可以输入一些东西

3447
16:28:33,111 --> 16:28:37,351
在这里，我回去，如果我创建另一个，它会说 onenote

3448
16:28:37,351 --> 16:28:41,271
在屏幕顶部，它说两个音符，差不多就是这样

3449
16:28:41,271 --> 16:28:44,864
我们内置的逻辑，所以现在它说 onenote delete that note and it

3450
16:28:44,864 --> 16:28:49,584
说还没有完美的笔记，所以逻辑似乎对我们来说很好用

3451
16:28:49,584 --> 16:28:53,191
所以这就是那部分，我们在这个底部还有另一个字符串

3452
16:28:53,191 --> 16:28:58,783
屏幕显示注销，我们也必须更改它，所以

3453
16:28:58,783 --> 16:29:04,631
我们不得不说上下文注销按钮

3454
16:29:04,631 --> 16:29:09,911
这个错误是因为我们说无效常量，但你就像哦，但是

3455
16:29:09,911 --> 16:29:14,072
这不是一个恒定的问题，当

3456
16:29:14,072 --> 16:29:17,351
我们创建了这个弹出菜单项数组，我们说它是一个常量，所以

3457
16:29:17,351 --> 16:29:23,024
让我们把它去掉，这太棒了，我的意思是

3458
16:29:23,024 --> 16:29:26,631
现在我们几乎完成了我们没有的整个应用程序

3459
16:29:26,631 --> 16:29:30,711
任何硬编码的字符串，如果您查看我们的问题

3460
16:29:30,711 --> 16:29:34,783
部分没有问题要修复，例如没有未使用的导入，所以我们已经

3461
16:29:34,783 --> 16:29:38,551
也照顾好这些，只是为了测试这一点，我们能做的就是去

3462
16:29:38,551 --> 16:29:41,911
到这里的设置屏幕，我要带上瑞典语

3463
16:29:41,911 --> 16:29:45,584
让我们回到我们的应用程序看看，它说不

3464
16:29:45,584 --> 16:29:49,271
笔记但我要按下加号按钮，我要写一些

3465
16:29:49,271 --> 16:29:52,471
字符串回到这里它说一个音符

3466
16:29:52,471 --> 16:29:58,304
创建一个新的，它说两个注释删除这个和你看到的所有

3467
16:29:58,304 --> 16:30:02,551
对话现在是瑞典语 是 删除此注释

3468
16:30:02,551 --> 16:30:06,631
是的，让我们现在尝试注销，它说日志看看它

3469
16:30:06,631 --> 16:30:09,584
它说看看去添加第二个顺便看看你确定你想要吗

3470
16:30:09,584 --> 16:30:14,471
注销是的，您可以在这里看到我们所有的字符串基本上也是

3471
16:30:14,471 --> 16:30:17,271
嗯，这个屏幕上的一切都是

3472
16:30:17,271 --> 16:30:22,631
本地化了，这太棒了，我们基本上做了我们所做的

3473
16:30:22,631 --> 16:30:27,663
应该做的和我们承诺要做的，非常祝贺

3474
16:30:27,663 --> 16:30:31,351
如果你然后做我们通常在每一章结束时做的事情，我们

3475
16:30:31,351 --> 16:30:35,432
提交我们的工作，所以我要看看这个，让我们看看我们的

3476
16:30:35,432 --> 16:30:38,711
良好的状态并查看我们的 git 日志

3477
16:30:38,711 --> 16:30:42,304
我要改变屏幕布局有点抱歉，所以你看

3478
16:30:42,304 --> 16:30:48,144
代码更好地删除 scr cpy 使这个全屏

3479
16:30:48,144 --> 16:30:53,351
好的，我要把它放大很多，这样你看得更清楚

3480
16:30:53,351 --> 16:30:58,072
再看看 git log 你可以看到我们最后一个 git step

3481
16:30:58,072 --> 16:31:03,351
抱歉，第 31 步，所以我们只说 git add

3482
16:31:03,351 --> 16:31:07,351
所有命中提交 32

3483
16:31:07,351 --> 16:31:10,551
好的并获得状态

3484
16:31:10,551 --> 16:31:15,024
太好了，然后我们也将推动我们的改变

3485
16:31:15,024 --> 16:31:20,471
让我们也给它贴上标签 步骤 32

3486
16:31:20,471 --> 16:31:26,383
如果您查看我们的标签所有标签，我们可以看到 20 blah blah

3487
16:31:26,383 --> 16:31:31,351
让我们看看我们是否有 31 30 31 和 32 很棒，然后我们必须推送我们的标签

3488
16:31:31,351 --> 16:31:35,663
也太棒了

3489
16:31:35,663 --> 16:31:38,943
嗯，我们到目前为止所做的是我的意思是我们已经

3490
16:31:38,943 --> 16:31:42,711
做了大量的工作，在本章中，我们已经本地化了我们的

3491
16:31:42,711 --> 16:31:45,432
应用程序我们研究了本地化的工作原理 代码生成方式

3492
16:31:45,432 --> 16:31:48,471
对于本地化工作，我们也看了一些

3493
16:31:48,471 --> 16:31:51,831
您可以创建重要的扩展，以使您的本地化更

3494
16:31:51,831 --> 16:31:57,504
对颤振效果更好，我们还研究了向我们的套利添加一些逻辑

3495
16:31:57,504 --> 16:32:01,584
带有复数形式的文件，因此恭喜您通过了这个

3496
16:32:01,584 --> 16:32:03,831
我个人认为这一章对于本地化您的

3497
16:32:03,831 --> 16:32:07,432
如果您本地化您的应用程序，您将接触到更多用户

3498
16:32:07,432 --> 16:32:12,471
适合您的目标市场的应用程序

3499
16:32:12,471 --> 16:32:16,551
嗯，它应该可以帮助您的用户也感觉与您的应用程序有更多的联系

3500
16:32:16,551 --> 16:32:20,551
所以嗯，我说我可能真的到那时

3501
16:32:20,551 --> 16:32:25,911
下一章见大家好，我不能说欢迎

3502
16:32:25,911 --> 16:32:29,831
现在这一章，因为这本身并不是真正的一章，而是

3503
16:32:29,831 --> 16:32:34,223
这门课的结尾，我不知道这是一个苦乐参半的时刻

3504
16:32:34,223 --> 16:32:38,943
因为呃，我为你整理这门课程非常有趣，现在我

3505
16:32:38,943 --> 16:32:41,831
不得不说再见，嗯

3506
16:32:41,831 --> 16:32:47,504
我不想情绪激动，但这有点难过，呃，因为这是一个伟大的时刻

3507
16:32:47,504 --> 16:32:50,383
感谢你经历了

3508
16:32:50,383 --> 16:32:54,783
这门课，我也想真正扩展

3509
16:32:54,783 --> 16:32:57,831
并祝贺你通过

3510
16:32:57,831 --> 16:33:02,864
这门课程和你所学的一样，因为它不是

3511
16:33:02,864 --> 16:33:07,663
完成这么长的课程很容易，但正如我在

3512
16:33:07,663 --> 16:33:11,351
如果你还记得的话，这个嗯课程的开始

3513
16:33:11,351 --> 16:33:16,711
介绍我提到了嗯很多视频基本上都跳过了

3514
16:33:16,711 --> 16:33:20,144
相当多的信息，我不想在这门课程中这样做

3515
16:33:20,144 --> 16:33:23,991
这就是为什么这门课程变成了

3516
16:33:23,991 --> 16:33:28,383
很长很长

3517
16:33:28,383 --> 16:33:32,471
我们经历了很多我们不仅谈论过

3518
16:33:32,471 --> 16:33:36,864
颤振的发展，但我们也弄脏了一些

3519
16:33:36,864 --> 16:33:40,711
本机 ios 而不是真正的开发，但实际上都是 xcode 和

3520
16:33:40,711 --> 16:33:45,111
摆弄 info 中的一些属性以及我们也有的 excel 项目

3521
16:33:45,111 --> 16:33:51,504
必须打开 android studio 来创建我们使用过的虚拟设备

3522
16:33:51,504 --> 16:33:56,783
figma 和我们与 app store connect 和 google play store 合作的设计工具

3523
16:33:56,783 --> 16:34:01,584
控制台，所以我们经历了很多，所以我想要

3524
16:34:01,584 --> 16:34:06,631
祝贺你一直和我在一起

3525
16:34:06,631 --> 16:34:12,864
嗯，希望你现在在设计这门课程时也学到了很多东西，我也

3526
16:34:12,864 --> 16:34:16,711
知道它必须是一种有生命的材料它不能只是我丢弃的东西

3527
16:34:16,711 --> 16:34:20,943
在互联网上，所以我非常计划让所有内容保持最新

3528
16:34:20,943 --> 16:34:25,271
但是我已经计划了很多很多

3529
16:34:25,271 --> 16:34:29,831
更多内容将添加到本课程中，因此我无法真正详细介绍

3530
16:34:29,831 --> 16:34:33,432
它们是什么我还没有最终确定它们，但就像我在这门课程中所做的那样

3531
16:34:33,432 --> 16:34:37,351
需要正确计划他们编写我所有的脚本以知道我要说什么

3532
16:34:37,351 --> 16:34:42,631
关于并计划甚至我需要编写的代码来告诉你一切

3533
16:34:42,631 --> 16:34:46,471
只知道还有很多事情要做

3534
16:34:46,471 --> 16:34:49,432
你可以订阅我的 youtube

3535
16:34:49,432 --> 16:34:54,864
频道如果你想保持最新谈论最新的嗯

3536
16:34:54,864 --> 16:34:58,711
例如，我们一直在使用 firebase 时，事情一直在发生变化

3537
16:34:58,711 --> 16:35:04,144
Firebase 本身就是一个移动产品，所以它是一个像以往一样的更新

3538
16:35:04,144 --> 16:35:07,991
它总是在更新，所以新版本会出现新版本

3539
16:35:07,991 --> 16:35:12,072
颤振可能会出现，新版本的飞镖可能会出现

3540
16:35:12,072 --> 16:35:15,191
figma 例如我们已经使用了很多界面可能会改变

3541
16:35:15,191 --> 16:35:19,191
不规律地如此，因为我花了这么多精力去创造

3542
16:35:19,191 --> 16:35:23,504
这门课我不想让它死，我不会让它死，所以它是

3543
16:35:23,504 --> 16:35:27,271
总是会不时更新，然后我会放

3544
16:35:27,271 --> 16:35:31,759
不仅更新了内容，也许我需要替换一些旧内容

3545
16:35:31,759 --> 16:35:36,471
有一些新的，但我也计划添加更多，所以

3546
16:35:36,471 --> 16:35:41,991
让我们说这门课程希望永远是最新的

3547
16:35:41,991 --> 16:35:46,304
正如我在本课程的介绍中提到的，我的钱为零

3548
16:35:46,304 --> 16:35:51,024
在营销这门课程的预算中，营销是

3549
16:35:51,024 --> 16:35:55,759
可能是错误的词，因为我实际上并没有通过拥有这个来赚钱

3550
16:35:55,759 --> 16:35:58,471
当然，我唯一赚到的就是拥有的快乐

3551
16:35:58,471 --> 16:36:02,864
嗯，就像你这样的人通过这门课程并在社交上告诉我

3552
16:36:02,864 --> 16:36:06,304
媒体也许是关于哦，嘿，我做了这门课，我学到了这个，这个和

3553
16:36:06,304 --> 16:36:08,711
这个，我已经发布了我的第一个应用程序，所以

3554
16:36:08,711 --> 16:36:12,864
因为我没有预算，如果可以的话，我会很感激的

3555
16:36:12,864 --> 16:36:16,711
传播有关它的信息并告诉我是否有人问好我需要一门课程

3556
16:36:16,711 --> 16:36:20,383
学习颤振，嗯，这会很可爱，我真的会

3557
16:36:20,383 --> 16:36:24,304
如果您能告诉他们这门课程，将不胜感激

3558
16:36:24,304 --> 16:36:28,223
嗯，我在介绍中也提到过，但我真的会

3559
16:36:28,223 --> 16:36:34,223
如果您能在 van.np 的社交媒体 Twitter 上关注我，将不胜感激

3560
16:36:34,223 --> 16:36:37,504
在linkedin上，因为我制作了很多内容

3561
16:36:37,504 --> 16:36:41,759
例如，作为信息图表还添加了与颤振相关的视频

3562
16:36:41,759 --> 16:36:48,223
javascript python django react native swift 你给它命名所以现在甚至是打字稿

3563
16:36:48,223 --> 16:36:51,111
这些天，所以，如果你有的话，我会非常感激

3564
16:36:51,111 --> 16:36:56,631
可以在社交媒体上关注我，呃，我在某些地方被告知

3565
16:36:56,631 --> 16:37:01,991
嗯，你们中的一些人也许有些人实际上可以支持

3566
16:37:01,991 --> 16:37:05,911
我，如果你想这样做，这就是这样做的方法

3567
16:37:05,911 --> 16:37:10,783
给我买一个coffee.com，但记住它完全是

3568
16:37:10,783 --> 16:37:17,024
可选的，只有你买得起，所以说了我不想

3569
16:37:17,024 --> 16:37:22,471
拖到这个结尾我只想再次对你表示衷心的祝贺

3570
16:37:22,471 --> 16:37:28,144
和我一起完成这门课程，在这么多的时间里度过你的一生

3571
16:37:28,144 --> 16:37:33,911
和我在一起几个小时，我录制了所有这些视频，嗯

3572
16:37:33,911 --> 16:37:39,584
我敢肯定这不是一个好的购买，而是基本上对此的正式结束

3573
16:37:39,584 --> 16:37:44,551
当然，请留意更多内容，我相信我们会与每个人交谈

3574
16:37:44,551 --> 16:37:48,504
社交媒体上的其他