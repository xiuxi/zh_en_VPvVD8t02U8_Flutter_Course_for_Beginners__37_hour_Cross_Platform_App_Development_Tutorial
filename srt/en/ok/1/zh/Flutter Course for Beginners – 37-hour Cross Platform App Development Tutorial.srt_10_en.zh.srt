1
08:22:50,080 --> 08:22:53,760
确保您的应用程序不是为儿童制作的，因为请记住以下应用程序

2
08:22:53,760 --> 08:22:57,512
专为必须真正符合特定标准的孩子而设计

3
08:22:57,512 --> 08:23:01,592
确保八个四岁以上的孩子在

4
08:23:01,592 --> 08:23:05,360
应用所以我们能做些什么让我们在这里看看如果

5
08:23:05,360 --> 08:23:09,440
您的应用评分为 12 或更低，并且您认为它的内容可能不合适

6
08:23:09,440 --> 08:23:14,640
对于 17 岁以下的儿童，您可以手动将年龄等级设置为 17 岁以上，所以我不是

7
08:23:14,640 --> 08:23:17,280
老实说，我确定这一点，但我只是将其留空

8
08:23:17,280 --> 08:23:20,552
那一刻，按下向下按钮，好的，然后我们可以按下保存

9
08:23:20,552 --> 08:23:24,400
按钮就在这里，接下来我们需要谈谈

10
08:23:24,400 --> 08:23:28,800
about now 是一个叫做 support url 的东西，而 support url 实际上非常

11
08:23:28,800 --> 08:23:33,360
重要，实际上我相信应用程序

12
08:23:33,360 --> 08:23:38,640
让我们看看它在

13
08:23:38,640 --> 08:23:44,160
应用程序信息我相信我认为它在附近的某个地方

14
08:23:44,160 --> 08:23:50,232
评级和评论应用隐私定价和可用性

15
08:23:50,232 --> 08:23:54,232
我们还没有真正到达那里，但我相信无论如何我们都必须提交

16
08:23:54,232 --> 08:23:58,640
如您所见，它就在这里，因此支持网址实际上非常非常

17
08:23:58,640 --> 08:24:01,360
重要，因为您可以看到营销网址不是

18
08:24:01,360 --> 08:24:05,512
可选 抱歉 营销 url 是可选的 支持 url 不是支持 url 它是

19
08:24:05,512 --> 08:24:09,192
基本上是需要在您的网站上托管的网址

20
08:24:09,192 --> 08:24:12,480
如果您的应用程序的用户有任何问题，那么他们可以

21
08:24:12,480 --> 08:24:16,320
转到支持 url 并获取有关该内容的更多信息

22
08:24:16,320 --> 08:24:20,960
所以我之前为我的其他应用程序之一创建了一个支持网址

23
08:24:20,960 --> 08:24:27,120
我的网站，所以我们只说像素 sc，然后我们会说支持

24
08:24:27,120 --> 08:24:32,320
和弦库文本还可以，正如您在此处看到的，它是一个小文本文档，并且

25
08:24:32,320 --> 08:24:34,872
说如果您对此应用程序有任何疑问，可以给我们留言

26
08:24:34,872 --> 08:24:37,680
支持像素点

27
08:24:37,680 --> 08:24:44,232
所以你只需要确保你有一个支持文件，你可以嗯

28
08:24:44,232 --> 08:24:50,160
放置在一个网站中，然后您可以将您的用户发送到那个好的，所以

29
08:24:50,160 --> 08:24:54,232
现在让我们继续创建一个支持文档，我将在这里做什么

30
08:24:54,232 --> 08:24:57,832
我只是要在我的 Macintosh 上显示文字编辑，你可以带上

31
08:24:57,832 --> 08:25:03,440
你最喜欢的十六进制编辑器实际上我最喜欢的技术文本编辑器是

32
08:25:03,440 --> 08:25:06,552
视觉工作室代码，但在这种情况下，它只是一个简单的文本文档，所以我只是

33
08:25:06,552 --> 08:25:11,760
即使你是 linux，也要在 macintosh 上使用 um 普通文本编辑

34
08:25:11,760 --> 08:25:16,552
例如，您可以只使用 vim 并创建或 vi，您可以创建一个简单的文档

35
08:25:16,552 --> 08:25:21,192
让我们基本上复制它并粘贴到这里我说

36
08:25:21,192 --> 08:25:26,080
联系支持并感谢您使用我的真棒

37
08:25:26,080 --> 08:25:28,552
笔记，因为那是我们的名字

38
08:25:28,552 --> 08:25:33,440
正确的应用程序，这是我很棒的笔记，所以我将保存此文档并

39
08:25:33,440 --> 08:25:37,680
我只想在这里说让我们称之为

40
08:25:37,680 --> 08:25:41,440
我的精彩笔记 txt 我将把它保存在

41
08:25:41,440 --> 08:25:46,232
桌面保存好没保存

42
08:25:46,232 --> 08:25:49,592
它没有保存它有点奇怪

43
08:25:49,592 --> 08:25:52,400
让我回到这个文本，现在它保存了它

44
08:25:52,400 --> 08:25:57,280
是的，它就在这里，好吧，所以这是一个文档，现在是简单的文本文件，我是

45
08:25:57,280 --> 08:26:01,592
去我的网站控制面板，你可以看到这里有一个支持

46
08:26:01,592 --> 08:26:03,680
文件夹，所以我要去支持

47
08:26:03,680 --> 08:26:07,760
文件夹，如您所见，我在此像素性 se 中已经有四个文本文件

48
08:26:07,760 --> 08:26:12,320
网站，我只是希望能够将文件拖入

49
08:26:12,320 --> 08:26:17,440
在那里，甚至可能上传，所以我要拖动这个文件繁荣

50
08:26:17,440 --> 08:26:21,440
我可以看到它现在已经上传了

51
08:26:21,440 --> 08:26:25,832
似乎是诚实的所以让我回去看看我是我的

52
08:26:25,832 --> 08:26:29,512
awesomenotes 文本文件就在那里，然后我要进去看看

53
08:26:29,512 --> 08:26:34,000
它实际上上传了我很棒的笔记

54
08:26:34,000 --> 08:26:37,760
txt，我实际上可以看到它已上传

55
08:26:37,760 --> 08:26:41,760
它就在那里，所以如果你没有自己的网站

56
08:26:41,760 --> 08:26:46,232
如果您正在为 ios 和 android 开发应用程序，或者即使您是

57
08:26:46,232 --> 08:26:49,440
开发任何应用程序并将其发布给您应该拥有的客户

58
08:26:49,440 --> 08:26:53,760
您自己的网站，它们就像非常便宜的抓取方式

59
08:26:53,760 --> 08:26:57,592
我不想去喜欢的廉价托管网站

60
08:26:57,592 --> 08:27:02,000
赞助各种服务，我什至不会说出我正在使用的东西，但是

61
08:27:02,000 --> 08:27:06,872
你可以谷歌或只是在网上搜索便宜的主机

62
08:27:06,872 --> 08:27:11,192
并创建一个你自己的网站，但因为这是外面的

63
08:27:11,192 --> 08:27:15,120
在本课程的范围之外，我不会谈论太多，好吧，所以

64
08:27:15,120 --> 08:27:19,192
现在我们有了我的精彩笔记以及我们需要做的事情

65
08:27:19,192 --> 08:27:23,760
是继续添加这个支持网址，所以我要复制它并转到

66
08:27:23,760 --> 08:27:27,512
应用商店连接并在支持网址中，我将其保存在那里，我将

67
08:27:27,512 --> 08:27:31,280
按下保存按钮好吧

68
08:27:31,280 --> 08:27:35,512
就是这样，我们还需要确保添加一些其他信息

69
08:27:35,512 --> 08:27:40,640
在这里促销文字描述以及关键字等

70
08:27:40,640 --> 08:27:44,552
这些事情非常重要，我们需要确保填写这些内容

71
08:27:44,552 --> 08:27:50,400
所以，嗯，让我们看看这里真的好吗，所以在宣传文字中，让我们只是

72
08:27:50,400 --> 08:27:52,960
在此处输入一些信息，如您所见，此商业文本可让您

73
08:27:52,960 --> 08:27:56,320
通知您的应用商店访问者任何当前的应用功能，而无需

74
08:27:56,320 --> 08:27:59,440
一个更新的提交好的，所以让我们说

75
08:27:59,440 --> 08:28:03,440
使用我的精彩笔记

76
08:28:03,440 --> 08:28:08,800
为了将您的笔记安全地存储在云中

77
08:28:08,800 --> 08:28:14,552
好的和描述和这个应用程序模拟这个免费的应用程序允许你

78
08:28:14,552 --> 08:28:18,552
将您的笔记安全地存储在云端

79
08:28:18,552 --> 08:28:20,400
和嗯

80
08:28:20,400 --> 08:28:23,360
就是这样，我的意思是它们彼此非常相似，但没关系

81
08:28:23,360 --> 08:28:26,160
同样，对于此处的关键字，您必须

82
08:28:26,160 --> 08:28:30,160
输入我认为它并没有真正说明多少是 100

83
08:28:30,160 --> 08:28:33,512
您拥有的字符并且您必须在此处使用逗号分隔您的关键字

84
08:28:33,512 --> 08:28:38,080
我只想说并注意并确保安全

85
08:28:38,080 --> 08:28:40,720
哇，并确保你实际上不必

86
08:28:40,720 --> 08:28:45,120
嗯，让我们看看繁荣

87
08:28:45,120 --> 08:28:47,912
我认为你不必在他们之间留出空间，我只是要离开

88
08:28:47,912 --> 08:28:52,232
它就像一个笔记安全云好这些是我的关键字所以

89
08:28:52,232 --> 08:28:55,512
我要保存这个并记住我们在 ios 中准备

90
08:28:55,512 --> 08:28:58,800
提交部分，这样也完成了

91
08:28:58,800 --> 08:29:04,872
我们的应用程序版本就在那里版权我们只能说 2022 像素

92
08:29:04,872 --> 08:29:06,872
嗯嗯

93
08:29:06,872 --> 08:29:11,360
版权所有

94
08:29:11,360 --> 08:29:14,640
好吧，这些只是大词别担心

95
08:29:14,640 --> 08:29:19,592
嗯，差不多就是这样

96
08:29:19,592 --> 08:29:23,120
嗯，我认为我们不需要做更多

97
08:29:23,120 --> 08:29:27,592
老实说在这里，我们甚至不必拥有

98
08:29:27,592 --> 08:29:30,400
现在需要签名和

99
08:29:30,400 --> 08:29:34,640
让我们看看，还需要在这里找到联系信息所以让我们说

100
08:29:34,640 --> 08:29:37,680
破坏者和我的

101
08:29:37,680 --> 08:29:42,320
姓，然后我要输入一些

102
08:29:42,320 --> 08:29:46,872
现在假电话号码

103
08:29:46,872 --> 08:29:52,552
类似的东西，这是我对像素的支持

104
08:29:52,552 --> 08:29:55,512
就像这样不需要签名

105
08:29:55,512 --> 08:29:58,960
在这里我们有版本发布，你可以看到它说这个应用程序

106
08:29:58,960 --> 08:30:01,832
版本通过后可以自动发布，所以

107
08:30:01,832 --> 08:30:05,040
你有一些能力

108
08:30:05,040 --> 08:30:07,832
您希望如何实际发布您的应用程序，所以在您发送您的

109
08:30:07,832 --> 08:30:11,680
二进制到苹果，你可以选择苹果自动释放这个

110
08:30:11,680 --> 08:30:14,800
应用商店中所有用户的版本或

111
08:30:14,800 --> 08:30:17,360
你可以说手动发布这个版本，这意味着在你

112
08:30:17,360 --> 08:30:20,720
申请已被苹果接受并获得苹果批准

113
08:30:20,720 --> 08:30:24,552
您可以在适合您的任何时候手动按下释放按钮

114
08:30:24,552 --> 08:30:27,120
最好，或者你可以说自动释放

115
08:30:27,120 --> 08:30:31,440
应用审查后的这个版本现在不早了，所以你可以为它设置一个日期，但是

116
08:30:31,440 --> 08:30:34,232
我们会说手动发布这个版本好吗

117
08:30:34,232 --> 08:30:38,232
在这一切之后，我只是将这些信息保存在那里

118
08:30:38,232 --> 08:30:45,912
现在让我们转到应用程序隐私，所以这也是非常重要的记住要做

119
08:30:45,912 --> 08:30:49,360
因为我不认为

120
08:30:49,360 --> 08:30:52,720
嗯，我们实际上有

121
08:30:52,720 --> 08:30:57,120
是的，我真的相信现在我可以看到我已经准备了一些

122
08:30:57,120 --> 08:31:00,872
在下一章中有关这方面的信息，所以

123
08:31:00,872 --> 08:31:06,080
我们将在下一章中处理隐私政策，但要知道

124
08:31:06,080 --> 08:31:09,760
它就在那里，我们必须尽快修复它

125
08:31:09,760 --> 08:31:13,760
那么我们需要做的是真正为苹果做一个构建，因为

126
08:31:13,760 --> 08:31:18,400
这就像最重要的部分，你需要确保你

127
08:31:18,400 --> 08:31:22,872
就像本课程的第一章一样，我谈到了准备

128
08:31:22,872 --> 08:31:27,360
我们的ios应用程序在本课程的开头有一章

129
08:31:27,360 --> 08:31:31,192
我们实际上谈论创建我们的证书和配置文件以及所有

130
08:31:31,192 --> 08:31:34,800
用于 ios 发行版，所以我假设

131
08:31:34,800 --> 08:31:38,160
你已经经历过了，所以我们现在不必照顾所有

132
08:31:38,160 --> 08:31:42,960
好吧，现在让我们进入我们在 xcode 中的应用程序，看看我能不能调出

133
08:31:42,960 --> 08:31:47,512
xcode 它在附近的某个地方

134
08:31:47,512 --> 08:31:52,232
所以有我们的应用程序，我将进入跑步者并看看

135
08:31:52,232 --> 08:31:56,160
在签署、能力和发布时，我可以看到绝对有

136
08:31:56,160 --> 08:32:00,552
这个生产证书和配置文件没问题，所以我们需要什么

137
08:32:00,552 --> 08:32:04,232
在这里发布应用商店只是为了看看我们的

138
08:32:04,232 --> 08:32:09,192
runner 并在此处将目标更改为例如任何 ios 设备

139
08:32:09,192 --> 08:32:13,592
然后我们去产品然后我们说存档所以

140
08:32:13,592 --> 08:32:19,680
然后这个存档会为我们创建一个 ipa 文件，因为我

141
08:32:19,680 --> 08:32:22,640
本章开头提到的，这是 ipa 文件

142
08:32:22,640 --> 08:32:25,912
我们将提交给苹果和

143
08:32:25,912 --> 08:32:28,640
xcode 将在这方面为您提供很多帮助

144
08:32:28,640 --> 08:32:33,040
我不确定我是否喜欢这个，老实说我认为 xcode 隐藏了一个

145
08:32:33,040 --> 08:32:36,480
很多细节，通常我习惯喜欢在命令行中做事

146
08:32:36,480 --> 08:32:39,680
并简单地从视觉工作室代码做事，例如

147
08:32:39,680 --> 08:32:42,960
但是 xcode 将帮助您提交您的文件仍然是一件好事

148
08:32:42,960 --> 08:32:47,040
应用程序，因为在以前版本的 xcode 中喜欢

149
08:32:47,040 --> 08:32:50,552
许多年前，xcode 无法做到这一点，所以你有一个单独的应用程序

150
08:32:50,552 --> 08:32:57,360
将您的 ipa 文件实际上传到应用程序，这本身也很

151
08:32:57,360 --> 08:33:00,872
我不会说消极的身体是

152
08:33:00,872 --> 08:33:03,592
你必须经历的事情

153
08:33:03,592 --> 08:33:07,680
xcode 将在我的程序中处理所有这些，这是一个加号和一个减号

154
08:33:07,680 --> 08:33:12,000
至少有意见所以我只是在这里等待xcode

155
08:33:12,000 --> 08:33:16,160
做它的工作，很有可能如果

156
08:33:16,160 --> 08:33:19,912
这是您第一次使用

157
08:33:19,912 --> 08:33:22,400
你的证书

158
08:33:22,400 --> 08:33:26,320
基本上是在本课程开始时创建的，很有可能

159
08:33:26,320 --> 08:33:31,192
当 xcode 真正签署您的二进制文件及其所有内容时

160
08:33:31,192 --> 08:33:35,680
其他相关库你的 Macintosh 可能是

161
08:33:35,680 --> 08:33:40,000
将要求您提供此证书的密码，并且

162
08:33:40,000 --> 08:33:44,080
实际上它会要求你输入钥匙串的密码

163
08:33:44,080 --> 08:33:49,680
该证书存储在您的计算机上，因此通常是

164
08:33:49,680 --> 08:33:54,232
登录钥匙串，所以如果我在这里访问钥匙串，你会看到

165
08:33:54,232 --> 08:33:58,800
我有我的登录钥匙串，我在这里有证书，如您所见

166
08:33:58,800 --> 08:34:01,760
分布所以这就是我现在的那种

167
08:34:01,760 --> 08:34:06,480
在分配这个之后使用复制和嗯，你可以看到它

168
08:34:06,480 --> 08:34:10,320
存档权并没有真正签署过我的

169
08:34:10,320 --> 08:34:15,360
macintosh 会问我那个钥匙串的密码所以

170
08:34:15,360 --> 08:34:20,400
现在非常接近完成归档过程，所以

171
08:34:20,400 --> 08:34:24,552
对不起，让我们基本上看看它是怎么回事

172
08:34:24,552 --> 08:34:28,800
在实际创建我们的应用程序 ipa 文件之后，我们将

173
08:34:28,800 --> 08:34:35,120
将其提交给苹果，该应用程序将首先显示在此处

174
08:34:35,120 --> 08:34:39,832
在应用程序的构建部分

175
08:34:39,832 --> 08:34:43,120
商店连接视图

176
08:34:43,120 --> 08:34:48,320
所以让我们看看我们是否得到了我在这里提到的签名密码

177
08:34:48,320 --> 08:34:57,120
在屏幕底部，因此 5039 个文件中的 4660 个或 70 个文件

178
08:34:57,120 --> 08:35:01,760
编译并创建我们的二进制文件，所以它非常非常

179
08:35:01,760 --> 08:35:06,160
关闭让我们看看它是否可以成功地做到这一点

180
08:35:06,160 --> 08:35:11,912
我可以听到我的 Macintosh 嗯和粉丝现在全速运转

181
08:35:11,912 --> 08:35:15,832
这通常是你在最新的 uh 中听不到的东西

182
08:35:15,832 --> 08:35:20,320
max 或 macbook 专业人士，因为他们通常像风扇一样安静

183
08:35:20,320 --> 08:35:23,680
从来没有踢过，但这显然是一个沉重的

184
08:35:23,680 --> 08:35:30,160
此 Macintosh 执行更快的全速谷歌搜索的过程

185
08:35:30,160 --> 08:35:34,552
让我们看看它是否成功，这就是我们所看到的

186
08:35:34,552 --> 08:35:37,760
正如你所看到的，我正在谈论的那个对话说代码符号想要

187
08:35:37,760 --> 08:35:42,160
使用您的钥匙串中的 van.hawa nippor 进行签名以允许此输入

188
08:35:42,160 --> 08:35:45,760
登录钥匙串密码，因此它与您的证书无关

189
08:35:45,760 --> 08:35:49,192
实际上与您的证书有关，但与密码本身有关

190
08:35:49,192 --> 08:35:53,592
是登录钥匙串密码，所以通常是您计算机的密码，所以

191
08:35:53,592 --> 08:35:57,912
我只是要输入，然后我要说总是允许

192
08:35:57,912 --> 08:36:03,120
好的，所以在这样做之后希望 xcode 不是

193
08:36:03,120 --> 08:36:06,800
会再次用这个密码打扰我，但我知道在一些老

194
08:36:06,800 --> 08:36:10,000
xcode 的版本，当你真的不明白

195
08:36:10,000 --> 08:36:13,760
说总是允许，所以在签署您的申请时，您可能必须

196
08:36:13,760 --> 08:36:17,192
输入密码最多 20 次，具体取决于

197
08:36:17,192 --> 08:36:20,160
关于您的应用程序依赖于多少个库

198
08:36:20,160 --> 08:36:24,080
当我在一家公司工作时，我清楚地记得这一点，我当时是一名测试员

199
08:36:24,080 --> 08:36:27,912
告诉测试人员如何编译归档应用程序

200
08:36:27,912 --> 08:36:31,680
ios和我们都认为他正在输入他的密码

201
08:36:31,680 --> 08:36:35,832
证书不正确，所以现在我们得到了

202
08:36:35,832 --> 08:36:41,912
未找到模块 shareplus，这可能是因为 shareplus 是

203
08:36:41,912 --> 08:36:45,592
基本上是我们在应用程序中使用的东西

204
08:36:45,592 --> 08:36:48,800
因为它甚至还在继续存档

205
08:36:48,800 --> 08:36:52,400
虽然它说有些事情失败了，所以现在我们得到了一个

206
08:36:52,400 --> 08:36:56,640
这里有 pods runner 框架的问题，这看起来我的意思是我实际上是

207
08:36:56,640 --> 08:36:59,192
很高兴我们收到了这些错误，而且可能有些错误

208
08:36:59,192 --> 08:37:04,160
因为我们还没有完成正确的 pod 安装，所以我要做的是去

209
08:37:04,160 --> 08:37:08,400
此处和终端中的 Visual Studio 代码然后让我实际更改

210
08:37:08,400 --> 08:37:10,872
屏幕布局一点点让你看到我在做什么

211
08:37:10,872 --> 08:37:13,592
所以我要提出这个，这样你就可以更好地看到我在做什么，我会

212
08:37:13,592 --> 08:37:18,160
转到此处的 ios 文件夹

213
08:37:18,160 --> 08:37:22,640
好的，然后在这里你可以说 pod d integration

214
08:37:22,640 --> 08:37:26,640
基本上 pod 集成它将从中删除所有 ios 依赖项

215
08:37:26,640 --> 08:37:29,832
你的工作区，然后你可以说 pawn install 好

216
08:37:29,832 --> 08:37:33,760
这将从头开始重新安装所有依赖项，所以

217
08:37:33,760 --> 08:37:37,832
让我们看看，我可以看到 share plus 现在实际上已安装，所以它是

218
08:37:37,832 --> 08:37:40,720
生成 pods 项目和

219
08:37:40,720 --> 08:37:45,440
太好了，所以看起来很好，所以让我们进去看看我们是否可以

220
08:37:45,440 --> 08:37:52,640
呃做一个清理，所以我要去调试 sra 产品清理构建文件夹，让我们

221
08:37:52,640 --> 08:37:56,552
看看我们是否可以重新构建，这实际上可能需要一些时间

222
08:37:56,552 --> 08:38:01,512
因为现在我们真的清理了构建工件所以

223
08:38:01,512 --> 08:38:05,832
它基本上会从绝对开始开始存档过程，所以

224
08:38:05,832 --> 08:38:09,832
我只是要安静一会儿，让我们做它的工作，让我们看看是否

225
08:38:09,832 --> 08:38:14,960
存档过程成功了，所以这是实际的结果

226
08:38:14,960 --> 08:38:19,040
再次归档我们的应用程序，我们现在看到完全相同的问题

227
08:38:19,040 --> 08:38:24,160
在进行了 podly 集成并进行了全新的 pod 安装之后

228
08:38:24,160 --> 08:38:28,400
我们看到与 share plus 说模块 share plus not 完全相同的问题

229
08:38:28,400 --> 08:38:33,912
发现这可能是我们如何完成的问题，例如我们的

230
08:38:33,912 --> 08:38:36,800
嗯酒吧得到

231
08:38:36,800 --> 08:38:40,872
老实说，我可以从整个视频中删掉这个，但我是如此

232
08:38:40,872 --> 08:38:44,640
很高兴我们看到这些问题，因为

233
08:38:44,640 --> 08:38:48,800
归档一个 ios 应用程序，简单来说就是

234
08:38:48,800 --> 08:38:52,160
即使只是为 android 做同样的事情，也不总是会好起来的

235
08:38:52,160 --> 08:38:56,080
并不总是会好起来的，如果我从这个视频中删掉你，你

236
08:38:56,080 --> 08:38:58,872
会认为对我来说一切都很好，但事实并非如此

237
08:38:58,872 --> 08:39:02,400
为你工作，然后你会开始责备自己，但我真的很想

238
08:39:02,400 --> 08:39:07,512
把这些东西放在这门课上，这样你就可以清楚地看到像我这样的人试图

239
08:39:07,512 --> 08:39:12,000
告诉你怎么做的事情也需要自己了解这些怎么做以及为什么

240
08:39:12,000 --> 08:39:16,480
事情出了问题，所以我猜在这种情况下，因为我们已经

241
08:39:16,480 --> 08:39:20,400
已经完成了一个 pod install 它实际上是去清除

242
08:39:20,400 --> 08:39:24,552
为我们的整个颤振应用程序构建文件夹并执行

243
08:39:24,552 --> 08:39:29,440
flutter pop 从头开始​​，所以让我们继续我们的颤振

244
08:39:29,440 --> 08:39:34,160
在这里和底部的应用程序我只想说fluffer clean

245
08:39:34,160 --> 08:39:37,912
这将清理 ios 和 android 的工件

246
08:39:37,912 --> 08:39:40,480
好的，然后你会得到很多

247
08:39:40,480 --> 08:39:44,232
您的应用程序中的错误，因为它什么都不理解，所以我们

248
08:39:44,232 --> 08:39:49,440
然后说flutter pop 没事

249
08:39:49,440 --> 08:39:53,040
所以这将完成它的工作并基本上从头开始获取所有依赖项

250
08:39:53,040 --> 08:39:58,480
并将它们安装在您的应用程序中，然后我将在这里做什么

251
08:39:58,480 --> 08:40:01,192
是的，我们可以就这样离开它

252
08:40:01,192 --> 08:40:06,872
现在回到我们的 xcode，然后尝试从

253
08:40:06,872 --> 08:40:11,592
从头开始，让我们看看这一次是否会好一些

254
08:40:11,592 --> 08:40:16,872
希望这次不应该花太多时间，但你永远不会知道 xcode

255
08:40:16,872 --> 08:40:20,160
并且随着ios开发它有自己的

256
08:40:20,160 --> 08:40:24,800
古董，所以让我们在执行 pop get 之后等着看，如果这个过程是

257
08:40:24,800 --> 08:40:29,592
在 xcode 再次编译应用程序后是否会通过

258
08:40:29,592 --> 08:40:34,160
我可以看到和以前一样的问题，这意味着我们的吊舱

259
08:40:34,160 --> 08:40:38,080
integration 和 flutter clean 确实对

260
08:40:38,080 --> 08:40:42,000
应用程序本身，因为我已经做了很长时间的 ios 开发

261
08:40:42,000 --> 08:40:47,120
是时候我的腰带里还有一些工具可以拖出来使用

262
08:40:47,120 --> 08:40:51,592
作为软件工程师和 ios，我首先会使用的东西之一

263
08:40:51,592 --> 08:40:54,232
开发人员只是先看看

264
08:40:54,232 --> 08:40:59,360
我们的部署 ios 版本，在这里我们支持 ios 9，它非常

265
08:40:59,360 --> 08:41:03,912
这种共享能力很可能内置于

266
08:41:03,912 --> 08:41:07,120
我们拖入应用程序的插件与此不兼容

267
08:41:07,120 --> 08:41:10,720
ios 版本，所以首先我要把它升级到 ios 13

268
08:41:10,720 --> 08:41:15,280
目前他们的 ios 13 14 和 50 非常受欢迎，所以有

269
08:41:15,280 --> 08:41:19,760
录制这个 um 课程时的最新版本的 ios 所以首先我

270
08:41:19,760 --> 08:41:23,512
接下来我要做的是

271
08:41:23,512 --> 08:41:29,120
从我们的项目在这里，所以我在这里看看，你可以看到我在

272
08:41:29,120 --> 08:41:34,160
这个notes项目的ios文件夹，让我们进去吧

273
08:41:34,160 --> 08:41:39,832
那么我要做的第一件事就是删除那个嗯我想知道我是不是

274
08:41:39,832 --> 08:41:43,040
实际上也应该删除 pod 文件

275
08:41:43,040 --> 08:41:49,360
也许让我们删除 podfile.lock 并从

276
08:41:49,360 --> 08:41:55,592
项目好，那么我会在这里做慌乱的清洁

277
08:41:55,592 --> 08:41:59,760
从项目中移除了所有的罐子

278
08:41:59,760 --> 08:42:06,080
然后在撤消之后，我将实际查看我们的 pot 文件

279
08:42:06,080 --> 08:42:10,800
看看我们所有的 ios 依赖项，看看它们的样子，所以我要走了

280
08:42:10,800 --> 08:42:15,120
停止程序的执行，然后我将打开一个名为 pod 的文件

281
08:42:15,120 --> 08:42:18,872
文件，这是你所有的 ios 依赖项基本上存储的地方

282
08:42:18,872 --> 08:42:23,592
可以看到平台是ios 13。所以我们的部署目标很奇怪

283
08:42:23,592 --> 08:42:27,440
是 ios 9，所以这可能是问题的潜在根源

284
08:42:27,440 --> 08:42:32,640
这样做之后，我们就有了我们的 pod 文件，是的，这看起来不错

285
08:42:32,640 --> 08:42:38,000
既然如此，那么让我们进入航站楼

286
08:42:38,000 --> 08:42:41,280
在公寓干净之后让我们说翻牌

287
08:42:41,280 --> 08:42:45,592
flutter pop get 将要重新拖动

288
08:42:45,592 --> 08:42:50,480
例如，我们对 Flutter 项目和 ios 项目的依赖项

289
08:42:50,480 --> 08:42:55,760
然后我们可以回去我实际上要杀死xcode并打开

290
08:42:55,760 --> 08:43:00,232
ios文件夹并打开

291
08:43:00,232 --> 08:43:04,800
再次项目工作区，我现在可以在这里看到豆荚不是

292
08:43:04,800 --> 08:43:09,192
真的安装好了，让我们自己去安装 Pod，所以我

293
08:43:09,192 --> 08:43:13,280
说 pod install 这将安装所有依赖项和

294
08:43:13,280 --> 08:43:17,360
让我们看看这里并说出它在说什么

295
08:43:17,360 --> 08:43:21,192
就使用firebase的商店而言，云火力支持正在定义好的那些看起来

296
08:43:21,192 --> 08:43:24,552
很好，这里说 coco pods 没有看到你项目的基本配置

297
08:43:24,552 --> 08:43:28,160
因为您的项目已经为 cocoapods 设置了自定义配置

298
08:43:28,160 --> 08:43:31,912
集成工作请设置目标的基本配置

299
08:43:31,912 --> 08:43:37,440
跑步者以支持文件为目标等等等等或包含目标支持文件

300
08:43:37,440 --> 08:43:41,512
在您的构建配置中，因此这实际上可能非常重要，因为我们

301
08:43:41,512 --> 08:43:46,000
可以在这里看到，所以我们的设置可能有问题

302
08:43:46,000 --> 08:43:50,552
当我们说我们创建了我们的应用程序时，使用颤振创建项目

303
08:43:50,552 --> 08:43:56,480
但让我们记住这一点并尝试

304
08:43:56,480 --> 08:44:01,192
进去再打开一次我们的工作区，现在我可以看到所有的 pod

305
08:44:01,192 --> 08:44:05,512
在这里开发吊舱还可以

306
08:44:05,512 --> 08:44:10,960
share plus 就在那里 pod 可以，pod 规格 pod 规格是什么

307
08:44:10,960 --> 08:44:14,960
说它实际上说平台应该是 ios 8 所以它支持 ios 8 所以

308
08:44:14,960 --> 08:44:18,800
这不是问题，所以我现在要做的是在完成所有这些之后

309
08:44:18,800 --> 08:44:22,232
我将基本上尝试再次构建这个项目，所以我要

310
08:44:22,232 --> 08:44:28,000
用命令 shift k 在这里清理干净的构建文件夹，所以眨眼基本上是干净的

311
08:44:28,000 --> 08:44:33,512
您的构建文件夹以及所有这些都在进行中

312
08:44:33,512 --> 08:44:38,400
编辑器功能很好，所以我基本上要开始做一个

313
08:44:38,400 --> 08:44:42,552
嗯产品并再次存档，然后我会

314
08:44:42,552 --> 08:44:46,160
在另一边见，无论成功还是失败，如果失败，我们将

315
08:44:46,160 --> 08:44:50,480
会修复它，所以让我们看看好吧，现在我可以看到了

316
08:44:50,480 --> 08:44:54,320
在做完我必须做的所有体操之后

317
08:44:54,320 --> 08:44:59,280
那么我们的应用程序最终编译没有问题并且是

318
08:44:59,280 --> 08:45:02,400
老实说，这是我相信许多课程的事情之一

319
08:45:02,400 --> 08:45:06,080
当您分发您的

320
08:45:06,080 --> 08:45:09,912
您实际上经历了很多应用程序，而不仅仅是您按

321
08:45:09,912 --> 08:45:13,832
按钮并提交您的申请，如果一切顺利，您通常会做得很好

322
08:45:13,832 --> 08:45:18,160
设置正确然后就是这种情况但是你必须设置

323
08:45:18,160 --> 08:45:21,680
一切都正确，所以这里发生的事情是我们有

324
08:45:21,680 --> 08:45:28,400
发布一些事情我所做的只是一步一步地命名它们是我

325
08:45:28,400 --> 08:45:32,320
首先碰到了我们应用的部署目标

326
08:45:32,320 --> 08:45:37,912
从 9 到 13。所以你可以通过在 xcode 中单击你的工作区然后找到它

327
08:45:37,912 --> 08:45:42,640
单击此处的运行器目标常规选项卡，然后单击部署

328
08:45:42,640 --> 08:45:47,040
信息我把它撞到 ios 13 所以这是我做的第一件事

329
08:45:47,040 --> 08:45:50,552
但是我认为这不一定与

330
08:45:50,552 --> 08:45:54,160
解决这个问题我们做的另一件事

331
08:45:54,160 --> 08:45:58,320
终端是清洁我们所有的锅，我说

332
08:45:58,320 --> 08:46:03,360
rmrf pods 现在我们从 ios 发出该命令

333
08:46:03,360 --> 08:46:07,760
文件夹 如果我打开这个 ios 文件夹，你会看到这里有一个文件夹

334
08:46:07,760 --> 08:46:12,960
称为 pod 什么是 pod pod 基本上是您的应用程序依赖项

335
08:46:12,960 --> 08:46:18,320
对于 ios，这就是 Flutter 管理您的 ios 应用程序依赖项的方式

336
08:46:18,320 --> 08:46:22,320
这些库例如 firebase 和这个共享库

337
08:46:22,320 --> 08:46:27,912
我们只是拖进来他们基本上在使用它们是依赖项

338
08:46:27,912 --> 08:46:32,800
Flutter 使用第三方软件 cocoapods 进行管理，您必须

339
08:46:32,800 --> 08:46:36,552
在您的计算机上安装 cocoapods 甚至能够

340
08:46:36,552 --> 08:46:40,552
与 pod 交互，因此互联网上有很多关于如何操作的信息

341
08:46:40,552 --> 08:46:44,800
安装 cocoapods 但它通常是伪果酱安装 cocoapods 我认为

342
08:46:44,800 --> 08:46:49,680
也许你甚至可以使用自制软件来安装 cocoapods 但我通常使用

343
08:46:49,680 --> 08:46:53,040
sudo jam 或 jam 在这种情况下，但你需要 sudo

344
08:46:53,040 --> 08:46:57,192
通常是安装 cocoapods 所以我们做了什么我们移除了花盆

345
08:46:57,192 --> 08:47:01,360
文件夹我们删除了 podfile 锁，这对你来说很舒服

346
08:47:01,360 --> 08:47:05,192
用 npm 支持 web 开发，这就像你的包锁

347
08:47:05,192 --> 08:47:08,640
文件，如果您对后端开发不满意，基本上是一个 pod

348
08:47:08,640 --> 08:47:14,160
文件锁是一个文件，用于存储有关所有依赖项的信息

349
08:47:14,160 --> 08:47:19,512
当前已安装，而 pod 文件存储信息

350
08:47:19,512 --> 08:47:24,800
关于您需要哪些依赖项和 pod 文件日志存储有关信息

351
08:47:24,800 --> 08:47:30,000
现在已集成到您的应用程序中的那些，因此我们将其删除

352
08:47:30,000 --> 08:47:33,440
只是为了确保在下一个 pod install

353
08:47:33,440 --> 08:47:37,592
我们所有的依赖项都将全新安装，无论是什么

354
08:47:37,592 --> 08:47:41,592
在 pod 文件锁内，所以我们必须执行几个步骤

355
08:47:41,592 --> 08:47:46,160
接受，但最后我们管理了哦，我们也不要忘记颤抖干净，我们也

356
08:47:46,160 --> 08:47:50,000
发出flutter clean，所以经过所有这些步骤，我们终于成功了

357
08:47:50,000 --> 08:47:54,400
构建我们的应用程序，正如您在此屏幕中看到的那样，我们来到了这个存档

358
08:47:54,400 --> 08:47:58,800
部分，所以我想在这里看一下

359
08:47:58,800 --> 08:48:01,832
在我的笔记上看到

360
08:48:01,832 --> 08:48:05,120
嗯，是的，我们已经完成了密码签名

361
08:48:05,120 --> 08:48:09,280
等等等等，现在我们基本上嗯

362
08:48:09,280 --> 08:48:13,760
基本上在这里创建了这个 ipa 文件，所以你需要做一个

363
08:48:13,760 --> 08:48:17,192
在这里然后你按下分发应用程序按钮并说应用程序商店连接和

364
08:48:17,192 --> 08:48:20,872
说发送发送，这将对

365
08:48:20,872 --> 08:48:25,512
为您准备的二进制文件，它将连接到应用程序

366
08:48:25,512 --> 08:48:29,192
存储连接，你们中的一些人可能会立即

367
08:48:29,192 --> 08:48:32,872
收到一个错误，说我不知道​​如何连接，那是因为

368
08:48:32,872 --> 08:48:35,832
你还没有进入你的嗯

369
08:48:35,832 --> 08:48:39,680
如果您转到 xcode 首选项，则 xcode 中的个人资料信息有一个部分

370
08:48:39,680 --> 08:48:44,800
调用帐户，您需要确保您基本上添加了您的应用程序 Apple id

371
08:48:44,800 --> 08:48:47,760
使用您在 xcode 中的帐户进行任何操作

372
08:48:47,760 --> 08:48:51,120
为了使分发真正起作用，所以我要说的是应用商店

373
08:48:51,120 --> 08:48:56,232
连接这里和下一个 上传到应用商店 连接下一个

374
08:48:56,232 --> 08:49:03,120
所以让我们进去吧

375
08:49:03,120 --> 08:49:07,360
好的，它说好的上传你的应用符号

376
08:49:07,360 --> 08:49:10,640
管理版本和内部版本号我不太喜欢，所以我们要

377
08:49:10,640 --> 08:49:13,280
关闭，所以我们不会使用它，好吧

378
08:49:13,280 --> 08:49:17,512
让我把屏幕放大一点然后在这里按下一步

379
08:49:17,512 --> 08:49:22,552
在这里你必须选择你的个人资料，看起来不错

380
08:49:22,552 --> 08:49:26,640
按那里的下一步按钮，这将联系应用商店连接

381
08:49:26,640 --> 08:49:31,280
并且根据您的应用程序大小，这实际上可能需要很长时间

382
08:49:31,280 --> 08:49:35,280
我正在处理的一些应用程序的时间

383
08:49:35,280 --> 08:49:40,480
不是针对个人，而是针对各个公司，即使我的一万下载

384
08:49:40,480 --> 08:49:43,440
上传嗯[音乐]

385
08:49:43,440 --> 08:49:48,080
互联网连接这个过程可能需要很长时间所以让我们看看多长时间

386
08:49:48,080 --> 08:49:51,192
之所以需要，是因为您在上传过程中看到它不仅仅是上传

387
08:49:51,192 --> 08:49:54,320
你的二进制文件实际上是在联系苹果和

388
08:49:54,320 --> 08:49:58,800
甚至验证你的很多资产，比如你的图片，它正在评估你的图标

389
08:49:58,800 --> 08:50:03,120
即使您的应用程序中有其他资源，它也是有效的验证

390
08:50:03,120 --> 08:50:06,400
我相信它甚至会检查你是否在做任何

391
08:50:06,400 --> 08:50:10,640
您不应该进行的 api 调用，我不是在谈论网络 api

392
08:50:10,640 --> 08:50:14,800
调用，但我实际上是在谈论 ios sdk api 调用，例如，如果你有

393
08:50:14,800 --> 08:50:20,232
在您的应用程序中隐藏了一些工作，这些工作正在对某些 um 进行呼叫

394
08:50:20,232 --> 08:50:26,720
ios sdk 级别的私有 api，所以现在我们就让它做它的事

395
08:50:26,720 --> 08:50:31,832
然后上传，嗯，我们会等到它完成

396
08:50:31,832 --> 08:50:35,832
好吧，上传过程似乎已经过去了

397
08:50:35,832 --> 08:50:42,080
这次实际上好多了，嗯，我实际上必须承认

398
08:50:42,080 --> 08:50:46,800
这里有一些东西，我的上传过程花了很长时间

399
08:50:46,800 --> 08:50:51,512
非常非常长的时间我说的是超过 30 分钟，即使我在

400
08:50:51,512 --> 08:50:55,192
一千微米光纤

401
08:50:55,192 --> 08:51:00,232
下载我的互联网连接的上传速度，这仍然需要一个

402
08:51:00,232 --> 08:51:05,512
很长一段时间，这可能是一个临时错误，苹果上的一个小故障

403
08:51:05,512 --> 08:51:09,192
苹果的应用商店连接网站，或者它可能只是一个很好的东西

404
08:51:09,192 --> 08:51:13,280
现在事情要花很长时间你永远不知道苹果是什么

405
08:51:13,280 --> 08:51:18,000
这很不幸，但现在它已经过去了，我可以看到那个

406
08:51:18,000 --> 08:51:22,000
您将收到此消息，告诉您您的应用已成功上传

407
08:51:22,000 --> 08:51:26,720
好吧，现在让我们谈谈嗯

408
08:51:26,720 --> 08:51:31,832
您将从苹果收到的推送通知电子邮件，看起来像

409
08:51:31,832 --> 08:51:35,192
提交申请后，您可能会收到一封来自

410
08:51:35,192 --> 08:51:40,232
看起来有点像这样的苹果，在这里你会看到它说我们我我

411
08:51:40,232 --> 08:51:43,360
想在最近提交的应用程序中遇到更多问题我很棒的笔记你

412
08:51:43,360 --> 08:51:45,680
交付成功，但您提到您可能希望更正

413
08:51:45,680 --> 08:51:49,280
在您的下一辆卡车中出现以下问题，缺少推送通知权利

414
08:51:49,280 --> 08:51:52,400
这可能有点

415
08:51:52,400 --> 08:51:55,680
让一些开发人员感到不安，但这仅仅是因为我们现在

416
08:51:55,680 --> 08:51:58,872
在 firebase 上的应用程序中使用 firebase 是

417
08:51:58,872 --> 08:52:02,080
能够处理推送通知，以便您可以发送推送通知

418
08:52:02,080 --> 08:52:07,760
从 firebase 控制台到您的用户，但我们的应用程序不是

419
08:52:07,760 --> 08:52:11,040
目前利用推送通知

420
08:52:11,040 --> 08:52:14,552
你可以忽略这封电子邮件

421
08:52:14,552 --> 08:52:18,960
不要试图修复任何东西，因为这封电子邮件的全部内容是我们已经

422
08:52:18,960 --> 08:52:22,872
分析了你的二进制文件，看起来你正在访问一些推送通知

423
08:52:22,872 --> 08:52:27,680
apis 但是您忘记为应用程序启用推送通知

424
08:52:27,680 --> 08:52:31,680
这仅仅是因为当您捆绑您的应用程序并将其发送给苹果时

425
08:52:31,680 --> 08:52:34,720
一个你可能没有的 ipa

426
08:52:34,720 --> 08:52:39,592
实际上看看，但如果你去 Visual Studio 代码对不起，如果你去 xcode

427
08:52:39,592 --> 08:52:42,720
此存档浏览器右键单击您的跑步者

428
08:52:42,720 --> 08:52:48,000
在这里并在 finder 中说 show 你会看到这个 xcode 存档文件并说 show

429
08:52:48,000 --> 08:52:51,680
包装内容，在这里你可能会看到一些产品和

430
08:52:51,680 --> 08:52:56,800
应用程序运行我们的应用程序，所以这整个事情就像你的苹果的 ipa 文件

431
08:52:56,800 --> 08:53:01,040
现在已在此运行器应用程序中收到有关信息

432
08:53:01,040 --> 08:53:04,872
它本身包含了什么样的库，你实际上可以

433
08:53:04,872 --> 08:53:08,320
右键单击运行或应用程序并说显示包内容，在这里你会看到

434
08:53:08,320 --> 08:53:12,400
您的应用程序附带的所有框架，您可以看到

435
08:53:12,400 --> 08:53:16,720
firebase 等等等等这些框架之一

436
08:53:16,720 --> 08:53:21,680
很可能其中一个 Firebase 框架在内部使用它

437
08:53:21,680 --> 08:53:24,720
正在使用一些与推送通知相关的 api，但事实并非如此

438
08:53:24,720 --> 08:53:29,192
必然意味着它处于活动状态并且正在被积极使用

439
08:53:29,192 --> 08:53:33,592
所以这只是苹果告诉你的一封电子邮件，嘿你可能忘记了

440
08:53:33,592 --> 08:53:36,960
做点什么，但你可以不理会这封电子邮件，说不，我没有

441
08:53:36,960 --> 08:53:40,640
忘记任何事情，因为我们的应用程序中没有推送通知

442
08:53:40,640 --> 08:53:44,720
好的，这就是那封电子邮件

443
08:53:44,720 --> 08:53:48,000
嗯，这似乎很好，然后

444
08:53:48,000 --> 08:53:51,360
电子邮件 您可能还会收到一封类似这样的电子邮件，告诉您

445
08:53:51,360 --> 08:53:56,960
嘿，您使用此 sku 的申请现已提交并已完成

446
08:53:56,960 --> 08:54:01,280
处理，这封电子邮件的字面意思是

447
08:54:01,280 --> 08:54:05,192
此应用程序已完成处理，您可以将其安装在您的 ios 或

448
08:54:05,192 --> 08:54:10,320
mac 设备，您可以像在下一章中看到的那样对其进行测试，但是

449
08:54:10,320 --> 08:54:13,192
就像我们通常在每一章做的那样

450
08:54:13,192 --> 08:54:16,872
在每一章的结尾，我们承诺我们所做的事情，我们确保我们

451
08:54:16,872 --> 08:54:21,120
提交并标记这些更改，所以让我在屏幕上进行一些重新洗牌

452
08:54:21,120 --> 08:54:24,232
在这里，让我们去，我要关闭

453
08:54:24,232 --> 08:54:30,080
像这样的 xcode 转到我们的应用程序我的终端笔记和

454
08:54:30,080 --> 08:54:34,480
让我们看看 git status 有一些变化，所以我要走了

455
08:54:34,480 --> 08:54:37,912
cd 在我们的主文件夹中获取状态

456
08:54:37,912 --> 08:54:43,120
应用我的笔记，因为我在 ios 文件夹中，所以我只是做了 cd dot dot

457
08:54:43,120 --> 08:54:46,720
像这样，所以现在我在主文件夹中，网格状态显示了这个，我只是

458
08:54:46,720 --> 08:54:51,120
会说 git add 好吧，让我们看看我们的日志最后

459
08:54:51,120 --> 08:54:55,192
提交是第 28 步，所以让我们认为它是提交

460
08:54:55,192 --> 08:54:59,192
步骤 29 如屏幕底部的标题所示，我们只需按下我们的

461
08:54:59,192 --> 08:55:03,120
之后的变化现在让我们标记我们的

462
08:55:03,120 --> 08:55:07,592
也改变了，说第 29 步，然后按一下

463
08:55:07,592 --> 08:55:14,160
标签就像那样，所以现在可以作为

464
08:55:14,160 --> 08:55:17,680
预计所以我们通常在结束时

465
08:55:17,680 --> 08:55:20,400
每章的结尾都是我们谈论我们将要做什么

466
08:55:20,400 --> 08:55:24,800
在下一章中讨论以及在下一章中我们需要做什么

467
08:55:24,800 --> 08:55:29,440
实际上是发布我们的 ios 应用程序，我们现在已将其发送给苹果，而苹果已经

468
08:55:29,440 --> 08:55:34,960
终于完成了处理并建立了它现在准备就绪的意义

469
08:55:34,960 --> 08:55:38,720
实际提交给苹果，这就是我们接下来要做的

470
08:55:38,720 --> 08:55:43,440
章节提交应用程序以发布到应用程序商店，所以我会看到

471
08:55:43,440 --> 08:55:47,592
大家好，欢迎来到 Flutter 课程的第 48 章

472
08:55:47,592 --> 08:55:50,000
我们一直在使用的前几章

473
08:55:50,000 --> 08:55:54,800
创建一个 ipa 文件并将其发送到苹果，在本章中，我们将

474
08:55:54,800 --> 08:55:58,960
确保我们正在发布该 ipa 文件，这意味着我们要告诉

475
08:55:58,960 --> 08:56:02,872
苹果，嘿，我们已经准备好使用这个 ipa 文件了，我们希望你

476
08:56:02,872 --> 08:56:06,872
嗯，为我们审查这个文件和审查过程

477
08:56:06,872 --> 08:56:11,360
对于苹果和谷歌来说有点不同，例如

478
08:56:11,360 --> 08:56:15,280
苹果有时呃有一个真正的用户在看你的应用程序并且

479
08:56:15,280 --> 08:56:20,400
有时，例如，如果您要求苹果进行快速审查，他们可能不会

480
08:56:20,400 --> 08:56:24,000
甚至看看它，他们可能只是说好吧它只是工作它不会崩溃

481
08:56:24,000 --> 08:56:29,120
然后他们就通过了，对于谷歌来说，它也可能是一个

482
08:56:29,120 --> 08:56:32,080
完全不同的过程，但我们现在在本章中

483
08:56:32,080 --> 08:56:37,360
将专注于 ios app app 提交的基本工作原理

484
08:56:37,360 --> 08:56:41,040
所以当你像我们一样发送 ipa 文件时

485
08:56:41,040 --> 08:56:46,720
完成到苹果，它将在一个叫做试飞的地方提供，所以让我带上

486
08:56:46,720 --> 08:56:54,640
我们的网络浏览器到屏幕上，让我们去看看我们是否可以，如果你真的可以

487
08:56:54,640 --> 08:56:59,040
带来我们之前的观点，让我们看看应用程序

488
08:56:59,040 --> 08:57:03,280
存储连接，自上次以来我已经重新启动了我的电脑，所以我可能有

489
08:57:03,280 --> 08:57:06,480
基本上

490
08:57:06,480 --> 08:57:10,232
再次登录，感谢上帝，我实际上不必重新启动整个

491
08:57:10,232 --> 08:57:14,080
处理并实际在这里获取我的安全密钥

492
08:57:14,080 --> 08:57:17,760
它只允许我登录，所以让我们去应用商店连接中我很棒的应用程序

493
08:57:17,760 --> 08:57:20,552
然后你会在这里看到一个名为 test flight 的标签

494
08:57:20,552 --> 08:57:25,120
和试飞，你现在会看到我们的构建然后在这里可用

495
08:57:25,120 --> 08:57:30,480
基本上可以测试了

496
08:57:30,480 --> 08:57:34,320
我们还需要做的是在缺少的合规性中进入这里，然后点击

497
08:57:34,320 --> 08:57:38,000
在这个管理上，它说你的应用程序使用加密选择是

498
08:57:38,000 --> 08:57:41,680
并且它说出口日志要求包含加密的产品必须是

499
08:57:41,680 --> 08:57:46,400
呃得到了适当的授权，所以在这里我们可以说是

500
08:57:46,400 --> 08:57:49,360
它说你的应用程序符合出口要求

501
08:57:49,360 --> 08:57:52,552
有资格参加该类别中提供的任何考试确保您的应用

502
08:57:52,552 --> 08:57:55,912
符合标准实际上我们可以去之前在这里说不，因为

503
08:57:55,912 --> 08:58:00,480
如果您有责任，我们不会直接使用 um

504
08:58:00,480 --> 08:58:03,680
遵守出口法规，如果您的

505
08:58:03,680 --> 08:58:06,800
加密存在我只会说废话废话好的

506
08:58:06,800 --> 08:58:11,120
现在好了，然后我们说开始内部测试好了，所以现在合规性

507
08:58:11,120 --> 08:58:15,760
错误将会消失，所以现在我们已经完成了，你会看到

508
08:58:15,760 --> 08:58:19,440
在应用商店连接中有一个名为 test flight 的部分，在这里

509
08:58:19,440 --> 08:58:24,080
例如，您可以邀请第三方测试人员

510
08:58:24,080 --> 08:58:28,800
到你的 um 来测试你的应用程序，你是

511
08:58:28,800 --> 08:58:34,080
还允许向用户授予对您的应用程序的访问权限

512
08:58:34,080 --> 08:58:38,232
你邀请了谁来应用商店连接所以它非常重要

513
08:58:38,232 --> 08:58:41,592
了解区别一个是内部测试，另一个是

514
08:58:41,592 --> 08:58:45,280
例如，如果您想提交申请以供第三方测试

515
08:58:45,280 --> 08:58:48,960
像不为贵公司工作的人这样的聚会，例如在这个

516
08:58:48,960 --> 08:58:52,552
案例我们将在本章中使用内部测试，但只知道

517
08:58:52,552 --> 08:58:57,192
该试飞是在 ios 和 mac os 上的一个应用程序，

518
08:58:57,192 --> 08:59:00,160
您实际上可以在那些操作系统上下载

519
08:59:00,160 --> 08:59:05,592
您可以使用试飞来测试您自己的 ios 应用程序或 ma​​c

520
08:59:05,592 --> 08:59:11,440
将应用程序提交到应用程序商店之前，好的

521
08:59:11,440 --> 08:59:15,912
所以这就是试飞的地方，现在我们正在谈论所有

522
08:59:15,912 --> 08:59:20,232
这些让我们也确保我们知道我们有一点安全性

523
08:59:20,232 --> 08:59:23,912
问题嗯，我们还没有真正讨论过

524
08:59:23,912 --> 08:59:30,400
还有很多，但我用瑞典语的呃呃建造了这个嗯，你说的是中场和那个

525
08:59:30,400 --> 08:59:35,360
就像我故意将其内置到本课程中一样，因此您将

526
08:59:35,360 --> 08:59:38,400
看看重新提交过程是如何运作的

527
08:59:38,400 --> 08:59:43,280
如果我们带来我们的代码，让我们把我们的 mynotes 代码带到这里

528
08:59:43,280 --> 08:59:48,720
看看我们的嗯，我相信这是我们的服务之一

529
08:59:48,720 --> 08:59:51,192
笔记服务哎呀

530
08:59:51,192 --> 08:59:55,192
没有服务是完全的哦，因为那是人群服务所以

531
08:59:55,192 --> 08:59:59,912
让我们看看服务和云笔记，我们有

532
08:59:59,912 --> 09:00:05,120
人群云存储云Firebase云存储它被称为好吧我忘记了

533
09:00:05,120 --> 09:00:10,400
名字，我们在这里有这个小全域，你看

534
09:00:10,400 --> 09:00:16,080
所以现在这个所有领域正在做的是说去得到所有的

535
09:00:16,080 --> 09:00:20,800
笔记集合中的所有笔记中的笔记

536
09:00:20,800 --> 09:00:25,912
所以这样做然后从所有的笔记中记住所有的笔记不是

537
09:00:25,912 --> 09:00:30,720
它只记录您的笔记并创建云笔记

538
09:00:30,720 --> 09:00:37,040
然后它会根据您的身份将它们过滤掉，这是一个巨大的安全问题

539
09:00:37,040 --> 09:00:40,232
因为通过订阅并获得

540
09:00:40,232 --> 09:00:44,160
这个流你几乎在阅读其他人的笔记以及我们的

541
09:00:44,160 --> 09:00:48,400
很快我们会解决的，别担心我们想要的是不

542
09:00:48,400 --> 09:00:53,360
甚至允许任何用户阅读其他人的笔记，然后我们就走了

543
09:00:53,360 --> 09:00:57,192
更改所有注释的此实现并重新提交

544
09:00:57,192 --> 09:00:59,592
我们对苹果的申请

545
09:00:59,592 --> 09:01:03,120
我不希望我们向苹果提交应用程序，然后向谷歌提交应用程序，然后

546
09:01:03,120 --> 09:01:06,800
在两个平台上重新提交它，因为正如我所说的那样，我只是想要

547
09:01:06,800 --> 09:01:10,640
我们只向一个平台提交一些东西，然后把它拉回来，然后

548
09:01:10,640 --> 09:01:14,400
再次发送，但不要担心，我只是给你一些准备

549
09:01:14,400 --> 09:01:18,000
会发生什么

550
09:01:18,000 --> 09:01:21,272
我们现在需要做的首先是作为屏幕底部的标题

551
09:01:21,272 --> 09:01:25,760
如果我们需要为两个 ios 安装试飞，您还必须

552
09:01:25,760 --> 09:01:30,960
在你的mac上安装它，你可以去

553
09:01:30,960 --> 09:01:36,640
到你的 Macintosh 上的应用商店所以应用商店应用然后搜索测试

554
09:01:36,640 --> 09:01:39,120
飞行后就好了

555
09:01:39,120 --> 09:01:42,960
搜索试飞 你可以用这个安装按钮安装它 我有

556
09:01:42,960 --> 09:01:46,552
已经安装在我的电脑上，所以我在这里看不到安装按钮，我可以

557
09:01:46,552 --> 09:01:50,640
只需打开它，在你为你完成之后

558
09:01:50,640 --> 09:01:55,680
macintosh 你还需要为你的 um 安装它

559
09:01:55,680 --> 09:02:01,120
ios 设备，在这里我实际上有我的 iphone 我的小宝贝

560
09:02:01,120 --> 09:02:06,000
iphone 13 pro max 在这里，我有

561
09:02:06,000 --> 09:02:09,832
如您所见，在屏幕上镜像该 iphone，以便您可以看到

562
09:02:09,832 --> 09:02:12,552
屏幕实际上是我的 iphone 就在这里

563
09:02:12,552 --> 09:02:17,272
试飞是一个可以在这里找到的应用程序，所以这是

564
09:02:17,272 --> 09:02:20,800
在 ios 上测试飞行应用程序，所以目前你可以看到我没有

565
09:02:20,800 --> 09:02:26,160
访问我的节点应用程序，但我们将很快解决这个问题，或者我的真棒

566
09:02:26,160 --> 09:02:30,800
笔记，我们称之为好的，所以让我们继续在这里，有一个

567
09:02:30,800 --> 09:02:34,232
看看我们需要讨论的下一件事，那就是添加一个用户到

568
09:02:34,232 --> 09:02:39,512
测试灯，所以我如何访问 um

569
09:02:39,512 --> 09:02:44,160
我们已经提交了这个构建，以便我可以通过试飞很好地测试它

570
09:02:44,160 --> 09:02:48,872
我在这里用来测试的用户，我知道那个用户是

571
09:02:48,872 --> 09:02:53,680
pixelity.sweden gmail.com 所以我现在要做的是

572
09:02:53,680 --> 09:02:58,480
邀请该用户测试此构建，所以让我们进行内部测试并

573
09:02:58,480 --> 09:03:03,512
按加号按钮，在这里我只想说我的用户还好

574
09:03:03,512 --> 09:03:07,912
然后按创建按钮，在这里你会看到一个加号按钮

575
09:03:07,912 --> 09:03:12,400
测试仪 0 我只想说 plus 在这里我将使用一个

576
09:03:12,400 --> 09:03:15,360
像素切换，所以我只想说在这里添加

577
09:03:15,360 --> 09:03:20,000
好的，它说已将一名测试员添加到该组中，这很漂亮

578
09:03:20,000 --> 09:03:23,440
很多，所以我不必在那里做任何额外的事情

579
09:03:23,440 --> 09:03:29,592
所以我接下来要做的就是等待嗯一封电子邮件由应用程序发送

580
09:03:29,592 --> 09:03:33,512
商店连接到我的用户，它刚刚被发送，我要打开它，这样你就可以了

581
09:03:33,512 --> 09:03:37,192
也看看它的样子这是我刚刚收到的电子邮件所以应用商店

582
09:03:37,192 --> 09:03:41,592
连接告诉我，嘿，你现在被邀请来测试这个

583
09:03:41,592 --> 09:03:45,592
应用程序，你可以继续做，所以我只是要点击视图

584
09:03:45,592 --> 09:03:50,552
在试飞中，这将起作用，因为我已经有了

585
09:03:50,552 --> 09:03:55,760
基本上是安装在我的 Macintosh 上的测试灯，所以让我点击它然后

586
09:03:55,760 --> 09:03:59,360
我可以在单独的屏幕上看到试飞打开我会在这里把它带到屏幕上

587
09:03:59,360 --> 09:04:05,440
我可以接受基本上安装

588
09:04:05,440 --> 09:04:09,832
这个应用程序底部的底部标题表明我们已经

589
09:04:09,832 --> 09:04:14,080
已经查看了看起来像这样的电子邮件，现在我们要走了

590
09:04:14,080 --> 09:04:18,400
安装这个应用程序，它是一个颤振应用程序

591
09:04:18,400 --> 09:04:22,232
但我们正在将它安装在 Macintosh 上，这很棒，所以让我们

592
09:04:22,232 --> 09:04:26,872
接受这个，你现在可以看到我可以说安装或完成，所以我只是

593
09:04:26,872 --> 09:04:30,480
会说完成，所以你会看到它，所以这是我们的应用程序，我会

594
09:04:30,480 --> 09:04:34,800
按下安装按钮，这只是去应用商店连接和

595
09:04:34,800 --> 09:04:41,592
抓住那个二进制文件并把它放下，这样我就可以按下打开按钮

596
09:04:41,592 --> 09:04:47,120
如果一切顺利，这就是我们在上面运行的颤振应用程序

597
09:04:47,120 --> 09:04:51,272
macintosh 但它是一个我们实际上没有的 ios 应用程序

598
09:04:51,272 --> 09:04:54,640
将其编译为在 Macintosh 上运行，因此一切正常

599
09:04:54,640 --> 09:04:58,832
因为它应该我什至可以在这里登录

600
09:04:58,832 --> 09:05:04,080
就这样，然后在这里它是一个 foo bar bass

601
09:05:04,080 --> 09:05:08,000
登录，我可以看到我的笔记，所以它的工作原理是

602
09:05:08,000 --> 09:05:12,080
预料之中，所以我现在就关闭应用程序好了

603
09:05:12,080 --> 09:05:15,360
所以我们现在需要做的是提交这个

604
09:05:15,360 --> 09:05:18,720
构建我们已经看过它似乎工作正常，所以我要关闭

605
09:05:18,720 --> 09:05:22,552
在这里试飞并关闭此电子邮件，然后我们去应用商店连接并

606
09:05:22,552 --> 09:05:27,440
让我们去这里的这个应用商店部分和这里的这个 ios 应用部分

607
09:05:27,440 --> 09:05:32,400
1.0 准备提交让我们向下滚动到说 build and we

608
09:05:32,400 --> 09:05:36,720
然后需要说选择一个构建，然后再提交您的应用程序现在好了

609
09:05:36,720 --> 09:05:40,232
记住，如果你没有看到这个蓝色按钮

610
09:05:40,232 --> 09:05:45,120
这是因为你可能刚刚向苹果提交了账单

611
09:05:45,120 --> 09:05:49,192
苹果通常需要 30 分钟甚至更长时间来验证您的

612
09:05:49,192 --> 09:05:53,440
构建所以他们甚至可能没有出现在这里，特别是如果它是第一个

613
09:05:53,440 --> 09:05:56,800
构建您要发送到苹果的版本可能需要一段时间

614
09:05:56,800 --> 09:06:01,592
他们来处理它，所以你可能看不到这个按钮，因为没有

615
09:06:01,592 --> 09:06:06,320
有效的构建，但你可以测试你可以检查你的构建状态

616
09:06:06,320 --> 09:06:10,160
去这个试飞部分，看看那个版本

617
09:06:10,160 --> 09:06:15,120
您已提交，如果该构建仍在处理中，它将只是

618
09:06:15,120 --> 09:06:19,512
说呃括号处理，图标会有点变灰

619
09:06:19,512 --> 09:06:23,120
好的，所以别担心，这不是什么问题，你只需要等待

620
09:06:23,120 --> 09:06:26,232
有点，所以在这里我只想说选择

621
09:06:26,232 --> 09:06:29,592
提交应用程序之前的账单，然后说出我要构建的账单

622
09:06:29,592 --> 09:06:35,592
提交好了，然后我就按保存按钮

623
09:06:35,592 --> 09:06:40,480
所以这是构建应用商店连接中的年龄评级

624
09:06:40,480 --> 09:06:44,232
转到应用信息并填写年龄等级，我相信我们已经完成了

625
09:06:44,232 --> 09:06:48,232
因此，如果您之前没有这样做过，请继续并照顾好

626
09:06:48,232 --> 09:06:51,912
但我在前几章中解释了这一点，所以你可能不得不去

627
09:06:51,912 --> 09:06:56,400
并根据需要编辑您的年龄等级，但如果您已按照章节进行操作

628
09:06:56,400 --> 09:06:58,640
按时间顺序你应该这样做

629
09:06:58,640 --> 09:07:02,800
到此为止还好

630
09:07:02,800 --> 09:07:06,960
我们还需要照顾我们的应用隐私，所以我们需要去应用隐私

631
09:07:06,960 --> 09:07:10,000
正如屏幕底部的标题所示，在这里我们必须得到

632
09:07:10,000 --> 09:07:12,640
从填写开始

633
09:07:12,640 --> 09:07:16,720
我们的应用程序隐私，如果您有

634
09:07:16,720 --> 09:07:20,800
收集大量数据的应用程序我不想吓到你，但你

635
09:07:20,800 --> 09:07:25,760
可能有点麻烦，因为你必须通知苹果所有

636
09:07:25,760 --> 09:07:29,272
那些你从用户那里收集的东西好吧

637
09:07:29,272 --> 09:07:34,720
所以让我们在这里假设您或第三方合作伙伴是否收集数据

638
09:07:34,720 --> 09:07:38,232
从这个应用程序中，我们应该在这里说“是”，因为我们正在收集

639
09:07:38,232 --> 09:07:43,440
数据，这是用户的例如电子邮件地址

640
09:07:43,440 --> 09:07:49,592
密码和注释，所以让我们说是，这里有一个满足所有要求的数据类型

641
09:07:49,592 --> 09:07:53,832
以下标准是可选的披露数据不用于

642
09:07:53,832 --> 09:07:56,552
跟踪我们不使用它来跟踪数据

643
09:07:56,552 --> 09:08:00,480
不用于第三方 我们不这样做 发生数据收集

644
09:08:00,480 --> 09:08:04,480
仅在不常见的情况下可以，所以我们几乎不是

645
09:08:04,480 --> 09:08:08,480
做他们在这里所说的任何跟踪工作

646
09:08:08,480 --> 09:08:11,832
让我们在这里说数据收集是的，我们正在收集您的电子邮件地址

647
09:08:11,832 --> 09:08:14,232
就是这样

648
09:08:14,232 --> 09:08:18,640
我们不收集任何财务信息位置

649
09:08:18,640 --> 09:08:24,232
联系人 用户 内容 照片 音频 游戏 没有那个

650
09:08:24,232 --> 09:08:30,552
任何其他用户生成的内容 是 浏览历史 没有 搜索历史 没有

651
09:08:30,552 --> 09:08:35,360
用户 ID 屏幕名称 句柄 帐户 ID

652
09:08:35,360 --> 09:08:39,040
是的，我们是设备 ID，我们不是

653
09:08:39,040 --> 09:08:42,480
嗯，我们没有做的诊断崩溃数据

654
09:08:42,480 --> 09:08:46,080
目前和其他数据，所以是的，这看起来很好

655
09:08:46,080 --> 09:08:50,320
所以现在我们可以只说用户ID的标识符我们还说其他用户内容

656
09:08:50,320 --> 09:08:54,000
因为我们正在收集用户生成的笔记，而且我们也在

657
09:08:54,000 --> 09:08:57,592
收集他们的电子邮件地址，所以我们只是说在这里保存

658
09:08:57,592 --> 09:09:02,232
好的，它说需要额外的设置，所以让我们继续修复这些

659
09:09:02,232 --> 09:09:05,512
现在在电子邮件地址中，让我们去设置电子邮件地址，所以我要点击

660
09:09:05,512 --> 09:09:08,720
在那里，我们是否将其用于第三方 否

661
09:09:08,720 --> 09:09:14,232
开发者广告没有分析没有产品个性化

662
09:09:14,232 --> 09:09:19,592
自定义用户看到的内容，例如不推荐的产品列表

663
09:09:19,592 --> 09:09:24,080
应用程序功能是的，这就是我们正在做的，所以请按下一步

664
09:09:24,080 --> 09:09:27,360
并且是从这个应用程序收集的电子邮件地址链接到用户的

665
09:09:27,360 --> 09:09:32,320
指向 yes 电子邮件地址收集器的身份链接

666
09:09:32,320 --> 09:09:36,552
指向用户身份的链接在那里我的意思是这是

667
09:09:36,552 --> 09:09:39,440
有点法律问题所以我不是最好的

668
09:09:39,440 --> 09:09:42,480
嗯放在这里

669
09:09:42,480 --> 09:09:47,120
回答这个问题，但我的意思是电子邮件不一定与某人的

670
09:09:47,120 --> 09:09:51,272
作为一个人的身份，因为我可以像私人电子邮件一样去创建，而没有

671
09:09:51,272 --> 09:09:54,800
有人知道，所以我只会回答不

672
09:09:54,800 --> 09:09:59,360
跟踪电子邮件地址 好的，接下来

673
09:09:59,360 --> 09:10:02,400
嗯好的

674
09:10:02,400 --> 09:10:05,912
您或第三方合作伙伴是否使用电子邮件地址似乎不太好

675
09:10:05,912 --> 09:10:11,680
用于跟踪目的不可以，保存好，所以

676
09:10:11,680 --> 09:10:15,760
现在保存电子邮件地址的内容让我们转到其他用户内容

677
09:10:15,760 --> 09:10:20,552
用户生成的注释没问题，所以说明其他用户的内容如何

678
09:10:20,552 --> 09:10:25,512
正在使用从这个应用程序收集的 um 广告 没有分析 没有

679
09:10:25,512 --> 09:10:29,272
定制没有和应用程序功能当然

680
09:10:29,272 --> 09:10:32,872
那么让我们去说是从子链接收集的用户内容到

681
09:10:32,872 --> 09:10:36,800
用户的身份他们被使用他们链接到

682
09:10:36,800 --> 09:10:40,960
用户的电子邮件，因为我们说电子邮件与用户的身份无关，所以我是

683
09:10:40,960 --> 09:10:46,400
只是有理由在这里说不，您或第三方合作伙伴是否使用其他

684
09:10:46,400 --> 09:10:52,720
用于跟踪目的的用户内容不行，所以那部分也完成了

685
09:10:52,720 --> 09:10:56,320
让我们转到用户 ID 的标识符，所以我要点击那里

686
09:10:56,320 --> 09:11:02,000
并记住这里的用户 id 是 firebase 创建的 uid 好记住

687
09:11:02,000 --> 09:11:06,080
所以我们将它用于应用程序功能

688
09:11:06,080 --> 09:11:10,872
从此应用收集的用户 ID 是否与用户身份相关联

689
09:11:10,872 --> 09:11:15,040
用户 id 用户身份

690
09:11:15,040 --> 09:11:19,360
我会说是的，这很明显，所以让我们说是的

691
09:11:19,360 --> 09:11:24,960
您或第三方合作伙伴是否使用用户 ID 进行跟踪？

692
09:11:24,960 --> 09:11:28,640
不，好吧，所以得救了，现在就是这样

693
09:11:28,640 --> 09:11:32,552
您已经阅读了隐私政策，就像这样

694
09:11:32,552 --> 09:11:35,832
基本上发生的事情是苹果会

695
09:11:35,832 --> 09:11:41,272
当他们尝试下载您的应用程序时向用户显示这个非常

696
09:11:41,272 --> 09:11:45,592
重要的是你要尽你的知识和能力填写这是

697
09:11:45,592 --> 09:11:50,160
不是你去的地方，假装什么，说试着隐藏

698
09:11:50,160 --> 09:11:54,080
您从用户那里收集到的信息处于最佳状态

699
09:11:54,080 --> 09:11:58,552
对您的产品的最大利益和贵公司的最大利益感兴趣

700
09:11:58,552 --> 09:12:05,040
确保你尽可能地填写这些，通常在更大的

701
09:12:05,040 --> 09:12:10,080
您可能想咨询的公司

702
09:12:10,080 --> 09:12:14,552
嗯，擅长确保你没有遗漏任何东西，所以在大公司你

703
09:12:14,552 --> 09:12:18,320
通常不要自己做，但因为我们现在假设你是

704
09:12:18,320 --> 09:12:22,320
即使您在像我这样的组织背后，也像单个实体一样简单

705
09:12:22,320 --> 09:12:28,480
但你是一个单一的实体，并尽力做到这一点，好吧

706
09:12:28,480 --> 09:12:33,040
所以现在我们要做的也是填写这个 um

707
09:12:33,040 --> 09:12:38,720
让我们在此处查看隐私政策，您可以在此处看到这是什么

708
09:12:38,720 --> 09:12:43,120
所有应用程序都需要链接到隐私政策隐私政策的网址

709
09:12:43,120 --> 09:12:46,400
正如你在屏幕底部看到的那样，我实际上包含了一些

710
09:12:46,400 --> 09:12:52,480
我自己网站的隐私政策，我已经包含了，让我们看看

711
09:12:52,480 --> 09:12:57,272
如果我可以在这里登录让我们看看我是否可以单独登录

712
09:12:57,272 --> 09:13:03,760
窗户，所以你不必为此烦恼

713
09:13:03,760 --> 09:13:10,320
因为我实际上已经包括了那个，嗯，你知道我实际上会做什么

714
09:13:10,320 --> 09:13:16,232
单独的屏幕，因此您不必为此烦恼，嗯

715
09:13:16,232 --> 09:13:21,512
所以我会去

716
09:13:21,512 --> 09:13:24,872
我会去我的托管网站，我会处理好，然后我会带上它

717
09:13:24,872 --> 09:13:29,272
到屏幕上，这样你就可以真正看到它

718
09:13:29,272 --> 09:13:35,192
让我们看看我是否可以在这里访问我的主机，然后再访问我的

719
09:13:35,192 --> 09:13:39,120
基本上托管

720
09:13:39,120 --> 09:13:43,912
好吧，我所有的文件都在里面，对不起

721
09:13:43,912 --> 09:13:48,400
我会把它带到这里，让我们看看我提供的这个网址

722
09:13:48,400 --> 09:13:51,512
屏幕底部你可以看到像素 dsc 隐私政策，所以我要

723
09:13:51,512 --> 09:13:54,480
去那里的配音配音，我看看

724
09:13:54,480 --> 09:13:58,872
这个文本文件就在那里隐私政策所以如果我输入像素

725
09:13:58,872 --> 09:14:04,160
对不起，隐私政策你看到有一个通用的隐私政策，

726
09:14:04,160 --> 09:14:08,160
我已经放在我的网站上，你需要做同样的事情

727
09:14:08,160 --> 09:14:12,480
所以你基本上需要从某个地方获取隐私政策并查看

728
09:14:12,480 --> 09:14:17,120
在那个隐私政策中，并确保它对你有用，所以我所做的是我

729
09:14:17,120 --> 09:14:20,480
找到了一个网站，我不只是去广告

730
09:14:20,480 --> 09:14:25,912
在这里，但您可以找到由非常优秀和聪明的人编写的免费隐私政策

731
09:14:25,912 --> 09:14:30,320
人们，你可以看看那些调整他们以确保他们做出

732
09:14:30,320 --> 09:14:34,080
对您和您的公司有意义，例如在这里我刚刚采取了

733
09:14:34,080 --> 09:14:38,872
通用隐私政策让我们看看我是否可以在这里找到它

734
09:14:38,872 --> 09:14:43,120
所以我把我的公司名称放在那里，我只是确保它对我有意义

735
09:14:43,120 --> 09:14:47,192
公司，我基本上只是把它放在你可以看到的那个网址中

736
09:14:47,192 --> 09:14:50,872
屏幕底部，所以我将在隐私和应用商店连接处进入

737
09:14:50,872 --> 09:14:54,800
并说隐私政策编辑和隐私政策网址中我只想说

738
09:14:54,800 --> 09:14:59,360
https pixelity dot se 然后我只想说

739
09:14:59,360 --> 09:15:03,680
隐私政策.txt 但对你来说这应该是

740
09:15:03,680 --> 09:15:07,680
其他的好，我只是复制它打开它并确保

741
09:15:07,680 --> 09:15:12,232
它存在，然后我要按下保存按钮

742
09:15:12,232 --> 09:15:17,912
所以在我们完成之后，我们还需要确保我们已经照顾好我们的

743
09:15:17,912 --> 09:15:22,800
类别我们的应用程序所属的类别所以让我们去应用程序

744
09:15:22,800 --> 09:15:26,000
屏幕底部的信息表明我将进入该类别

745
09:15:26,000 --> 09:15:30,000
我们要说的主要类别是我们的应用程序属于生产力和

746
09:15:30,000 --> 09:15:36,232
然后它属于公用事业好吧这里公用事业好吧那我要去

747
09:15:36,232 --> 09:15:39,360
保存此信息

748
09:15:39,360 --> 09:15:44,080
好的，那么在我们提交我们的应用程序进行审核之前我们还需要做的是

749
09:15:44,080 --> 09:15:50,000
请记住，这个应用程序将由一个真正的人来审查，所以

750
09:15:50,000 --> 09:15:54,320
这个人实际上会在他们的队列中获取这些信息

751
09:15:54,320 --> 09:15:57,360
工作他们会说哦，一个名为我的精彩笔记的应用程序

752
09:15:57,360 --> 09:16:00,640
需要审查，然后他们会说好的

753
09:16:00,640 --> 09:16:03,192
他们的屏幕上会有一些控制面板，我真的不知道怎么做

754
09:16:03,192 --> 09:16:07,680
它是在苹果的网站上形成的，但他们会下载这个应用程序

755
09:16:07,680 --> 09:16:12,080
可能会自动在各种设备上，然后他们会打开应用程序并

756
09:16:12,080 --> 09:16:15,192
然后就像我应该如何使用这个应用程序一样

757
09:16:15,192 --> 09:16:19,360
确保您提供所有信息符合您的最大利益

758
09:16:19,360 --> 09:16:24,232
可能给那个人，这样他们就可以审查你的申请，所以你需要什么

759
09:16:24,232 --> 09:16:28,960
然后要做的是进入这里的应用程序，准备在这里应用程序中提交

760
09:16:28,960 --> 09:16:33,680
查看信息，然后在注释下告诉那个人

761
09:16:33,680 --> 09:16:38,160
您的应用程序是如何工作的以及他们需要如何在此处注册

762
09:16:38,160 --> 09:16:42,400
我们要说的是你需要

763
09:16:42,400 --> 09:16:46,160
一个有效的电子邮件地址

764
09:16:46,160 --> 09:16:49,120
注册请按照这些

765
09:16:49,120 --> 09:16:55,592
现在注册的步骤我会说打开注册视图并注册

766
09:16:55,592 --> 09:17:02,000
使用您选择的电子邮件和密码

767
09:17:02,000 --> 09:17:09,192
您选择等待确认电子邮件

768
09:17:09,192 --> 09:17:16,480
等待确认电子邮件发送到您的电子邮件地址

769
09:17:16,480 --> 09:17:20,320
并在确认中

770
09:17:20,320 --> 09:17:24,480
单击链接以确认您的电子邮件

771
09:17:24,480 --> 09:17:29,360
地址没问题，然后第三步是回去

772
09:17:29,360 --> 09:17:34,832
到应用程序和登录屏幕日志中

773
09:17:34,832 --> 09:17:40,720
使用您的电子邮件和密码

774
09:17:40,720 --> 09:17:44,800
就是这样，所以我们现在已经做到了，所以我要

775
09:17:44,800 --> 09:17:48,232
实际上然后在这里提供一个有效的电话号码，因为我不想

776
09:17:48,232 --> 09:17:52,160
真的在互联网上到处分享我喜欢的电话号码我只是

777
09:17:52,160 --> 09:17:55,680
将在此处转到单独的屏幕，然后

778
09:17:55,680 --> 09:18:00,640
在这里写下我的有效电话号码

779
09:18:00,640 --> 09:18:05,512
但那是我的电话号码

780
09:18:05,512 --> 09:18:08,872
去这里然后我也要按保存按钮

781
09:18:08,872 --> 09:18:13,192
然后把屏幕完美地带到这里，所以现在我已经保存了这些信息

782
09:18:13,192 --> 09:18:17,512
包括我的电话号码，此时一切都应该准备就绪

783
09:18:17,512 --> 09:18:22,160
所以你需要做的就是在你休息的时候去拿些爆米花

784
09:18:22,160 --> 09:18:26,552
希望这样做，然后你只需要说提交审核

785
09:18:26,552 --> 09:18:29,592
它说下面的项目需要没问题

786
09:18:29,592 --> 09:18:33,832
我们还没有真正完成定价，然后它看到它说管理员必须

787
09:18:33,832 --> 09:18:37,832
在应用隐私部分提供有关应用隐私惯例的信息

788
09:18:37,832 --> 09:18:42,080
似乎我们错过了一些东西，所以让我们来看看定价和可用性

789
09:18:42,080 --> 09:18:45,760
修复这个应用程序将是免费的，所以我只想说它不会

790
09:18:45,760 --> 09:18:49,040
花费任何东西并保存它，以便定价

791
09:18:49,040 --> 09:18:52,720
让我们去应用程序隐私，看看我们是否真的错过了什么

792
09:18:52,720 --> 09:18:56,400
看起来像，但我们忘记的是实际按下发布按钮，所以

793
09:18:56,400 --> 09:19:00,960
让我们发布吧，好吧，然后我们回到这里，然后我们

794
09:19:00,960 --> 09:19:03,832
说提交

795
09:19:03,832 --> 09:19:09,912
太好了，现在您的应用程序已提交到应用商店和审阅者

796
09:19:09,912 --> 09:19:13,760
从应用商店连接将查看您的应用程序，所以

797
09:19:13,760 --> 09:19:18,232
他们可以确认它根据

798
09:19:18,232 --> 09:19:22,080
您提供的信息，我可以看到我实际上收到了一封电子邮件

799
09:19:22,080 --> 09:19:26,480
从苹果看起来像这样，它说你的应用程序的状态有

800
09:19:26,480 --> 09:19:30,232
更改为等待审核所以这不是等待游戏所以

801
09:19:30,232 --> 09:19:34,552
嗯，但在我们真正做这一切之前，我们

802
09:19:34,552 --> 09:19:39,272
苹果是否有时间审查我们的申请，以及

803
09:19:39,272 --> 09:19:42,720
接受它，否则他们在其中发现了一些错误，并且

804
09:19:42,720 --> 09:19:48,320
拒绝了我们的申请，无论我们需要撤回这个

805
09:19:48,320 --> 09:19:52,160
构建，我将在接下来的章节中向您展示如何，因为我们有

806
09:19:52,160 --> 09:19:56,720
我告诉过你的安全漏洞，所以现在我们可以很高兴我们已经

807
09:19:56,720 --> 09:19:59,440
通过这一章，我们已经做了很多工作

808
09:19:59,440 --> 09:20:04,160
嗯，拍拍自己的背，干得好

809
09:20:04,160 --> 09:20:08,872
拿一些呃也许是茶或咖啡

810
09:20:08,872 --> 09:20:12,960
我们可以开始为下一章做准备，我会告诉你

811
09:20:12,960 --> 09:20:16,960
您实际上是我们需要在下一章中讨论的内容，就是这个

812
09:20:16,960 --> 09:20:21,680
我们在所有笔记中遇到的小问题和

813
09:20:21,680 --> 09:20:26,800
我们需要先解决这个问题，然后我们才能使用 android，所以

814
09:20:26,800 --> 09:20:30,872
现在你知道接下来的章节会发生什么，嗯

815
09:20:30,872 --> 09:20:34,640
我会在那里见到你大家好，欢迎来到这个扑的第 49 章

816
09:20:34,640 --> 09:20:40,000
当然，在前面的章节中，我们已经向 um 提交了我们的申请

817
09:20:40,000 --> 09:20:43,760
应用商店连接，我们也简单地谈到了这个事实

818
09:20:43,760 --> 09:20:47,912
我们的 Firebase Firestore 中存在一些安全问题

819
09:20:47,912 --> 09:20:51,760
数据库所以让我们看看实际的

820
09:20:51,760 --> 09:20:55,680
问题是，所以我在前面的章节中简要解释了这一点，但我会这样做

821
09:20:55,680 --> 09:21:00,160
再次在这里，让我们看看，如果这是我们的代码，我将

822
09:21:00,160 --> 09:21:04,720
增加尺寸，这样我们会更好地看到它，当我们工作时你会看到

823
09:21:04,720 --> 09:21:09,192
在屏幕上为用户显示所有注释，例如用户 a

824
09:21:09,192 --> 09:21:13,272
已登录应用程序并在我们的内部

825
09:21:13,272 --> 09:21:16,480
笔记视图如果你去那里我们会看到我们是

826
09:21:16,480 --> 09:21:20,720
在我们的流构建器中订阅所有节点，所以我们说我们是

827
09:21:20,720 --> 09:21:25,680
基本上构建我们的整个列表视图，现在它是列表视图和

828
09:21:25,680 --> 09:21:30,232
我们在来自所有节点函数的数据之上构建它

829
09:21:30,232 --> 09:21:34,800
目前在我们的 Firebase 云存储中

830
09:21:34,800 --> 09:21:39,120
但是，如果您查看此代码，您会发现它在做什么是指

831
09:21:39,120 --> 09:21:44,400
到这个节点的私有 um 或者这个节点的局部变量和哪个

832
09:21:44,400 --> 09:21:48,080
就在这里，此刻的笔记是

833
09:21:48,080 --> 09:21:54,080
指向笔记集合以及它的作用它确实需要所有

834
09:21:54,080 --> 09:21:59,912
笔记集合中的笔记，所以这看起来本质上意味着任何

835
09:21:59,912 --> 09:22:04,720
登录到我们应用程序的用户真正检索了

836
09:22:04,720 --> 09:22:07,360
整个数据库虽然

837
09:22:07,360 --> 09:22:11,760
在该代码的末尾，我们正在做的是说我们在检索后没问题

838
09:22:11,760 --> 09:22:16,552
数据库中的所有节点，然后我们将它们映射到云

839
09:22:16,552 --> 09:22:20,232
节点，以便我们可以在本地使用它们

840
09:22:20,232 --> 09:22:25,120
就在最后我们说嘿，但我们只对那些

841
09:22:25,120 --> 09:22:27,680
对于丢弃用户，但

842
09:22:27,680 --> 09:22:31,040
即使当前登录用户不会看到

843
09:22:31,040 --> 09:22:36,640
数据库，但当前用户正在阅读数据库中的所有笔记，如果您

844
09:22:36,640 --> 09:22:40,720
例如，如果您使用 charles 代理，则执行中间人攻击

845
09:22:40,720 --> 09:22:45,832
在电脑上，然后你正在使用你的手机，你正在使用

846
09:22:45,832 --> 09:22:49,272
例如，假设您的计算机上有 charles 代理，然后您是

847
09:22:49,272 --> 09:22:53,592
通过 wi-fi 从以太网连接共享您的 wi-fi 连接

848
09:22:53,592 --> 09:22:57,120
如果我不坐在中间，一部正在运行您的应用程序的 iphone

849
09:22:57,120 --> 09:23:00,232
使用 charles 代理并查看来自您的颤动的所有流量

850
09:23:00,232 --> 09:23:05,040
应用到firebase然后我实际上可以看到你在请求信息

851
09:23:05,040 --> 09:23:09,912
关于所有这些笔记，然后这些笔记回到应用程序，所以

852
09:23:09,912 --> 09:23:15,040
中间人可能会暴露我们的所有数据

853
09:23:15,040 --> 09:23:18,640
至少在数据库或笔记集合中，所以我们需要

854
09:23:18,640 --> 09:23:23,512
我们需要解决这个问题，所以我们要做的是开始

855
09:23:23,512 --> 09:23:28,552
如果您记得在

856
09:23:28,552 --> 09:23:33,192
之前的章节我们将我们的应用程序发送给苹果进行审查，以及什么

857
09:23:33,192 --> 09:23:38,000
我已经在这里完成了，我的开发人员基本上拒绝了这个应用程序，所以

858
09:23:38,000 --> 09:23:42,400
让我看看我是否可以增加屏幕的大小，所以我们

859
09:23:42,400 --> 09:23:46,800
将我们的应用程序提交到 app store connect 以供 apple um 审核

860
09:23:46,800 --> 09:23:51,272
团队审查团队，但就在它真正去审查之前，我刷新了

861
09:23:51,272 --> 09:23:55,360
屏幕在这里，你没有看到这个，但我说删除这个应用程序

862
09:23:55,360 --> 09:23:59,592
如果您将自己的应用程序从审核中删除，则进行审核

863
09:23:59,592 --> 09:24:04,552
会变成这个它会去状态开发者拒绝所以这基本上是

864
09:24:04,552 --> 09:24:08,480
通知你嘿这不是苹果基本上拒绝你的申请

865
09:24:08,480 --> 09:24:13,760
是你自己做的吗，所以我可以给你举个例子

866
09:24:13,760 --> 09:24:16,480
来自苹果的确认电子邮件将看起来

867
09:24:16,480 --> 09:24:20,232
像这样我会在一个单独的屏幕上打开它

868
09:24:20,232 --> 09:24:24,400
它看起来像这样 我会把它带到这个主屏幕上让你看到

869
09:24:24,400 --> 09:24:26,720
没关系

870
09:24:26,720 --> 09:24:30,960
所以我们开始了，然后我收到了一封来自苹果的电子邮件，上面写着那个状态

871
09:24:30,960 --> 09:24:36,400
您的应用程序已更改为开发者拒绝应用程序名称等等等等

872
09:24:36,400 --> 09:24:39,912
这是您将收到的电子邮件，所以我需要您基本上拒绝您的

873
09:24:39,912 --> 09:24:43,192
应用您发送到的版本一零

874
09:24:43,192 --> 09:24:47,040
苹果因为我们的应用程序存在安全问题

875
09:24:47,040 --> 09:24:50,640
我在前面的章节中已经提到过，我是故意这样做的

876
09:24:50,640 --> 09:24:53,680
我们可以像某人一样理解，因为这是那种

877
09:24:53,680 --> 09:24:56,232
作为一名软件开发人员，你会经历有时你会

878
09:24:56,232 --> 09:25:00,872
向苹果或谷歌提交一些东西，然后你就明白你犯了一个错误

879
09:25:00,872 --> 09:25:05,192
那么你如何解决这个问题，我真的希望这成为其中的一部分

880
09:25:05,192 --> 09:25:09,360
嗯，当然，所以你明白你是如何拒绝的

881
09:25:09,360 --> 09:25:12,320
您的申请 您如何解决问题以及如何重新提交申请

882
09:25:12,320 --> 09:25:16,552
好的，但我不想为 ios 和 android 都这样做，因为它只是得到

883
09:25:16,552 --> 09:25:20,000
无聊，如果你必须先提交，从两个提交整个提交

884
09:25:20,000 --> 09:25:23,592
平台，然后再次提交，这就是我们首先提交 ios 的原因

885
09:25:23,592 --> 09:25:26,640
然后我们会修复它，一旦修复了，我们也会

886
09:25:26,640 --> 09:25:31,120
提交 android 好的，所以在拒绝您的申请后，您

887
09:25:31,120 --> 09:25:36,400
还需要基本上从 1.0 中删除你的构建，所以我相信我已经

888
09:25:36,400 --> 09:25:39,760
已经这样做了哦，不，我没有，所以实际上很好，我没有这样做

889
09:25:39,760 --> 09:25:44,400
所以让我们在 1.0 中继续前进，然后删除这个构建好吧，所以我们说我们

890
09:25:44,400 --> 09:25:49,832
不想提交任何东西然后按保存好

891
09:25:49,832 --> 09:25:53,912
好吧，正如你在屏幕底部看到的那样，我们将

892
09:25:53,912 --> 09:25:59,760
现在把这个1.0版本更新到1.1，我们去看看他能不能找到那个

893
09:25:59,760 --> 09:26:04,232
信息所以现在我也看到我收到了一封电子邮件

894
09:26:04,232 --> 09:26:07,912
苹果在这里说好的，现在它已准备好提交意味着

895
09:26:07,912 --> 09:26:12,480
它不再被开发或拒绝，让我们把这个版本放到这里

896
09:26:12,480 --> 09:26:17,760
到 1.1 0.0 好的，然后我要保存它

897
09:26:17,760 --> 09:26:22,232
好吧，我的意思是这有点像，如果你的话，这取决于你的口味

898
09:26:22,232 --> 09:26:27,192
想重新提交 1.0 非常欢迎您这样做，但通常是

899
09:26:27,192 --> 09:26:32,640
如果您更改代码中的某些内容，那么您通常会去

900
09:26:32,640 --> 09:26:36,552
更新这个 um 次要版本，之所以这样称呼它是因为

901
09:26:36,552 --> 09:26:39,832
第一个版本是主要版本，所以如果有一个巨大的未来

902
09:26:39,832 --> 09:26:44,400
应用程序，这是次要版本，这是我的意思的补丁

903
09:26:44,400 --> 09:26:48,320
你可能会争辩说我们基本上可以改变我们的应用程序

904
09:26:48,320 --> 09:26:53,832
版本为一零一，因为这是一个补丁，但我只是选择做一

905
09:26:53,832 --> 09:26:58,000
零好吧，让我们继续，我假设

906
09:26:58,000 --> 09:27:00,160
你在做同样的事情，因为我要提供一些信息

907
09:27:00,160 --> 09:27:03,832
本章稍后会提供给你一点，这取决于你有

908
09:27:03,832 --> 09:27:07,592
实际上将您的应用程序版本更改为一一零好吧

909
09:27:07,592 --> 09:27:12,000
所以这部分已经完成，我们现在需要做的是作为标题以防万一

910
09:27:12,000 --> 09:27:16,400
我们要清理 Firestore 中的所有笔记和用户

911
09:27:16,400 --> 09:27:21,680
数据库所以让我们继续看看我们是否可以让它工作

912
09:27:21,680 --> 09:27:24,640
我的笔记颤动项目，所以它在你的

913
09:27:24,640 --> 09:27:29,192
firebase 控制台，我将首先对用户进行身份验证

914
09:27:29,192 --> 09:27:32,720
只有一个用户在这里我只是要删除该帐户好的然后我要走了

915
09:27:32,720 --> 09:27:36,720
去firestore数据库，注释中可能有两个注释

916
09:27:36,720 --> 09:27:41,360
集合，我也将删除它们，因此删除那里的文档并

917
09:27:41,360 --> 09:27:45,832
然后删除这个文件，好吧，所以我们有一个干净的石板没有用户也没有

918
09:27:45,832 --> 09:27:51,192
数据库中的注释，因此您可能想知道我们是否有

919
09:27:51,192 --> 09:27:54,800
我们数据库的安全问题不应该 Firebase 足够智能

920
09:27:54,800 --> 09:27:58,400
知道这一点，而firebase实际上足够聪明，知道这一点

921
09:27:58,400 --> 09:28:02,480
有时您会收到来自我的意思的电子邮件，具体取决于安全漏洞

922
09:28:02,480 --> 09:28:06,720
您的数据库，您将收到来自 firebase 的电子邮件，告诉您嘿

923
09:28:06,720 --> 09:28:10,552
你的安全规则有问题，我准备了一些

924
09:28:10,552 --> 09:28:14,640
那种电子邮件表明我只是想告诉你那种

925
09:28:14,640 --> 09:28:17,912
电子邮件看起来像这样，您可以查看是否有安全性

926
09:28:17,912 --> 09:28:21,832
您可能收到的 Fire Firebase 和 Firestore 数据库的问题

927
09:28:21,832 --> 09:28:24,552
像这样你看到它说我们已经检测到以下问题

928
09:28:24,552 --> 09:28:28,720
您的安全规则任何用户都可以读取您的整个数据库，因此

929
09:28:28,720 --> 09:28:33,192
它看起来像这样没关系，所以只要知道如果你收到这样的电子邮件

930
09:28:33,192 --> 09:28:37,272
那你至少知道它的原因好吗

931
09:28:37,272 --> 09:28:41,912
如果您想了解更多关于安全规则和

932
09:28:41,912 --> 09:28:44,720
尽管我将告诉你我们将如何配置它们，但你必须如何配置它们

933
09:28:44,720 --> 09:28:47,512
在本章中配置我们的安全规则，但如果你想知道如何

934
09:28:47,512 --> 09:28:51,360
自己做，你很想了解更多关于它的信息，我已经

935
09:28:51,360 --> 09:28:55,760
在这里准备了一个小链接，让我看看我是否真的可以带上它

936
09:28:55,760 --> 09:28:59,760
通过打开到屏幕

937
09:28:59,760 --> 09:29:03,440
一个链接，它看起来像这样，所以你首先看到 firebase google.com docs

938
09:29:03,440 --> 09:29:06,640
我们的安全规则和条件

939
09:29:06,640 --> 09:29:11,040
所以你可以读到这个，我做到了，我从中得到了很多灵感

940
09:29:11,040 --> 09:29:15,360
如何解决我们的安全问题

941
09:29:15,360 --> 09:29:18,400
firestore 数据库，所以我强烈建议您实际阅读此内容

942
09:29:18,400 --> 09:29:22,872
文档您现在不必这样做，但请至少，嗯

943
09:29:22,872 --> 09:29:27,360
将此页面添加为书签，以便稍后返回

944
09:29:27,360 --> 09:29:32,720
好的，那么现在让我们开始在我们的 Firestore 中解决我们的安全问题

945
09:29:32,720 --> 09:29:37,272
数据库好的，所以我也在这里准备了我们必须如何实际操作，你

946
09:29:37,272 --> 09:29:41,760
可以看到让我真正提出我们的安全规则，所以去火店

947
09:29:41,760 --> 09:29:46,552
您的firebase控制台中的数据库选项卡，然后转到规则好吧让我们有一个

948
09:29:46,552 --> 09:29:50,320
查看目前的所有角色以及它们的设置方式以及设置方式

949
09:29:50,320 --> 09:29:54,320
当你看到它说匹配任何数据库和任何文档的时候都可以

950
09:29:54,320 --> 09:29:58,720
这也是我们在这里所做的，它说匹配那里的任何文件，所以

951
09:29:58,720 --> 09:30:02,320
目前我们只允许读写访问权限，前提是您

952
09:30:02,320 --> 09:30:08,960
已通过身份验证，所以现在让我们说我们允许创建

953
09:30:08,960 --> 09:30:13,832
如果您已通过身份验证，那么我们说您应该能够创建一个节点

954
09:30:13,832 --> 09:30:17,120
当您通过身份验证时，假设创建，您可以看到我们得到了一些帮助

955
09:30:17,120 --> 09:30:21,760
来自 firebase 也在这里 好的，所以就是这样，然后我们

956
09:30:21,760 --> 09:30:27,360
说允许读写和更新

957
09:30:27,360 --> 09:30:30,400
好的，这就是我们要写在这里的规则，你可以看到阅读

958
09:30:30,400 --> 09:30:34,800
更新实际上读取更新和删除所以

959
09:30:34,800 --> 09:30:40,160
所以阅读更新和删除，我们必须设置它的方式当然是你

960
09:30:40,160 --> 09:30:44,960
可以在这里看到我更喜欢的是我们首先需要确保有人尝试

961
09:30:44,960 --> 09:30:49,192
从我们的数据库中读取或更新数据库或删除文档应该

962
09:30:49,192 --> 09:30:53,040
进行身份验证，所以让我们进去说好吧，如果

963
09:30:53,040 --> 09:30:56,800
经过身份验证，我们将把代码带到这里好吧

964
09:30:56,800 --> 09:31:01,192
但我们还将为其添加更多信息和信息

965
09:31:01,192 --> 09:31:05,832
应该看起来像这样，您可以在此处的此文档中看到

966
09:31:05,832 --> 09:31:11,760
你可能会说好的，但我怎么知道，因为好的，在我真正说之前

967
09:31:11,760 --> 09:31:16,872
我们想要的是当前经过身份验证的用户 id

968
09:31:16,872 --> 09:31:23,360
只能访问具有相同用户 ID 的他或她的文档

969
09:31:23,360 --> 09:31:28,552
记住在我们的代码中我们有这个用户 ID 字段让我在这里提出来

970
09:31:28,552 --> 09:31:33,192
所以如果你去我们这里的存储，我们有这些常量，我们有这个用户 ID

971
09:31:33,192 --> 09:31:39,272
字段，因此我们存储在 Firestore 数据库中的每个节点都有一个用户 ID 字段

972
09:31:39,272 --> 09:31:45,592
所以我们在这里想要的基本上是从请求中获取用户 ID 所以如果

973
09:31:45,592 --> 09:31:50,480
你在这里说请求你会看到我们有偏离路径的资源所以让我们出发吧

974
09:31:50,480 --> 09:31:54,552
然后你会看到有一个叫做 uid 的东西，那就是用户 id

975
09:31:54,552 --> 09:31:59,192
好的，所以如果我们看看我们必须如何实际做到这一点，所以我们说的是用户

976
09:31:59,192 --> 09:32:04,552
请求 rtu id 应该等于资源数据用户 id 和这个资源

977
09:32:04,552 --> 09:32:09,360
是用户尝试访问的当前资源，如果您阅读

978
09:32:09,360 --> 09:32:13,120
我之前提供给你的文档你会知道的

979
09:32:13,120 --> 09:32:17,120
让我们进去说好吧请求身份验证uid应该等于

980
09:32:17,120 --> 09:32:21,120
资源 beta 点用户 ID，因为那是

981
09:32:21,120 --> 09:32:27,912
正如您在此处的代码中看到的那样，我们提供的字段让我们然后嗯

982
09:32:27,912 --> 09:32:31,760
是的，我认为这很好，所以我们可以发布这些更改

983
09:32:31,760 --> 09:32:34,960
说发布更改可能需要一分钟才能传播，那就是

984
09:32:34,960 --> 09:32:38,640
完全没问题，因为我们实际上需要一些时间来

985
09:32:38,640 --> 09:32:43,192
更新我们的代码也可以，这就是我们的

986
09:32:43,192 --> 09:32:46,800
安全规则，所以让我们确保它们看起来像这样，我会

987
09:32:46,800 --> 09:32:50,872
实际上把它带到两行，这样你就可以看到它的全部

988
09:32:50,872 --> 09:32:55,912
嗯，如果你需要从中获得一些灵感，你也可以建立

989
09:32:55,912 --> 09:32:59,512
明天除此之外，您可以为此添加更多安全性，以便您更

990
09:32:59,512 --> 09:33:03,040
欢迎来到嗯

991
09:33:03,040 --> 09:33:07,360
那么我们需要做的是开始清理我们在飞镖上的代码

992
09:33:07,360 --> 09:33:11,512
飞镖方面的网站，所以让我们看看这段代码

993
09:33:11,512 --> 09:33:14,400
我们在这里写过我要稍微改变一下屏幕布局所以

994
09:33:14,400 --> 09:33:19,040
你看得更清楚所以让我们去这个函数获取笔记

995
09:33:19,040 --> 09:33:22,800
你可能已经注意到了，但目前我们没有使用它

996
09:33:22,800 --> 09:33:28,160
目前功能，所以我们只使用所有节点，所以让我们继续吧

997
09:33:28,160 --> 09:33:31,912
只需删除它就可以从 Firebase 云存储中获取注释

998
09:33:31,912 --> 09:33:35,680
就像我在

999
09:33:35,680 --> 09:33:39,832
此刻，让我们只使用命令，我可以看到没有问题，因为没有人

1000
09:33:39,832 --> 09:33:43,120
实际上是使用get notes并且没有

1001
09:33:43,120 --> 09:33:46,720
我们的代码中的错误，您可以看到没有标记为的文件或文件夹

1002
09:33:46,720 --> 09:33:50,080
红色所以嗯，那就是那个是其中之一

1003
09:33:50,080 --> 09:33:52,960
我们必须做的事情只是为了删除 get 节点

1004
09:33:52,960 --> 09:33:57,120
然后我们需要在这里做的是确保我们真正的时候

1005
09:33:57,120 --> 09:34:04,000
说我们在实际阅读之前过滤快照的所有注释

1006
09:34:04,000 --> 09:34:09,760
他们所以让我们进入这里并在像这样的快照之前说笔记

1007
09:34:09,760 --> 09:34:13,760
我会说在哪里，你可以看到它说好的哪个字段

1008
09:34:13,760 --> 09:34:16,552
你在找然后我们说所有者用户ID

1009
09:34:16,552 --> 09:34:21,360
字段名称，实际上应该等于

1010
09:34:21,360 --> 09:34:26,320
我们有所有者，它已经准备好了

1011
09:34:26,320 --> 09:34:32,872
所以就是那个，然后我们说快照和快照映射

1012
09:34:32,872 --> 09:34:37,680
这实际上也很好

1013
09:34:37,680 --> 09:34:40,720
老实说，我们也可以清理这段代码，所以让我们说

1014
09:34:40,720 --> 09:34:43,832
在这里，我们拿着这个，我们说这是我们的

1015
09:34:43,832 --> 09:34:46,872
笔记对不起

1016
09:34:46,872 --> 09:34:53,832
最后的音符等于所有音符的最后音符

1017
09:34:53,832 --> 09:34:59,272
我们可以直接退货所以现在我们有了这个和你

1018
09:34:59,272 --> 09:35:04,400
基本上可以争辩说好吧，我们在这里有一个 where 子句，所以我们

1019
09:35:04,400 --> 09:35:08,960
不必在这里有这个词子句，我实际上会说是的

1020
09:35:08,960 --> 09:35:13,272
确实有道理，因为是的，为什么我们会有两个单词从句，所以让我们

1021
09:35:13,272 --> 09:35:16,400
删除那个单词子句并将分号放在这里

1022
09:35:16,400 --> 09:35:21,040
好的，所以我们在读取所有快照之前进行过滤，我们得到一个

1023
09:35:21,040 --> 09:35:24,480
这里的错误让我看看可能是什么问题，因为有一张地图

1024
09:35:24,480 --> 09:35:27,192
好的，所以你的代码基本上应该看起来像

1025
09:35:27,192 --> 09:35:31,360
现在，我们现在可以做的是实际上

1026
09:35:31,360 --> 09:35:35,120
对此进行测试以确保一切都按预期工作，所以我

1027
09:35:35,120 --> 09:35:38,872
将我们的 ios 模拟器带到这里运行应用程序

1028
09:35:38,872 --> 09:35:43,680
已经要进行热重启了，让我们注册一个用户，所以我要

1029
09:35:43,680 --> 09:35:46,480
说van.np

1030
09:35:46,480 --> 09:35:51,680
gmail.com foo barbeaus，请不要使用这个呃密码说注册和

1031
09:35:51,680 --> 09:35:56,320
然后它说验证电子邮件没问题，让我继续并提出我的

1032
09:35:56,320 --> 09:36:01,592
邮件并查看我的电子邮件，看看是否有

1033
09:36:01,592 --> 09:36:08,160
验证电子邮件已发送给我，我们已发送电子邮件验证

1034
09:36:08,160 --> 09:36:12,480
请打开它以验证您的帐户，我希望我确实输入了我的电子邮件

1035
09:36:12,480 --> 09:36:16,960
正确，因为我还没有收到验证电子邮件

1036
09:36:16,960 --> 09:36:22,960
所以也许我可以在单独的选项卡中打开 gmail，因为我在使用 gmail

1037
09:36:22,960 --> 09:36:28,872
该特定用户的时刻，看看该电子邮件是否出现在我的

1038
09:36:28,872 --> 09:36:32,320
gmail收件箱没问题

1039
09:36:32,320 --> 09:36:36,160
我要切换用户，让我们看看

1040
09:36:36,160 --> 09:36:39,760
这是我在单独的屏幕上执行此操作，这就是您没有看到的原因

1041
09:36:39,760 --> 09:36:44,232
发生任何这种情况，嗯，我看不到任何电子邮件

1042
09:36:44,232 --> 09:36:49,832
那一刻，嗯，让我在我们的 Firebase 控制台中继续，所以

1043
09:36:49,832 --> 09:36:54,872
嗯，让我们去这里，然后我们去认证和

1044
09:36:54,872 --> 09:37:00,720
我可以看到这里有一个用户，这实际上是正确的，但我没有看到

1045
09:37:00,720 --> 09:37:06,160
任何发送给我的验证电子邮件，让我们继续看看我们的

1046
09:37:06,160 --> 09:37:09,680
注册视图，让我们看看按钮

1047
09:37:09,680 --> 09:37:14,080
如果我们真的忘记做某事，那么当我们通过这个时执行

1048
09:37:14,080 --> 09:37:18,320
注册事件你可以看到身份验证事件注册然后我们必须去我们的关闭

1049
09:37:18,320 --> 09:37:21,592
阻止并看看我们是如何实现的

1050
09:37:21,592 --> 09:37:25,512
实现了，我可以看到我们说创建用户，然后我们正在等待

1051
09:37:25,512 --> 09:37:31,120
提供商发送电子邮件验证，所以它似乎工作正常但是我

1052
09:37:31,120 --> 09:37:34,552
仍然没有收到任何验证电子邮件，这就是为什么我要

1053
09:37:34,552 --> 09:37:37,912
在此屏幕上说在此处发送电子邮件验证

1054
09:37:37,912 --> 09:37:41,680
通过按下我将刷新我的电子邮件，现在我可以看到我

1055
09:37:41,680 --> 09:37:46,160
收到一封验证电子邮件，我将把它带到这里点击链接，我

1056
09:37:46,160 --> 09:37:50,160
可以看到我看到了这个嗯我可以看到那个

1057
09:37:50,160 --> 09:37:54,480
您的电子邮件已通过验证已显示给我，所以

1058
09:37:54,480 --> 09:37:59,760
太好了，让我们现在继续，然后去申请，我要去

1059
09:37:59,760 --> 09:38:04,080
在此处重新启动转到登录页面，我将使用该用户登录

1060
09:38:04,080 --> 09:38:06,800
福巴巴兹

1061
09:38:06,800 --> 09:38:10,552
使用用户登录，没有问题我可以登录应用程序按

1062
09:38:10,552 --> 09:38:13,192
加号按钮，我要说我的第一个音符

1063
09:38:13,192 --> 09:38:16,640
好的，已经保存了，然后我要保存

1064
09:38:16,640 --> 09:38:21,272
我的第二个音符很好，那也被保存了

1065
09:38:21,272 --> 09:38:25,360
我要注销并尝试使用其他用户重新登录

1066
09:38:25,360 --> 09:38:30,320
所以让我们注册一个新用户，因为记住我们删除了所有用户

1067
09:38:30,320 --> 09:38:34,960
firestore 数据库，所以谁又来了，请不要使用此密码

1068
09:38:34,960 --> 09:38:38,800
然后我要看看我的电子邮件

1069
09:38:38,800 --> 09:38:42,640
我实际上可以看到一封新的验证电子邮件已发送给我，所以

1070
09:38:42,640 --> 09:38:46,080
太好了，我要把它带到这里

1071
09:38:46,080 --> 09:38:51,120
如果我可以打开该电子邮件，它看起来像这样，我将验证我的用户很棒

1072
09:38:51,120 --> 09:38:55,760
然后我将重新启动该过程并尝试使用该用户登录

1073
09:38:55,760 --> 09:38:58,320
好的，通过barbaz

1074
09:38:58,320 --> 09:39:02,000
用用户登录，我看不到 van dot 的

1075
09:39:02,000 --> 09:39:08,000
笔记，所以我要说另一个第一个笔记

1076
09:39:08,000 --> 09:39:11,512
另一个第一个音符和

1077
09:39:11,512 --> 09:39:16,872
创建一个新笔记说另一个第二个笔记好吧，所以在这两个用户之后

1078
09:39:16,872 --> 09:39:21,912
已经创建了他们自己的两个单独的笔记让我们继续我们的数据库

1079
09:39:21,912 --> 09:39:26,080
刷新用户我们可以看到这里有两个用户一个以pg开头

1080
09:39:26,080 --> 09:39:31,192
这是这个像素然后有一个 9v 这是另一个用户好的

1081
09:39:31,192 --> 09:39:34,640
让我们去我们的数据库看看我们有多少个节点，我们可以看到我们

1082
09:39:34,640 --> 09:39:36,960
有四个节点 9v

1083
09:39:36,960 --> 09:39:41,040
9v 用于 default.user 然后我们有两个

1084
09:39:41,040 --> 09:39:46,552
嗯，由像素电子邮件创建的文档，以

1085
09:39:46,552 --> 09:39:52,552
pg 的用户 ID，如您在此处看到的，他们可以完全访问自己的

1086
09:39:52,552 --> 09:39:57,120
文件，所以现在这个用户你实际上可以去删除这个文件

1087
09:39:57,120 --> 09:40:01,512
例如另一个第一条笔记，这样他就可以说好的，我想删除这条笔记

1088
09:40:01,512 --> 09:40:04,552
如此繁荣，你可以立即看到它

1089
09:40:04,552 --> 09:40:09,512
也从 firebase 中删除，因此他们可以完全访问自己的笔记

1090
09:40:09,512 --> 09:40:14,000
但他们绝对无法访问其他任何人的笔记，好吧，那就是

1091
09:40:14,000 --> 09:40:18,720
如果这甚至是一个词，工作得非常好

1092
09:40:18,720 --> 09:40:22,800
所以我们现在需要做的下一件事就是继续更新

1093
09:40:22,800 --> 09:40:27,760
我们的 pop 规范 yaml 文件中的内部版本号，所以现在我会告诉你这个让我们走吧

1094
09:40:27,760 --> 09:40:31,680
将 Visual Studio 代码转到我们的代码，然后说 pop spec

1095
09:40:31,680 --> 09:40:35,360
嗯骆驼，你会在这个文件的顶部看到

1096
09:40:35,360 --> 09:40:38,720
在这里的某个地方，我们目前有这个版本是一零零

1097
09:40:38,720 --> 09:40:43,680
加一但我们在这里要做的只是说它是一一零加

1098
09:40:43,680 --> 09:40:48,720
一个，所以我们也在这里更新我们的内部版本号

1099
09:40:48,720 --> 09:40:54,720
所以在这样做之后，因为这是一个很大的变化，你也许可以看看

1100
09:40:54,720 --> 09:41:00,000
您的终端并查看并执行 git status ，您可以通过更新它来查看

1101
09:41:00,000 --> 09:41:05,040
版本号在这里 嗯，它没有立即更新版本

1102
09:41:05,040 --> 09:41:09,192
我们的应用程序的编号，因为如果它完成了，它也应该是

1103
09:41:09,192 --> 09:41:14,080
在 info plist 文件中更新了我们的 ios 应用程序，因此很遗憾

1104
09:41:14,080 --> 09:41:18,400
没有更新，因此发出颤动可能是个好主意

1105
09:41:18,400 --> 09:41:22,552
干净，所以我要带上这样的代码让我们说颤动

1106
09:41:22,552 --> 09:41:26,400
干净还可以

1107
09:41:26,400 --> 09:41:30,872
这将完成它的工作，让我们说颤动

1108
09:41:30,872 --> 09:41:34,872
弹出获取

1109
09:41:34,872 --> 09:41:39,360
那和

1110
09:41:39,360 --> 09:41:42,720
好吧，我们会说 git status 让我们看看我们的

1111
09:41:42,720 --> 09:41:49,680
状态并且仍然没有任何改变所以让我们说flutter run ios

1112
09:41:49,680 --> 09:41:53,592
看看它是否会听好颤动运行，因为这是我们的默认设置

1113
09:41:53,592 --> 09:41:58,480
目前的目标是一个ios模拟器所以也许flutter rom会接受

1114
09:41:58,480 --> 09:42:02,552
多个设备都正常

1115
09:42:02,552 --> 09:42:08,480
请向我们展示设备列表

1116
09:42:08,480 --> 09:42:12,640
也许它有哦，现在它找到了请

1117
09:42:12,640 --> 09:42:17,832
选择一个好吧我想选择iphone 13 pro所以我会选择嗯

1118
09:42:17,832 --> 09:42:23,440
iphone 13 pro 2 号在这里还可以，所以现在它会用它来构建项目

1119
09:42:23,440 --> 09:42:26,232
xcode build 和我这些天的经验

1120
09:42:26,232 --> 09:42:30,720
xcode 构建速度非常慢，所以

1121
09:42:30,720 --> 09:42:35,680
我基本上会保持安静现在让它做它的工作，当它完成时我们

1122
09:42:35,680 --> 09:42:41,440
将继续播放视频，因为我怀疑这个过程

1123
09:42:41,440 --> 09:42:45,832
实际上花了很长时间，我想我们实际上可以在这里看到

1124
09:42:45,832 --> 09:42:50,720
xcode 构建耗时 164 秒

1125
09:42:50,720 --> 09:42:55,272
好吧，我不打算讨论它已经很长时间了，所以让我们看看

1126
09:42:55,272 --> 09:42:59,360
现在，如果版本实际上已正确更新，那么我将去另一个

1127
09:42:59,360 --> 09:43:04,320
在这里进入另一个外壳，让我们说 git status ，我仍然看不到任何

1128
09:43:04,320 --> 09:43:08,160
info plist 文件在 ios 端已被更改，所以我只是

1129
09:43:08,160 --> 09:43:12,872
会很好奇这里然后去这里的ios文件看看

1130
09:43:12,872 --> 09:43:16,960
xcode 工作区，让我们看看版本

1131
09:43:16,960 --> 09:43:20,872
在这里，版本似乎已经更新，所以它是 1 1 0

1132
09:43:20,872 --> 09:43:26,000
正是我们在流行规范 yaml 中指定的内容，因此您可以确保

1133
09:43:26,000 --> 09:43:29,592
此文件已更新，如果您没有 xcode，例如，如果您是

1134
09:43:29,592 --> 09:43:32,160
在 Linux 上运行

1135
09:43:32,160 --> 09:43:35,592
ubuntu什么的，你还是要检查一下版本号

1136
09:43:35,592 --> 09:43:39,592
已针对 ios 应用程序进行了更新，您始终可以通过打开它来做到这一点

1137
09:43:39,592 --> 09:43:44,960
在 ios runner 中文件信息 plist 然后你可以让我相信你

1138
09:43:44,960 --> 09:43:49,120
可以在这里查看您的颤振内部版本号

1139
09:43:49,120 --> 09:43:53,592
让我们看看是否在某处设置了颤振内部版本号

1140
09:43:53,592 --> 09:43:57,192
那个我实际上没有看到颤振构建的那个

1141
09:43:57,192 --> 09:44:01,680
数字被设置在任何地方，所以如果我们搜索一一零

1142
09:44:01,680 --> 09:44:05,360
实际上让我们在整个应用程序中搜索一一零和唯一的

1143
09:44:05,360 --> 09:44:09,120
我在这里看到的就像我们的一些流行规格

1144
09:44:09,120 --> 09:44:13,040
这里是一一零

1145
09:44:13,040 --> 09:44:18,080
不幸的是，这行不通，所以我真的不知道背后的魔力

1146
09:44:18,080 --> 09:44:22,000
Flutter 团队实际上已经将 110 注入

1147
09:44:22,000 --> 09:44:26,400
它可能是某种构建变量，所以如果你想进入

1148
09:44:26,400 --> 09:44:29,680
关于这个的细节也许我们可以打开 xcode

1149
09:44:29,680 --> 09:44:34,480
看看那个应用程序让我们在这里进入构建设置和

1150
09:44:34,480 --> 09:44:39,832
看看版本 看看有没有一一零

1151
09:44:39,832 --> 09:44:43,512
在这里颤动构建名称，这就是他们注入它的方式

1152
09:44:43,512 --> 09:44:47,760
他们有一个名为 slot 的用户定义变量被构建和颤振构建

1153
09:44:47,760 --> 09:44:51,760
然后为我们的 info p 列表注入名称，所以

1154
09:44:51,760 --> 09:44:56,000
如果你去这里，你可以看到哦，这是颤振内部版本号，所以是的，但无论如何

1155
09:44:56,000 --> 09:45:00,000
就是 this 这一定是 Flutter 团队注入的变量

1156
09:45:00,000 --> 09:45:05,040
xcode 以某种方式构建没问题，但提出 xcode 可以确认

1157
09:45:05,040 --> 09:45:09,680
版本号正确设置为 110，这就是我们需要做的所有事情

1158
09:45:09,680 --> 09:45:13,360
那么本章的下一步对我们来说是

1159
09:45:13,360 --> 09:45:16,552
这次做一个构建并将它发送给苹果，所以

1160
09:45:16,552 --> 09:45:19,592
不是这次，我们上次也这样做了，我们把它寄给了苹果，那又怎样

1161
09:45:19,592 --> 09:45:23,592
我要做的是我需要再次打开 xcode 我不应该关闭它

1162
09:45:23,592 --> 09:45:28,320
也许让我们进去吧，当我们在那里的时候，我们可以去说我们是

1163
09:45:28,320 --> 09:45:32,872
为任何 ios 设备构建，然后我只想说产品存档为

1164
09:45:32,872 --> 09:45:35,512
我们在前面的章节中也做过

1165
09:45:35,512 --> 09:45:38,960
所以让它做它的工作

1166
09:45:38,960 --> 09:45:44,552
好的，现在我们的构建已经由 xcode 创建，在这里它非常重要

1167
09:45:44,552 --> 09:45:47,360
你实际上检查了这里的版本号

1168
09:45:47,360 --> 09:45:51,192
对应于您在应用商店连接中创建的版本号，并且

1169
09:45:51,192 --> 09:45:55,192
只是应用商店中的一个提醒，如果你回到那里，你会看到

1170
09:45:55,192 --> 09:45:58,480
我们准备的版本是110，这就是我在开头说的原因

1171
09:45:58,480 --> 09:46:02,080
本章实际上对你来说遵循相同的版本控制很重要

1172
09:46:02,080 --> 09:46:06,160
我在当前章节做所以让我们说 110 我要说

1173
09:46:06,160 --> 09:46:10,720
分发到苹果或分发应用上传

1174
09:46:10,720 --> 09:46:16,080
我们进去吧

1175
09:46:16,080 --> 09:46:20,480
分析应用版本获取应用商店配置

1176
09:46:20,480 --> 09:46:24,552
我要取消选中管理版本和内部版本号，因为我想要颤动

1177
09:46:24,552 --> 09:46:29,592
能够做到这一点，然后我将选择生产配置文件

1178
09:46:29,592 --> 09:46:35,360
我们已经为应用程序创建了在这里也按下下一个按钮

1179
09:46:35,360 --> 09:46:39,680
然后根据您的网络连接和您的不同

1180
09:46:39,680 --> 09:46:42,872
你为你的网络所拥有的配置，这个过程实际上可能需要

1181
09:46:42,872 --> 09:46:47,592
很久以前我什至尝试过这个

1182
09:46:47,592 --> 09:46:50,960
虽然我在光纤网络网络连接上

1183
09:46:50,960 --> 09:46:55,512
一千次上传一千次下载仍然需要大约 30 分钟

1184
09:46:55,512 --> 09:46:59,592
一个简单的应用程序被发送到苹果，它实际上被困在这个

1185
09:46:59,592 --> 09:47:03,360
请求应用程序信息超过 20 分钟，所以

1186
09:47:03,360 --> 09:47:07,760
这是一个不幸的事实，我们只能接受并让它发挥作用

1187
09:47:07,760 --> 09:47:11,040
我会见到你的

1188
09:47:11,040 --> 09:47:15,760
终于把应用程序发送到苹果了，所以现在我可以看到我们的

1189
09:47:15,760 --> 09:47:18,960
申请已经提交给苹果，我不得不承认这一次

1190
09:47:18,960 --> 09:47:22,800
这个过程只花了大约一分钟，所以非常

1191
09:47:22,800 --> 09:47:26,640
比我们必须提交的前几章快得多

1192
09:47:26,640 --> 09:47:30,000
对我来说花费了 30 分钟以上的应用程序

1193
09:47:30,000 --> 09:47:33,680
因此，在您完成此操作后，您将收到一封来自的电子邮件

1194
09:47:33,680 --> 09:47:37,512
如果我能把它带到屏幕上，苹果那种看起来像这样

1195
09:47:37,512 --> 09:47:40,232
它看起来像这样，它会告诉你

1196
09:47:40,232 --> 09:47:45,040
仅在此电子邮件完成后，以下构建才完成处理

1197
09:47:45,040 --> 09:47:48,320
已发送您可以去应用商店连接和

1198
09:47:48,320 --> 09:47:52,480
去吧，我们还必须修复我们缺失的合规性，所以让我们说管理和

1199
09:47:52,480 --> 09:47:54,960
说不使用加密

1200
09:47:54,960 --> 09:48:00,640
完成后开始内部测试，你需要去应用商店

1201
09:48:00,640 --> 09:48:04,400
你怎么说选项卡，在那个选项卡中让我们选择一个新的

1202
09:48:04,400 --> 09:48:09,680
比尔，这是我们的 110 版本，我会说在那里完成之后

1203
09:48:09,680 --> 09:48:13,040
你已经完成了，你可以按下保存按钮，然后你可以提交你的

1204
09:48:13,040 --> 09:48:17,680
应用新鲜到苹果，这样

1205
09:48:17,680 --> 09:48:23,440
然后依次结束将我们的应用程序提交到应用程序商店，嗯，如果有的话

1206
09:48:23,440 --> 09:48:26,400
此应用程序的任何并发症，例如如果苹果出于某种原因不能

1207
09:48:26,400 --> 09:48:29,592
注册用户或他们将向您发送一封电子邮件告诉您的内容

1208
09:48:29,592 --> 09:48:33,040
关于那个所以你需要经历那个过程

1209
09:48:33,040 --> 09:48:37,360
并帮助应用商店审核团队开始使用

1210
09:48:37,360 --> 09:48:40,160
您的应用程序，但如果您还记得之前的章节，我们已经

1211
09:48:40,160 --> 09:48:44,960
实际上在那里留下了一些信息，例如评论信息

1212
09:48:44,960 --> 09:48:50,000
并告诉审核小组如何注册

1213
09:48:50,000 --> 09:48:52,872
用户在我们的应用程序中，这样信息就足够了

1214
09:48:52,872 --> 09:48:57,592
他们了解如何使用该应用程序太棒了，我们已经完成了起源

1215
09:48:57,592 --> 09:49:03,192
像往常一样将我们的 ios 应用程序提交到应用程序商店，因为我们现在

1216
09:49:03,192 --> 09:49:07,912
更改了我们的代码让我们进入 Visual Studio 代码并

1217
09:49:07,912 --> 09:49:11,832
我要关闭所有这些选项卡，因为它只是非常填充

1218
09:49:11,832 --> 09:49:17,192
我的屏幕摆脱了资源管理器并转到

1219
09:49:17,192 --> 09:49:21,680
我的终端在这里查看艺术状态，我可以看到只有

1220
09:49:21,680 --> 09:49:26,800
两个文件已更改，因此我将添加它们，然后像​​您一样按照第 30 步提交

1221
09:49:26,800 --> 09:49:30,232
可以在屏幕底部看到好的，所以如果您查看我们的日志，我们有步骤

1222
09:49:30,232 --> 09:49:34,400
29 然后我们有第 30 步所以我要说 git push

1223
09:49:34,400 --> 09:49:40,160
这将推动我们的提交并且少于标签 v 所以第 30 步和

1224
09:49:40,160 --> 09:49:46,872
我们只是说获取推送标签，现在就完成了，我们的标签 30 是

1225
09:49:46,872 --> 09:49:51,440
也发送到 github 我们现在像往常一样需要做的是

1226
09:49:51,440 --> 09:49:55,592
我们在接下来的章节中讨论我们需要讨论的内容的传统

1227
09:49:55,592 --> 09:50:00,160
在下一章中，我们将讨论将我们的应用程序发送到

1228
09:50:00,160 --> 09:50:03,832
google play store 我们已经为 ios 完成了它，我们必须为

1229
09:50:03,832 --> 09:50:06,552
谷歌游戏商店，所以如果你愿意，可以去点点心，我会看到的

1230
09:50:06,552 --> 09:50:10,160
你在下一章大家好，欢迎来到开槽的第 50 章

1231
09:50:10,160 --> 09:50:13,360
当然，在前面的章节中，我们已经做了很多工作来提交我们的

1232
09:50:13,360 --> 09:50:18,320
使用 app store connect 和本章中的 ios 应用商店应用程序

1233
09:50:18,320 --> 09:50:21,360
我们将专注于做同样的事情，但为了

1234
09:50:21,360 --> 09:50:25,680
谷歌和游戏商店，所以当你有应用商店和应用程序的后面

1235
09:50:25,680 --> 09:50:29,912
商店你有 um app store connect 它允许你作为

1236
09:50:29,912 --> 09:50:32,872
一个开发人员去与你的产品进行交互

1237
09:50:32,872 --> 09:50:37,040
提交到应用商店谷歌为您的产品提供了类似的东西

1238
09:50:37,040 --> 09:50:40,720
在这种情况下，您的 android 应用程序将在我们的 Flutter 应用程序中可用

1239
09:50:40,720 --> 09:50:43,912
谷歌游戏商店，用户下载你的

1240
09:50:43,912 --> 09:50:50,872
您作为开发人员的应用程序必须转到 google play 控制台，所以

1241
09:50:50,872 --> 09:50:53,512
我们会处理好这个，为此我们会创造一些东西

1242
09:50:53,512 --> 09:50:58,480
调用了一个应用程序包，而如果您还记得我们何时创建我们的 ios

1243
09:50:58,480 --> 09:51:01,440
应用程序我们去 xcode 并归档我们的应用程序并创建

1244
09:51:01,440 --> 09:51:05,680
一种叫做 xc 存档文件的东西，有点像 zip 文件

1245
09:51:05,680 --> 09:51:09,360
你所有的文件都是你的二进制文件，至少所有你喜欢的链接

1246
09:51:09,360 --> 09:51:15,680
库您的所有 pod 应用程序本身的二进制文件已使用您的签名

1247
09:51:15,680 --> 09:51:19,760
生产证书和配置文件的应用程序包

1248
09:51:19,760 --> 09:51:25,360
你的 um android 设备也是一个签名包，所以它相当于

1249
09:51:25,360 --> 09:51:30,160
您的 um xc 存档，我们也会尽快处理

1250
09:51:30,160 --> 09:51:34,800
在本章中，我们有一个嗯

1251
09:51:34,800 --> 09:51:37,912
我的意思是有些东西我实际上更喜欢这个但我不想要

1252
09:51:37,912 --> 09:51:41,512
之前提到它，因为我们非常接近实际提升我们的 ios

1253
09:51:41,512 --> 09:51:44,800
应用程序，我们必须对我们的代码以及

1254
09:51:44,800 --> 09:51:49,592
您很快就会看到我们何时开始使用

1255
09:51:49,592 --> 09:51:53,760
截取我们在各种 android 上运行的 Flutter 应用程序的 android 屏幕截图

1256
09:51:53,760 --> 09:51:59,592
设备，这是一个滚动问题，我们通常在我们的

1257
09:51:59,592 --> 09:52:03,440
我们显示键盘的屏幕这些屏幕是

1258
09:52:03,440 --> 09:52:06,800
嗯登录视图，我相信有

1259
09:52:06,800 --> 09:52:11,360
注册视图以及我们在哪里显示关键字 i

1260
09:52:11,360 --> 09:52:15,360
相信我们也登录注册以获得密码视图

1261
09:52:15,360 --> 09:52:19,120
因为我们在那里也向用户询问了她的电子邮件地址

1262
09:52:19,120 --> 09:52:23,192
例如一年，实际上我们没有问题

1263
09:52:23,192 --> 09:52:26,480
编辑注释视图所以这不是问题所以

1264
09:52:26,480 --> 09:52:30,160
我们在验证电子邮件视图登录视图注册视图时遇到此问题并忘记了

1265
09:52:30,160 --> 09:52:33,760
密码查看所以嗯

1266
09:52:33,760 --> 09:52:37,192
实际上验证电子邮件视图，您可能会争辩说是的，这不是问题

1267
09:52:37,192 --> 09:52:39,680
但是我们目前遇到的问题

1268
09:52:39,680 --> 09:52:43,512
是不是想象你的应用程序正在运行在一个非常小的

1269
09:52:43,512 --> 09:52:46,160
屏幕和嗯

1270
09:52:46,160 --> 09:52:49,680
然后用户例如有一个非常非常小的屏幕，然后他们

1271
09:52:49,680 --> 09:52:53,760
在登录视图上，然后我们在哪里显示键盘，例如哪里

1272
09:52:53,760 --> 09:52:57,680
他们点击电子邮件字段并尝试编写电子邮件，然后

1273
09:52:57,680 --> 09:53:01,912
键盘弹出像一半屏幕一样阻塞，具体取决于屏幕的大小

1274
09:53:01,912 --> 09:53:05,120
筛选剩下的一半可能实际上无法

1275
09:53:05,120 --> 09:53:08,640
显示视图的全部内容

1276
09:53:08,640 --> 09:53:11,192
所以这是一个小问题，我们必须

1277
09:53:11,192 --> 09:53:16,160
修复它，但它很容易修复，然后你可能会决定说好 ios

1278
09:53:16,160 --> 09:53:20,480
我们已经完成的申请被发送到苹果它已经被接受了

1279
09:53:20,480 --> 09:53:22,960
我要发布它，你肯定可以这样做，所以它是

1280
09:53:22,960 --> 09:53:26,800
如果您想按原样发布您的 is 应用程序，这实际上是一种很好的做法

1281
09:53:26,800 --> 09:53:30,800
继续这样做，然后你可以稍后再做一个补丁并发布另一个

1282
09:53:30,800 --> 09:53:34,960
应用程序来解决这个问题，我认为你发布的越多

1283
09:53:34,960 --> 09:53:40,400
应用程序更好，因为这样您就可以学习更新事物的过程和

1284
09:53:40,400 --> 09:53:44,832
发送发行说明等这是一个很好的做法

1285
09:53:44,832 --> 09:53:52,232
通常所以让我们现在继续讨论一下文档

1286
09:53:52,232 --> 09:53:55,272
创建一个应用程序包，所以我会提出来

1287
09:53:55,272 --> 09:53:58,552
在这里，你可以在底部看到

1288
09:53:58,552 --> 09:54:03,192
它所在的屏幕分发控制台和嗯

1289
09:54:03,192 --> 09:54:07,120
这里有很多文档，你可以去阅读更多关于它的信息，所以我

1290
09:54:07,120 --> 09:54:12,400
只是想解释一下这里的谷歌游戏控制台

1291
09:54:12,400 --> 09:54:16,320
给你，这样你就可以在这里登录，然后你可以阅读更多关于所有

1292
09:54:16,320 --> 09:54:21,040
这些主题，所以我认为这对您来说只是一个很好的网址

1293
09:54:21,040 --> 09:54:24,232
如果您希望将来能够发布您的应用程序，请添加书签

1294
09:54:24,232 --> 09:54:28,800
如果您像我和您一样，也可以使用 Google 和 Play 商店

1295
09:54:28,800 --> 09:54:32,080
有时只是想跳入你可以开始的事情

1296
09:54:32,080 --> 09:54:39,272
嗯，登录到谷歌游戏控制台，所以让我带你到下一个网址

1297
09:54:39,272 --> 09:54:45,872
可以看到 url 在 google.com 控制台播放，所以我只想说嗯

1298
09:54:45,872 --> 09:54:51,440
play.google.com 斜线 控制台斜线

1299
09:54:51,440 --> 09:54:55,832
如果我能拼写，那是我们的谷歌游戏控制台好吧

1300
09:54:55,832 --> 09:54:59,680
我只是用我的

1301
09:54:59,680 --> 09:55:04,000
一个用户帐户，我在这里有这个用户帐户，我可以用它登录

1302
09:55:04,000 --> 09:55:07,912
让我们看看我是否可以成功登录

1303
09:55:07,912 --> 09:55:13,040
好的，然后它说再次选择开发人员，如果你还没有完成

1304
09:55:13,040 --> 09:55:18,160
在你可能必须先去创建一个开发者帐户之前，但我

1305
09:55:18,160 --> 09:55:20,320
但在本章的开头，我们

1306
09:55:20,320 --> 09:55:24,000
谈了很多关于为 ios 和

1307
09:55:24,000 --> 09:55:27,680
android所以我假设你已经这样做了，但如果你还没有，你可以去

1308
09:55:27,680 --> 09:55:31,040
并创建一个开发者帐户它是免费的，您无需支付任何费用

1309
09:55:31,040 --> 09:55:35,192
所以请继续创建您的开发者帐户

1310
09:55:35,192 --> 09:55:38,640
所以现在我要在这里选择我的开发者帐户，然后进入这里

1311
09:55:38,640 --> 09:55:43,440
好的，这是我的谷歌游戏控制台，你可以在这里看到

1312
09:55:43,440 --> 09:55:49,360
至少对我来说是控制台网址，我们需要在这里做的是

1313
09:55:49,360 --> 09:55:55,040
前进并创建一个应用程序，让我们继续前进，如您所见

1314
09:55:55,040 --> 09:55:59,192
屏幕底部让我们继续点击此处和现在的创建应用程序

1315
09:55:59,192 --> 09:56:04,160
这里它要求我们提供一些信息

1316
09:56:04,160 --> 09:56:09,512
嗯，我也刚看到我有一点

1317
09:56:09,512 --> 09:56:13,832
ipo 在我的行动中，所以我会带上正确的标题

1318
09:56:13,832 --> 09:56:17,512
在这里，你会看到我们必须通过这些步骤才能

1319
09:56:17,512 --> 09:56:22,720
好吧，创建我们的应用程序，所以我要进去，让我们说我的

1320
09:56:22,720 --> 09:56:25,440
惊人的

1321
09:56:25,440 --> 09:56:28,320
注意默认语言让我们离开它

1322
09:56:28,320 --> 09:56:32,872
作为英语我们，它会问你是应用程序还是游戏，然后我们会说

1323
09:56:32,872 --> 09:56:36,320
这是一个应用程序，它是一个免费的应用程序

1324
09:56:36,320 --> 09:56:41,440
而且我们会说它符合开发者政策并接受

1325
09:56:41,440 --> 09:56:46,832
我们出口法律没问题，然后我们创建应用程序，这可能需要一些时间

1326
09:56:46,832 --> 09:56:52,552
时间还可以，所以我们现在需要做的就是通过

1327
09:56:52,552 --> 09:56:56,320
嗯应用程序访问在这里所以我要带

1328
09:56:56,320 --> 09:57:01,120
增加标题，所以我们需要通过让我们看看是否

1329
09:57:01,120 --> 09:57:04,400
您实际上可以找到有关您的应用程序的提供信息，并且当您

1330
09:57:04,400 --> 09:57:07,272
可以看到它就在此处提供有关您的应用程序的信息并设置

1331
09:57:07,272 --> 09:57:11,512
你的商店听得很好，所以我要看看，这些是

1332
09:57:11,512 --> 09:57:14,800
你必须经历的事情，我们实际上会一起经历

1333
09:57:14,800 --> 09:57:18,800
为了能够为您的应用程序创建列表，因此它是

1334
09:57:18,800 --> 09:57:25,360
好的检查清单基本上是嗯，我不得不说我的意思是我更习惯了

1335
09:57:25,360 --> 09:57:29,512
应用商店连接界面有点像我发现的不太混乱

1336
09:57:29,512 --> 09:57:32,800
老实说，谷歌游戏控制台有点混乱

1337
09:57:32,800 --> 09:57:36,552
事情只是在你的脸上有这么多，但曾经

1338
09:57:36,552 --> 09:57:40,232
你习惯了我想你会明白目的和

1339
09:57:40,232 --> 09:57:44,320
然后你只要知道在哪里可以找到东西就可以了

1340
09:57:44,320 --> 09:57:48,640
仪表板和您的应用程序只需向下滚动以设置您的应用程序提供

1341
09:57:48,640 --> 09:57:52,480
此处有关您的应用程序而不是您的商品详情的信息，让我们转到

1342
09:57:52,480 --> 09:57:57,832
应用程序访问并设置好然后这里问我们好吗

1343
09:57:57,832 --> 09:58:00,720
我们要说的任何受限内容

1344
09:58:00,720 --> 09:58:05,120
无需特殊访问即可使用所有功能按保存按钮

1345
09:58:05,120 --> 09:58:09,272
例如，您可以看到我保存了它，现在我必须手动返回

1346
09:58:09,272 --> 09:58:13,832
仪表板它本可以保存它并把我送回去，但它不这样做

1347
09:58:13,832 --> 09:58:18,552
如您所见，现在应用程序访问权限已被划掉

1348
09:58:18,552 --> 09:58:22,800
让我们去广告部分，所以对于广告，我们会说不，我的应用没有

1349
09:58:22,800 --> 09:58:27,360
包含广告好按保存按钮，然后按仪表板按钮

1350
09:58:27,360 --> 09:58:33,040
所以这是广告，让我们继续处理

1351
09:58:33,040 --> 09:58:36,232
内容评级，这有点像我们必须为应用商店连接做的事情

1352
09:58:36,232 --> 09:58:39,680
以及例如说我们的应用程序不包含暴力

1353
09:58:39,680 --> 09:58:43,512
不包含成人内容等所以让我们去

1354
09:58:43,512 --> 09:58:47,272
内容评级和说开始问卷

1355
09:58:47,272 --> 09:58:51,192
让我们填写我们的电子邮件地址，所以我会在这里

1356
09:58:51,192 --> 09:58:58,080
提供我是否可以拼写支持像素

1357
09:58:58,080 --> 09:59:02,000
我现在有一些问题

1358
09:59:02,000 --> 09:59:06,640
支持pixelity ab.sc，我相信是的，那是我的

1359
09:59:06,640 --> 09:59:11,512
网站所以嗯所以我想这就是我的电子邮件

1360
09:59:11,512 --> 09:59:15,760
一直在应用商店连接中使用所以呃让我也

1361
09:59:15,760 --> 09:59:18,720
在我的笔记中仔细检查一下，所以我要把它单独拿出来

1362
09:59:18,720 --> 09:59:23,192
网站只是我要在我的网站上检查这个

1363
09:59:23,192 --> 09:59:27,272
我认为它实际上是所以我没有使用它

1364
09:59:27,272 --> 09:59:30,720
现在让我们选择一些约会，在这里你只需要

1365
09:59:30,720 --> 09:59:35,680
输入您自己的电子邮件，所以不要在这里输入我的电子邮件，以防万一他们需要

1366
09:59:35,680 --> 09:59:38,720
如您所见，如果他们需要与您联系，那么我们的类别

1367
09:59:38,720 --> 09:59:42,960
应用程序我们说所有其他应用程序类型，因为它不是游戏或社交或

1368
09:59:42,960 --> 09:59:47,680
通信应用程序，所以接下来该应用程序是否包含任何评级

1369
09:59:47,680 --> 09:59:51,360
评级作为应用程序包的一部分下载的相关内容

1370
09:59:51,360 --> 09:59:54,800
代码或资产 否

1371
09:59:54,800 --> 09:59:58,400
和用户会计是否应用程序本身允许用户交互或

1372
09:59:58,400 --> 10:00:03,832
通过语音通信文本与其他用户交换内容 no

1373
10:00:03,832 --> 10:00:07,360
然后假设在线内容具有应用功能

1374
10:00:07,360 --> 10:00:10,960
推广不属于初始应用下载但可以访问的内容

1375
10:00:10,960 --> 10:00:15,512
从应用程序没有年龄限制的促销或销售

1376
10:00:15,512 --> 10:00:19,760
产品 无杂 应用程序是否共享用户当前和精确的

1377
10:00:19,760 --> 10:00:24,000
物理位置不，该应用程序是否允许用户购买

1378
10:00:24,000 --> 10:00:28,640
购买数字商品 不，该应用程序是网络浏览器还是搜索引擎

1379
10:00:28,640 --> 10:00:32,232
不，他主要是新闻或教育

1380
10:00:32,232 --> 10:00:37,760
产品不行，所以我们保存它，然后转到下一页摘要和

1381
10:00:37,760 --> 10:00:43,040
你可以看到它说巴西所有年龄段的评分为 30 佩吉 3

1382
10:00:43,040 --> 10:00:46,960
每个人都可以使用这个应用程序评价它三加

1383
10:00:46,960 --> 10:00:49,440
不确定对你说实话这三个加

1384
10:00:49,440 --> 10:00:53,360
嗯，然后我们可以说

1385
10:00:53,360 --> 10:00:56,872
提交没问题

1386
10:00:56,872 --> 10:00:59,512
这样那部分就完成了

1387
10:00:59,512 --> 10:01:03,760
看起来是这样，然后我们就可以去我们的仪表板

1388
10:01:03,760 --> 10:01:08,232
好的，然后让我们去取出我们的目标受众

1389
10:01:08,232 --> 10:01:16,640
我们说在这里我们选择 13 到 15 16 到 17 18 及以上也可以使用

1390
10:01:16,640 --> 10:01:20,552
我们的申请没问题，这有点像你可以决定你的

1391
10:01:20,552 --> 10:01:24,400
拥有是否像您一样必须添加隐私政策目标受众包含

1392
10:01:24,400 --> 10:01:28,400
或 13 岁以下，这就是为什么我们不喜欢针对 13 岁以下的任何人。

1393
10:01:28,400 --> 10:01:31,832
基本上你可能会说哦，我的应用程序只适合 18 岁及以上，那就是

1394
10:01:31,832 --> 10:01:35,192
这完全取决于您，非常欢迎您这样做，但是

1395
10:01:35,192 --> 10:01:40,800
我认为我们的应用程序甚至适用于 13 甚至可能更少 13 相当

1396
10:01:40,800 --> 10:01:44,480
基本上喜欢甜蜜点，我会说是的，因为如果你低于

1397
10:01:44,480 --> 10:01:48,800
然后你必须为那些特定的人提供你的隐私政策

1398
10:01:48,800 --> 10:01:51,760
目标所以我们不会那样做

1399
10:01:51,760 --> 10:01:55,592
然后我们要按下下一个按钮，让我们看看这里

1400
10:01:55,592 --> 10:01:59,832
是什么要求我们吸引孩子们可以您的商品详情

1401
10:01:59,832 --> 10:02:04,552
无意中出现在孩子面前，我们说是

1402
10:02:04,552 --> 10:02:07,832
因为我们可能不希望这个应用程序成为

1403
10:02:07,832 --> 10:02:12,872
为孩子们出现，但它可能仍然出现，所以让我们在那儿说是

1404
10:02:12,872 --> 10:02:18,232
在这里你可以看到目标群体是 13 到 18 岁。现在太好了，我们

1405
10:02:18,232 --> 10:02:22,232
保存它，让我们回到我们的仪表板，你可以在这里看到一个目标

1406
10:02:22,232 --> 10:02:27,040
观众也完成了

1407
10:02:27,040 --> 10:02:31,592
所以让我们去这里新闻应用程序的新部分是我们的应用程序和新闻应用程序，我们

1408
10:02:31,592 --> 10:02:35,272
说不好吧，然后我们保存并返回

1409
10:02:35,272 --> 10:02:38,800
你可以看到新闻应用的东西已经完成了

1410
10:02:38,800 --> 10:02:44,232
所以现在让我们看看这个 covet 19 联系人应用程序，我们说嗯

1411
10:02:44,232 --> 10:02:49,440
我的应用程序不是带有 19 个联系人跟踪或状态应用程序的公开代码，所以

1412
10:02:49,440 --> 10:02:54,320
保存它，我们说返回仪表板，以便申请流程的一部分

1413
10:02:54,320 --> 10:02:58,080
也完成了现在我们要填写数据安全

1414
10:02:58,080 --> 10:03:00,640
所以让我们来看看所有这些

1415
10:03:00,640 --> 10:03:04,160
这可能需要一些时间，但没关系您的应用收集器是否共享任何

1416
10:03:04,160 --> 10:03:08,800
您的应用程序是否收集或共享任何所需的用户数据类型

1417
10:03:08,800 --> 10:03:12,960
所需收集所需

1418
10:03:12,960 --> 10:03:18,232
用户数据类型所需的含义是什么

1419
10:03:18,232 --> 10:03:22,232
个人信息是的，我们会收集电子邮件地址，所以当然可以

1420
10:03:22,232 --> 10:03:25,512
所以让我们说是的

1421
10:03:25,512 --> 10:03:29,592
让我们删除所有收集的有关您的应用的用户数据已加密

1422
10:03:29,592 --> 10:03:33,592
在运输过程中是的，那是因为我们使用的是 firebase 并且使用的是 https 所以

1423
10:03:33,592 --> 10:03:37,272
那是在传输中加密的，您是否为用户提供了一种方法来请求他们的

1424
10:03:37,272 --> 10:03:41,592
数据被删除不，我们不这样做，我真的相信它会

1425
10:03:41,592 --> 10:03:45,592
如果你这样做真的很好，如果你对此感到好奇，如果

1426
10:03:45,592 --> 10:03:49,120
例如，您希望允许用户能够做到这一点

1427
10:03:49,120 --> 10:03:51,832
可以检查一下，看看你可以如何请求

1428
10:03:51,832 --> 10:03:56,000
他们要删除的数据，您可以为此创建一个单独的视图

1429
10:03:56,000 --> 10:04:01,680
从那里你基本上可以对firebase进行api调用并删除

1430
10:04:01,680 --> 10:04:05,272
这个用户，所以如果你愿意，你可以这样做，我实际上可能会提供

1431
10:04:05,272 --> 10:04:08,320
我不知道的一章，但目前

1432
10:04:08,320 --> 10:04:12,960
我们说没有数据类型可以，让我们看看

1433
10:04:12,960 --> 10:04:17,760
这可能需要相当长的时间所以让我们看看

1434
10:04:17,760 --> 10:04:20,960
嗯数据类型你必须选择任何用户数据

1435
10:04:20,960 --> 10:04:24,800
这是收集好的，我们不做嗯位置

1436
10:04:24,800 --> 10:04:29,760
个人信息，我们正在收集电子邮件

1437
10:04:29,760 --> 10:04:32,872
与可识别的人相关的个人标识符，例如

1438
10:04:32,872 --> 10:04:37,360
帐户 ID 帐号或帐户名称 是的 个人标识符 是的

1439
10:04:37,360 --> 10:04:39,440
绝对嗯

1440
10:04:39,440 --> 10:04:43,360
以及我们没有收集的其他个人信息，因此我们只有一个用户 ID 和

1441
10:04:43,360 --> 10:04:46,552
一个电子邮件地址，就是这样，我们甚至不要求他们

1442
10:04:46,552 --> 10:04:50,160
名字所以财务信息没有健康没有

1443
10:04:50,160 --> 10:04:54,800
消息让我们看看 uh 包含哪些消息

1444
10:04:54,800 --> 10:04:59,680
这里在哪里你去哪里这里消息

1445
10:04:59,680 --> 10:05:03,912
电子邮件 没有照片和视频 音频文件 文件和

1446
10:05:03,912 --> 10:05:07,440
文件 um 文件和文档

1447
10:05:07,440 --> 10:05:10,960
用户的文件或文件或有关用户文件的任何信息或

1448
10:05:10,960 --> 10:05:15,192
文件，例如文件名是的，因为我们实际上是在存储它们的

1449
10:05:15,192 --> 10:05:20,872
归档他们的笔记，以便应用程序活动没有联系人日历没有网页浏览没有

1450
10:05:20,872 --> 10:05:24,872
应用程序信息和性能没有设备或其他标识符没有所以让我们就在那时

1451
10:05:24,872 --> 10:05:28,400
按下一步然后

1452
10:05:28,400 --> 10:05:33,512
还没开始，让我们看看开始这封电子邮件

1453
10:05:33,512 --> 10:05:38,720
在这里处理，我们说选择所有适用的是收集的数据共享

1454
10:05:38,720 --> 10:05:44,872
或者两者都只能收集好，并且以这种方式收集的数据必须

1455
10:05:44,872 --> 10:05:49,760
仍会被披露，但不会在您的商品详情中向用户显示

1456
10:05:49,760 --> 10:05:53,832
此数据是否是临时处理的进程系列意味着

1457
10:05:53,832 --> 10:05:58,160
数据仅存储在内存中，并且保留时间不会超过必要时间，因此

1458
10:05:58,160 --> 10:06:01,912
不，它不仅存储在内存中，所以

1459
10:06:01,912 --> 10:06:05,192
我们说这是您的应用程序所需的数据，在这种情况下，我

1460
10:06:05,192 --> 10:06:08,552
相信我们正在谈论电子邮件地址，是的，这些数据是必需的，所以

1461
10:06:08,552 --> 10:06:13,272
我只想说是的，它是必需的，为什么收集用户数据是为了

1462
10:06:13,272 --> 10:06:17,512
应用程序功能还可以，嗯

1463
10:06:17,512 --> 10:06:21,040
用于设置和管理用户帐户实际上是帐户

1464
10:06:21,040 --> 10:06:24,720
管理所以让我们说帐户管理

1465
10:06:24,720 --> 10:06:27,512
嗯，然后按保存按钮，所以现在

1466
10:06:27,512 --> 10:06:31,680
我们已经提交了电子邮件地址，虽然我们是我们使用它的原因

1467
10:06:31,680 --> 10:06:35,120
现在让我们转到个人标识符并开始该过程，所以我们说我们只是

1468
10:06:35,120 --> 10:06:39,440
收集它，因为它是一个用户 ID，我们不是

1469
10:06:39,440 --> 10:06:43,040
临时处理它我认为这就是它的发音

1470
10:06:43,040 --> 10:06:48,872
我们说数据收集是必需的，我们说它用于

1471
10:06:48,872 --> 10:06:52,640
应用程序功能还可以，因为我们正在使用用户标识符记住什么时候

1472
10:06:52,640 --> 10:06:55,760
我们存储他们的笔记，因此它更多地用于应用程序功能而不是用于

1473
10:06:55,760 --> 10:06:59,040
注册所以这就是我们这样做的原因，那就是

1474
10:06:59,040 --> 10:07:03,192
现在完成了，让我们去文件和文档看看这个过程

1475
10:07:03,192 --> 10:07:06,960
文件和文档，并说它只是收集的，但不是

1476
10:07:06,960 --> 10:07:11,120
shared 请记住，即使我们添加了，我们也不会共享用户的数据

1477
10:07:11,120 --> 10:07:14,960
共享表供用户与其他人共享自己的信息

1478
10:07:14,960 --> 10:07:19,680
但那是他们的选择，这不是我们做得好的事情

1479
10:07:19,680 --> 10:07:23,912
是不是这些数据是临时处理的，然后我们说不，我再说一次

1480
10:07:23,912 --> 10:07:26,320
不知道这是否是正确的发音

1481
10:07:26,320 --> 10:07:30,000
然后是您的应用程序需要这些数据吗？记住我们正在谈论

1482
10:07:30,000 --> 10:07:35,760
文件和文档用户可以选择是否可以收集此数据

1483
10:07:35,760 --> 10:07:39,832
因为这不是我们强迫他们做的事

1484
10:07:39,832 --> 10:07:46,160
为什么收集这些数据然后我们说它是为了

1485
10:07:46,160 --> 10:07:50,080
广告个性化我应该推荐它没有帐户

1486
10:07:50,080 --> 10:07:55,272
管理不，所以我们会说这是应用程序功能，我们保存它，那就是

1487
10:07:55,272 --> 10:07:59,272
完成后，我们可以转到下一个屏幕并查看

1488
10:07:59,272 --> 10:08:02,320
这看起来像你实际上可以阅读你所有的信息

1489
10:08:02,320 --> 10:08:06,000
进入这里所以嗯，在这里你可以在底部看到

1490
10:08:06,000 --> 10:08:10,400
屏幕上显示提供指向您的隐私政策的链接，我有

1491
10:08:10,400 --> 10:08:15,912
已经是隐私政策，所以我有，嗯，我相信我在隐私政策文本中有它

1492
10:08:15,912 --> 10:08:21,440
所以我要复制它并转到此处的隐私政策实际上离开

1493
10:08:21,440 --> 10:08:24,000
并丢弃留在嗯

1494
10:08:24,000 --> 10:08:28,160
所以我们可能不得不实际提供我还没有这样做的隐私政策

1495
10:08:28,160 --> 10:08:31,912
但我们必须这样做

1496
10:08:31,912 --> 10:08:36,232
在隐私政策页面上，所以是的，我们需要这样做

1497
10:08:36,232 --> 10:08:40,800
让我们继续，嗯，我实际上不想让我们把它保存为

1498
10:08:40,800 --> 10:08:44,400
草稿并转到此处，然后在中输入隐私政策

1499
10:08:44,400 --> 10:08:48,400
在这里，我只想说 https 让我们确保它是 https 是的

1500
10:08:48,400 --> 10:08:52,800
保存好，然后我要回到我们所在的仪表板

1501
10:08:52,800 --> 10:08:59,592
为了数据安全，我们已经结束了，所以让我们去呃下一个

1502
10:08:59,592 --> 10:09:05,440
下一个 下一个 在这个底部 现在我们有了我们的隐私政策，所以现在我们可以

1503
10:09:05,440 --> 10:09:08,080
保存这个，让我们看看是否有什么我们必须做的

1504
10:09:08,080 --> 10:09:12,960
实际上提交它所以它看起来不像所以它是

1505
10:09:12,960 --> 10:09:17,040
保存成功所以如果我们回到仪表板然后看看

1506
10:09:17,040 --> 10:09:21,192
我们的数据安全现在我们应该能够看到它被划掉了

1507
10:09:21,192 --> 10:09:27,440
太棒了，所以数据安全已经完成，现在我们

1508
10:09:27,440 --> 10:09:32,872
必须看看这个应用程序类别并提供联系方式好吗

1509
10:09:32,872 --> 10:09:37,680
所以让我们在这里进入应用程序类别，我们说它是一个应用程序，它是类别

1510
10:09:37,680 --> 10:09:42,160
如果它们存在的话，我们就说实用程序

1511
10:09:42,160 --> 10:09:46,960
嗯，让我们说这是我们应该说的

1512
10:09:46,960 --> 10:09:52,480
通讯 教育 活动 食品屋 图书馆 blah blah 医疗新闻

1513
10:09:52,480 --> 10:09:57,272
个性化生产力也许还可以，然后标签让我们说

1514
10:09:57,272 --> 10:10:00,800
嗯，哦，这太可怕了，好吧

1515
10:10:00,800 --> 10:10:07,040
嗯，让我们说一个便条笔记本是的，让我们保持它好吧

1516
10:10:07,040 --> 10:10:10,160
如果您愿意，您可以选择更多标签

1517
10:10:10,160 --> 10:10:12,960
然后完成

1518
10:10:12,960 --> 10:10:16,640
让我们看看我要说的商品详情联系方式和电子邮件地址

1519
10:10:16,640 --> 10:10:20,872
支持应用pixelity.se电话号码，我要去

1520
10:10:20,872 --> 10:10:26,400
在这里输入一些电话号码 好吧，现在只是一个假电话号码

1521
10:10:26,400 --> 10:10:31,360
和 https pixelity.se 外部营销

1522
10:10:31,360 --> 10:10:34,480
您可以选择宣传您的

1523
10:10:34,480 --> 10:10:39,040
如果您愿意，可以在 google play 之外的应用程序，也许没关系

1524
10:10:39,040 --> 10:10:43,512
嗯，在我保存这个之前，我要把屏幕带到另一个屏幕上，然后

1525
10:10:43,512 --> 10:10:47,440
实际上输入我的真实电话号码，好吧，所以我要这样做，让我们看看

1526
10:10:47,440 --> 10:10:53,760
如果我能做到这一点，它似乎并不喜欢这个事实

1527
10:10:53,760 --> 10:10:58,160
我把它拖到另一个屏幕现在它喜欢它了

1528
10:10:58,160 --> 10:11:02,872
所以让我看看

1529
10:11:02,872 --> 10:11:07,272
它真的不喜欢我把它拖到我的 ipad 所以我要把它带到

1530
10:11:07,272 --> 10:11:10,720
我的麦金塔

1531
10:11:10,720 --> 10:11:15,272
是的，所以我在这里所做的只是输入该信息，所以让我带来

1532
10:11:15,272 --> 10:11:18,552
再次启动，然后让我们看看你是否可以按

1533
10:11:18,552 --> 10:11:22,320
保存按钮好，所以我所做的只是将屏幕移动到另一个

1534
10:11:22,320 --> 10:11:26,232
物理屏幕输入我的真实电话号码就是这样

1535
10:11:26,232 --> 10:11:28,160
哎呀

1536
10:11:28,160 --> 10:11:35,680
保持安全您的更改无法保存为什么不让我去看看我是否

1537
10:11:35,680 --> 10:11:39,680
输入一个有效的哦，我输入了我的电话号码不正确，所以我要

1538
10:11:39,680 --> 10:11:43,192
保存并滚动到屏幕顶部

1539
10:11:43,192 --> 10:11:47,832
把它恢复，然后让我们去所有应用程序好吧

1540
10:11:47,832 --> 10:11:54,320
哎呀，我想在这里回到我的应用程序，所以在这里我们完成了选择

1541
10:11:54,320 --> 10:12:00,320
应用程序类别太棒了，现在它是我们必须设置的多汁部分

1542
10:12:00,320 --> 10:12:05,760
在我们的商店列表中，嗯，这实际上也将是相当的

1543
10:12:05,760 --> 10:12:11,440
设置过程的一个重要部分，因此这实际上可能需要一些时间，但是

1544
10:12:11,440 --> 10:12:15,912
没关系，我们会在适当的时候解决这个问题，所以现在我们必须看看

1545
10:12:15,912 --> 10:12:19,832
在设置我们的商店聆听时，商店聆听是其中之一

1546
10:12:19,832 --> 10:12:23,192
绝对的核心组件或者和我们必须做的核心事情

1547
10:12:23,192 --> 10:12:28,320
发布我们的应用程序，让我们在这里设置您的商品详情

1548
10:12:28,320 --> 10:12:31,360
让我们做一个简短的描述并说商店

1549
10:12:31,360 --> 10:12:36,160
你的笔记安全没问题，并有完整的描述

1550
10:12:36,160 --> 10:12:40,400
应用程序，您可以将笔记存储在

1551
10:12:40,400 --> 10:12:45,680
云好吧，我也强烈建议你写一些适当的

1552
10:12:45,680 --> 10:12:49,760
这些东西的描述，如果你记住这一点也很重要

1553
10:12:49,760 --> 10:12:54,552
我们为我们的应用程序使用了一个图标，而那个图标我们

1554
10:12:54,552 --> 10:13:01,680
从 stock io 带来，所以如果你进入 stock io，我们使用便笺

1555
10:13:01,680 --> 10:13:06,400
图标，因此在您的商店描述中在 ios 和

1556
10:13:06,400 --> 10:13:12,232
android 你只是说 um app icon 提供的然后给

1557
10:13:12,232 --> 10:13:16,552
一些归因，好吧，所以阅读这些内容非常重要

1558
10:13:16,552 --> 10:13:20,872
事物，并在应归属的地方给出归属

1559
10:13:20,872 --> 10:13:25,912
所以现在我们来到应用程序图标部分，你可以在这里看到

1560
10:13:25,912 --> 10:13:29,760
说应用程序图标应该是五十二乘五十二，而我们没有

1561
10:13:29,760 --> 10:13:33,040
不幸的是，目前我们所拥有的是一千二十四

1562
10:13:33,040 --> 10:13:36,960
一千二十四，所以如果我们回到我们的下载，例如在这里

1563
10:13:36,960 --> 10:13:40,872
你会看到我们在前面的章节中下载了我们的应用程序图标，并且

1564
10:13:40,872 --> 10:13:44,400
我们在这里有这个应用商店的图片，我相信它是千二十四

1565
10:13:44,400 --> 10:13:47,592
现在一千二十四，所以我要做的是我要复制

1566
10:13:47,592 --> 10:13:51,272
这个文件命令 d 在我的 Macintosh on windows 和 linux 你可能必须做

1567
10:13:51,272 --> 10:13:56,000
别的东西，如果你有例如油漆和油漆

1568
10:13:56,000 --> 10:14:00,080
再加上它被称为paint.net或Windows上的东西，你也可以调整大小

1569
10:14:00,080 --> 10:14:03,360
您的图像，但您需要做的只是在您的主机操作系统中

1570
10:14:03,360 --> 10:14:06,640
需要确保这个图像是 512512 所以在 mac 我只是要去

1571
10:14:06,640 --> 10:14:09,360
单击此处它会在单独的屏幕上打开，然后

1572
10:14:09,360 --> 10:14:13,120
我要去工具那里说调整大小，我只想说它是 5

1573
10:14:13,120 --> 10:14:17,440
12 5 12 好的，这些是指导方针，所以我在这里

1574
10:14:17,440 --> 10:14:23,592
只是要把那个文件放在那里好吗

1575
10:14:23,592 --> 10:14:28,552
好的，这适用于您的应用程序图标，即 5 12 5 12。

1576
10:14:28,552 --> 10:14:32,640
现在我们还需要它是一种必需的感觉，因为您可以看到它标有

1577
10:14:32,640 --> 10:14:36,080
星号在这里，这是一个未来的图形，未来的图形是什么

1578
10:14:36,080 --> 10:14:40,232
例如，如果您的应用程序有时可以使用 Google Play 商店

1579
10:14:40,232 --> 10:14:44,640
在 Play 商店 um 中有特色，他们将在

1580
10:14:44,640 --> 10:14:49,680
为了基本上嗯为应用程序做广告所以

1581
10:14:49,680 --> 10:14:52,232
有这方面的指导方针，应该是你

1582
10:14:52,232 --> 10:14:56,800
可以看到它应该是 1024x500，因为我们没有，所以我们是

1583
10:14:56,800 --> 10:15:01,192
将使用我们的应用程序图标来创建未来的图像，所以

1584
10:15:01,192 --> 10:15:04,232
我认为我们应该做的只是打开 figma

1585
10:15:04,232 --> 10:15:09,040
在我们的 figma 文档打开后，我们可以在这里做的是

1586
10:15:09,040 --> 10:15:14,640
创建一个 1024x500 的小矩形，我相信指南是

1587
10:15:14,640 --> 10:15:18,872
告诉我们用 1024 x 500 创建它，所以我要选择这个

1588
10:15:18,872 --> 10:15:24,320
矩形，我说它的宽度是 1024，然后高度是 500，我喜欢什么

1589
10:15:24,320 --> 10:15:29,440
要做的就是去我信赖的调色板，它来自东京之夜

1590
10:15:29,440 --> 10:15:32,720
让我们去 github 上的东京骑士，就像我们之前看到的那样

1591
10:15:32,720 --> 10:15:36,960
章节我要在这里向下滚动一点，说我有我

1592
10:15:36,960 --> 10:15:41,680
想要编辑器背景颜色，所以它是 2428 3b 然后我要复制它

1593
10:15:41,680 --> 10:15:46,552
关闭选项卡来到 figma 并将该图层的填充颜色更改为

1594
10:15:46,552 --> 10:15:51,120
所以我们要用这个作为我们的背景，我要做的是

1595
10:15:51,120 --> 10:15:56,680
我要去我们的下载文件夹并获取该应用程序图标 png

1596
10:15:56,680 --> 10:16:00,160
1024024 我们在前一章中下载过，所以我要带上

1597
10:16:00,160 --> 10:16:03,272
它在这里然后它是巨大的我要按住

1598
10:16:03,272 --> 10:16:07,120
shift 键，然后按比例调整它的大小，以便将其重置为

1599
10:16:07,120 --> 10:16:10,640
像这样的东西好吧，所以我要把它放在中间现在我要

1600
10:16:10,640 --> 10:16:15,272
将此名称更改为 bg 通过双击将其名称更改为图标

1601
10:16:15,272 --> 10:16:20,320
就可以了，然后我将在这里创建一个文本字段并保存我的真棒

1602
10:16:20,320 --> 10:16:22,720
笔记，让我们

1603
10:16:22,720 --> 10:16:27,272
像这样把它们分成三行，让我们也确保

1604
10:16:27,272 --> 10:16:32,400
这个的填充颜色是白色的也确保你可以看到像我的一样

1605
10:16:32,400 --> 10:16:37,760
它是正确对齐的，然后我要把它放在中间的某个地方

1606
10:16:37,760 --> 10:16:42,160
好吧，也许我们甚至可以增加字体的大小，所以让我们看看

1607
10:16:42,160 --> 10:16:47,440
我们这里有大约 200 个，比如说 120 个，它有点大

1608
10:16:47,440 --> 10:16:51,680
在你的脸上有点大胆的东西所以这是我们的文字所以这是

1609
10:16:51,680 --> 10:16:55,680
我们的文本我要在这里做什么然后我要

1610
10:16:55,680 --> 10:16:59,512
嗯基本上把这些像bg图标和

1611
10:16:59,512 --> 10:17:03,440
文本，然后在这里复制这个背景，因为这将是我们的面具

1612
10:17:03,440 --> 10:17:06,800
抓住它并把它带到底部然后我要右键单击

1613
10:17:06,800 --> 10:17:11,592
它说用作面具，现在它有自己的组，然后我要抓住所有

1614
10:17:11,592 --> 10:17:15,272
这三个图层，然后将它们拖到这里，现在你可以看到那个面具

1615
10:17:15,272 --> 10:17:21,040
基本上掩盖了整个内容，所以它掩盖了我们的图标

1616
10:17:21,040 --> 10:17:25,192
好吧，所以它对我来说看起来很不错，有点成比例，很好，那么

1617
10:17:25,192 --> 10:17:30,640
你可以点击它，然后在 figma 中转到底部，如果

1618
10:17:30,640 --> 10:17:35,832
我改变了这里的嗯，这样你也许可以看得更清楚

1619
10:17:35,832 --> 10:17:41,592
然后滚动以确保选择了您的蒙版组，然后转到导出，然后

1620
10:17:41,592 --> 10:17:46,000
我们要把它作为一个 x 导出，然后现在导出，所以现在我们有了我们的

1621
10:17:46,000 --> 10:17:52,160
图像看起来像这样，它是 1024x500 所以我们可以去呃

1622
10:17:52,160 --> 10:17:57,272
我们的游戏机 谷歌游戏机 就在我们必须扔的地方

1623
10:17:57,272 --> 10:18:01,680
特色图形我要去下载和我们刚刚的图像

1624
10:18:01,680 --> 10:18:07,120
下载的就在这里，我就把它放在那里

1625
10:18:07,120 --> 10:18:10,720
所以那也很好，然后我要

1626
10:18:10,720 --> 10:18:15,040
保存我的更改，某些语言的更改有问题

1627
10:18:15,040 --> 10:18:18,080
错误好吧，那可能是因为我们没有

1628
10:18:18,080 --> 10:18:22,232
真的上传了任何截图，我们会尽快处理它

1629
10:18:22,232 --> 10:18:25,592
有点奇怪，它不让我让

1630
10:18:25,592 --> 10:18:30,000
我将更改保存为草稿我必须保存整个屏幕，因为我

1631
10:18:30,000 --> 10:18:33,440
没有在屏幕上输入一些需要的信息

1632
10:18:33,440 --> 10:18:38,000
允许我实际保存它，但我们很快就会处理好它，嗯

1633
10:18:38,000 --> 10:18:41,832
我们需要在这里做的是确保我们首先运行我们最新的

1634
10:18:41,832 --> 10:18:45,272
在正确的手机上应用程序也是如此

1635
10:18:45,272 --> 10:18:49,040
让我们在这里看看我要把我们的源代码带到这里然后我要去

1636
10:18:49,040 --> 10:18:53,272
说选择设备，然后我要全部选择我的安卓手机

1637
10:18:53,272 --> 10:18:57,272
对，就是这样，然后我实际上要

1638
10:18:57,272 --> 10:19:01,040
拿起我的安卓手机，看看我能不能做到这一点而不会造成太多问题

1639
10:19:01,040 --> 10:19:04,640
像这样在屏幕上

1640
10:19:04,640 --> 10:19:08,800
并经过验证

1641
10:19:08,800 --> 10:19:11,512
确保它也连接到 wi-fi

1642
10:19:11,512 --> 10:19:16,872
太棒了，所以我的安卓手机现在已经设置好了

1643
10:19:16,872 --> 10:19:21,912
然后让我们继续我们的源代码让我改变一些

1644
10:19:21,912 --> 10:19:25,760
屏幕布局在我们的源代码中然后我要去

1645
10:19:25,760 --> 10:19:34,320
如果我可以拼写 dart 文件，则转到主暗文件，并在我们的终端中

1646
10:19:34,320 --> 10:19:39,192
我有两个终端，所以我通常在这里专门为嗯

1647
10:19:39,192 --> 10:19:43,680
scr cpy 所以我只想说 scr cpy 这会调出 android

1648
10:19:43,680 --> 10:19:47,912
就在那儿打电话，既然我们已经选择了，我们现在可以说运行

1649
10:19:47,912 --> 10:19:51,592
没有调试所以这里的目标是在这个上运行应用程序

1650
10:19:51,592 --> 10:19:56,872
特定的 android 手机并让 sdrcpy 为我们截屏

1651
10:19:56,872 --> 10:20:02,552
正如你很快就会看到的，所以有一个非常好的命令叫做 adb 和 adb 就像

1652
10:20:02,552 --> 10:20:06,000
低级和低级android调试器

1653
10:20:06,000 --> 10:20:10,960
通过使用 adb，您实际上可以与您的

1654
10:20:10,960 --> 10:20:14,800
你知道例如你的模拟器 android 模拟器和你的 android

1655
10:20:14,800 --> 10:20:18,080
电话，就像我们在这里一样

1656
10:20:18,080 --> 10:20:23,680
如果你没有 adb 你实际上必须安装它所以如果我说哪个 adb

1657
10:20:23,680 --> 10:20:28,232
在我的电脑上你可以看到它说它是自制的 bin adb 基本上告诉

1658
10:20:28,232 --> 10:20:31,272
你我已经使用自制软件安装了 adb

1659
10:20:31,272 --> 10:20:36,480
如果您没有 adb 如果您的计算机上没有 adb 您可能需要安装

1660
10:20:36,480 --> 10:20:40,400
如果你正在做的事情是按照我正在做的步骤进行的

1661
10:20:40,400 --> 10:20:44,232
为您提供您正在尝试截屏的意思

1662
10:20:44,232 --> 10:20:48,872
来自连接到您计算机的实际设备，好的，所以我现在可以看到

1663
10:20:48,872 --> 10:20:53,272
我们的应用程序在 scr cpy 中运行，看起来像这样，所以我们可以

1664
10:20:53,272 --> 10:20:57,912
要做的就是发出你看到的命令，所以让我们继续说

1665
10:20:57,912 --> 10:21:04,720
um adb exec exec out screen cap key 然后我们保存

1666
10:21:04,720 --> 10:21:10,800
它进入例如file1.png，如果我看看Visual Studio

1667
10:21:10,800 --> 10:21:15,832
您很快就会看到的代码 现在这里存储了一个文件 file1png 就是这样

1668
10:21:15,832 --> 10:21:18,800
包含我们应用程序的屏幕截图的文件

1669
10:21:18,800 --> 10:21:24,160
然后我们可以转到另一个屏幕，例如我忘记密码屏幕

1670
10:21:24,160 --> 10:21:29,120
在这里，我们也可以把我们的键盘放下

1671
10:21:29,120 --> 10:21:32,640
看起来像这样，然后我们可以发出另一个

1672
10:21:32,640 --> 10:21:38,400
文件转换为 png 以便同时存储让我们进入注册屏幕并

1673
10:21:38,400 --> 10:21:43,040
将键盘向下发送，然后假设文件三个 png 并发送

1674
10:21:43,040 --> 10:21:48,160
键盘向下或向上或离开它是它是一个它是一种味道它是

1675
10:21:48,160 --> 10:21:52,552
完全取决于你你想怎么做，所以在这里我要去这里

1676
10:21:52,552 --> 10:21:58,000
vandal mp 并以真实用户身份实际登录

1677
10:21:58,000 --> 10:22:04,232
并转到应用程序的主屏幕，我要为 png 保存文件

1678
10:22:04,232 --> 10:22:07,832
然后我要用键盘打开我的一个笔记

1679
10:22:07,832 --> 10:22:11,592
也许在这种情况下，然后说文件五 png 好

1680
10:22:11,592 --> 10:22:16,720
然后我会说打开，所以我会在这里看到我所有的 png 文件然后我要走了

1681
10:22:16,720 --> 10:22:21,760
把这些文件带到桌面上，这样它们就不会污染

1682
10:22:21,760 --> 10:22:26,720
Visual Studio 代码中的工作区让我们回到这里，你可以看到

1683
10:22:26,720 --> 10:22:31,512
你可以把两个手机或平板电脑的屏幕截图放在那里

1684
10:22:31,512 --> 10:22:34,872
所以让我们继续我的桌面文件夹

1685
10:22:34,872 --> 10:22:40,960
我在哪里存储了所有这些屏幕截图，然后把所有这些图像都放在这里好了

1686
10:22:40,960 --> 10:22:46,160
我可以看到他们在这里填充我要抓住登录屏幕看看是否

1687
10:22:46,160 --> 10:22:48,872
它实际上可以先带来它，不幸的是这里不允许我

1688
10:22:48,872 --> 10:22:53,120
以正确的顺序放置东西所以不幸的是我必须删除它们并且

1689
10:22:53,120 --> 10:22:58,000
就像以正确的顺序放置它们，所以先提交一个

1690
10:22:58,000 --> 10:23:02,400
然后我也必须上传文件，所以有点奇怪

1691
10:23:02,400 --> 10:23:06,552
不允许我重新排列这些图像

1692
10:23:06,552 --> 10:23:11,440
但也许有一个我不知道的功能

1693
10:23:11,440 --> 10:23:17,192
所以让我们说文件四，然后我们必须上传文件五

1694
10:23:17,192 --> 10:23:21,360
好吧，那也有

1695
10:23:21,360 --> 10:23:23,272
嗯好的

1696
10:23:23,272 --> 10:23:27,592
所以这就是我们现在需要照顾的是创造一个五英寸

1697
10:23:27,592 --> 10:23:32,480
平板电脑，因为我这里没有一个五英寸的平板电脑

1698
10:23:32,480 --> 10:23:38,000
物理设备然后我们必须去创建一个所以如果我们看这里

1699
10:23:38,000 --> 10:23:42,400
视觉工作室代码并去颤振选择设备你会看到有

1700
10:23:42,400 --> 10:23:45,912
各种嗯基本的嗯

1701
10:23:45,912 --> 10:23:50,320
我用我的设备管理器创建的平板电脑

1702
10:23:50,320 --> 10:23:55,040
android studio 所以如果你有 android studio 你可以随时打开它

1703
10:23:55,040 --> 10:23:58,160
android studio 嗯哦

1704
10:23:58,160 --> 10:24:04,160
哦，它确实打开了它，所以它就在这里，你可以随时去我相信嗯

1705
10:24:04,160 --> 10:24:08,960
avd manager 这是虚拟设备管理器，然后创建您的虚拟

1706
10:24:08,960 --> 10:24:13,680
如您所见，您需要创建一个文件的设备是这个 7 英寸和 10.1

1707
10:24:13,680 --> 10:24:18,000
英寸平板电脑，因为我们要用这些截图，所以我要做什么

1708
10:24:18,000 --> 10:24:22,960
实际上要做的是推出这两款平板电脑，以便它们准备好

1709
10:24:22,960 --> 10:24:28,552
当我们需要它们的时候去，这是第一台平板电脑，我真的要去

1710
10:24:28,552 --> 10:24:33,680
把它转过来，让它处于纵向模式，这就是那个，然后我

1711
10:24:33,680 --> 10:24:38,872
还要在这里要求 avd 经理运行第二台平板电脑

1712
10:24:38,872 --> 10:24:44,232
在这里，速度非常快，我看到我什至不知道它是怎么做到的

1713
10:24:44,232 --> 10:24:49,040
老实说，这台平板电脑怎么运行得这么快有点吓人

1714
10:24:49,040 --> 10:24:53,832
现在坐在那里，嗯，让我们看看它是否会完成它的工作

1715
10:24:53,832 --> 10:24:58,320
正确，虽然我可以看到七英寸平板电脑做得不太好，让我们

1716
10:24:58,320 --> 10:25:03,760
看看我是否可以关闭它，我会说是的，所以也许我应该关闭它

1717
10:25:03,760 --> 10:25:08,160
打算关闭这个，不知道我们是否要

1718
10:25:08,160 --> 10:25:13,912
实际上最好先运行 7 英寸平板电脑，看看是不是这样

1719
10:25:13,912 --> 10:25:16,872
成功也许发生了什么事

1720
10:25:16,872 --> 10:25:21,680
10英寸和7英寸的加工我真的不知道

1721
10:25:21,680 --> 10:25:26,000
这完全取决于设备管理器

1722
10:25:26,000 --> 10:25:30,480
我可以看到这个设备的性能不太好，所以我按下

1723
10:25:30,480 --> 10:25:34,400
电源按钮在这里，我现在可以看到它正在运行，所以我要按下

1724
10:25:34,400 --> 10:25:38,552
主页按钮和嗯方向并没有真正起作用

1725
10:25:38,552 --> 10:25:42,552
很好，所以我可以看到

1726
10:25:42,552 --> 10:25:45,832
现在也许它工作得更好一点，所以让我们就这样吧

1727
10:25:45,832 --> 10:25:50,400
那是七英寸的显示器，它已经启动并运行了，然后我要做什么

1728
10:25:50,400 --> 10:25:55,440
并且颤振守护进程已经终止，完全可以重新加载它

1729
10:25:55,440 --> 10:26:00,960
那么我们要做的是在这里说选择设备

1730
10:26:00,960 --> 10:26:04,800
flutter 选择 vibe 可能是因为 flutter 恶魔

1731
10:26:04,800 --> 10:26:09,832
实际上在这里撞到了我们，所以我要再试一次，如果它不起作用

1732
10:26:09,832 --> 10:26:12,960
然后我要退出 Visual Studio 代码所以

1733
10:26:12,960 --> 10:26:17,272
让我开始视觉工作室代码和新鲜

1734
10:26:17,272 --> 10:26:20,552
好吧，现在视觉工作室重新开始了，让我们再试一次，然后说

1735
10:26:20,552 --> 10:26:24,400
颤振选择设备，这次我要选择一个7英寸的

1736
10:26:24,400 --> 10:26:29,592
android 平板电脑然后我会说运行没有调试所以让我们看看我们是否

1737
10:26:29,592 --> 10:26:33,512
在此平板电脑上运行此应用程序将取得任何成功

1738
10:26:33,512 --> 10:26:38,320
如果 gradle build 今天对我们来说效果很好，那么它就是

1739
10:26:38,320 --> 10:26:42,640
将允许我们进行 lse 执行流安装失败安装

1740
10:26:42,640 --> 10:26:47,760
启动应用程序和 sdk g phone 64 rm64 所以可能有一些问题

1741
10:26:47,760 --> 10:26:51,680
这个安卓平板电脑在这里所以我要关闭它

1742
10:26:51,680 --> 10:26:57,440
如果我在这里的某个地方找不到它，我会回到 android studio

1743
10:26:57,440 --> 10:27:00,480
让我们看看安卓

1744
10:27:00,480 --> 10:27:05,120
工作室好的，它现在正在运行

1745
10:27:05,120 --> 10:27:09,680
让我们进去然后我要去avd经理

1746
10:27:09,680 --> 10:27:15,360
让我们看看我们是否可以关闭这些并杀死这两个平板电脑

1747
10:27:15,360 --> 10:27:20,080
完全像那样，当我在它的时候，我也要去

1748
10:27:20,080 --> 10:27:23,272
杀了这个，所以我没有任何用处，所以我要创建一个新的

1749
10:27:23,272 --> 10:27:29,832
虚拟设备然后我要说的是nexus 7和7的平板电脑

1750
10:27:29,832 --> 10:27:33,120
英寸显示像这样的东西

1751
10:27:33,120 --> 10:27:38,320
没关系，1920 是 100 200 所以这里需要什么

1752
10:27:38,320 --> 10:27:40,720
从我们这里说，呃

1753
10:27:40,720 --> 10:27:45,040
七寸平板截图 好的 太棒了 所以没有

1754
10:27:45,040 --> 10:27:49,832
具体尺寸要求，然后我将按下一个

1755
10:27:49,832 --> 10:27:54,080
绝对没问题，在肖像和

1756
10:27:54,080 --> 10:27:57,680
然后我会说完成然后让我们看看他是否可以运行这个

1757
10:27:57,680 --> 10:28:01,440
这台电脑上的模拟器

1758
10:28:01,440 --> 10:28:04,872
如果一切顺利，我们将在这里看到欢迎屏幕，我可以看到

1759
10:28:04,872 --> 10:28:08,800
谷歌的标志，所以这是一个很好的标志，我会保留屏幕

1760
10:28:08,800 --> 10:28:13,040
在这里以防万一，虽然它正在发挥作用，但我们正在

1761
10:28:13,040 --> 10:28:17,360
会回到颤动，我可以看到模拟器已经启动

1762
10:28:17,360 --> 10:28:21,760
现在，我要说选择设备，我要在这里选择它让我们

1763
10:28:21,760 --> 10:28:26,160
然后说在没有调试的情况下运行运行，希望这次我们有更好的

1764
10:28:26,160 --> 10:28:31,832
在给定的模拟器中运行该应用程序的运气，让我们看看

1765
10:28:31,832 --> 10:28:36,872
哇，这真的很快，实际上它出奇地快，所以现在它

1766
10:28:36,872 --> 10:28:40,640
在那里运行，我可以看到我们的应用程序在模拟器中运行，所以

1767
10:28:40,640 --> 10:28:46,160
我们在这里需要做的是实际拍摄一些截图，所以嗯

1768
10:28:46,160 --> 10:28:50,400
当我们需要你在这里看到的一切时，实际上我们都必须提供 7 英​​寸平板电脑

1769
10:28:50,400 --> 10:28:54,960
屏幕截图，我们还必须修复 10 英寸平板电脑屏幕截图，但我

1770
10:28:54,960 --> 10:28:58,960
要提的是取决于屏幕的大小

1771
10:28:58,960 --> 10:29:02,640
当您看到一切正常时，您就没有问题

1772
10:29:02,640 --> 10:29:06,232
可以去注册屏幕我也忘记了我的密码，所有这些都在工作

1773
10:29:06,232 --> 10:29:11,120
很好但是我们有一个滚动问题

1774
10:29:11,120 --> 10:29:14,800
我可以在这里看到我在

1775
10:29:14,800 --> 10:29:18,552
屏幕底部，七英寸的显示屏实际上会挡住视线

1776
10:29:18,552 --> 10:29:23,760
这可能是因为嗯现在在这种情况下实际上并不是

1777
10:29:23,760 --> 10:29:27,192
挡住视野，但如果您的屏幕较小，则可能会挡住视野

1778
10:29:27,192 --> 10:29:31,272
因为你可以看到这个屏幕是不可滚动的，所以如果你有一个较小的

1779
10:29:31,272 --> 10:29:36,480
屏幕然后这个键盘可以弹出你在这里的内容之上

1780
10:29:36,480 --> 10:29:40,232
阻止内容，所以在开始服用之前我们需要做些什么

1781
10:29:40,232 --> 10:29:44,720
我们的 android um 平板电脑的屏幕截图让我们去解决这些问题

1782
10:29:44,720 --> 10:29:48,640
让我们首先进入我们的应用程序中的验证电子邮件视图 哎呀，我按下

1783
10:29:48,640 --> 10:29:52,800
再次错误地启动按钮对不起，我要停止这个

1784
10:29:52,800 --> 10:29:59,272
让我们去验证电子邮件视图，您将在代码中看到验证

1785
10:29:59,272 --> 10:30:02,960
返回时的电子邮件视图状态是脚手架，它有一个按顺序排列的列

1786
10:30:02,960 --> 10:30:06,080
要使此列垂直滚动，您只需

1787
10:30:06,080 --> 10:30:10,552
用一个小部件包装它，然后说一个孩子

1788
10:30:10,552 --> 10:30:14,720
世界观，如屏幕底部的注释所示，好的，这就是

1789
10:30:14,720 --> 10:30:20,400
向下滚动，让我们现在转到登录视图，以便登录视图并换行

1790
10:30:20,400 --> 10:30:26,000
本专栏中的全部内容，假设用

1791
10:30:26,000 --> 10:30:30,232
一个小部件好的，我要说单身孩子

1792
10:30:30,232 --> 10:30:35,832
滚动视图就像那样好吧，我稍微改变了屏幕布局

1793
10:30:35,832 --> 10:30:40,800
位，以便您更好地查看代码让我们也转到我们的寄存器视图

1794
10:30:40,800 --> 10:30:46,000
注册视图，在屏幕顶部我们有脚手架和一列，所以

1795
10:30:46,000 --> 10:30:50,800
让我们也在这个专栏中说用单个子滚动小部件包装它

1796
10:30:50,800 --> 10:30:56,800
好吧，最后但并非最不重要的是，我们要去找回我们忘记的密码

1797
10:30:56,800 --> 10:31:00,232
查看并看看我们是如何创建屏幕的 我们有一个脚手架

1798
10:31:00,232 --> 10:31:04,232
填充列就像我们在其他地方所做的标准一样

1799
10:31:04,232 --> 10:31:10,080
在单个子滚动视图中使用小部件，这就是现在

1800
10:31:10,080 --> 10:31:13,120
我们已经完成了我们实际上已经准备好再次启动这个应用程序

1801
10:31:13,120 --> 10:31:17,360
所以选择设备到nexus然后我会说运行而不调试所有

1802
10:31:17,360 --> 10:31:22,872
对，所以我们现在需要做的是再次使用 adb 作为低级调试器

1803
10:31:22,872 --> 10:31:27,512
android 但这次我们要截取模拟器的截图，就像你在

1804
10:31:27,512 --> 10:31:30,320
上一节我们谈到服用时

1805
10:31:30,320 --> 10:31:36,080
在 scr cpy 中运行的实际 android 手机的屏幕截图，我们必须使用 adb 作为

1806
10:31:36,080 --> 10:31:40,800
好吧，但我们不必告诉它它是一个模拟器，正如您在

1807
10:31:40,800 --> 10:31:47,040
现在屏幕底部，如果您为 adb 指定 e 标志，则表示

1808
10:31:47,040 --> 10:31:51,592
adb，您想截取模拟器的屏幕截图，好吧

1809
10:31:51,592 --> 10:31:56,000
这是正在运行的设备，对不起，我们的应用程序

1810
10:31:56,000 --> 10:32:00,960
我们现在需要做的是去命令行让我做一些

1811
10:32:00,960 --> 10:32:05,272
在屏幕上重新洗牌，这是我们的

1812
10:32:05,272 --> 10:32:11,912
scrcpy 我会在这里做一些屏幕洗牌所以摆脱这个

1813
10:32:11,912 --> 10:32:15,592
让我们去终端好吧

1814
10:32:15,592 --> 10:32:19,512
让我们发出命令，正如您在屏幕底部看到的那样

1815
10:32:19,512 --> 10:32:24,552
我会这样做，呃，那样做

1816
10:32:24,552 --> 10:32:31,040
adb 退出，但在此之前我只想说破折号 e 和屏幕截图

1817
10:32:31,040 --> 10:32:36,552
e 然后让我们说文件一个 png 好吧

1818
10:32:36,552 --> 10:32:40,400
如果我现在转到项目结构，我可以看到有一个名为 file

1819
10:32:40,400 --> 10:32:45,832
一个png，它是我们模拟器的截图，好吧，所以我要重新

1820
10:32:45,832 --> 10:32:51,040
做同样的事情我要去忘记我的密码屏幕然后我们起床

1821
10:32:51,040 --> 10:32:54,400
并摆脱这里的键盘，让我们删除我刚刚的那个空间

1822
10:32:54,400 --> 10:32:59,040
输入，然后将第二个屏幕截图作为文件转换为 png

1823
10:32:59,040 --> 10:33:03,360
然后让我们去登录页面和注册页面摆脱这个

1824
10:33:03,360 --> 10:33:08,320
键盘文件免费png好的，所以现在我们有了

1825
10:33:08,320 --> 10:33:12,720
哎呀，我要去我要按后退按钮我要去

1826
10:33:12,720 --> 10:33:18,232
使用我的电子邮件地址和我们的

1827
10:33:18,232 --> 10:33:22,000
foo barb ads 的可怕密码现在我们在应用程序中让我们来看看

1828
10:33:22,000 --> 10:33:28,160
第四个屏幕截图名为 file for png 并在此处，而这与

1829
10:33:28,160 --> 10:33:31,512
键盘也许也让我们看看

1830
10:33:31,512 --> 10:33:37,512
然后拍摄屏幕截图 5 或文件 5 png 所以现在我们有 5 个屏幕截图

1831
10:33:37,512 --> 10:33:40,720
我们的 7 英寸显示屏也让我们

1832
10:33:40,720 --> 10:33:45,512
对不起，我们去收集那些截图文件一二五然后

1833
10:33:45,512 --> 10:33:50,400
我要删除桌面上的那些，然后从

1834
10:33:50,400 --> 10:33:54,800
我们的应用程序然后让我们去嗯

1835
10:33:54,800 --> 10:33:59,440
我们的 google play 控制台在 7 英寸的显示屏上，我要扔掉这些

1836
10:33:59,440 --> 10:34:04,160
一个一个地把文件一个一个放在这里

1837
10:34:04,160 --> 10:34:08,640
然后让我们在这之后立即删除文件二然后我们可以说文件三四

1838
10:34:08,640 --> 10:34:13,512
还有五个，所以我呃，这样你就知道我怎么样了

1839
10:34:13,512 --> 10:34:18,000
考虑截图的顺序好吗

1840
10:34:18,000 --> 10:34:23,120
所以这是文件四，然后我们有文件五，我们需要什么

1841
10:34:23,120 --> 10:34:27,440
要做的是我们需要基本上做同样的事情

1842
10:34:27,440 --> 10:34:32,552
一个 10 英寸的显示屏，你可以在这里看到，上面写着 10 英寸平板电脑屏幕截图，所以让我们

1843
10:34:32,552 --> 10:34:36,480
现在再去一次，我们可以关闭这个模拟器

1844
10:34:36,480 --> 10:34:41,760
就在那里然后我们可以回到 android studio 所以如果我能找到 android

1845
10:34:41,760 --> 10:34:46,320
工作室在这里 好的，让我们去 avd 经理，在这里

1846
10:34:46,320 --> 10:34:49,360
我们将创建一个新的虚拟设备在这种情况下它会说

1847
10:34:49,360 --> 10:34:54,320
平板电脑和nexus 10是一个10英寸的显示器，我要按下

1848
10:34:54,320 --> 10:35:00,640
next 然后 sdk 也很好，只是运行它 ooh 景观不确定

1849
10:35:00,640 --> 10:35:04,480
关于那个，但那可能很好，但你知道

1850
10:35:04,480 --> 10:35:07,832
我实际上要删除它并创建一个新的，因为我们有一些

1851
10:35:07,832 --> 10:35:13,040
横向模式之前的问题所以我接下来要再说一次nexus 10

1852
10:35:13,040 --> 10:35:17,512
下一张肖像，然后完成，所以希望这会在肖像中开始

1853
10:35:17,512 --> 10:35:22,000
模式，然后我将在那里按下播放按钮，不幸的是

1854
10:35:22,000 --> 10:35:25,512
以横向模式开始，但没关系希望我们能够

1855
10:35:25,512 --> 10:35:29,832
旋转它，我现在可以看到它正在运行

1856
10:35:29,832 --> 10:35:33,912
希望你是这样的

1857
10:35:33,912 --> 10:35:39,760
我们现在应该看到主屏幕让我们看看我们是否可以旋转这个呃

1858
10:35:39,760 --> 10:35:44,320
不幸的是它实际上并没有旋转所以我想看看是否有

1859
10:35:44,320 --> 10:35:48,552
这里的属性允许我们更改显示

1860
10:35:48,552 --> 10:35:55,512
从横向到纵向，因此启用了快照录制设置

1861
10:35:55,512 --> 10:35:59,512
光代理高级展示窗口框架

1862
10:35:59,512 --> 10:36:04,320
没有任何东西可以让我们改变这个设备

1863
10:36:04,320 --> 10:36:08,800
嗯方向键不，它不会改变

1864
10:36:08,800 --> 10:36:12,720
从横向显示到纵向，我现在

1865
10:36:12,720 --> 10:36:17,680
基本上我可以尝试任何事情，即使我在这里使用 chrome

1866
10:36:17,680 --> 10:36:22,640
说不，谢谢，然后如果我旋转这个，我可以看到它很不幸

1867
10:36:22,640 --> 10:36:27,592
不旋转实际的应用程序，所以我们可能不得不

1868
10:36:27,592 --> 10:36:33,360
以横向模式截取屏幕截图，让我们看看您是否真的可以这样做

1869
10:36:33,360 --> 10:36:36,640
所以如果有人知道如何解决这个问题，我会

1870
10:36:36,640 --> 10:36:40,960
感谢也知道，因为此刻即使在做

1871
10:36:40,960 --> 10:36:44,232
左右命令它不听我的命令它不是

1872
10:36:44,232 --> 10:36:48,320
基本上是旋转的，所以这个图标怎么样

1873
10:36:48,320 --> 10:36:52,800
嗯，说实话对你没有太大帮助

1874
10:36:52,800 --> 10:36:57,040
嗯，我不是说我可以去这里

1875
10:36:57,040 --> 10:37:01,440
然后在这里哦，现在是肖像，好吧我做了一些事情，所以我点击了一个

1876
10:37:01,440 --> 10:37:05,272
旋转后左上角的小图标，所以它旋转到纵向所以

1877
10:37:05,272 --> 10:37:09,040
这只是纯粹的运气让我们去视觉工作室代码说

1878
10:37:09,040 --> 10:37:13,040
macintosh 上的命令 shift p 或 linux 和 windows 中的 ctrl shift p 并保存

1879
10:37:13,040 --> 10:37:16,800
闪光灯或选择设备 选择我们的 10 英寸显示屏

1880
10:37:16,800 --> 10:37:20,400
然后我会说运行运行没有调试，如果

1881
10:37:20,400 --> 10:37:24,720
一切正常，然后 gradle 对我们有利

1882
10:37:24,720 --> 10:37:29,192
gradle 任务会很快过去，我真的很感激

1883
10:37:29,192 --> 10:37:32,640
老实说，所以 gradle 现在工作得更好了

1884
10:37:32,640 --> 10:37:38,080
比 xcode 构建过程，所以这是我们的应用程序并显示在 10 英寸

1885
10:37:38,080 --> 10:37:42,160
显示，让我们继续并开始截取一些屏幕截图，所以我要

1886
10:37:42,160 --> 10:37:46,400
到这里的终端，然后开始截图

1887
10:37:46,400 --> 10:37:51,832
在登录视图中归档一个然后让我们去忘记密码并说

1888
10:37:51,832 --> 10:37:55,680
文件二我要摆脱键盘，不截图

1889
10:37:55,680 --> 10:37:59,512
键盘我要去这里到注册视图摆脱

1890
10:37:59,512 --> 10:38:06,872
键盘，然后说文件三，这样我们就不用用户登录了

1891
10:38:06,872 --> 10:38:11,760
嗯，像这样说 foobar baz 用那个用户登录哦，错了

1892
10:38:11,760 --> 10:38:16,000
凭证没关系呃 foo barbaz

1893
10:38:16,000 --> 10:38:19,680
登录，登录后我们将采取

1894
10:38:19,680 --> 10:38:23,192
另一个屏幕截图，这是我们的屏幕截图 4，然后我们将

1895
10:38:23,192 --> 10:38:27,912
用键盘截取另一个屏幕截图给我们的嗯

1896
10:38:27,912 --> 10:38:33,040
文件 5. 好的，这也是我要打开的

1897
10:38:33,040 --> 10:38:36,872
当前文件夹我可以在这里看到五个屏幕截图转到我的桌面获取

1898
10:38:36,872 --> 10:38:40,872
去掉旧的，把新的贴进去

1899
10:38:40,872 --> 10:38:44,800
好的，现在我们有了可以清理和删除的

1900
10:38:44,800 --> 10:38:49,832
模拟器我们没有，我也要关闭 avd 我可以看到

1901
10:38:49,832 --> 10:38:55,512
已经关门了，让我们回到我们这里的游戏商店

1902
10:38:55,512 --> 10:39:00,080
所以玩商店嗯控制台所以我要上传

1903
10:39:00,080 --> 10:39:06,160
这个新的 um png 文件文件一个，然后为十英寸平板电脑文件两个文件，所以所有

1904
10:39:06,160 --> 10:39:10,080
这五张截图是针对十寸平板的

1905
10:39:10,080 --> 10:39:14,960
三，然后我们要去四这里

1906
10:39:14,960 --> 10:39:19,512
然后最后但并非最不重要的是，我们将上传屏幕截图五然后正确

1907
10:39:19,512 --> 10:39:22,872
上传完成后，我将删除所有这些文件以保留我的

1908
10:39:22,872 --> 10:39:26,640
桌面清洁，所以在这样做之后让我们保存它，现在你可以看到

1909
10:39:26,640 --> 10:39:31,440
它说您的更改已保存非常棒

1910
10:39:31,440 --> 10:39:37,592
所以现在已经完成了，我们需要创建一个发布应用程序，所以如果我

1911
10:39:37,592 --> 10:39:42,720
把我的笔记在这里稍微提一下，太棒了

1912
10:39:42,720 --> 10:39:46,320
我们需要做的，我们需要看看这里的一个小 url，如你所见

1913
10:39:46,320 --> 10:39:50,800
在屏幕底部它被称为 docslatter dev deployment android 它是

1914
10:39:50,800 --> 10:39:55,040
一份非常重要的文件，在这里我强烈建议任何试图这样做的人

1915
10:39:55,040 --> 10:39:59,192
创建一个发布应用程序来完成它，它有信息

1916
10:39:59,192 --> 10:40:05,832
windows 和 macintosh 和 linux 用户，这些命令绝对是 um

1917
10:40:05,832 --> 10:40:09,512
充满价值，所以你可能不得不谷歌这些否则

1918
10:40:09,512 --> 10:40:15,680
但这份文件确实把所有这些放在了同一个地方

1919
10:40:15,680 --> 10:40:19,360
所以正如你在这里看到的，我们需要做的第一件事就是创建一个

1920
10:40:19,360 --> 10:40:25,040
我们的应用程序的签名密钥，您需要遵循这些

1921
10:40:25,040 --> 10:40:30,160
此处为您创建的命令，您可以查看，如果我带了

1922
10:40:30,160 --> 10:40:34,080
终端，所以如果我说终端，我会在这里提出来

1923
10:40:34,080 --> 10:40:40,080
如果我像这样在我的计算机上转到这个文件夹 dot android 并且我已经有了

1924
10:40:40,080 --> 10:40:44,800
你可以在这里看到一些键所以我已经设置了一些键但是在

1925
10:40:44,800 --> 10:40:47,592
命令我们实际上嗯

1926
10:40:47,592 --> 10:40:53,912
能够遵循这一点并指导我们去创造这些

1927
10:40:53,912 --> 10:40:59,440
我们的钥匙也好，所以我要做的就是我要做的

1928
10:40:59,440 --> 10:41:03,040
让我们看看我是否可以为您调出命令，正如您在底部看到的那样

1929
10:41:03,040 --> 10:41:06,872
屏幕，所以我将实际复制我为您提供的命令

1930
10:41:06,872 --> 10:41:11,512
屏幕底部没问题，我要去终端

1931
10:41:11,512 --> 10:41:16,800
嗯，让我们去桌面，然后我要发出那个命令

1932
10:41:16,800 --> 10:41:20,320
正如您在屏幕底部看到的那样，让我们​​看看会发生什么

1933
10:41:20,320 --> 10:41:24,480
现在这里它说输入密钥存储密码所以这是你的密码

1934
10:41:24,480 --> 10:41:28,640
然后需要在属性文件中提供，我很快就会告诉你，所以

1935
10:41:28,640 --> 10:41:32,320
记住这个密码直到我们一直在使用的这门课程

1936
10:41:32,320 --> 10:41:36,320
foob​​ar baz 作为密码是一个绝对可怕的密码，所以请

1937
10:41:36,320 --> 10:41:40,000
不要使用它，但因为我们在本课程中一直使用它并且因为

1938
10:41:40,000 --> 10:41:44,320
这个意义上的密码对于这门课程没有任何意义，我只是要去

1939
10:41:44,320 --> 10:41:48,640
说 foo bar pass 但请不要使用那么弱的密码

1940
10:41:48,640 --> 10:41:53,120
让我们说 foo barbaz，让我们看看它所说的 java 作为

1941
10:41:53,120 --> 10:41:56,960
密钥库被篡改或密码不正确，所以

1942
10:41:56,960 --> 10:42:01,912
嗯，这可能是因为我实际上正在尝试创建一个上传密钥

1943
10:42:01,912 --> 10:42:06,720
像这样的商店，我已经有一个以前的所以我要做的是

1944
10:42:06,720 --> 10:42:10,960
实际删除这个文件，所以我要说删除那个文件好

1945
10:42:10,960 --> 10:42:15,360
像这样上传密钥库，我将再次发出这个命令，我

1946
10:42:15,360 --> 10:42:20,872
会说 foo bar house 和 fubarba 所以如果你已经

1947
10:42:20,872 --> 10:42:24,872
之前有一个密钥库，你可以使用它，但我假设

1948
10:42:24,872 --> 10:42:30,160
你没有，但是当我发出这个命令时，我已经有了一个，所以

1949
10:42:30,160 --> 10:42:33,760
很可能您之前没有密钥库

1950
10:42:33,760 --> 10:42:37,912
删除它，但在我的情况下，我实际上必须先删除它然后发出

1951
10:42:37,912 --> 10:42:41,040
您可以在屏幕底部的标题中看到的命令

1952
10:42:41,040 --> 10:42:44,720
你的名字和姓氏是什么我只是要保存，我有安迪穷人

1953
10:42:44,720 --> 10:42:47,832
好的，你的组织单位我只是

1954
10:42:47,832 --> 10:42:52,480
要说发展，然后你的组织的名称是

1955
10:42:52,480 --> 10:42:58,080
像素 a b 好的 城市或地方 好的 我只能说斯德哥尔摩 好的

1956
10:42:58,080 --> 10:43:03,832
和状态或好的斯德哥尔摩再次让我们看看呃两个字母的国家代码我要去

1957
10:43:03,832 --> 10:43:09,760
说 s e 并说它是否正确，然后我要按 enter 按钮

1958
10:43:09,760 --> 10:43:13,760
呃，我已经输入了所有这些，也许我在这里犯了一个错误，所以让我们

1959
10:43:13,760 --> 10:43:20,080
只是说什么是正确的问题不我必须输入是的我是

1960
10:43:20,080 --> 10:43:24,232
只是要说是，所以你必须在结束时提供是

1961
10:43:24,232 --> 10:43:29,832
如果与密钥库密码相同，则返回相同的内容是的，只需输入

1962
10:43:29,832 --> 10:43:34,552
好的，现在它为我们创建了一个密钥库，在这里你可以看到

1963
10:43:34,552 --> 10:43:40,960
android 文件夹上传密钥库 jks 好的，所以这非常重要

1964
10:43:40,960 --> 10:43:44,872
既然已经创建了，我们需要做的是如果你有

1965
10:43:44,872 --> 10:43:48,800
跟着this你可以看到我们现在需要做的就是去我们的flutter

1966
10:43:48,800 --> 10:43:52,872
项目在这里你看到它说去你的颤振项目

1967
10:43:52,872 --> 10:43:55,512
然后转到 android 文件夹并创建

1968
10:43:55,512 --> 10:44:01,832
一个名为 key dot properties 的文件好吧，让我们继续创建它，所以我

1969
10:44:01,832 --> 10:44:06,960
将在此处打开 Visual Studio 代码，然后我将转到 cd

1970
10:44:06,960 --> 10:44:10,480
让我们看看我们现在所处的位置

1971
10:44:10,480 --> 10:44:14,320
我们项目标准项目的根文件夹我要去android

1972
10:44:14,320 --> 10:44:18,400
那里建议的文件夹，然后我将创建一个新文件

1973
10:44:18,400 --> 10:44:23,512
在这里被称为关键点属性好的所以关键点属性像这样然后

1974
10:44:23,512 --> 10:44:26,960
我将粘贴提到的内容

1975
10:44:26,960 --> 10:44:30,480
如您所见，在这里

1976
10:44:30,480 --> 10:44:34,960
所以也许是整个内容，所以我只是将它粘贴在这里好吧，所以它说

1977
10:44:34,960 --> 10:44:40,000
上一步的上一步密码，我们刚刚说的是 fubar bass

1978
10:44:40,000 --> 10:44:45,192
就像那个和密钥密码一样，那是 foo bar bass 的密钥

1979
10:44:45,192 --> 10:44:49,040
别名，我们将其保留为上传，在这里我们将说文件

1980
10:44:49,040 --> 10:44:54,720
存储在让我们看看你是否可以获得完整的路径，所以它是正确的

1981
10:44:54,720 --> 10:45:01,192
在这里所以我要复制那个路径路径抱歉然后我要删除它

1982
10:45:01,192 --> 10:45:05,680
信息在这里，然后粘贴在那里好吗

1983
10:45:05,680 --> 10:45:10,400
所以这应该很好，所以我也要仔细检查我的笔记

1984
10:45:10,400 --> 10:45:14,960
这就是我们以前也是这样做的，这似乎完全是

1985
10:45:14,960 --> 10:45:18,232
很好，然后在用空行完成之后

1986
10:45:18,232 --> 10:45:23,040
最后我要关闭这个文件并保存它的内容，所以现在

1987
10:45:23,040 --> 10:45:26,800
如果您转到应用程序的主文件夹并说 git status 那么您

1988
10:45:26,800 --> 10:45:31,040
应该看到你基本上只有这些东西

1989
10:45:31,040 --> 10:45:35,120
致力于您的项目，因为您的关键属性不会

1990
10:45:35,120 --> 10:45:37,760
承诺好吧

1991
10:45:37,760 --> 10:45:41,120
这就是为什么我在这里提到你总是需要确保

1992
10:45:41,120 --> 10:45:45,440
该特定文件不会与您的项目一起提交到

1993
10:45:45,440 --> 10:45:50,232
github 所以你总是可以去你的 git 忽略文件并实际添加它

1994
10:45:50,232 --> 10:45:55,192
您忽略的特定文件，所以我们只说 veeam git ignore

1995
10:45:55,192 --> 10:46:00,040
不要忽略，在这里我们只是要添加一个新文件并说任何

1996
10:46:00,040 --> 10:46:04,640
key.properties 文件不应该被提交然后我们做一个好的状态

1997
10:46:04,640 --> 10:46:09,120
再一次，如果你像我一样偏执，我们的 get ignore 会改变，你会这样做

1998
10:46:09,120 --> 10:46:14,400
就像我做的很好，所以在做了之后我们需要做的

1999
10:46:14,400 --> 10:46:19,120
其实基本上就是创造嗯

2000
10:46:19,120 --> 10:46:23,272
抱歉，我们必须更新构建 gradle 以进行签名和

2001
10:46:23,272 --> 10:46:30,000
我提供了一个链接，我会自己去看看，嗯

2002
10:46:30,000 --> 10:46:33,592
如果我能自己找到那个链接

2003
10:46:33,592 --> 10:46:38,320
配置登录 gradle 就在这里

2004
10:46:38,320 --> 10:46:42,400
它准确地告诉我们要做什么它说添加密钥库信息

2005
10:46:42,400 --> 10:46:46,872
从 android 块之前的属性文件中，您会看到这个 android 块

2006
10:46:46,872 --> 10:46:52,480
在这里，我们需要做的是在我们的项目android应用程序中转到这个文件

2007
10:46:52,480 --> 10:47:00,080
构建 gradle 所以 Visual Studio 代码让我们去 android 中的 um build.gradle

2008
10:47:00,080 --> 10:47:04,160
应用程序没问题，所以我们在那里，它说我们必须找到这个

2009
10:47:04,160 --> 10:47:08,000
你看到的 android 部分让我们找到正确的 android 块

2010
10:47:08,000 --> 10:47:13,832
那里只有一个所以就在那里然后让我们复制上面提到的这段文字

2011
10:47:13,832 --> 10:47:18,960
在那里并在 android 好的繁荣之前粘贴它，我要带它一个

2012
10:47:18,960 --> 10:47:21,592
也退后一步

2013
10:47:21,592 --> 10:47:24,640
嗯，基本上格式正确，所以

2014
10:47:24,640 --> 10:47:28,872
那就是那部分，它说然后将 key.properties 文件加载到

2015
10:47:28,872 --> 10:47:32,872
密钥库属性对象，这就是这家伙正在做的事情，然后我们

2016
10:47:32,872 --> 10:47:37,272
需要这样做说找到构建类型块所以让我们去发现你可以

2017
10:47:37,272 --> 10:47:41,760
看到发布，我们基本上也会编辑它，所以我要去我的

2018
10:47:41,760 --> 10:47:45,592
注释以及构建 gradle 呃抱歉只是为了确保我

2019
10:47:45,592 --> 10:47:50,872
正确执行所有步骤，在这里它说释放添加

2020
10:47:50,872 --> 10:47:54,080
您自己的签名配置，现在使用调试密钥进行发布构建签名

2021
10:47:54,080 --> 10:47:59,272
所以颤振运行发布工作，它说然后用这个替换它，所以你只是

2022
10:47:59,272 --> 10:48:04,872
必须在此处获取此信息并完全替换此构建类型

2023
10:48:04,872 --> 10:48:09,512
有了提供的那个东西，我要稍微修复一下凹痕

2024
10:48:09,512 --> 10:48:14,320
位也是如此，所以这里的密钥别名密码是从正确的

2025
10:48:14,320 --> 10:48:19,760
放置，然后使用此处的发布密钥对发布进行签名

2026
10:48:19,760 --> 10:48:24,552
这就是真的，所以你不必做更多，我们将要做的

2027
10:48:24,552 --> 10:48:27,760
现在做的就是你可以在屏幕底部看到的，我们要做一些

2028
10:48:27,760 --> 10:48:32,400
清理构建工件的 um 所以在你的项目中你需要

2029
10:48:32,400 --> 10:48:37,832
现在去终端，你可以在我的屏幕上看到，所以我要走了

2030
10:48:37,832 --> 10:48:42,960
然后说flutter clean好吗

2031
10:48:42,960 --> 10:48:46,640
就这样

2032
10:48:46,640 --> 10:48:51,832
好的，然后我们会说颤动

2033
10:48:51,832 --> 10:48:54,960
酒吧得到

2034
10:48:54,960 --> 10:48:59,040
好的

2035
10:48:59,040 --> 10:49:02,640
在这样做之后，我们实际上要

2036
10:49:02,640 --> 10:49:07,040
嗯，创建我们的应用程序包，所以在执行 flutter pop get 之后，您必须发出

2037
10:49:07,040 --> 10:49:12,320
颤振构建应用程序包，因此通过发出此命令，您可以看到

2038
10:49:12,320 --> 10:49:16,320
现在它将开始使用所有这些使用 griddle 构建您的应用程序

2039
10:49:16,320 --> 10:49:19,680
您在这些不同文件中指定的属性，所以有很多

2040
10:49:19,680 --> 10:49:24,000
我们必须做的工作，但谢天谢地，它被记录得很好

2041
10:49:24,000 --> 10:49:28,640
如果不是所有这些人，它会使整个过程变得容易得多

2042
10:49:28,640 --> 10:49:33,192
文档点点滴滴，这将是一个如此艰难的过程

2043
10:49:33,192 --> 10:49:38,400
通过所以让我们等待这个构建 gradle 过程现在完成它的工作

2044
10:49:38,400 --> 10:49:41,912
好吧，现在你可以看到这个过程已经完成了它已经创建了

2045
10:49:41,912 --> 10:49:46,640
我们的小应用程序包就是这个 aab 文件

2046
10:49:46,640 --> 10:49:50,960
我们需要做的是能够将这个应用程序包上传到谷歌

2047
10:49:50,960 --> 10:49:55,440
play store 所以让我们回到我们的 play store 在这里我要关闭它

2048
10:49:55,440 --> 10:50:00,080
关闭 figma，让我们现在回到我们的仪表板

2049
10:50:00,080 --> 10:50:04,160
在这里，你可以看到我很棒的笔记和

2050
10:50:04,160 --> 10:50:08,080
让我们看看我们在这里发生了什么以及我们需要做什么

2051
10:50:08,080 --> 10:50:15,360
是在这里进行我们的生产，然后创建一个新版本，好吧

2052
10:50:15,360 --> 10:50:19,272
按那里的创建新版本，你现在可以看到它要求你

2053
10:50:19,272 --> 10:50:23,192
上传您的应用程序包，所以我要做的是回到视觉工作室

2054
10:50:23,192 --> 10:50:29,272
代码，看看这个文件的位置，所以我要打开那个文件夹，我

2055
10:50:29,272 --> 10:50:34,960
可以在这里看到 aab，我将把它拖到这里并放在那里

2056
10:50:34,960 --> 10:50:38,320
好的

2057
10:50:38,320 --> 10:50:41,760
所以上传完成后可能需要

2058
10:50:41,760 --> 10:50:45,192
有时我可以看到它是 25 兆字节，尽管我在一千行

2059
10:50:45,192 --> 10:50:49,440
嗯光纤网络在这里上传需要一段时间我不

2060
10:50:49,440 --> 10:50:52,400
真的知道为什么，但在发布名称中，如您所见

2061
10:50:52,400 --> 10:50:56,960
它说这不是我们实际上与任何人分享的东西

2062
10:50:56,960 --> 10:51:03,120
所以让我们先说嗯，我们称它为第一个版本，好吧，在这里

2063
10:51:03,120 --> 10:51:07,120
您的发行说明基本上是从以前的版本中复制的，我们

2064
10:51:07,120 --> 10:51:12,000
没有那个听这里只是说嗯第一个

2065
10:51:12,000 --> 10:51:18,320
我们的应用程序版本可以，然后我们可以保存此信息

2066
10:51:18,320 --> 10:51:21,592
好吧，对不起

2067
10:51:21,592 --> 10:51:27,760
所以现在我们有了，嗯，我们有第一个版本

2068
10:51:27,760 --> 10:51:30,320
和

2069
10:51:30,320 --> 10:51:33,592
应该是这样，所以让我们在这里查看评论版本，我们有

2070
10:51:33,592 --> 10:51:36,872
一个错误可能是因为我们没有提供国家/地区

2071
10:51:36,872 --> 10:51:40,720
并添加至少一个国家或地区，这很好，我们会，我们会

2072
10:51:40,720 --> 10:51:46,400
添加它，让我们去看看我们必须添加这些的概述

2073
10:51:46,400 --> 10:51:49,912
如果我们无法以某种方式弄清楚的国家

2074
10:51:49,912 --> 10:51:56,160
让我们点击那里 android 好的，这很好

2075
10:51:56,160 --> 10:52:01,192
嗯，我们需要进入生产状态

2076
10:52:01,192 --> 10:52:04,800
您可以在 google 中看到的所有国家/地区或发行版在下面播放控制台

2077
10:52:04,800 --> 10:52:09,040
生产所以我相信我们已经在生产中所以如果我点击

2078
10:52:09,040 --> 10:52:13,272
生产现在我们可以看到国家和地区所以让我们进去说添加

2079
10:52:13,272 --> 10:52:16,320
国家和地区，我相信我们可以在这里

2080
10:52:16,320 --> 10:52:20,400
希望选择所有国家，如果你

2081
10:52:20,400 --> 10:52:24,080
卖得这么好，确保你的国家的价格很好，我们可以不卖哦

2082
10:52:24,080 --> 10:52:28,400
是的，我看到了，如果我点击这里，我可以选择所有

2083
10:52:28,400 --> 10:52:32,800
国家所以让我们这样做并说添加国家和地区，然后按

2084
10:52:32,800 --> 10:52:38,080
添加按钮太棒了，然后我们将进入我们的版本

2085
10:52:38,080 --> 10:52:40,640
呃在这里

2086
10:52:40,640 --> 10:52:44,872
我们有这个版本，所以让我们去发布仪表板

2087
10:52:44,872 --> 10:52:48,400
好的，那很好，然后我要按下编辑版本

2088
10:52:48,400 --> 10:52:51,832
既然我们已经选择了所有这些，我将按下评论发布

2089
10:52:51,832 --> 10:52:54,640
我们有一个警告应用程序包包含本机代码的国家，如果

2090
10:52:54,640 --> 10:52:57,832
你没有上传调试符号好吧，这些调试符号是什么

2091
10:52:57,832 --> 10:53:01,680
我实际上鼓励你去阅读因为这些会让你

2092
10:53:01,680 --> 10:53:07,192
查看您的应用程序何时以及是否发生任何崩溃

2093
10:53:07,192 --> 10:53:09,592
您的用户在任何地方使用您的

2094
10:53:09,592 --> 10:53:13,440
申请所以我真的建议你这样做

2095
10:53:13,440 --> 10:53:16,800
并上传您的 d 框符号，尽管我相信这是

2096
10:53:16,800 --> 10:53:20,480
超出了本课程的范围，但对您来说应该很简单

2097
10:53:20,480 --> 10:53:24,480
弄清楚，这里有链接，你可以阅读更多关于它的信息

2098
10:53:24,480 --> 10:53:29,040
所以现在我们可以开始推出生产，然后说推出

2099
10:53:29,040 --> 10:53:33,120
你现在会看到这将被审查和

2100
10:53:33,120 --> 10:53:38,160
像在游戏控制台上的谷歌呃缺点可能需要一些时间

2101
10:53:38,160 --> 10:53:42,080
to rel to review the first version of our application 有些人说

2102
10:53:42,080 --> 10:53:46,320
需要一周以上的时间，对我来说，有时实际上需要大约

2103
10:53:46,320 --> 10:53:50,320
八九天 所以取决于你做了什么

2104
10:53:50,320 --> 10:53:53,760
如果您发布之前的任何应用程序，您之前的记录

2105
10:53:53,760 --> 10:53:58,552
实际上可能能够被放置在队列中的第一个位置，或者也许

2106
10:53:58,552 --> 10:54:01,680
最后我不知道我不知道他们的流程所以

2107
10:54:01,680 --> 10:54:05,040
嗯，那真的就像我们的机器人的发布一样

2108
10:54:05,040 --> 10:54:08,480
应用程序，我们在中间经历了很多甚至 figma 设计

2109
10:54:08,480 --> 10:54:12,720
恭喜你和我一起经历这一切

2110
10:54:12,720 --> 10:54:16,400
既然我们已经改变了一些代码，让我们继续吧

2111
10:54:16,400 --> 10:54:21,040
嗯实际上提交了我们所有的更改，所以我要说良好的状态

2112
10:54:21,040 --> 10:54:25,040
并确保您的属性文件是关键属性文件

2113
10:54:25,040 --> 10:54:28,872
没有添加所以我们就说 git add all

2114
10:54:28,872 --> 10:54:32,960
然后我要说 git commit step

2115
10:54:32,960 --> 10:54:36,320
31，如果你看看我们的日志，我们

2116
10:54:36,320 --> 10:54:41,272
有第 30 步和第 31 步，所以让我们将这些更改推送到我们的遥控器，然后我就走了

2117
10:54:41,272 --> 10:54:46,480
说得到一个标签也是第31步好的

2118
10:54:46,480 --> 10:54:51,040
并获得推送标签

2119
10:54:51,040 --> 10:54:56,800
就是这样，现在您已经发布了适用于 ios 和 android 的应用程序，嗯

2120
10:54:56,800 --> 10:55:02,960
这可能是你将在 um 中学到的最后一件事

2121
10:55:02,960 --> 10:55:07,120
如果您是本课程的早期采用者之一

2122
10:55:07,120 --> 10:55:12,232
但我计划发布更多我要附加的视频

2123
10:55:12,232 --> 10:55:18,232
本课程包含更多材料，敬请期待，我实际上可能会在

2124
10:55:18,232 --> 10:55:22,960
下一章大家好，欢迎来到上一章

2125
10:55:22,960 --> 10:55:25,760
你一直在关注的章节

2126
10:55:25,760 --> 10:55:29,120
当然你知道我们已经创建了我们的应用程序并且我们也发布了它

2127
10:55:29,120 --> 10:55:32,800
到iOS的应用商店和谷歌的Play商店

2128
10:55:32,800 --> 10:55:37,120
使用 Play 商店控制台，现在您将

2129
10:55:37,120 --> 10:55:41,272
我的意思是任何应用程序或任何软件都不是你会做的事情，并且

2130
10:55:41,272 --> 10:55:45,192
它刚刚完成，每个应用程序都必须继续存在，你会在那里

2131
10:55:45,192 --> 10:55:50,552
向它添加新功能，然后你必须让它保持活力

2132
10:55:50,552 --> 10:55:53,592
就像我会继续这门课程一样，你也必须保持你的

2133
10:55:53,592 --> 10:55:56,872
应用程序活着所以你可能想要添加到你的东西之一

2134
10:55:56,872 --> 10:56:01,272
应用程序现在是本地化的

2135
10:56:01,272 --> 10:56:03,832
如果你不知道我的意思是如果你没有做过软件

2136
10:56:03,832 --> 10:56:07,040
在您可能不知道本地化是什么之前进行开发，但是

2137
10:56:07,040 --> 10:56:12,232
简而言之，本地化是您提出申请的过程

2138
10:56:12,232 --> 10:56:16,872
不同国家的其他人更容易接触到

2139
10:56:16,872 --> 10:56:21,360
比如你住的那个

2140
10:56:21,360 --> 10:56:24,872
到目前为止，我们一直在创建带有用户界面的应用程序

2141
10:56:24,872 --> 10:56:29,512
那主要是英语，但你甚至可能不是来自英国

2142
10:56:29,512 --> 10:56:34,400
可能不是来自澳大利亚或我们您可能只会说英语

2143
10:56:34,400 --> 10:56:39,120
嗯，例如我住在瑞典，所以我们开发的应用程序

2144
10:56:39,120 --> 10:56:43,360
现在在瑞典并不是每个人都能接触到的

2145
10:56:43,360 --> 10:56:47,680
尽管瑞典的大多数人英语说得非常流利，但事实并非如此

2146
10:56:47,680 --> 10:56:53,192
他们的母语，所以本地化是嗯制作的过程

2147
10:56:53,192 --> 10:56:56,000
您的应用程序更容易被那些不会说

2148
10:56:56,000 --> 10:56:59,192
您为用户界面设计的语言

2149
10:56:59,192 --> 10:57:04,000
不仅仅是语言和文本

2150
10:57:04,000 --> 10:57:07,512
你正在使用它还需要很多其他的

2151
10:57:07,512 --> 10:57:10,800
包括许多其他事情，例如您如何

2152
10:57:10,800 --> 10:57:14,720
在您的应用程序中显示货币和价值

2153
10:57:14,720 --> 10:57:18,320
现在我们没有像购物篮或任何我们没有电子商务的东西

2154
10:57:18,320 --> 10:57:22,232
应用程序以及我们迄今为止开发的，因此用户无需进行任何操作

2155
10:57:22,232 --> 10:57:26,000
在应用程序中购买，但是嗯

2156
10:57:26,000 --> 10:57:29,512
如果您正在开发用户可以购买的应用程序

2157
10:57:29,512 --> 10:57:32,480
那么你的购物篮需要的东西

2158
10:57:32,480 --> 10:57:37,272
实例显示数量 um for um like the product

2159
10:57:37,272 --> 10:57:41,360
那个人的价格

2160
10:57:41,360 --> 10:57:46,400
货币，例如，如果您要向瑞典的某个人展示用户界面

2161
10:57:46,400 --> 10:57:49,592
例如，该人不希望看到以美元为单位的价格

2162
10:57:49,592 --> 10:57:52,160
期望看到瑞典克朗的价格

2163
10:57:52,160 --> 10:57:56,872
嗯，或者如果你正在为某人做这个应用程序

2164
10:57:56,872 --> 10:58:01,192
英格兰你可能想用 gbp 做，这是伟大的

2165
10:58:01,192 --> 10:58:05,440
我认为英镑或只是英镑

2166
10:58:05,440 --> 10:58:10,080
本地化不仅仅是改变我们的应用程序的文本，而是

2167
10:58:10,080 --> 10:58:14,480
因为我们的应用程序没有任何我们没有展示的东西

2168
10:58:14,480 --> 10:58:17,360
例如在我们没有展示的那一刻的日期

2169
10:58:17,360 --> 10:58:22,400
任何类似的货币或价值对我们来说基本上只意味着

2170
10:58:22,400 --> 10:58:27,592
改变我们的应用程序的文本，所以我们将在这个

2171
10:58:27,592 --> 10:58:31,680
章节将本地化我们的应用程序

2172
10:58:31,680 --> 10:58:34,480
我们要用两种语言来做

2173
10:58:34,480 --> 10:58:37,592
到目前为止我们已经完成的英语，这是我们已经完成的文本

2174
10:58:37,592 --> 10:58:41,592
为应用程序的用户界面提供了这一点，我们也

2175
10:58:41,592 --> 10:58:44,960
要用瑞典语做，现在你不必懂瑞典语就可以了

2176
10:58:44,960 --> 10:58:48,160
看完这一章，我会帮你的，有一个 github

2177
10:58:48,160 --> 10:58:51,832
此项目的存储库，您可以复制和粘贴

2178
10:58:51,832 --> 10:58:56,320
例如瑞典语文本，您甚至不必在以下位置写瑞典语

2179
10:58:56,320 --> 10:58:59,360
所有你甚至不必跟着写我正在写的确切文本

2180
10:58:59,360 --> 10:59:03,040
例如在瑞典语中，你可以在里面放一些乱码，因为

2181
10:59:03,040 --> 10:59:05,760
你真正要做的就是理解什么的概念

2182
10:59:05,760 --> 10:59:08,872
本地化需要您的应用程序如何使用

2183
10:59:08,872 --> 10:59:11,440
颤振，然后当涉及到实际本地化你自己的

2184
10:59:11,440 --> 10:59:16,080
应用程序然后您可以例如选择 um bangladeshi 或者如果您想

2185
10:59:16,080 --> 10:59:21,440
例如，选择印度的任何语言，或者嗯，或者如果在巴基斯坦，或者

2186
10:59:21,440 --> 10:59:26,400
无论您选择哪种语言，基本上都可以使用

2187
10:59:26,400 --> 10:59:29,040
所以你不必真的懂瑞典语 这就是我的意思 这就是我要说的

2188
10:59:29,040 --> 10:59:32,000
但是你也可以在底部看到

2189
10:59:32,000 --> 10:59:35,512
屏幕本地化也可能适用于非传统语言

2190
10:59:35,512 --> 10:59:40,160
像波斯语或阿拉伯语一样左右，所以这些语言是写的

2191
10:59:40,160 --> 10:59:43,440
从右到左，所以需要一些特别的

2192
10:59:43,440 --> 10:59:47,912
如果您尝试支持，请考虑为您的 um 代码

2193
10:59:47,912 --> 10:59:51,760
从右到左的语言，例如 c 和 um

2194
10:59:51,760 --> 10:59:55,192
所以例如一个人的名字

2195
10:59:55,192 --> 10:59:59,440
例如，如果您要展示名人名单，您可能希望能够

2196
10:59:59,440 --> 11:00:02,480
例如用户可以阅读的人

2197
11:00:02,480 --> 11:00:06,320
关于这些名字可能不一定是

2198
11:00:06,320 --> 11:00:11,360
嗯，以阿拉伯名字出现，就像他们的拼写不一样

2199
11:00:11,360 --> 11:00:14,160
必须是阿拉伯语，也可以是英语，但

2200
11:00:14,160 --> 11:00:17,912
例如一个人的年龄，如果你说比尔盖茨，你可以

2201
11:00:17,912 --> 11:00:21,120
即使用户界面的语言是英文，也要用英文写名字

2202
11:00:21,120 --> 11:00:25,192
阿拉伯语，但如果您要介绍该人的年龄，则可能需要

2203
11:00:25,192 --> 11:00:30,872
被翻译成类似 um 理解的数值

2204
11:00:30,872 --> 11:00:34,960
谁会说那种语言，嗯

2205
11:00:34,960 --> 11:00:37,680
我想说的是，如果你试图支持从右到左

2206
11:00:37,680 --> 11:00:41,680
您可能需要考虑的语言

2207
11:00:41,680 --> 11:00:44,320
但在本章中，我们不会这样做，我们只是要

2208
11:00:44,320 --> 11:00:50,000
涵盖英语和瑞典语，这两种语言从左到右

2209
11:00:50,000 --> 11:00:53,040
现在让我们看一下文档，因为

2210
11:00:53,040 --> 11:00:58,960
混乱应用程序本地化的文档非常详尽

2211
11:00:58,960 --> 11:01:03,120
我强烈建议在看完本章并了解之后

2212
11:01:03,120 --> 11:01:07,512
从我的角度来看，我认为您实际上拥有一个

2213
11:01:07,512 --> 11:01:11,760
看看嗯官方变成文档我会的

2214
11:01:11,760 --> 11:01:18,000
尝试在这里打开一个标签，所以我会把它带到屏幕上，这样你就可以了

2215
11:01:18,000 --> 11:01:21,512
看到所以我会摆脱它

2216
11:01:21,512 --> 11:01:24,480
我会提出

2217
11:01:24,480 --> 11:01:28,872
屏幕有点像这样对不起，我必须重新安排一下，所以你看

2218
11:01:28,872 --> 11:01:34,000
屏幕更好，所以你可以在这里看到它的官方文档

2219
11:01:34,000 --> 11:01:38,640
无障碍本地化和国际化

2220
11:01:38,640 --> 11:01:40,400
和嗯

2221
11:01:40,400 --> 11:01:44,872
例如，在国际化过程中，您有时会看到一些术语

2222
11:01:44,872 --> 11:01:50,160
和本地化，您会看到一些术语，例如 i 18 n

2223
11:01:50,160 --> 11:01:56,800
有时你还会看到 l 10 n 你会想知道这些是什么

2224
11:01:56,800 --> 11:02:03,040
事情它甚至意味着什么 l 10 n 以及喜欢什么 i 18n 的原因

2225
11:02:03,040 --> 11:02:07,040
实际上意味着它是国际化

2226
11:02:07,040 --> 11:02:12,080
嗯，如果你看它国际化

2227
11:02:12,080 --> 11:02:16,400
如果我这样写亚洲人

2228
11:02:16,400 --> 11:02:21,440
然后如果你拿 1 2 3 4 5 6 7 8 9 10

2229
11:02:21,440 --> 11:02:26,960
一 二 三 四 五 六 七 八 所以 18 之间的字符总数

2230
11:02:26,960 --> 11:02:32,720
i 和 n 所以我们知道写 i 18 n 只是

2231
11:02:32,720 --> 11:02:37,272
提到国际化，同样的事情也适用于

2232
11:02:37,272 --> 11:02:41,512
本地化，因为让我们举出例如 Visual Studio 代码

2233
11:02:41,512 --> 11:02:45,440
也许我们实际上可以在 Visual Studio 代码中看到更好一点

2234
11:02:45,440 --> 11:02:48,960
嗯，如果我在这里提出来，我

2235
11:02:48,960 --> 11:02:54,680
增加字体的大小，如果我写输入

2236
11:02:54,680 --> 11:03:00,640
国有化的国际国际非线性

2237
11:03:00,640 --> 11:03:05,832
好的，然后写本地化，这样是一二三四五六七

2238
11:03:05,832 --> 11:03:12,000
八 九 十 一 二 三 四 五 六 七 八 所以 总共 18 如果

2239
11:03:12,000 --> 11:03:16,960
如果你数一二三四五，我们会​​查看 l 和 n 之间的本地化

2240
11:03:16,960 --> 11:03:22,040
六七八九十字所以很多人把这些东西称为

2241
11:03:22,040 --> 11:03:28,720
i18n 和 l10n i18n 基本上意味着国际化，而 l10n 意味着

2242
11:03:28,720 --> 11:03:32,720
本地化，所以现在你知道原因了，只是程序员而已

2243
11:03:32,720 --> 11:03:37,120
懒惰并试图尽可能地缩短一切，如果现在

2244
11:03:37,120 --> 11:03:41,360
您看到这两个术语，然后您就知道它们指的是什么

2245
11:03:41,360 --> 11:03:45,832
好吧，所以我一开始所说的基本上是为了取悦之后

2246
11:03:45,832 --> 11:03:50,000
观看此视频继续阅读官方文档，因为它是

2247
11:03:50,000 --> 11:03:53,680
非常重要 非常透彻 它谈论了我们甚至不知道的事情

2248
11:03:53,680 --> 11:03:57,272
在本章中讨论所以我

2249
11:03:57,272 --> 11:04:01,120
强烈建议您也阅读此文档

2250
11:04:01,120 --> 11:04:04,720
好的，就是这样，现在我们需要

2251
11:04:04,720 --> 11:04:09,440
做的就是基本上手了 um 国际化本地化

2252
11:04:09,440 --> 11:04:13,592
支持我们的颤振应用程序，所以我要带一个视觉工作室

2253
11:04:13,592 --> 11:04:18,552
代码在这里，可能会减小一点大小

2254
11:04:18,552 --> 11:04:22,160
我要改变屏幕布局，所以

2255
11:04:22,160 --> 11:04:25,192
嗯，这就是我们将应用程序留到这一点的方式，所以我们

2256
11:04:25,192 --> 11:04:28,160
需要做的是我要关闭所有标签然后我要按

2257
11:04:28,160 --> 11:04:33,040
例如，在 Visual Studio 中命令和命令 p 打开文件

2258
11:04:33,040 --> 11:04:37,912
然后我们将查看我们的 pop spec yaml 文件

2259
11:04:37,912 --> 11:04:42,800
如果你去那里，我们需要做的是向我们的

2260
11:04:42,800 --> 11:04:45,760
流行特别让我们在这里看看，你可以

2261
11:04:45,760 --> 11:04:49,120
看到，你可能真的想知道我为什么

2262
11:04:49,120 --> 11:04:52,872
我什至在说什么是颤振嗯

2263
11:04:52,872 --> 11:04:57,360
本地化，我没有弥补它基本上记录在这里

2264
11:04:57,360 --> 11:05:00,800
让我们看看它，因为你可以看到它说的第一件事

2265
11:05:00,800 --> 11:05:04,800
我们需要做的是转到我们的pop spec yaml文件并添加flutter

2266
11:05:04,800 --> 11:05:08,872
现在本地化这基本上对我们有什么作用

2267
11:05:08,872 --> 11:05:15,040
应用程序是它允许我们的应用程序

2268
11:05:15,040 --> 11:05:20,232
本地化，它还为我们的应用程序添加了类似自动生成的代码

2269
11:05:20,232 --> 11:05:23,912
你很快就会看到，所以有点难以解释

2270
11:05:23,912 --> 11:05:27,912
在你看到结果之前它到底做了什么所以我们需要做什么

2271
11:05:27,912 --> 11:05:32,800
现在只是在这里找到我们流行的斑点弹药的依赖项部分

2272
11:05:32,800 --> 11:05:37,040
我在这里找到了它，我们需要做的是你可以看到它说你只需要

2273
11:05:37,040 --> 11:05:40,872
添加颤振本地化，我将在颤振之后立即执行此操作

2274
11:05:40,872 --> 11:05:46,232
好的，还有一个专栏，然后我们要说 sdk flutter

2275
11:05:46,232 --> 11:05:50,640
好的，就是这样，这个应用程序目前没有运行

2276
11:05:50,640 --> 11:05:55,512
所以我要做的就是说 um select device 然后我要

2277
11:05:55,512 --> 11:06:00,872
使用我的安卓手机，你可以按照你知道的课程学习

2278
11:06:00,872 --> 11:06:04,800
我个人更喜欢拥有

2279
11:06:04,800 --> 11:06:10,720
真正的设备正在运行，所以现在我有 um scr cpy 我想在某个地方让我们看看

2280
11:06:10,720 --> 11:06:13,592
如果我们能把它提出来，让我们去终端

2281
11:06:13,592 --> 11:06:17,440
scr cpy 所以这是

2282
11:06:17,440 --> 11:06:21,680
我的安卓手机，然后在旁边我也有一个

2283
11:06:21,680 --> 11:06:26,320
实际的 iphone 在这里运行所以基本上有两个设备

2284
11:06:26,320 --> 11:06:30,800
已经安装了我们的应用程序，嗯，一个 iphone 和一个 android，我们就可以工作了

2285
11:06:30,800 --> 11:06:33,272
和他们两个 嗯

2286
11:06:33,272 --> 11:06:38,960
所以我们要做的是在安卓手机上运行我们的应用程序

2287
11:06:38,960 --> 11:06:42,400
例如我会说命令 shift p on uh when

2288
11:06:42,400 --> 11:06:47,360
在 Mac 上，然后在 Linux 机器或 Windows 上按 ctrl shift b，然后说选择

2289
11:06:47,360 --> 11:06:51,680
设备，我要选择这个 android 手机，然后我要去

2290
11:06:51,680 --> 11:06:57,680
主 dart 文件，然后只说运行而不进行调试，所以让它完成它的工作

2291
11:06:57,680 --> 11:07:00,960
我要稍微减小字体，因为它在

2292
11:07:00,960 --> 11:07:07,192
片刻之后，在此处添加流行斑点弹药之后，我们还需要

2293
11:07:07,192 --> 11:07:11,592
确保我们遵循如您在此处看到的那样，它说是的，您

2294
11:07:11,592 --> 11:07:14,960
必须做这些事情，我们会处理好

2295
11:07:14,960 --> 11:07:18,640
但我们还要做的是将这个国际化包添加到

2296
11:07:18,640 --> 11:07:22,720
我们的应用程序，所以让我从那里删除那个屏幕，确保我们的

2297
11:07:22,720 --> 11:07:26,480
android 应用程序正在运行，这是我离开应用程序的状态

2298
11:07:26,480 --> 11:07:31,120
我现在已经登录，所以我要做的就是注销

2299
11:07:31,120 --> 11:07:34,640
好吧，到目前为止，我们唯一真正做的就是添加

2300
11:07:34,640 --> 11:07:40,400
flutter 本地化 sdk true sorry sdk flutter here 那么我们需要做的是

2301
11:07:40,400 --> 11:07:46,000
将国际化包添加到我们的应用程序中，好吧，让我们开始吧

2302
11:07:46,000 --> 11:07:51,120
我将在 Visual Studio 代码中打开一个新终端并更改

2303
11:07:51,120 --> 11:07:54,400
布局一点，这样你就可以更好地看到它

2304
11:07:54,400 --> 11:07:58,872
让我们继续说flutter pop add intel好吗

2305
11:07:58,872 --> 11:08:04,080
你可以在 popdev 上阅读更多关于这个 intel 包的信息，例如，如果我们

2306
11:08:04,080 --> 11:08:09,760
去在这里创建一个新标签，我把它带到这里，我们只是说 puff.dev

2307
11:08:09,760 --> 11:08:14,320
让我把尺寸增加到更大一点

2308
11:08:14,320 --> 11:08:20,000
让我们说 intl 好吧，你可以看到这里是 intl 包

2309
11:08:20,000 --> 11:08:24,480
它来自 darkdev 所以它实际上是一个官方包，你可以包含

2310
11:08:24,480 --> 11:08:29,120
在您的应用程序中，并且有关于如何使用它的文档

2311
11:08:29,120 --> 11:08:33,512
所以你也可以看到你如何处理日期格式

2312
11:08:33,512 --> 11:08:38,080
不同的语言，所以现在我们已经添加了这个，如果我带来这个

2313
11:08:38,080 --> 11:08:41,360
像这样的屏幕，这样您就可以看到将该包添加到我们的

2314
11:08:41,360 --> 11:08:46,080
应用程序，我可以看到它说有依赖关系，所以

2315
11:08:46,080 --> 11:08:51,192
那是在英特尔说颤振流行的结果

2316
11:08:51,192 --> 11:08:54,480
我们需要做的另一件事是

2317
11:08:54,480 --> 11:08:59,360
如果我改变屏幕，请在我们的流行规范中颤抖

2318
11:08:59,360 --> 11:09:03,272
布局多一点，嗯，我们需要去，你可以在

2319
11:09:03,272 --> 11:09:07,512
屏幕底部我们需要在flutter部分下添加一个generate true

2320
11:09:07,512 --> 11:09:14,232
它就在这里，所以这会生成真的，我们就像这样添加它是嗯

2321
11:09:14,232 --> 11:09:17,912
基本上对于如何

2322
11:09:17,912 --> 11:09:23,360
代码生成会起作用，所以我基本上会在这里看看

2323
11:09:23,360 --> 11:09:28,960
在此处生成并添加空间可以，所以如果您在此处添加此生成 true 它

2324
11:09:28,960 --> 11:09:33,040
允许本地化包，并且喜欢本地化代码

2325
11:09:33,040 --> 11:09:38,552
在您的应用程序中运行以生成自动生成

2326
11:09:38,552 --> 11:09:44,320
我的意思是你很快就会看到的代码

2327
11:09:44,320 --> 11:09:53,360
Flutter 内部使用了一个文件，文件类型叫做 marb

2328
11:09:53,360 --> 11:09:57,272
这些 arb 文件有点像键值

2329
11:09:57,272 --> 11:10:03,912
文件，我的意思是有点像 json 并且在键中你指定了一些

2330
11:10:03,912 --> 11:10:07,192
例如你说登录屏幕标题的名字

2331
11:10:07,192 --> 11:10:12,000
然后该值将是您在该特定文件中翻译的实际值

2332
11:10:12,000 --> 11:10:14,872
语言，您将拥有多个这样的套利

2333
11:10:14,872 --> 11:10:18,400
文件，我想实际上我会

2334
11:10:18,400 --> 11:10:23,760
尽快解释一下 rb 但它代表应用程序资源包

2335
11:10:23,760 --> 11:10:26,640
但只要知道我的意思是我不想深入

2336
11:10:26,640 --> 11:10:29,760
现在关于 arb 文件的详细信息，因为有一个部分即将出现

2337
11:10:29,760 --> 11:10:33,360
我会在哪里解释，但你现在需要知道的是

2338
11:10:33,360 --> 11:10:38,640
在弹出特别允许的颤振部分下生成真正的标志

2339
11:10:38,640 --> 11:10:44,232
自动生成的代码基本上将自己挂钩到您的项目中，以及何时

2340
11:10:44,232 --> 11:10:49,040
您将新的键和值添加到您的 arb 文件中，您很快就会看到如何

2341
11:10:49,040 --> 11:10:53,680
然后向上然后代码生成将在您每次进行热重启时启动

2342
11:10:53,680 --> 11:10:58,000
或者你重新运行你的应用程序，它会通过你的 arb 文件和它

2343
11:10:58,000 --> 11:11:00,640
将生成密钥

2344
11:11:00,640 --> 11:11:04,872
里面就像一个飞镖你的源代码

2345
11:11:04,872 --> 11:11:08,080
这个飞镖源代码将是你可以从字面上导入的东西

2346
11:11:08,080 --> 11:11:12,320
进入你的应用程序，就像使用你添加到 json 中的键一样

2347
11:11:12,320 --> 11:11:16,800
你的应用程序中的 dart 代码，所以这很像

2348
11:11:16,800 --> 11:11:20,872
抽象的谈话，但你很快就会明白这些事情是如何运作的，所以不要

2349
11:11:20,872 --> 11:11:25,680
担心这个，所以我们现在需要做的是在我们完成之后

2350
11:11:25,680 --> 11:11:30,480
完成了所有这些工作，我们基本上需要将本地化支持添加到我们的

2351
11:11:30,480 --> 11:11:34,800
ios 应用程序，您现在可以在标题中的屏幕底部看到

2352
11:11:34,800 --> 11:11:40,552
当我们开始将本地化添加到我们的

2353
11:11:40,552 --> 11:11:43,832
应用程序 android 应用程序刚刚完全理解的新语言

2354
11:11:43,832 --> 11:11:48,320
好的，这是一种我可以处理的新语言，我会刷新我的

2355
11:11:48,320 --> 11:11:52,552
ui 以显示您输入的所有值，但 ios 有点

2356
11:11:52,552 --> 11:11:56,160
更老式的你必须帮助它了解这个应用程序

2357
11:11:56,160 --> 11:12:00,552
实际上支持各种语言所以我真的很高兴说你

2358
11:12:00,552 --> 11:12:04,080
不必为了通过这个特定的 xcode

2359
11:12:04,080 --> 11:12:07,360
本章的部分，但我们需要如您所见

2360
11:12:07,360 --> 11:12:12,552
屏幕底部，我们必须转到我们的 info plist 文件并更新一个特殊的

2361
11:12:12,552 --> 11:12:15,680
部分或创建一个称为核心基础包的特殊部分

2362
11:12:15,680 --> 11:12:21,512
本地化好的，所以让我们继续，现在就开始处理它，所以

2363
11:12:21,512 --> 11:12:24,640
我也会拿出我的笔记来确保我告诉你所有

2364
11:12:24,640 --> 11:12:30,160
我打算告诉你的一切，看看我能不能找到那个部分

2365
11:12:30,160 --> 11:12:32,640
好吧，我要在这里做什么

2366
11:12:32,640 --> 11:12:36,480
将关闭该文件我也将关闭主 dar 文件，然后我

2367
11:12:36,480 --> 11:12:40,720
将在 Visual Studio 代码中按命令 p，我将寻找一个

2368
11:12:40,720 --> 11:12:46,000
名为 info.plist 的文件应该在 ios 文件夹 slash runner 和

2369
11:12:46,000 --> 11:12:50,800
有一个 info p 列表，如果你想知道那是你

2370
11:12:50,800 --> 11:12:54,640
将能够例如去终端，我要清理

2371
11:12:54,640 --> 11:12:58,872
终端，我只想说打开你可以看到这是文件夹

2372
11:12:58,872 --> 11:13:03,192
如果我说开放的话，这整个课程源代码都是基于

2373
11:13:03,192 --> 11:13:06,480
好的，我们要开门了，你可以在这里看到

2374
11:13:06,480 --> 11:13:09,272
所以这是我们所在的源代码

2375
11:13:09,272 --> 11:13:12,400
目前，有一个名为 ios 的文件夹，其中有一个

2376
11:13:12,400 --> 11:13:16,872
名为 runner 的文件夹，其中有一个名为 info plist 的文件，所以

2377
11:13:16,872 --> 11:13:19,592
那就是我们必须打开的文件

2378
11:13:19,592 --> 11:13:22,480
现在好吧，所以我要再次说命令 p 并且

2379
11:13:22,480 --> 11:13:26,720
然后 info plist 让我们打开它，这些就像您所看到的键值

2380
11:13:26,720 --> 11:13:32,160
这是一个奇怪的像 p list 有点像 xml 格式的东西

2381
11:13:32,160 --> 11:13:36,872
但是你需要在这里寻找 cf bundle 本地化

2382
11:13:36,872 --> 11:13:40,552
如果您没有 cf bundle 本地化，那么您必须创建

2383
11:13:40,552 --> 11:13:45,120
就像在这里一样，所以只要你看到这个字典，让我们

2384
11:13:45,120 --> 11:13:48,960
继续创建一个新密钥，所以我们只说密钥，我们要说核心

2385
11:13:48,960 --> 11:13:53,040
基础捆绑本地化还可以

2386
11:13:53,040 --> 11:13:58,080
然后我们在此处结束密钥以及您必须执行的操作

2387
11:13:58,080 --> 11:14:02,480
这个键的不仅仅是一个字符串，它实际上是一个数组，一个数组的含义

2388
11:14:02,480 --> 11:14:06,872
那是事物的列表 它是语言的列表或

2389
11:14:06,872 --> 11:14:09,832
您的应用程序支持的本地化

2390
11:14:09,832 --> 11:14:14,232
当你看到这里的所有其他东西时，它们就像这些钥匙一样，然后

2391
11:14:14,232 --> 11:14:17,680
价值观，但对我们来说，我们必须做这样的事情，你看有一个

2392
11:14:17,680 --> 11:14:22,000
关键是 cf um 捆绑本地化和本地化

2393
11:14:22,000 --> 11:14:25,440
然后我们必须创建一个数组，所以让我们在这之后马上上去

2394
11:14:25,440 --> 11:14:28,640
数组，然后我们像关闭数组一样

2395
11:14:28,640 --> 11:14:32,080
你看到这也是他们在这里的做法

2396
11:14:32,080 --> 11:14:36,080
然后我们需要在这里添加两个字符串所以一个字符串我们关闭它

2397
11:14:36,080 --> 11:14:39,360
字符串和另一个好的，所以因为我们是

2398
11:14:39,360 --> 11:14:44,320
支持英语和瑞典语，所以你的数组列表中的每个字符串都会

2399
11:14:44,320 --> 11:14:47,512
嗯表明你的语言代码

2400
11:14:47,512 --> 11:14:51,832
应用程序支持好吧，所以首先我们要支持英语，然后我们

2401
11:14:51,832 --> 11:14:55,680
会甜蜜并支持瑞典语和瑞典语的语言代码是 suv 因为在

2402
11:14:55,680 --> 11:14:59,832
瑞典和瑞典本身，我们不称之为

2403
11:14:59,832 --> 11:15:05,192
国家瑞典，我们称之为 sevia，这就是 sv 的来源

2404
11:15:05,192 --> 11:15:10,552
from 但你也可以谷歌这个，你可以喜欢寻找本地化

2405
11:15:10,552 --> 11:15:15,120
国家代码，你会看到维基百科上的列表或告诉你的东西

2406
11:15:15,120 --> 11:15:19,272
正是你必须使用的东西，例如，如果你想写 um

2407
11:15:19,272 --> 11:15:24,480
印度或巴基斯坦的一种特殊语言，如乌尔都语或任何你必须要的语言

2408
11:15:24,480 --> 11:15:30,872
找到正确的语言代码，但是你可以很容易地用谷歌搜索，嗯

2409
11:15:30,872 --> 11:15:35,040
我不会在此展示所有这些语言代码语言代码

2410
11:15:35,040 --> 11:15:40,080
章，但我只是给你必要的工具，让你自己找出来

2411
11:15:40,080 --> 11:15:44,400
好的，这就是我们必须为 ios 应用程序做的所有事情，所以我们已经

2412
11:15:44,400 --> 11:15:49,440
在此处添加了 cf 捆绑包本地化，我们很高兴获得信息 p

2413
11:15:49,440 --> 11:15:53,760
列出然后我们需要在这里做的是我们

2414
11:15:53,760 --> 11:15:58,640
需要进入我们应用程序的根文件夹，然后我们需要添加一个

2415
11:15:58,640 --> 11:16:02,080
文件，你可以在屏幕底部看到名为 l10n 的文件，正如我告诉你的那样

2416
11:16:02,080 --> 11:16:07,192
这个 l10n 是一个它意味着一个本地化是 10

2417
11:16:07,192 --> 11:16:11,760
这意味着本地化中 l 和 n 之间有 10 个字母，所以让我们

2418
11:16:11,760 --> 11:16:16,800
在这里继续，我将在这里右键单击此文件夹，然后

2419
11:16:16,800 --> 11:16:20,160
实际上在这里然后让我们添加一个新文件并调用

2420
11:16:20,160 --> 11:16:23,192
它 lpn yamo 好吧

2421
11:16:23,192 --> 11:16:27,440
在这里然后我们必须写一些东西，我会带来官方

2422
11:16:27,440 --> 11:16:31,192
文档，因为它在这种情况下非常有用，所以让我们开始吧

2423
11:16:31,192 --> 11:16:35,440
查看文档我们必须在这个 ltn 文件中输入什么

2424
11:16:35,440 --> 11:16:41,360
让我们看看我们是否可以在某个地方找到它，它是一个 arb 文件，所以 l10n

2425
11:16:41,360 --> 11:16:45,272
它看起来像这样所以这就像我们的内容

2426
11:16:45,272 --> 11:16:51,040
需要放在我们的 l10 文件中，这样你就可以看到它说

2427
11:16:51,040 --> 11:16:55,832
arb 目录，它被称为 lib el tenen 好吧，我们很快就会有一个

2428
11:16:55,832 --> 11:17:00,232
看看这实际上意味着什么对不起

2429
11:17:00,232 --> 11:17:04,872
然后我们有一个叫做模板arb文件的东西，然后是一些东西

2430
11:17:04,872 --> 11:17:09,760
调用输出本地化文件好吧，嗯，我要向你解释什么

2431
11:17:09,760 --> 11:17:13,592
这就是这些实际上意味着什么

2432
11:17:13,592 --> 11:17:17,272
这个 arb 目录是什么意思

2433
11:17:17,272 --> 11:17:22,552
对您的指示，您正在告诉 um flutters 自动生成的本地化

2434
11:17:22,552 --> 11:17:25,512
引擎在哪里可以找到你的

2435
11:17:25,512 --> 11:17:28,800
文件在哪里可以找到您看到的本地化

2436
11:17:28,800 --> 11:17:32,400
当您为新语言创建本地化时，您必须创建一个

2437
11:17:32,400 --> 11:17:36,960
arb 文件，在这种情况下你基本上是在告诉飞镖或在这种情况下颤动

2438
11:17:36,960 --> 11:17:41,192
如果我要创建的这些 arb 文件将驻留在此

2439
11:17:41,192 --> 11:17:46,400
文件夹，所以如果你在这里查看 Visual Studio 代码，我们现在有一个来自所有文件夹

2440
11:17:46,400 --> 11:17:50,400
当我们基本上创建了名为 lib 的项目时，您可以在

2441
11:17:50,400 --> 11:17:53,040
在这里好吧

2442
11:17:53,040 --> 11:17:59,272
在这个库中，我们将创建一个文件夹，如此处所示

2443
11:17:59,272 --> 11:18:03,760
l10n 好吧，你实际上不必称它为 altenent，这就是为什么你有

2444
11:18:03,760 --> 11:18:08,800
此配置，因此您可以将其称为其他名称

2445
11:18:08,800 --> 11:18:13,760
本地化，如果你想或者我的字符串你想要的，它只是

2446
11:18:13,760 --> 11:18:17,512
颤动的迹象和您所在的本地化引擎

2447
11:18:17,512 --> 11:18:21,120
替换那些文件没问题，就是这样，这就是你说的

2448
11:18:21,120 --> 11:18:26,552
飞镖在哪里找到你的本地化信息然后在这里

2449
11:18:26,552 --> 11:18:31,680
模板 arv 文件是您所在目录中的一个文件

2450
11:18:31,680 --> 11:18:36,960
基本上选择作为应用程序的主要语言，例如

2451
11:18:36,960 --> 11:18:40,872
在瑞典语文件 arb 文件中找不到瑞典语的密钥，它会掉下来

2452
11:18:40,872 --> 11:18:46,000
回到英语，这就像为或设置

2453
11:18:46,000 --> 11:18:49,592
本地化应用程序的基础

2454
11:18:49,592 --> 11:18:53,272
您可以将其视为您的应用程序支持的默认语言

2455
11:18:53,272 --> 11:18:56,320
在我们的例子中，语言将是英语，所以我们将离开这个

2456
11:18:56,320 --> 11:19:02,960
此处指示的文件名 其他输出本地化文件

2457
11:19:02,960 --> 11:19:09,512
它是一个自动生成的文件，基本上是为你创建的，所以你会

2458
11:19:09,512 --> 11:19:14,960
很快就会看到自动生成非常特别，我的意思是它非常神奇

2459
11:19:14,960 --> 11:19:19,592
所以嗯，但你可以控制它，这就像其中之一

2460
11:19:19,592 --> 11:19:22,640
你可以控制你实际上可以控制自动生成的飞镖的位置

2461
11:19:22,640 --> 11:19:27,192
将生成代码，并且文件名是什么

2462
11:19:27,192 --> 11:19:30,640
它有点抽象，所以我不会过多介绍它，你会

2463
11:19:30,640 --> 11:19:34,480
很快就会看到我们如何配置它以及这实际上意味着什么所以我们需要什么

2464
11:19:34,480 --> 11:19:38,080
要在这个国际化文档中做，让我们复制这个

2465
11:19:38,080 --> 11:19:42,232
内容，然后我将进入这个 l10 和

2466
11:19:42,232 --> 11:19:46,720
我们创建的 yaml 文件，然后将其粘贴到那里就可以了

2467
11:19:46,720 --> 11:19:51,512
我们需要在这里做的我们将保留 arb 目录目录为

2468
11:19:51,512 --> 11:19:55,040
lib l10 因为那是有道理的

2469
11:19:55,040 --> 11:20:00,320
呃，但在这里应用程序而不是应用程序 ian 我只想说英特尔是的，它是

2470
11:20:00,320 --> 11:20:04,080
对我来说，使用它更有意义

2471
11:20:04,080 --> 11:20:10,720
intl 下划线 en 作为默认文件，所以我们要创建 intl en

2472
11:20:10,720 --> 11:20:15,832
然后 intl sv for swedish 好的，然后我们就

2473
11:20:15,832 --> 11:20:19,512
将保持原样，所以我只是将这个文件保存在那里

2474
11:20:19,512 --> 11:20:24,232
那么我们能做的就是做一个热重启

2475
11:20:24,232 --> 11:20:27,832
现在记住热重启是国际化的东西，它非常

2476
11:20:27,832 --> 11:20:32,872
重要的颤振，因为热重载不会触发你的自动生成

2477
11:20:32,872 --> 11:20:36,552
国际化代码意味着如果你有一些

2478
11:20:36,552 --> 11:20:40,640
如果您在 arb 文件中添加了一些新字符串，我们将讨论

2479
11:20:40,640 --> 11:20:46,160
很快，这些东西不会自动注入并生成到您的代码中

2480
11:20:46,160 --> 11:20:50,960
直到你做一个热重启热重载不会削减它所以你要么做一个

2481
11:20:50,960 --> 11:20:54,960
热重启或完全停止应用程序并从头开始构建它

2482
11:20:54,960 --> 11:20:59,440
这是一个巨大的开销，所以你可能不想这样做，但热重启是

2483
11:20:59,440 --> 11:21:05,592
是必要的，好吧，让我们现在看看

2484
11:21:05,592 --> 11:21:09,272
正如我之前提到的，什么是 arb 文件

2485
11:21:09,272 --> 11:21:14,000
arb 文件是应用程序资源包，它们几乎是 json

2486
11:21:14,000 --> 11:21:20,232
文件它们是那里的关键值，而您的密钥基本上是如何处理

2487
11:21:20,232 --> 11:21:24,080
您的应用程序然后进入您的本地化并获取例如

2488
11:21:24,080 --> 11:21:28,160
字符串和这些键的值是实际的字符串

2489
11:21:28,160 --> 11:21:32,872
显示在您的用户界面中，它们不仅仅是键值

2490
11:21:32,872 --> 11:21:36,800
因为您实际上可以将逻辑放在您的 arb 文件中，例如

2491
11:21:36,800 --> 11:21:40,552
你很快就会在这个屏幕里面看到让我把它调出来

2492
11:21:40,552 --> 11:21:45,832
scr cpy 如果您在此处使用有效用户登录

2493
11:21:45,832 --> 11:21:50,080
我认为我们有 foobarbas 作为我们的密码

2494
11:21:50,080 --> 11:21:52,960
嗯，在这个屏幕上，在屏幕顶部的那一刻，我们正在看到你的

2495
11:21:52,960 --> 11:21:56,320
注释，但我们在本章中要做的只是为了演示如何使用 arp

2496
11:21:56,320 --> 11:22:00,160
文件工作我们会说如果你有一张便条

2497
11:22:00,160 --> 11:22:05,360
它只是会写不，你有一个类似的笔记或

2498
11:22:05,360 --> 11:22:08,000
一张便条 如果你有不止一张便条

2499
11:22:08,000 --> 11:22:13,512
例如，如果你有三个音符，它会说三个音符

2500
11:22:13,512 --> 11:22:17,760
或者如果你的音符为零，根本没有音符，它会说

2501
11:22:17,760 --> 11:22:22,320
你没有笔记所以同名

2502
11:22:22,320 --> 11:22:26,480
这是屏幕顶部的标题，我们实际上可以将逻辑放入 arb

2503
11:22:26,480 --> 11:22:31,680
文件说嘿，这不是标题，但我想

2504
11:22:31,680 --> 11:22:36,232
如果这个特定的计数为零，就说这个

2505
11:22:36,232 --> 11:22:40,480
想说如果帐户是我要说的帐户，您没有笔记

2506
11:22:40,480 --> 11:22:45,440
你有一个音符，或者如果计数超过一个我想说你有

2507
11:22:45,440 --> 11:22:48,800
x 数量的音符并且 x 是实际的

2508
11:22:48,800 --> 11:22:53,592
我们将提供给它的数字，因此 rb 文件不仅仅是 json 它们

2509
11:22:53,592 --> 11:22:57,680
实际上可以在其中包含逻辑，并且它们就像您在底部看到的那样

2510
11:22:57,680 --> 11:23:02,552
它们代表应用程序资源包的屏幕

2511
11:23:02,552 --> 11:23:09,040
好的，现在我们需要做的是实际去创建这些 um 文件

2512
11:23:09,040 --> 11:23:15,040
所以让我们进入这个lib文件夹，让我们去创建我们的文件夹

2513
11:23:15,040 --> 11:23:19,912
我们在这个 l10 中提到过，你看我们说过在 lib 下我们要

2514
11:23:19,912 --> 11:23:25,832
有一个名为 l10n 的文件夹，在该 l10n 下我们将有一个名为 intl 的文件

2515
11:23:25,832 --> 11:23:30,960
en arb 好的，让我们继续看看我们是否可以让它在 lib 中工作，让我们

2516
11:23:30,960 --> 11:23:36,640
去说新文件然后我要说 l10n 斜线

2517
11:23:36,640 --> 11:23:40,720
intl en arb 你可以看到它创建了

2518
11:23:40,720 --> 11:23:46,720
文件夹以及 lib l10n 和 intl enarb，这就是我们所说的文件

2519
11:23:46,720 --> 11:23:50,000
在这里创建让我们继续说新文件

2520
11:23:50,000 --> 11:23:56,400
intl 然后我们会说 sv arv OK

2521
11:23:56,400 --> 11:24:01,192
正如我之前提到的，这些都是非常简单的 json，所以我们可以

2522
11:24:01,192 --> 11:24:04,960
只需在此处创建一个 json，然后先在英文中创建一个

2523
11:24:04,960 --> 11:24:08,640
就像这样，在这里我只想说我的头衔

2524
11:24:08,640 --> 11:24:15,040
然后我的标题的值就可以了，让我们复制并粘贴它

2525
11:24:15,040 --> 11:24:18,640
在瑞典语中也是如此，现在还可以

2526
11:24:18,640 --> 11:24:22,640
所以我只是要做一个热重启

2527
11:24:22,640 --> 11:24:28,640
好吧，自从我们添加了自动生成以来，这一切都做了什么

2528
11:24:28,640 --> 11:24:32,872
在我们的流行语弹药中，如果您还记得我们添加之前的内容，则生成 true

2529
11:24:32,872 --> 11:24:38,000
现在在这里你应该能够做的是看看结构

2530
11:24:38,000 --> 11:24:40,872
您的项目，现在突然之间您应该能够看到一个文件夹

2531
11:24:40,872 --> 11:24:44,872
称为 dot dart 工具，如果您向下钻取，您应该能够看到

2532
11:24:44,872 --> 11:24:48,640
一种叫做颤动生成的东西，如果你深入那里你会看到生成

2533
11:24:48,640 --> 11:24:55,040
l10n 在那里你会看到三个文件

2534
11:24:55,040 --> 11:25:01,040
sv 和应用程序 en 现在这个应用程序的本地化是什么，如果

2535
11:25:01,040 --> 11:25:08,080
你记得从我们的 um l10n 我们实际上告诉这一代人

2536
11:25:08,080 --> 11:25:12,720
生成生成的代码以命名为应用程序本地化，这就是

2537
11:25:12,720 --> 11:25:17,760
基本上就是我们说需要调用它的那个文件，所以我们

2538
11:25:17,760 --> 11:25:22,232
可以打开它，你会看到这里有一些信息

2539
11:25:22,232 --> 11:25:26,080
例如，有一个语言环境名称，然后有一些委托的东西和

2540
11:25:26,080 --> 11:25:30,960
我会解释所有这些，但你现在在这里看到的是我的

2541
11:25:30,960 --> 11:25:36,400
标题和是一个字符串，这正是我们在我的标题中写的

2542
11:25:36,400 --> 11:25:41,192
我的标题在这里，你可以看到然后如果你去

2543
11:25:41,192 --> 11:25:45,832
英文你的字符串在那里我的标题在这里

2544
11:25:45,832 --> 11:25:50,320
瑞典人也说我的头衔在这里所以不是所以不是

2545
11:25:50,320 --> 11:25:54,232
如此令人印象深刻，因为我们实际上选择在

2546
11:25:54,232 --> 11:25:59,272
英文版和瑞典文版，所以我们能做的就是去英文版

2547
11:25:59,272 --> 11:26:03,912
在这个英特尔 en arb 中，将 eng 放在末尾

2548
11:26:03,912 --> 11:26:09,040
去瑞典人那里说 swe like in sweden

2549
11:26:09,040 --> 11:26:15,272
好的，然后我现在保存这个文件，然后如果你进入这里，你会

2550
11:26:15,272 --> 11:26:18,872
看到什么都没有改变，这就是我的意思

2551
11:26:18,872 --> 11:26:23,912
重新加载不会削减它你必须做一个热重启，如果你做一个热重启

2552
11:26:23,912 --> 11:26:29,360
那么这段代码基本上应该会更新让我们继续看看它是否更新了

2553
11:26:29,360 --> 11:26:33,760
你可以看到这里是英文的，哎呀，我不是故意要改变它的，这里是

2554
11:26:33,760 --> 11:26:38,160
瑞典人，所以现在你知道这些东西到底是什么了

2555
11:26:38,160 --> 11:26:41,912
代表和

2556
11:26:41,912 --> 11:26:48,320
我们现在有了一个很好的立足点，因为我们创造了我们的

2557
11:26:48,320 --> 11:26:54,000
本地化 yaml 配置文件 我们有英文和瑞典文

2558
11:26:54,000 --> 11:26:58,872
如果您在这里查看 lib 中的本地化文件

2559
11:26:58,872 --> 11:27:05,360
ltn 和下面我们有 intel en 和 intel sv 这意味着 intel

2560
11:27:05,360 --> 11:27:09,120
国际化英语和国际化瑞典语

2561
11:27:09,120 --> 11:27:15,272
现在我们真正要做的就是基本上现在就开始

2562
11:27:15,272 --> 11:27:21,192
在我们的应用程序中填充这些 um 字符串和 um kind

2563
11:27:21,192 --> 11:27:24,080
抱歉在这些中填充它们

2564
11:27:24,080 --> 11:27:27,680
arb 文件，然后在我们的应用程序中的位置

2565
11:27:27,680 --> 11:27:33,192
文本硬编码然后我们将切换到使用这些

2566
11:27:33,192 --> 11:27:37,440
我们 l10n 文件中的字符串

2567
11:27:37,440 --> 11:27:42,800
为了让我们的应用程序真正理解什么

2568
11:27:42,800 --> 11:27:48,080
我们已经在我们的 arb 文件中进行了本地化，我们必须实际告诉

2569
11:27:48,080 --> 11:27:53,040
我们支持哪些语言环境的应用程序，以便

2570
11:27:53,040 --> 11:27:57,192
提到抱歉以解释我们必须回到主 dart 文件

2571
11:27:57,192 --> 11:27:59,680
所以让我们去主 dart 文件并有一个

2572
11:27:59,680 --> 11:28:03,592
看看我们是如何创建我们的应用程序的，你可以看到我们有这个

2573
11:28:03,592 --> 11:28:07,760
代码就在这里，目前说运行应用程序，然后我们正在创建一个

2574
11:28:07,760 --> 11:28:12,552
材料应用和有两个重要的特性

2575
11:28:12,552 --> 11:28:16,640
在创建我们迄今为止尚未使用的材料应用程序中，因为在

2576
11:28:16,640 --> 11:28:21,272
之前的章节到目前为止我们还没有对应用程序进行任何本地化

2577
11:28:21,272 --> 11:28:25,832
所以这两个属性是本地化委托和支持

2578
11:28:25,832 --> 11:28:29,512
语言环境，所以让我提出这个标题

2579
11:28:29,512 --> 11:28:34,872
嗯，flutter 本地化与 ios 应用程序通信的方式和

2580
11:28:34,872 --> 11:28:39,440
android 应用程序或例如 Web 应用程序或桌面，无论您是什么

2581
11:28:39,440 --> 11:28:44,552
在它上面运行更平坦需要告诉底层操作系统什么语言环境

2582
11:28:44,552 --> 11:28:48,640
它的支持基本上就是在告诉你

2583
11:28:48,640 --> 11:28:54,160
材料应用程序构建您的应用程序可以使用的语言

2584
11:28:54,160 --> 11:29:00,160
所以这是语言环境，所以你可以说瑞典语英语波斯语和阿拉伯语或

2585
11:29:00,160 --> 11:29:05,120
你有什么，所以这些是语言环境，但你也有这个概念

2586
11:29:05,120 --> 11:29:09,760
您现在看到的小部件的本地化，我们已经创建了一些

2587
11:29:09,760 --> 11:29:14,640
字符串，然后我们很快就会去把这些字符串放在我们的

2588
11:29:14,640 --> 11:29:18,960
ui 而且flutter本身也有各种本地化支持

2589
11:29:18,960 --> 11:29:22,800
语言有这么多的语言，目前支持和

2590
11:29:22,800 --> 11:29:27,760
它还可以在内部本地化自己的小部件，例如，如果您调出一个

2591
11:29:27,760 --> 11:29:31,912
日期选择器，例如在您的颤振应用程序中供用户选择日期

2592
11:29:31,912 --> 11:29:36,232
那天选择器本身可以根据系统的本地化

2593
11:29:36,232 --> 11:29:39,680
语言或您的应用程序的语言，所以如果您选择了阿拉伯语职业

2594
11:29:39,680 --> 11:29:43,040
应用程序语言与操作系统级别

2595
11:29:43,040 --> 11:29:46,640
然后，如果您调出日期选择器，那么该日期选择器将是

2596
11:29:46,640 --> 11:29:51,440
默认情况下由颤振团队本地化为该语言，所以

2597
11:29:51,440 --> 11:29:55,440
你需要告诉材料应用你的应用程序的语言环境

2598
11:29:55,440 --> 11:30:01,040
还支持它应该如何本地化例如内部小部件以及您的

2599
11:30:01,040 --> 11:30:05,592
自定义小部件，所以我们需要做的是真正去和

2600
11:30:05,592 --> 11:30:11,440
在这里添加这两个属性，我们要做的就是参考

2601
11:30:11,440 --> 11:30:15,440
这个应用程序本地化文件，所以如果你去飞镖工具，你可以看到有

2602
11:30:15,440 --> 11:30:19,832
这个应用程序本地化就在这里，你可以看到有一个流行语

2603
11:30:19,832 --> 11:30:24,480
ammo 然后这基本上是一个包所以它是一个包

2604
11:30:24,480 --> 11:30:28,720
为你创建你没有做任何事情它只是为你生成所以

2605
11:30:28,720 --> 11:30:33,912
我们如何继续并在我们的应用程序中导入它，那就是去

2606
11:30:33,912 --> 11:30:38,000
例如，你的主文件的顶部说导入，然后你说包

2607
11:30:38,000 --> 11:30:41,120
然后在这里我们只说flutter underscore gen

2608
11:30:41,120 --> 11:30:45,512
这就像为您生成的代码，然后是 gen l10n 并在那里

2609
11:30:45,512 --> 11:30:48,552
你会看到有应用程序的暗文件所以我需要

2610
11:30:48,552 --> 11:30:52,480
请继续将此文件导入您的

2611
11:30:52,480 --> 11:30:56,552
完成后我们需要去的主要 dart 文件

2612
11:30:56,552 --> 11:31:01,512
材料应用程序，在我们做任何其他事情之前，我们首先要说

2613
11:31:01,512 --> 11:31:06,552
支持的语言环境这是一个属性，它允许我们告诉颤振哪个

2614
11:31:06,552 --> 11:31:11,192
我们的应用程序现在支持的了望台您可能想知道好吧什么数据

2615
11:31:11,192 --> 11:31:15,272
键入 this 这实际上是一个列表，因为您可以看到它是一个可迭代的语言环境

2616
11:31:15,272 --> 11:31:19,040
有些人会错误地创建自定义帐户列表

2617
11:31:19,040 --> 11:31:22,480
然后把它放在这里，但你不必这样做，我实际上建议

2618
11:31:22,480 --> 11:31:26,000
即使可以，你也不会那样做，因为如果你进入这个

2619
11:31:26,000 --> 11:31:30,552
应用程序启动文件，你在这里看到了一些东西

2620
11:31:30,552 --> 11:31:33,760
它是为您调用支持的语言环境而创建的

2621
11:31:33,760 --> 11:31:37,192
因此它已经了解您的应用程序支持的语言环境

2622
11:31:37,192 --> 11:31:42,080
在你提供给 um flutter gen 的 arb 文件上，所以

2623
11:31:42,080 --> 11:31:47,680
请不要在你的主 dart 文件中创建相同的列表，这里是什么

2624
11:31:47,680 --> 11:31:51,040
你需要做的只是说应用

2625
11:31:51,040 --> 11:31:56,080
然后你就说支持的语言环境好了，这样就可以使用你的 arb

2626
11:31:56,080 --> 11:32:01,360
文件就像指南一样让我们快速查看 lib ltn 和 ar b 它只知道

2627
11:32:01,360 --> 11:32:04,480
你现在支持英语和瑞典语好吧

2628
11:32:04,480 --> 11:32:07,512
所以这是我们必须做的第一件事 我们必须做的另一件事

2629
11:32:07,512 --> 11:32:12,960
在这里只是说它被称为本地化代表

2630
11:32:12,960 --> 11:32:16,720
你可以看到它说这个应用程序本地化小部件的代表

2631
11:32:16,720 --> 11:32:20,480
这基本上是你告诉颤振嘿我的一种方式

2632
11:32:20,480 --> 11:32:24,320
支持例如瑞典语和英语请本地化您自己的小部件

2633
11:32:24,320 --> 11:32:28,160
所以在这里你不必创建自定义委托，因为它们也是

2634
11:32:28,160 --> 11:32:32,480
在您的应用程序中提供，因此如果您进入那里，您会看到

2635
11:32:32,480 --> 11:32:38,080
这里的东西本地化代表好吧

2636
11:32:38,080 --> 11:32:43,272
我们现在需要做的就是说应用

2637
11:32:43,272 --> 11:32:47,680
本地化应用程序本地化

2638
11:32:47,680 --> 11:32:52,320
然后本地化代表，然后提供，我要做一个

2639
11:32:52,320 --> 11:32:56,640
热重启只是因为我们更改了应用程序中的 main 函数，并且

2640
11:32:56,640 --> 11:33:01,192
在您进行热重启之前，这些更改不会生效

2641
11:33:01,192 --> 11:33:05,120
我们现在能做的就是继续测试这些变化

2642
11:33:05,120 --> 11:33:09,120
嗯，真正很棒的实际上是

2643
11:33:09,120 --> 11:33:14,400
如果你能提取出我们在 intel en arb 中写的那个小标题

2644
11:33:14,400 --> 11:33:18,160
并将其放在某种小部件上的某个位置，以查看它是否正在工作

2645
11:33:18,160 --> 11:33:21,680
英语和瑞典语所以我要做的是我要带上 scr cpy

2646
11:33:21,680 --> 11:33:24,720
屏幕就在这里，你现在可以看到

2647
11:33:24,720 --> 11:33:29,680
我们在登录页面，所以让我们去登录页面，你不必做

2648
11:33:29,680 --> 11:33:34,552
所以我自己做这个只是为了展示一些东西，而

2649
11:33:34,552 --> 11:33:39,512
我们在登录页面，让我们也清理这两个未使用的导入，好吧

2650
11:33:39,512 --> 11:33:44,000
让我们在这里进入我们的代码登录，你可以看到有一个缺点

2651
11:33:44,000 --> 11:33:49,120
文本登录，但在这里我们想使用该标题，您不必再次使用

2652
11:33:49,120 --> 11:33:52,640
这样做，我实际上建议你不要这样做，这只是为了我演示

2653
11:33:52,640 --> 11:33:57,360
你，嘿，它按预期工作，好吧，所以请继续看看

2654
11:33:57,360 --> 11:34:00,720
这部分不必自己做，所以我们需要在这里做

2655
11:34:00,720 --> 11:34:03,760
让我们去导入相同的本地化，所以我只想说

2656
11:34:03,760 --> 11:34:06,400
导入包

2657
11:34:06,400 --> 11:34:11,192
然后我们有颤振锁定它叫什么让我们去主飞镖

2658
11:34:11,192 --> 11:34:15,192
文件并准确复制并粘贴该颤振生成器，我会带上它

2659
11:34:15,192 --> 11:34:19,192
进入登录视图 dot dart 我要把它粘贴在那里，所以我们也有

2660
11:34:19,192 --> 11:34:24,000
访问我们的本地化和获取本地化的方法就是这样

2661
11:34:24,000 --> 11:34:27,912
代码所以如果我写这个例如就在这里我要删除

2662
11:34:27,912 --> 11:34:31,760
实际上让缺点在那里我只是想让你看看为什么我们必须删除 const

2663
11:34:31,760 --> 11:34:36,232
在未来，这样我们就能够抓住这个字符串，这是我的标题

2664
11:34:36,232 --> 11:34:40,320
我们的登录视图我们不得不说应用本地化

2665
11:34:40,320 --> 11:34:44,872
上下文，然后我们可以说出我的标题和

2666
11:34:44,872 --> 11:34:50,080
然后我们必须明确地打开 wrapless 好的，所以这就是你如何抓取

2667
11:34:50,080 --> 11:34:54,960
你的本地化支持的本地化基本上是那些

2668
11:34:54,960 --> 11:34:58,400
你放在你的arv文件中好吗

2669
11:34:58,400 --> 11:35:02,480
所以现在我们有了我的头衔，在这里你可以看到

2670
11:35:02,480 --> 11:35:06,872
它说嘿，不能分配 null 类型的值，所以

2671
11:35:06,872 --> 11:35:11,512
基本上这是在这里设置常量的问题，因为在前面

2672
11:35:11,512 --> 11:35:14,872
我的意思是到目前为止，我们创建应用栏的方式是我们所说的

2673
11:35:14,872 --> 11:35:19,120
那是一个常量字符串它是一个常量文本，表示登录但现在

2674
11:35:19,120 --> 11:35:22,480
突然间我们说我​​们正在从我们的

2675
11:35:22,480 --> 11:35:26,720
不幸的是，这些属性不是应用程序

2676
11:35:26,720 --> 11:35:30,000
定义为常量，所以如果你进入这里，你可以

2677
11:35:30,000 --> 11:35:33,512
看到它只是一个字符串吸气剂，这就是你在这里不能有缺点的原因

2678
11:35:33,512 --> 11:35:36,320
所以我只是要消除它的缺点，它会很开心而且

2679
11:35:36,320 --> 11:35:40,000
我们在这里有这个感叹号的原因是应用程序本地化已关闭

2680
11:35:40,000 --> 11:35:44,640
函数，你可以看到它返回一个可选的应用程序它有点

2681
11:35:44,640 --> 11:35:48,000
不幸的是，我真的不喜欢我们必须继续的语法

2682
11:35:48,000 --> 11:35:51,120
上下文的应用和

2683
11:35:51,120 --> 11:35:55,192
嗯，这里有一个感叹号，我们是

2684
11:35:55,192 --> 11:35:59,192
实际上会在这次演示之后马上解决这个问题，因为

2685
11:35:59,192 --> 11:36:02,720
这是你很快就会看到的

2686
11:36:02,720 --> 11:36:06,552
不得不总是说上下文感叹的应用，这很烦人

2687
11:36:06,552 --> 11:36:10,872
标记点，然后是您的财产的名称，但请稍等，我们会解决这个问题

2688
11:36:10,872 --> 11:36:15,592
很快，现在我们在这里登录，我将进行热重启

2689
11:36:15,592 --> 11:36:20,320
让我们看看我们得到了什么我将带来 scrcpy 现在你可以看到我看到了

2690
11:36:20,320 --> 11:36:25,760
我的标题是瑞典语，这就是我们放入的标题

2691
11:36:25,760 --> 11:36:28,480
情报

2692
11:36:28,480 --> 11:36:33,680
瑞典语，你看就在这里，好吧，所以我们有那个英语的让我带来

2693
11:36:33,680 --> 11:36:37,440
瑞典语旁边的英语​​也是这样

2694
11:36:37,440 --> 11:36:40,000
所以我们这里有英文版和瑞典文版，你可以在

2695
11:36:40,000 --> 11:36:43,192
那一刻我们看到了瑞典语和实际改变语言的方式

2696
11:36:43,192 --> 11:36:47,912
你的 um 手机在 android 上与 ios 有点不同所以我在这里

2697
11:36:47,912 --> 11:36:52,080
要去安装尼娜，这就是设置和

2698
11:36:52,080 --> 11:36:58,232
在这里，我相信它在系统中的某个地方，我相信

2699
11:36:58,232 --> 11:37:01,680
然后是spirowak，意思是语言，然后我要去语言和

2700
11:37:01,680 --> 11:37:07,120
目前这里的spirowak是瑞典语，我只想把英语放在首位

2701
11:37:07,120 --> 11:37:11,360
你现在可以看到英语在最前面所以让我们回到我们的应用程序看看

2702
11:37:11,360 --> 11:37:14,720
如果它的标题要改变，现在你突然发现它是

2703
11:37:14,720 --> 11:37:20,480
显示英文标题，所以它在我的 android 上运行得非常好

2704
11:37:20,480 --> 11:37:25,440
将摆脱屏幕上的 scr cpy 并调出

2705
11:37:25,440 --> 11:37:30,640
一个我用 um 创建的 ios 设备

2706
11:37:30,640 --> 11:37:35,592
所以这是一个 iphone 12 pro 就在我的桌子上，我有

2707
11:37:35,592 --> 11:37:41,040
quicktime 在这里镜像那个 iphone 屏幕，所以让我们继续前进

2708
11:37:41,040 --> 11:37:45,512
在这里停止 android 上的进程，然后在 macintosh 上命令 shift b 到

2709
11:37:45,512 --> 11:37:48,480
选择设备或控件应该在 windows 和 linux 上，然后说选择

2710
11:37:48,480 --> 11:37:53,272
设备，然后我会选择那个 iphone 12 pro，然后我会去

2711
11:37:53,272 --> 11:37:56,800
主 dart 文件，因为这就是我们应该运行应用程序的方式，因为如果

2712
11:37:56,800 --> 11:37:59,680
当您在此文件上时尝试运行应用程序

2713
11:37:59,680 --> 11:38:04,400
给你一个错误，告诉你嘿我不知道如何运行 arb 文件所以

2714
11:38:04,400 --> 11:38:08,232
这就是你总是必须去一个飞镖文件的原因

2715
11:38:08,232 --> 11:38:11,912
在您的应用程序中，以便 Visual Studio 代码至少知道如何运行

2716
11:38:11,912 --> 11:38:14,640
你的申请

2717
11:38:14,640 --> 11:38:19,680
现在让我们提起嗯我们的嗯

2718
11:38:19,680 --> 11:38:24,960
quicktime 在这里，让我们基本上等待这个正在运行的 xcode 构建过程

2719
11:38:24,960 --> 11:38:27,360
完成，正如我之前提到的有时

2720
11:38:27,360 --> 11:38:32,232
xcode 实际上可能比使用 gradle 构建要慢得多，所以

2721
11:38:32,232 --> 11:38:37,120
这很烦人，所以我会在这里等到这个过程完成

2722
11:38:37,120 --> 11:38:41,272
完成让我们看看需要多长时间哦，它正在安装，所以我不

2723
11:38:41,272 --> 11:38:45,440
实际上必须做任何事情，所以安装和启动它说

2724
11:38:45,440 --> 11:38:48,872
时刻，让我们准备好

2725
11:38:48,872 --> 11:38:52,320
让我们看看这需要多长时间，我现在可以看到它将安装

2726
11:38:52,320 --> 11:38:55,440
应用程序在这里我们应该看到一些进展

2727
11:38:55,440 --> 11:39:02,000
在我的笔记上

2728
11:39:02,000 --> 11:39:06,080
好吧，现在它正在启动应用程序和

2729
11:39:06,080 --> 11:39:12,160
我们可以看到，目前用户和面孔是英语，嗯，所以我要

2730
11:39:12,160 --> 11:39:15,832
关闭此小部件，然后将 Visual Studio 代码带到此处

2731
11:39:15,832 --> 11:39:20,800
好吧，太棒了，所以不幸的是镜像

2732
11:39:20,800 --> 11:39:25,512
一个 iphone 一个真正的 iphone 在你的电脑屏幕上用 quicktime 是不会的

2733
11:39:25,512 --> 11:39:30,640
让您完全可以与该 iphone 进行交互，并且 scr cpy 在

2734
11:39:30,640 --> 11:39:34,720
它与 adb 连接，并且在低级别它允许您与

2735
11:39:34,720 --> 11:39:37,512
屏幕但是同样的事情不是真的

2736
11:39:37,512 --> 11:39:41,192
你正在镜像一个 iphone 屏幕，所以现在我必须去与

2737
11:39:41,192 --> 11:39:46,872
这个手机是手工的，所以我要抓住这个手机

2738
11:39:46,872 --> 11:39:52,080
就在这里，我不知道电缆是否足够长，我可以给你看

2739
11:39:52,080 --> 11:39:58,320
所以这是电话，我要去然后去系统

2740
11:39:58,320 --> 11:40:03,272
设置就在这里，然后我要去一般

2741
11:40:03,272 --> 11:40:07,360
嗯，然后让我们去语言和地区

2742
11:40:07,360 --> 11:40:11,832
在那里我要在这里选择瑞典语

2743
11:40:11,832 --> 11:40:15,192
在 ios 中有点令人失望的是

2744
11:40:15,192 --> 11:40:18,872
您为系统选择的语言适用于整个系统，并且当您这样做时

2745
11:40:18,872 --> 11:40:24,320
它将杀死所有正在运行的应用程序，因为 ios 应用程序

2746
11:40:24,320 --> 11:40:27,680
没有可能即时更改他们的语言

2747
11:40:27,680 --> 11:40:31,192
像android这样的东西在这方面做得很好

2748
11:40:31,192 --> 11:40:34,720
您可以更改整个系统的语言，无需重新启动

2749
11:40:34,720 --> 11:40:38,720
应用程序继续运行您甚至可以看到我们何时更改了语言

2750
11:40:38,720 --> 11:40:43,832
嗯，我们不能，我们基本上没有看到应用程序

2751
11:40:43,832 --> 11:40:49,360
终止或任何事情，所以我们现在需要做的是确保

2752
11:40:49,360 --> 11:40:53,192
我们不会更改整个系统的语言，而是我将向您展示

2753
11:40:53,192 --> 11:40:58,000
您可以选择在 ios 中执行的仅更改您的应用程序的方式

2754
11:40:58,000 --> 11:41:02,552
语言所以让我们回到这里，让我们去找到我们的应用程序

2755
11:41:02,552 --> 11:41:07,120
被称为我的笔记，我相信在某个地方，让我们看看你能不能找到它，

2756
11:41:07,120 --> 11:41:10,640
我的笔记就在那儿，现在你可以看到在

2757
11:41:10,640 --> 11:41:13,680
屏幕底部显示语言，然后我将点击它并

2758
11:41:13,680 --> 11:41:17,360
那么我会选择瑞典语以及你看到这两个的原因

2759
11:41:17,360 --> 11:41:22,080
这里的选项是因为我们在信息 p 列表中所做的更改所以如果我说主要

2760
11:41:22,080 --> 11:41:25,440
抱歉信息 p 列表我们可以看到我们说的是英语和

2761
11:41:25,440 --> 11:41:29,272
瑞典语按这个顺序，这就是为什么它们也显示在这里

2762
11:41:29,272 --> 11:41:33,272
订购所以我要然后选择瑞典语，一旦我这样做你就会

2763
11:41:33,272 --> 11:41:38,080
在这里看到我们的应用程序将终止，因为 ios 无法处理

2764
11:41:38,080 --> 11:41:41,272
所以我们去应用程序的

2765
11:41:41,272 --> 11:41:44,640
现在完全终止了，但没关系，所以我要回去了

2766
11:41:44,640 --> 11:41:48,640
在这里然后在ios上打开应用程序哦现在我们也必须调试它

2767
11:41:48,640 --> 11:41:51,912
好的，因为我们处于调试模式，所以让我们继续主暗文件和

2768
11:41:51,912 --> 11:41:56,232
然后再次运行应用程序，你可以看到它在 ios 14 plus 中显示

2769
11:41:56,232 --> 11:41:59,832
调试模式更扁平的应用程序只能从颤振工具 id 启动

2770
11:41:59,832 --> 11:42:04,872
颤振插件或来自xcode所以这有点不幸

2771
11:42:04,872 --> 11:42:08,720
嗯，因为那时你必须基本上运行

2772
11:42:08,720 --> 11:42:10,720
你的构建

2773
11:42:10,720 --> 11:42:14,800
在你测试的时候一遍又一遍，这是另一个

2774
11:42:14,800 --> 11:42:19,272
我想说这也是在 ios 上运行应用程序的缺点之一

2775
11:42:19,272 --> 11:42:23,192
好像有很多东西我觉得 android 领先于 ios

2776
11:42:23,192 --> 11:42:27,512
我想说的是，它只是 android 对开发人员更友好一点

2777
11:42:27,512 --> 11:42:31,120
整个操作系统的工具有点

2778
11:42:31,120 --> 11:42:35,760
更友好一点，所以让我们看看，嗯，我现在可以在底部看到

2779
11:42:35,760 --> 11:42:40,320
屏幕显示正在安装和启动，所以现在让我们在这里看看我们的用户

2780
11:42:40,320 --> 11:42:47,680
如果一切顺利，界面当然应该是瑞典语

2781
11:42:47,680 --> 11:42:50,720
如果事情进展顺利，那么在 ios 上我们

2782
11:42:50,720 --> 11:42:54,552
不必一遍又一遍地做这个过程，所以它只是为了

2783
11:42:54,552 --> 11:42:58,080
确保它是第一次工作，正如您在更改后现在所看到的那样

2784
11:42:58,080 --> 11:43:02,400
我们应用到瑞典语的语言现在我们可以看到瑞典语的标题

2785
11:43:02,400 --> 11:43:05,760
显示在顶部，所以我要关闭小部件

2786
11:43:05,760 --> 11:43:09,760
检查员就在那里，我要停止这个过程

2787
11:43:09,760 --> 11:43:14,552
我要摆脱这个，现在我们应该只专注于

2788
11:43:14,552 --> 11:43:18,400
部署在 android 上，因为它更容易

2789
11:43:18,400 --> 11:43:22,872
所以让我们做一个更快的选择然后我会说我选择

2790
11:43:22,872 --> 11:43:28,160
在我的 android 设备上运行我的应用程序，然后我要收起我的 iphone

2791
11:43:28,160 --> 11:43:32,080
太好了，这就是那个和那个

2792
11:43:32,080 --> 11:43:37,360
我们现在需要谈论的是这个应用程序本地化的可选性，所以

2793
11:43:37,360 --> 11:43:40,832
如果您返回我们的登录视图，您会看到

2794
11:43:40,832 --> 11:43:44,800
上下文的应用是一个可选值，因为这个函数

2795
11:43:44,800 --> 11:43:48,960
返回一个可选的应用程序本地化，并且有一种方法可以使它更好

2796
11:43:48,960 --> 11:43:53,512
这是我最喜欢的方式之一，就像我们可以编写的最短扩展

2797
11:43:53,512 --> 11:43:58,080
在我们扑朔迷离的职业发展中，但它是最强大的

2798
11:43:58,080 --> 11:44:02,000
您很快就会看到，为了不必重复此代码

2799
11:44:02,000 --> 11:44:07,040
我们可以做的是在构建上下文上创建一个扩展来抓取

2800
11:44:07,040 --> 11:44:12,440
它的应用并将其作为非可选值返回，所以这里我们有

2801
11:44:12,440 --> 11:44:17,040
通过传递上下文返回的应用程序，但我们是什么

2802
11:44:17,040 --> 11:44:23,040
要做的就是从上下文本身抓取应用程序好吧

2803
11:44:23,040 --> 11:44:28,160
所以让我们来看看我们如何才能真正做到这一点

2804
11:44:28,160 --> 11:44:31,760
为了开始，让我们留下这段代码，因为它就在那里，我们没有

2805
11:44:31,760 --> 11:44:35,360
做任何特别的事情，但我们要做的就是如你所见

2806
11:44:35,360 --> 11:44:38,800
屏幕底部我们必须去并在 lib 下创建一个新文件

2807
11:44:38,800 --> 11:44:42,320
扩展，然后我们将创建一个新文件夹，也称为 build

2808
11:44:42,320 --> 11:44:47,192
上下文锁定点 dart 和锁定，如我们将要在这个文件中的本地化

2809
11:44:47,192 --> 11:44:51,832
在构建联系人上创建我们的扩展，使我们能够

2810
11:44:51,832 --> 11:44:56,400
将我们的本地化返回给调用者

2811
11:44:56,400 --> 11:45:00,960
所以让我们继续做吧，我会在这里然后去lib

2812
11:45:00,960 --> 11:45:04,872
我们有 um 作为屏幕底部的底部表示我们已经扩展

2813
11:45:04,872 --> 11:45:09,832
有扩展文件夹，但我们只有列表文件夹和过滤器

2814
11:45:09,832 --> 11:45:14,000
文件所以在扩展我只是要右键单击并说新文件然后让我们

2815
11:45:14,000 --> 11:45:19,272
继续创建构建上下文斜线锁飞镖好吧

2816
11:45:19,272 --> 11:45:22,480
在这里我们要做的是说

2817
11:45:22,480 --> 11:45:26,640
嗯导入我们的颤振

2818
11:45:26,640 --> 11:45:30,552
像我们在其他地方所做的那样，很抱歉在 gen 之后打包

2819
11:45:30,552 --> 11:45:36,080
然后 gen l10n 应用开始好了

2820
11:45:36,080 --> 11:45:42,080
所以这是第一次导入，在这里我们不需要几个符号或

2821
11:45:42,080 --> 11:45:44,960
实际上是应用程序的一个符号，但我们将讨论

2822
11:45:44,960 --> 11:45:49,192
很快，所以让我们继续说扩展名，我们会说

2823
11:45:49,192 --> 11:45:54,400
构建上下文的本地化，你会看到它说我还必须导入这个

2824
11:45:54,400 --> 11:45:57,832
因为它在材料中所以我会说继续导入它

2825
11:45:57,832 --> 11:46:01,680
我真的不喜欢你跟着这门课我不喜欢

2826
11:46:01,680 --> 11:46:06,400
喜欢导入材料中的所有内容，例如我只需要构建上下文

2827
11:46:06,400 --> 11:46:09,760
需要构建上下文，所以我不会导入所有内容，所以让我们继续吧

2828
11:46:09,760 --> 11:46:14,480
并说显示构建上下文，这只会带来构建上下文

2829
11:46:14,480 --> 11:46:16,960
这个语境

2830
11:46:16,960 --> 11:46:19,592
所以我们需要在这里做什么

2831
11:46:19,592 --> 11:46:26,832
基本上创建一个返回应用程序本地化的getter

2832
11:46:26,832 --> 11:46:30,800
applocalizations 我们会说这是一个getter，它被称为lock

2833
11:46:30,800 --> 11:46:34,720
它所做的是返回应用程序

2834
11:46:34,720 --> 11:46:36,552
这个的

2835
11:46:36,552 --> 11:46:41,192
它在它的末尾放了一个感叹号，所以

2836
11:46:41,192 --> 11:46:45,512
而且您还会看到我们已将应用程序作为一个整体导入，但我们只需要

2837
11:46:45,512 --> 11:46:50,400
来自该文件的应用程序本地化，所以我只想说显示这个没问题

2838
11:46:50,400 --> 11:46:55,912
所以这就是那个文件现在它已经创建了，虽然这一切都在发生，但我会

2839
11:46:55,912 --> 11:47:01,040
选择它，我也会说运行，因为拥有

2840
11:47:01,040 --> 11:47:04,872
应用程序在我们进行热重启和热重载时运行，所以我们可以看到

2841
11:47:04,872 --> 11:47:08,640
屏幕上的结果，所以现在有了这个扩展，你很快就可以了

2842
11:47:08,640 --> 11:47:11,680
说构建上下文点

2843
11:47:11,680 --> 11:47:16,960
然后你可以得到你的本地化所以让我们现在回到这个登录视图

2844
11:47:16,960 --> 11:47:21,272
如您所见，我们在这里写的是目前的这种语法，但是您

2845
11:47:21,272 --> 11:47:26,000
如果我们删除它并且我们只是说上下文，可以用 is 替换语法

2846
11:47:26,000 --> 11:47:30,720
这是我们的构建上下文，然后你说点锁，你会在这里看到它说

2847
11:47:30,720 --> 11:47:34,000
哦，我不知道什么是锁，这是正确的，它不知道什么是锁

2848
11:47:34,000 --> 11:47:36,720
因为我们还没有导入那个扩展

2849
11:47:36,720 --> 11:47:39,832
抱歉，我将关闭开关检查器

2850
11:47:39,832 --> 11:47:43,040
所以它不知道那是什么所以我只想说命令点它是

2851
11:47:43,040 --> 11:47:48,232
为我自动导入它很棒，现在我们可以说出我的标题

2852
11:47:48,232 --> 11:47:52,552
我的意思是告诉我这不是更好这对我来说好 100 倍就像如果你

2853
11:47:52,552 --> 11:47:57,512
将此与我们之前的进行比较，我的意思是来吧

2854
11:47:57,512 --> 11:48:02,800
它要短很多很多都是一样的，我个人认为是这样

2855
11:48:02,800 --> 11:48:07,272
更好的代码所以让我回去好吧让我们离开

2856
11:48:07,272 --> 11:48:12,080
这个暂时在这里好吧只是我的标题让我们把它留在那里，让我们去我们的

2857
11:48:12,080 --> 11:48:15,592
这里是 scrcpy 的 android 应用程序，我们可以看到它正在显示

2858
11:48:15,592 --> 11:48:19,512
正确的标题，所以如果我也进行热重启，它仍然可以工作

2859
11:48:19,512 --> 11:48:24,080
并显示来自我们 um 的字符串

2860
11:48:24,080 --> 11:48:29,192
现在我们已经完成了从我们的 arb 文件中

2861
11:48:29,192 --> 11:48:34,872
我们实际上必须谈论好的，我们将如何进行

2862
11:48:34,872 --> 11:48:39,512
很好地本地化事物这是您看到的重要部分

2863
11:48:39,512 --> 11:48:44,480
本地化在很多地方都是一项非常无聊的工作，你必须

2864
11:48:44,480 --> 11:48:48,720
从字面上看，如果你是我的意思是如果你这样做很无聊

2865
11:48:48,720 --> 11:48:52,232
我们在本章中这样做的方式，你必须去收集所有

2866
11:48:52,232 --> 11:48:55,360
这些字符串对不起，然后你必须去

2867
11:48:55,360 --> 11:48:59,120
将它们放在您的 arb 文件中，然后您还必须将它们放在

2868
11:48:59,120 --> 11:49:02,400
瑞典阿拉伯文件，然后你必须做翻译

2869
11:49:02,400 --> 11:49:05,360
等等，所以你必须为所有这些创建密钥

2870
11:49:05,360 --> 11:49:09,760
这是一项相当无聊的工作，我们不会做

2871
11:49:09,760 --> 11:49:13,440
本章是因为我已经为你准备好了所有这些，所以你不要

2872
11:49:13,440 --> 11:49:16,640
必须自己去写

2873
11:49:16,640 --> 11:49:20,872
我要在这里做的是我要真的去把所有这些

2874
11:49:20,872 --> 11:49:25,120
我为你准备的琴弦，让我看看能不能找到

2875
11:49:25,120 --> 11:49:28,480
在en rb的某个地方

2876
11:49:28,480 --> 11:49:32,640
好吧，我在这里找到了他们，然后我要做的是

2877
11:49:32,640 --> 11:49:37,192
将所有这些字符串带上并放置它们

2878
11:49:37,192 --> 11:49:42,800
在我们的 intel en arabi 文件中，所以您现在可以在这里看到

2879
11:49:42,800 --> 11:49:47,360
我们有我的头衔，我将把我的头衔留在那里，因为我们是

2880
11:49:47,360 --> 11:49:51,680
现在使用它，但我们将不得不尽快将其删除

2881
11:49:51,680 --> 11:49:56,640
我要粘贴我为我们准备的所有这些字符串

2882
11:49:56,640 --> 11:50:02,000
我们现在所有这些都在这里，并且有一个 github 存储库用于这个呃

2883
11:50:02,000 --> 11:50:06,080
当然，对于这个呃课程，你可以去

2884
11:50:06,080 --> 11:50:08,232
本章完成了你可以去那个

2885
11:50:08,232 --> 11:50:11,512
github 存储库并检索所有这些字符串，因此您不必键入它们

2886
11:50:11,512 --> 11:50:16,800
手工制作，所以没什么特别的

2887
11:50:16,800 --> 11:50:20,720
正如你所看到的，我们只有一个注销按钮，上面写着 log

2888
11:50:20,720 --> 11:50:26,232
我们有一个取消按钮，我们有验证电子邮件，这是什么

2889
11:50:26,232 --> 11:50:29,592
我们在验证电子邮件屏幕中使用的例如我们有注册

2890
11:50:29,592 --> 11:50:33,512
按钮我们有重启按钮让我们看看在哪里使用重启

2891
11:50:33,512 --> 11:50:38,000
这是我相信哦重启我相信它在里面

2892
11:50:38,000 --> 11:50:42,160
验证电子邮件屏幕，所以如果我创建了例如 um

2893
11:50:42,160 --> 11:50:46,720
如果我对 a b gmail foo bar 说像素，然后我说

2894
11:50:46,720 --> 11:50:51,680
嗯哦抱歉注册屏幕所以让我们说像素

2895
11:50:51,680 --> 11:50:56,720
gmail.com foo barbaz 我要注册这个用户然后我们要进入

2896
11:50:56,720 --> 11:51:00,960
这个屏幕现在说重启，这就是这个键重启好了

2897
11:51:00,960 --> 11:51:06,080
所以我真的浏览了我们所有的屏幕，我们所有的对话以及

2898
11:51:06,080 --> 11:51:09,912
收集所有这些字符串并将它们放在这里

2899
11:51:09,912 --> 11:51:14,232
国际化 enarb 文件，我也做过同样的事情

2900
11:51:14,232 --> 11:51:18,960
瑞典语，所以我要去带那些文件，对不起，带上那些钥匙

2901
11:51:18,960 --> 11:51:23,440
在这里，我已经完成了瑞典语的翻译，我不是我的母语

2902
11:51:23,440 --> 11:51:28,000
不是瑞典人，但我在瑞典生活了很长时间，所以我不能

2903
11:51:28,000 --> 11:51:32,320
说一点瑞典语其实够我能说够了

2904
11:51:32,320 --> 11:51:35,680
我要把这些字符串粘贴到这里的字符串中，你可以看到它们是

2905
11:51:35,680 --> 11:51:39,760
完全是瑞典语，好吧，所以我所做的实际上是我们有英语

2906
11:51:39,760 --> 11:51:44,160
你可以在这里看到的，我们有瑞典的，所以它的钥匙是一样的，但是

2907
11:51:44,160 --> 11:51:47,592
不同的价值观，别担心，我明白如果

2908
11:51:47,592 --> 11:51:50,640
你在看这门课你就像哦，但我怎么能得到所有这些

2909
11:51:50,640 --> 11:51:54,400
请转到 github 存储库，您可以提取这些值

2910
11:51:54,400 --> 11:51:57,592
不必手动输入

2911
11:51:57,592 --> 11:52:02,480
你应该很高兴所以现在我们有这些以便我们的

2912
11:52:02,480 --> 11:52:06,640
在这些黑暗的工具文件中生成的本地化让我们去

2913
11:52:06,640 --> 11:52:09,680
flutter jan 看看这个 gen 10 l

2914
11:52:09,680 --> 11:52:15,120
gen l10n 你可以看到这些字符串现在不在这里，因为只有

2915
11:52:15,120 --> 11:52:20,720
我的标题应该在这里某处让我们看看你能不能找到它

2916
11:52:20,720 --> 11:52:25,360
让我们看看语言环境应该重新加载你看到的我的标题

2917
11:52:25,360 --> 11:52:30,320
这里没有其他内容，但如果我们热重启所有这些字符串

2918
11:52:30,320 --> 11:52:34,232
应该生成然后我们应该把它们都在这里你可以看到登录

2919
11:52:34,232 --> 11:52:37,592
验证电子邮件所有这些都在这里提供好吗

2920
11:52:37,592 --> 11:52:40,720
所以这就是那部分所以现在我们拥有我们所有的

2921
11:52:40,720 --> 11:52:45,512
字符串，我们应该能够做编码部分，这是有趣的部分，所以

2922
11:52:45,512 --> 11:52:49,680
让我们继续处理，我将关闭所有这些文件

2923
11:52:49,680 --> 11:52:54,232
目前在那里，所以我们有一个干净的名单可以使用

2924
11:52:54,232 --> 11:52:59,272
我们要做的第一件事就是本地化我们的 um 它叫什么

2925
11:52:59,272 --> 11:53:03,760
不能分享空笔记对话所以让我们继续在那里然后我

2926
11:53:03,760 --> 11:53:08,080
要说命令 shift p 和 go to cannot share empty now 对话框

2927
11:53:08,080 --> 11:53:12,080
如果您还记得如果您是如果用户正在尝试共享拨号共享注释

2928
11:53:12,080 --> 11:53:17,680
它的内容是空的，所以在这种情况下共享我们有一个密钥

2929
11:53:17,680 --> 11:53:21,360
为此，我们只需要说 context.lock

2930
11:53:21,360 --> 11:53:24,720
记住这个锁是我们的扩展

2931
11:53:24,720 --> 11:53:28,160
除非我们导入它，否则我们无法访问它，所以我只是要去

2932
11:53:28,160 --> 11:53:31,120
在 Visual Studio 代码中说命令点，它还将导入该文件

2933
11:53:31,120 --> 11:53:34,080
如你所见，对我来说就在这里

2934
11:53:34,080 --> 11:53:37,360
现在我们可以访问我们所有的字符串了，所以我们在这里

2935
11:53:37,360 --> 11:53:41,040
说分享是我创造的钥匙，记住所有

2936
11:53:41,040 --> 11:53:45,680
这些密钥在 arb 文件中，您不能共享空注释，因此

2937
11:53:45,680 --> 11:53:51,512
我们要说 context.log 不能共享空节点提示

2938
11:53:51,512 --> 11:53:55,760
这又是一个关键，我已经打过电话了，我们也有

2939
11:53:55,760 --> 11:53:58,160
好的对

2940
11:53:58,160 --> 11:54:02,400
好的，现在我们已经本地化了我们的节目

2941
11:54:02,400 --> 11:54:07,272
不能分享空笔记对话框太棒了

2942
11:54:07,272 --> 11:54:11,440
所以让我们继续本地化我们的删除对话，所以我

2943
11:54:11,440 --> 11:54:14,960
要说 mac 或 control 上的 command shift p visual studio code 应该是

2944
11:54:14,960 --> 11:54:19,912
通常是 Windows 和 linux 的代码，比如删除对话框

2945
11:54:19,912 --> 11:54:25,360
在这里，我们有这个嗯，小呃标题，所以让我们

2946
11:54:25,360 --> 11:54:29,680
说嗯上下文点锁定并记住我们在一个我们无权访问的新文件中

2947
11:54:29,680 --> 11:54:34,000
记录让我们自动导入它，在这里我只想说删除

2948
11:54:34,000 --> 11:54:38,000
那并提示我们要说上下文

2949
11:54:38,000 --> 11:54:44,400
解锁和删除节点提示取消上下文点日志取消

2950
11:54:44,400 --> 11:54:50,232
在这里 context.lock 是好的还是好的，所以让我们说好的

2951
11:54:50,232 --> 11:54:55,120
所以这也是这个文件的本地化，我要说命令命令

2952
11:54:55,120 --> 11:54:59,832
s 或者只是热重启整个事情可能会更好，我可以看到一个 crcy

2953
11:54:59,832 --> 11:55:03,120
不幸地坠毁了，这就是我在使用这个 cr cpy 时遇到的问题

2954
11:55:03,120 --> 11:55:06,720
很长一段时间没关系这是一个开源软件我只想说

2955
11:55:06,720 --> 11:55:10,160
选择设备和这个，我要运行

2956
11:55:10,160 --> 11:55:13,272
应用程序，所以我们让它在后台运行

2957
11:55:13,272 --> 11:55:17,832
太棒了，这就是删除对话框，我现在

2958
11:55:17,832 --> 11:55:20,232
必须在屏幕底部捕捉，以防我们不得不去

2959
11:55:20,232 --> 11:55:24,480
本地化我们应用程序中的几乎所有内容，现在

2960
11:55:24,480 --> 11:55:29,512
下一步是本地化错误对话框，让我们说错误对话框

2961
11:55:29,512 --> 11:55:34,160
在这里，你可以看到它说发生了错误，我们已经调用了

2962
11:55:34,160 --> 11:55:38,552
如果您看这里，我们的 arb 文件中会出现一般错误提示

2963
11:55:38,552 --> 11:55:42,720
一般错误进展和错误发生正常

2964
11:55:42,720 --> 11:55:48,552
所以让我们继续在这里使用它，所以我只想说 context.lock

2965
11:55:48,552 --> 11:55:52,640
自动导入我不必再解释了，然后我们说一般错误

2966
11:55:52,640 --> 11:55:56,872
提示我们也有一个好的所以上下文锁定

2967
11:55:56,872 --> 11:56:01,592
好的，这也完成了

2968
11:56:01,592 --> 11:56:06,480
然后我们必须去本地化我们的注销对话框所以让我们去注销对话框

2969
11:56:06,480 --> 11:56:10,480
并在此处注销对话框

2970
11:56:10,480 --> 11:56:14,640
我们将在这里做同样的事情所以让我们继续说

2971
11:56:14,640 --> 11:56:19,040
我们将在这里使用注销按钮，您会看到我们已经注销

2972
11:56:19,040 --> 11:56:23,592
很少有地方像你记得在主应用程序界面中

2973
11:56:23,592 --> 11:56:27,680
以实际用户登录，我将引入 crcpy，这样你就知道我在做什么

2974
11:56:27,680 --> 11:56:31,832
谈论如果我说如果你看这个屏幕

2975
11:56:31,832 --> 11:56:37,592
重新启动，如果我用用户登录，我说 van.mp gmail.com

2976
11:56:37,592 --> 11:56:40,552
富巴作为

2977
11:56:40,552 --> 11:56:44,160
当您使用实际用户登录时，您将在此处登录并退出

2978
11:56:44,160 --> 11:56:47,832
它说注销，同时当您点击它时，就会出现这个

2979
11:56:47,832 --> 11:56:52,160
显示注销的对话框，因此我们可以在这里选择您去定义

2980
11:56:52,160 --> 11:56:57,272
在您的 arb 文件中使用不同的键注销两个字符串，或者您只需定义一个

2981
11:56:57,272 --> 11:57:01,120
这正是我所做的，所以我们在这里，我只想说

2982
11:57:01,120 --> 11:57:06,872
context.lock 是如何导入的，在这里我们只说 log

2983
11:57:06,872 --> 11:57:11,272
退出按钮没问题，它说退出按钮我明白

2984
11:57:11,272 --> 11:57:14,400
这是对话的标题，我们正在调用注销按钮，您可能只是

2985
11:57:14,400 --> 11:57:18,720
如果您愿意，请继续将此键注销，我将调用该日志

2986
11:57:18,720 --> 11:57:24,080
注销按钮记住这些只是您可以轻松更改它们的键

2987
11:57:24,080 --> 11:57:29,592
现在这就是我们的标题，然后是我们要说的内容

2988
11:57:29,592 --> 11:57:34,552
上下文日志注销和对话框提示，我们有一个

2989
11:57:34,552 --> 11:57:39,440
取消按钮在这里，让我们说让我们说上下文日志取消

2990
11:57:39,440 --> 11:57:43,592
再次，我们有另一个注销按钮，您可以在此处看到，因此请在此处注销 注销

2991
11:57:43,592 --> 11:57:48,000
在这里然后在这里注销，所以有三个地方使用相同的东西或

2992
11:57:48,000 --> 11:57:52,640
相同的字符串上下文日志，然后我们要说注销

2993
11:57:52,640 --> 11:57:56,400
按钮没问题

2994
11:57:56,400 --> 11:58:00,400
所以那太好了，所以这也是那部分，我只是要对 hot 执行命令

2995
11:58:00,400 --> 11:58:03,120
重新加载

2996
11:58:03,120 --> 11:58:05,760
接下来我们必须在屏幕底部做的事情

2997
11:58:05,760 --> 11:58:10,320
标题我们必须去本地化我们的密码重置对话所以我要去

2998
11:58:10,320 --> 11:58:15,512
在此处删除注销对话框并关闭选项卡，让我们去密码重置

2999
11:58:15,512 --> 11:58:20,480
电子邮件发送对话框，在这里我们有这个密码重置

3000
11:58:20,480 --> 11:58:25,272
我也要去我的笔记，所以让我们在这里看看标题和

