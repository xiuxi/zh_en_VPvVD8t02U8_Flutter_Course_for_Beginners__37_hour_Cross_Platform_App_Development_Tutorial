1
11:58:25,272 --> 11:58:29,360
说上下文块自动导入

2
11:58:29,360 --> 11:58:33,512
我们将把它称为密码重置它是我定义的密钥之一

3
11:58:33,512 --> 11:58:38,160
在这里我们要说上下文锁定密码重置对话框提示好的

4
11:58:38,160 --> 11:58:42,552
我们有一个 ok 按钮，所以你现在我们有一个 ok 键

5
11:58:42,552 --> 11:58:46,800
在我们的 arb 文件中

6
11:58:46,800 --> 11:58:51,272
所以现在我们基本上已经完成了，呃本地化显示密码最近

7
11:58:51,272 --> 11:58:57,120
对话 uh uh show password reset 发送对话

8
11:58:57,120 --> 11:59:03,592
好的，下一个 uh 对话框是 um forgot password so let's go to

9
11:59:03,592 --> 11:59:06,480
那个屏幕，对不起，这不是对话

10
11:59:06,480 --> 11:59:11,040
实际上是一个视图所以我们要去忘记密码视图

11
11:59:11,040 --> 11:59:14,872
在这里我的意思是当涉及到视图时，我们的工作有点困难

12
11:59:14,872 --> 11:59:18,400
因为到目前为止，我们几乎无处不在

13
11:59:18,400 --> 11:59:22,640
使用常量，例如，如果您查看 this is a constant string here's a constant

14
11:59:22,640 --> 11:59:26,400
这里的文字是不变的，所以到处都是

15
11:59:26,400 --> 11:59:31,272
我们将本地化我们的字符串，并且在我们必须使用 const 之前

16
11:59:31,272 --> 11:59:35,512
现在消除这个缺点，因为我们在 arv 基金中的本地化属性

17
11:59:35,512 --> 11:59:40,720
不幸的是没有被定义为 const 我真的不知道原因

18
11:59:40,720 --> 11:59:43,272
背后可能只是因为有

19
11:59:43,272 --> 11:59:47,272
吸气剂，也许吸气剂不能保持不变，或者有一些

20
11:59:47,272 --> 11:59:53,192
这一代人的其他问题也许是颤振团队决定的

21
11:59:53,192 --> 11:59:56,800
好吧，这些不可能是常数，但这就是我们所拥有的事实

22
11:59:56,800 --> 12:00:01,440
活在当下，所以让我们继续寻找我们所有的字符串

23
12:00:01,440 --> 12:00:06,232
在我获得密码视图之前，我们将开始一次本地化它们

24
12:00:06,232 --> 12:00:11,360
所以在这个显示错误对话框中，我称这个键忘记密码

25
12:00:11,360 --> 12:00:15,912
查看一般错误，所以让我们删除这个字符串，然后说

26
12:00:15,912 --> 12:00:19,832
上下文锁定让我们自动导入日志

27
12:00:19,832 --> 12:00:25,272
我们说忘记密码

28
12:00:25,272 --> 12:00:29,040
查看一般错误，我将在末尾添加一个逗号，以便格式化

29
12:00:29,040 --> 12:00:33,832
很好，让我们看看这个忘记密码的标题本身，所以我要

30
12:00:33,832 --> 12:00:36,720
删除 const 记住我刚刚解释过，所以我们要说

31
12:00:36,720 --> 12:00:41,040
上下文日志，我们会说忘记密码，这是我定义的密钥

32
12:00:41,040 --> 12:00:45,360
你也可以在这里看到它的描述，你可以看到它说忘记了

33
12:00:45,360 --> 12:00:49,040
密码好的英文这条消息翻译成

34
12:00:49,040 --> 12:00:54,320
忘记密码了，所以这个东西我叫它忘记了

35
12:00:54,320 --> 12:00:59,360
密码查看提示，所以让我们删除 const 删除字符串本身，我们

36
12:00:59,360 --> 12:01:01,912
要说

37
12:01:01,912 --> 12:01:07,272
上下文日志忘记密码提示忘记密码查看提示并放一个

38
12:01:07,272 --> 12:01:10,552
最后的逗号，让我们尽可能地看一下文档

39
12:01:10,552 --> 12:01:13,360
看到它说如果您忘记了密码，只需输入您的电子邮件，我们将发送

40
12:01:13,360 --> 12:01:17,592
你一个密码最近的链接好的，所以这是一回事，然后在你的

41
12:01:17,592 --> 12:01:21,360
电子邮件地址，它说输入修饰您的电子邮件

42
12:01:21,360 --> 12:01:24,480
地址，因为那是一个忘记密码的屏幕，让我们去这里看看

43
12:01:24,480 --> 12:01:29,832
看看这里的样子我忘记了密码所以就是这样

44
12:01:29,832 --> 12:01:32,640
很少输入装饰所以

45
12:01:32,640 --> 12:01:37,040
我可以看到我将其称为电子邮件文本字段占位符，所以让我们删除它

46
12:01:37,040 --> 12:01:42,232
const 在这里我们将说上下文日志电子邮件占位符文本字段

47
12:01:42,232 --> 12:01:45,360
好吧，让我们继续看看这个

48
12:01:45,360 --> 12:01:50,720
一个所以让我们删除它说向我发送密码最近链接的const，我可以

49
12:01:50,720 --> 12:01:57,760
看到我已经调用了忘记密码视图给我发送链接所以

50
12:01:57,760 --> 12:02:04,552
上帝密码的上下文日志忘记在这里给我发送链接并在

51
12:02:04,552 --> 12:02:08,800
结束，所以飞镖格式化程序忙于格式化代码和

52
12:02:08,800 --> 12:02:13,040
在这里回到登录视图我可以看到我称之为忘记了

53
12:02:13,040 --> 12:02:17,912
密码视图回到登录所以上下文

54
12:02:17,912 --> 12:02:21,360
这里上下文锁忘记了

55
12:02:21,360 --> 12:02:25,592
好的，所以这是一种你也可以使用的技术，比如 if

56
12:02:25,592 --> 12:02:28,552
你想得到像这样一个名字很长的属性，你想要

57
12:02:28,552 --> 12:02:33,040
要立即获得正确的名称，您只需编写几个关键字即可

58
12:02:33,040 --> 12:02:37,272
例如名字我知道对于上帝和背部是非常独特的名字所以如果我

59
12:02:37,272 --> 12:02:41,272
说忘了它会告诉我的

60
12:02:41,272 --> 12:02:45,440
它的智能中具有类似部分搜索的功能，非常非常

61
12:02:45,440 --> 12:02:49,360
有用的接下来我们要做的就是

62
12:02:49,360 --> 12:02:53,360
继续本地化我们的登录视图，所以我要关闭屏幕忘记了

63
12:02:53,360 --> 12:02:57,680
密码视图并转到登录视图登录视图就在这里，我们将

64
12:02:57,680 --> 12:03:00,480
从屏幕顶部的底部开始，然后

65
12:03:00,480 --> 12:03:04,480
我们将在登录视图中删除这个未使用的导入

66
12:03:04,480 --> 12:03:09,512
让我们继续，从呃本地化我们的对话框开始，所以第一个

67
12:03:09,512 --> 12:03:13,040
找不到具有输入凭据的用户，我称它不能

68
12:03:13,040 --> 12:03:16,320
查找用户或登录视图找不到用户所以我

69
12:03:16,320 --> 12:03:22,960
只是说 context.log 让我们自动导入日志

70
12:03:22,960 --> 12:03:27,440
或者它已经被导入了，这很好，我们就说它被称为

71
12:03:27,440 --> 12:03:31,832
登录错误 找不到用户 找不到用户 正常

72
12:03:31,832 --> 12:03:35,360
下一个我要在这里放一些逗号让暗格式化程序去做

73
12:03:35,360 --> 12:03:38,800
它的工作正确，我要按命令来保存文件，那就是

74
12:03:38,800 --> 12:03:42,552
将为我格式化文件以获得错误的凭据我称之为登录

75
12:03:42,552 --> 12:03:48,480
错误的凭据，因此上下文日志和错误的凭据

76
12:03:48,480 --> 12:03:52,640
下一个是身份验证错误，我们称之为登录错误作者，所以

77
12:03:52,640 --> 12:03:59,680
上下文锁定作者好的，所以现在也是登录顶部的那个

78
12:03:59,680 --> 12:04:02,640
登录视图我们有这个小文字说请按顺序登录您的帐户

79
12:04:02,640 --> 12:04:07,040
互动并创建笔记，我可以看到这个

80
12:04:07,040 --> 12:04:11,832
我刚刚调用了登录视图提示，但我想知道是什么

81
12:04:11,832 --> 12:04:16,720
正如你所看到的，我们的标题发生了，现在我们有了这个我的标题

82
12:04:16,720 --> 12:04:20,080
登录视图现在是真正去摆脱它的好时机，好吧，所以我要走了

83
12:04:20,080 --> 12:04:23,592
打开嗯英特尔

84
12:04:23,592 --> 12:04:27,512
e 和 arb 我要杀了这基本上是我的

85
12:04:27,512 --> 12:04:33,760
标题，我建议你也去瑞典文件，它是 intel sv 和

86
12:04:33,760 --> 12:04:37,760
也杀了这个标题好吧，所以我们已经删除了它，我要摆脱它

87
12:04:37,760 --> 12:04:41,592
然后我要热重启以便代码生成

88
12:04:41,592 --> 12:04:46,552
开始了，正如你在这里看到的那样，我的头衔不再有效，在这我

89
12:04:46,552 --> 12:04:50,480
如果您可以查看文档，则表示此标题现在称为登录

90
12:04:50,480 --> 12:04:54,552
在这里你可以看到英文它只是说登录太棒了

91
12:04:54,552 --> 12:04:59,440
所以让我们也从提示中删除这个常量，我们就开始吧

92
12:04:59,440 --> 12:05:04,480
说上下文锁定，让我们说登录提示，所以我要做一个提示

93
12:05:04,480 --> 12:05:09,680
好的，所以输入电子邮件

94
12:05:09,680 --> 12:05:14,000
文本字段占位符在此处输入您的电子邮件我们将删除 const

95
12:05:14,000 --> 12:05:19,912
让我们说上下文锁定，我们会说电子邮件占位符

96
12:05:19,912 --> 12:05:22,960
好的，我们也有输入您的密码

97
12:05:22,960 --> 12:05:26,800
这里占位符所以让我们删除这里的缺点我只想说上下文

98
12:05:26,800 --> 12:05:30,400
锁定密码

99
12:05:30,400 --> 12:05:35,040
占位符 好的 密码字段 密码文本字段 占位符是完整的

100
12:05:35,040 --> 12:05:40,000
名字，我们在这里登录，所以

101
12:05:40,000 --> 12:05:44,080
我们需要做的只是改变这个文本，所以让我们删除

102
12:05:44,080 --> 12:05:49,360
内容在这里我只想说上下文点走

103
12:05:49,360 --> 12:05:53,912
登录，我忘记了密码，所以我要去

104
12:05:53,912 --> 12:05:59,832
说上下文锁定，我相信它被称为忘记密码

105
12:05:59,832 --> 12:06:04,640
登录视图忘记密码好吧它不再是一个常数并放一个

106
12:06:04,640 --> 12:06:07,832
逗号在这里将逗号放在参数末尾是一个好习惯

107
12:06:07,832 --> 12:06:12,000
即使它只是您传递给函数的一个参数，我的意思是我的

108
12:06:12,000 --> 12:06:15,680
原因虽然这有点偏颇，但我的理由是任何时候

109
12:06:15,680 --> 12:06:20,232
将来任何人都想向此文本小部件添加新参数

110
12:06:20,232 --> 12:06:23,680
那么他们将不得不去把那个逗号放在那里，但如果你作为一个

111
12:06:23,680 --> 12:06:27,192
一开始写这段代码的程序员你把逗号放在那里

112
12:06:27,192 --> 12:06:30,800
你有点像承认嘿，我很感激你的时间

113
12:06:30,800 --> 12:06:34,800
现在可能想要添加您可能想要为此添加新参数

114
12:06:34,800 --> 12:06:39,360
我已经为你准备好了，所以如果你不这样做，如果我愿意的话

115
12:06:39,360 --> 12:06:43,120
程序员在这里添加新参数，我必须说哦，好吧，逗号

116
12:06:43,120 --> 12:06:46,872
诫命在这里等等等等，但如果你已经添加了，我会

117
12:06:46,872 --> 12:06:53,832
只是说输入然后写我的参数

118
12:06:53,832 --> 12:06:59,192
好的很好，所以我们现在可以做的是在这里向前滚动并本地化

119
12:06:59,192 --> 12:07:02,872
这些属性的其余部分，我不能在这里看到我们有一个

120
12:07:02,872 --> 12:07:07,272
财产留在此处，目前显示未注册尚未在此处注册

121
12:07:07,272 --> 12:07:11,512
所以让我们继续像往常一样删除 const 并说联系人

122
12:07:11,512 --> 12:07:15,760
锁，我可以看到它被称为未注册

123
12:07:15,760 --> 12:07:19,760
所以让我们在这里使用它和一个逗号，以便我们为下一个程序员做准备

124
12:07:19,760 --> 12:07:23,272
说，我们现在可以说我们有

125
12:07:23,272 --> 12:07:27,592
目前已成功本地化我们的登录视图，因此我们可以关闭它

126
12:07:27,592 --> 12:07:31,912
下一步是本地化我们的

127
12:07:31,912 --> 12:07:36,872
注册视图所以注册视图也有很多我们必须要做的事情

128
12:07:36,872 --> 12:07:40,400
本地化所以让我们继续并去注册视图

129
12:07:40,400 --> 12:07:44,400
当我们在这里时，我的意思是这就是我再次

130
12:07:44,400 --> 12:07:47,680
当我开始这门课程时，我希望你成为一名软件工程师，即使

131
12:07:47,680 --> 12:07:51,512
你就像一个设计师，一个用户体验或其他什么或项目

132
12:07:51,512 --> 12:07:55,760
经理，你必须把自己和你自己放在软件的鞋子里

133
12:07:55,760 --> 12:08:00,160
开发人员 软件开发人员，您通常总是处于类似的时间限制中

134
12:08:00,160 --> 12:08:03,512
我们的时间关注交付，但同时

135
12:08:03,512 --> 12:08:08,480
当您偶然发现可以快速修复的东西时，请继续

136
12:08:08,480 --> 12:08:11,912
就在那个时候，因为如果你离开这些东西，他们会

137
12:08:11,912 --> 12:08:15,512
堆积和许多可能的小东西

138
12:08:15,512 --> 12:08:19,592
如果你把它们放在一边，它们就会变成一大堆

139
12:08:19,592 --> 12:08:23,360
那么你将没有足够的时间来修复它们

140
12:08:23,360 --> 12:08:26,640
我们在这里我们有两个未使用的导入让我们删除它们，因为那是

141
12:08:26,640 --> 12:08:30,480
最好的做法是不要有未使用的进口

142
12:08:30,480 --> 12:08:33,760
现在让我们进入我们的注册视图，我们可以看到有很多错误

143
12:08:33,760 --> 12:08:37,912
有四个错误所以我要做的第一件事就是把逗号放在最后

144
12:08:37,912 --> 12:08:40,552
这些就在那里，我要按

145
12:08:40,552 --> 12:08:44,720
macintosh 上的 command 或 windows linux 上的 control 就可以了

146
12:08:44,720 --> 12:08:48,080
格式化第一个被称为弱密码，所以

147
12:08:48,080 --> 12:08:53,192
让我们说上下文锁定并导入它

148
12:08:53,192 --> 12:08:58,400
这个消息是注册错误弱密码所以弱密码

149
12:08:58,400 --> 12:09:02,800
就像下一个被称为上下文日志和

150
12:09:02,800 --> 12:09:10,480
它被称为电子邮件已经在使用 好的 注册失败 我已经调用了注册

151
12:09:10,480 --> 12:09:12,720
通用错误

152
12:09:12,720 --> 12:09:16,400
所以上下文锁通用

153
12:09:16,400 --> 12:09:22,320
这里是注册错误通用，这个无效的电子邮件被称为上下文

154
12:09:22,320 --> 12:09:27,440
锁定并注册无效的电子邮件好吧，所以这些是我们没有的错误

155
12:09:27,440 --> 12:09:30,960
用常数改变任何东西，因为这些消息在

156
12:09:30,960 --> 12:09:34,872
它们被传递到这个构造函数中

157
12:09:34,872 --> 12:09:39,512
然后我们必须修复这个寄存器的标题，它只是被称为寄存器，所以

158
12:09:39,512 --> 12:09:44,320
我要删除 con const 我要说上下文日志寄存器

159
12:09:44,320 --> 12:09:47,760
在这里，然后我们输入了您的电子邮件和

160
12:09:47,760 --> 12:09:52,720
密码来查看你的笔记，我称之为注册视图提示

161
12:09:52,720 --> 12:09:58,960
所以上下文锁定寄存器视图提示我们再次有这个输入声明

162
12:09:58,960 --> 12:10:03,272
我们以前用电子邮件和密码做过这个，所以这并不奇怪

163
12:10:03,272 --> 12:10:08,320
所以让我们说上下文阻止电子邮件占位符，这个是

164
12:10:08,320 --> 12:10:11,912
一个密码占位符，所以让我们删除 const

165
12:10:11,912 --> 12:10:18,960
上下文锁定密码占位符好吧，就是这样

166
12:10:18,960 --> 12:10:22,800
然后我们有注册按钮，我们也必须

167
12:10:22,800 --> 12:10:27,512
本地化，让我们在这里删除常量，只说上下文

168
12:10:27,512 --> 12:10:31,760
锁定寄存器和已注册的已调用

169
12:10:31,760 --> 12:10:35,912
已注册，所以让我们也删除常量 const

170
12:10:35,912 --> 12:10:39,592
我们说上下文锁已经注册

171
12:10:39,592 --> 12:10:43,040
好的，最后还有一个逗号，我们可以在这里做同样的事情

172
12:10:43,040 --> 12:10:46,552
最后用逗号只是为了正确格式化

173
12:10:46,552 --> 12:10:51,440
所以这似乎准备好了我们现在已经本地化了寄存器视图

174
12:10:51,440 --> 12:10:55,680
下一步是本地化验证电子邮件视图，所以我要关闭

175
12:10:55,680 --> 12:11:00,000
这个文件，让我们继续验证电子邮件视图

176
12:11:00,000 --> 12:11:04,800
再次，我们有两个未使用的导入让我们删除它们，让我们继续

177
12:11:04,800 --> 12:11:08,960
在此处验证电子邮件，我们刚刚将其称为验证电子邮件，因此我要删除

178
12:11:08,960 --> 12:11:14,080
删除 const 说锁的上下文和

179
12:11:14,080 --> 12:11:18,960
假设验证电子邮件没问题，这是我也修复的一件事，你

180
12:11:18,960 --> 12:11:23,120
可以看出，到目前为止，在我们开发应用程序的方式中，我们有两个

181
12:11:23,120 --> 12:11:27,192
验证电子邮件视图顶部的文本，如果我看起来像这样

182
12:11:27,192 --> 12:11:30,160
提出来，我们去吧

183
12:11:30,160 --> 12:11:33,440
尝试使用未验证的用户登录

184
12:11:33,440 --> 12:11:36,872
他的电子邮件

185
12:11:36,872 --> 12:11:39,760
你可以看到我们在这里结束了我们已经给你发送了一封电子邮件验证请

186
12:11:39,760 --> 12:11:43,512
打开它以验证您的帐户，这就像有两个文本

187
12:11:43,512 --> 12:11:48,640
字段，但我所做的是我已经将其设置为一个文本提示，所以让我们删除

188
12:11:48,640 --> 12:11:54,640
第二个文本字段和我创建它的方式，如果我们去我们的

189
12:11:54,640 --> 12:11:59,680
英特尔 en rb，如果您查看验证

190
12:11:59,680 --> 12:12:03,192
提示您可以看到我已经写了我们已经给您发送了一封电子邮件验证请

191
12:12:03,192 --> 12:12:06,232
打开你的打开它来验证你的帐户，然后

192
12:12:06,232 --> 12:12:11,040
它只是跟随的其余字符串，所以它只是一个段落

193
12:12:11,040 --> 12:12:15,192
这就是为什么我们要删除这里的第二个文本

194
12:12:15,192 --> 12:12:19,440
所以我们要删除这个 const 我要删除文本

195
12:12:19,440 --> 12:12:23,760
然后我们要说上下文锁

196
12:12:23,760 --> 12:12:28,400
验证提示没问题和逗号

197
12:12:28,400 --> 12:12:32,720
我们在这里有一个小文本按钮，上面写着发送电子邮件验证

198
12:12:32,720 --> 12:12:37,440
这看起来像这样让我们也改变它，我们在这里

199
12:12:37,440 --> 12:12:41,192
会说上下文锁定

200
12:12:41,192 --> 12:12:47,592
它被称为验证发送电子邮件验证在这里放一个逗号

201
12:12:47,592 --> 12:12:50,160
好的，对于重启按钮，我们有一个

202
12:12:50,160 --> 12:12:54,480
重新启动文本，所以我们只会说上下文日志重新启动

203
12:12:54,480 --> 12:12:59,360
最后一个逗号就好了，这就是这个的本地化

204
12:12:59,360 --> 12:13:04,080
屏幕也是如此，所以我们可以说我们已经完成了验证电子邮件

205
12:13:04,080 --> 12:13:08,232
本地化也是如此，虽然我们在这里说实话

206
12:13:08,232 --> 12:13:12,232
你我们也可以在这封验证电子邮件中清理一下，而我们

207
12:13:12,232 --> 12:13:16,800
基本上清理视图本身你可以看到这个文本没有

208
12:13:16,800 --> 12:13:21,832
我们可以做的任何填充实际上是在整个专栏中

209
12:13:21,832 --> 12:13:26,232
也许填充这个文本所以我们要说这个文本是填充的

210
12:13:26,232 --> 12:13:29,832
填充没问题，我们可以说填充 16。所以

211
12:13:29,832 --> 12:13:33,832
你现在可以看到它有点干净了只是有点少

212
12:13:33,832 --> 12:13:37,832
努力使用户界面看起来更干净

213
12:13:37,832 --> 12:13:42,640
所以我们已经完成了那个屏幕，我们需要做的是我们实际上需要做的

214
12:13:42,640 --> 12:13:46,720
本地化创建更新节点视图，让我们继续创建更新说明

215
12:13:46,720 --> 12:13:50,960
查看另一个未使用的导入让我们删除它

216
12:13:50,960 --> 12:13:54,320
让我们看看我们到底要做什么

217
12:13:54,320 --> 12:13:58,720
在这里本地化它可能是视图标题，所以如果我们向下滚动到

218
12:13:58,720 --> 12:14:02,480
我们在哪里显示新笔记所以如果我用拥有的用户登录

219
12:14:02,480 --> 12:14:06,640
验证了此用户的电子邮件地址

220
12:14:06,640 --> 12:14:09,272
我们的 baz 可怕的密码请不要使用它

221
12:14:09,272 --> 12:14:12,400
现在的密码你可以在这里看到

222
12:14:12,400 --> 12:14:17,040
我们基本上是在说对不起，这里有新的注释

223
12:14:17,040 --> 12:14:21,912
我们说的是新的音符，这就是这个东西，所以让我们改变它并说

224
12:14:21,912 --> 12:14:26,640
上下文点锁自动导入磁盘哎呀如何

225
12:14:26,640 --> 12:14:30,640
导入这个然后我们会说注意

226
12:14:30,640 --> 12:14:33,440
好的，您可以在文档中看到它

227
12:14:33,440 --> 12:14:37,440
只是用英语说的一个说注意所以这里我们不是说新的笔记

228
12:14:37,440 --> 12:14:40,552
其背后的原因是，到目前为止，我们的应用程序是

229
12:14:40,552 --> 12:14:45,360
正在说新笔记，但是如果您点击现有笔记会发生什么

230
12:14:45,360 --> 12:14:48,872
它仍然显示新注释，所以这就是我决定基本上改变的原因

231
12:14:48,872 --> 12:14:52,800
这段文字只是说注意并在此处放置一个逗号以备不时之需

232
12:14:52,800 --> 12:14:56,320
下一个人以及我们将要做的事情也是

233
12:14:56,320 --> 12:15:01,440
更改此文本装饰，此处显示开始输入您的笔记

234
12:15:01,440 --> 12:15:06,720
好的，所以删除 const 然后在这里我们称之为开始输入

235
12:15:06,720 --> 12:15:11,512
你的笔记，所以上下文日志开始输入你的笔记

236
12:15:11,512 --> 12:15:15,360
很好，所以我们也要保存它

237
12:15:15,360 --> 12:15:20,320
我们已经完成了，所以现在我们要去本地化我们的

238
12:15:20,320 --> 12:15:24,080
注释视图，这就是我想说的最令人兴奋的本地化

239
12:15:24,080 --> 12:15:28,232
部分是因为我们需要做更多的编码它不是

240
12:15:28,232 --> 12:15:33,120
对两个人来说很容易，因为记住

241
12:15:33,120 --> 12:15:37,360
本章开头我提到了 arb 文件比

242
12:15:37,360 --> 12:15:41,680
只是普通的 json，因为它们可以在其中包含逻辑，如果我们现在去

243
12:15:41,680 --> 12:15:46,960
回到我们的让我们看看我是否将 scr cpy 带到这里

244
12:15:46,960 --> 12:15:49,592
你可以看到它只是说你的笔记

245
12:15:49,592 --> 12:15:53,592
我想演示一下 arb 文件是如何非常动态的，并且可以

246
12:15:53,592 --> 12:15:57,272
他们有逻辑，我想好吧，我怎么向你证明这一点

247
12:15:57,272 --> 12:16:00,232
我决定做的是嗯

248
12:16:00,232 --> 12:16:02,480
如果你

249
12:16:02,480 --> 12:16:06,720
登陆这个页面，你现在没有像这种情况下的笔记

250
12:16:06,720 --> 12:16:12,160
你的笔记，但我们要做的是说好的，我们有一些关键在我们的

251
12:16:12,160 --> 12:16:17,272
本地化文件，称为您的笔记 好吧或抱歉，它被称为笔记

252
12:16:17,272 --> 12:16:20,552
标题是一个键，但这个键将有

253
12:16:20,552 --> 12:16:25,160
某些具有实际逻辑的值，并且该逻辑与复数有关

254
12:16:25,160 --> 12:16:29,832
如果你没有音符，这个键的复数形式

255
12:16:29,832 --> 12:16:33,760
用英语我们会说还没有笔记

256
12:16:33,760 --> 12:16:38,800
如果你有一个音符，它只会说一个音符

257
12:16:38,800 --> 12:16:43,192
如果您有其他数量的音符，例如二三

258
12:16:43,192 --> 12:16:46,832
四 然后它会说 x

259
12:16:46,832 --> 12:16:51,192
音符例如 x 是三个音符四个音符所以它只会说四个

260
12:16:51,192 --> 12:16:56,640
注释所以还没有注释 一个注释或 x 个注释

261
12:16:56,640 --> 12:17:02,000
所以它内置了多元化，我们必须如何做到这一点是使用

262
12:17:02,000 --> 12:17:07,360
arb 中称为占位符的东西，我现在将向您展示如何执行此操作

263
12:17:07,360 --> 12:17:13,192
所以让我们先进入我们的英特尔

264
12:17:13,192 --> 12:17:16,160
在屏幕底部，我们要做的是首先

265
12:17:16,160 --> 12:17:18,552
创建我们的密钥，这是最重要的，所以我们要

266
12:17:18,552 --> 12:17:21,512
称它为注释标题，在这里我们知道我们要

267
12:17:21,512 --> 12:17:27,912
有一些价值，让我们看看我们还有一个半对不起的冒号，好吧

268
12:17:27,912 --> 12:17:33,040
所以我们有注释标题我们如何把我们的逻辑放在这里

269
12:17:33,040 --> 12:17:38,320
我们只知道我们需要有某种

270
12:17:38,320 --> 12:17:42,480
您看到您的本地化 arb 文件不知道的帐户

271
12:17:42,480 --> 12:17:46,320
关于计数的任何事情，因为它是知道有多少的应用程序

272
12:17:46,320 --> 12:17:50,000
节点在火存储数据库中可用，因此

273
12:17:50,000 --> 12:17:54,232
不知何故，我们需要将此计数传递给我们的应用程序

274
12:17:54,232 --> 12:17:59,192
对不起我们的 arb 文件，你用参数化来做，所以你继续

275
12:17:59,192 --> 12:18:03,040
并在这里创建大括号，你会说好吧，嘿，我想要一个

276
12:18:03,040 --> 12:18:08,552
名为 count 的参数需要将此计数传递给此

277
12:18:08,552 --> 12:18:12,000
嗯注意标题，以便它能够

278
12:18:12,000 --> 12:18:15,592
准确计算它必须返回的内容，所以只有你

279
12:18:15,592 --> 12:18:20,800
如果您想获取注释标题本地化字符串，请说嘿应用程序

280
12:18:20,800 --> 12:18:24,720
你必须传递一个参数给我调用计数好的

281
12:18:24,720 --> 12:18:29,360
现在我们要做的是去打电话，基本上创造折扣

282
12:18:29,360 --> 12:18:33,680
作为一个参数，所以你要做的就是转到下一行，然后说添加

283
12:18:33,680 --> 12:18:38,320
注释标题这是你告诉 arb 嘿的方式

284
12:18:38,320 --> 12:18:43,512
这个笔记标题键有一些额外的逻辑

285
12:18:43,512 --> 12:18:46,872
那么这里有一个键叫做占位符

286
12:18:46,872 --> 12:18:51,760
所以你必须写好占位符，在这里基本上你说

287
12:18:51,760 --> 12:18:57,760
占位符，然后每个键都是参数本身的名称，所以帐户

288
12:18:57,760 --> 12:19:02,000
好吧，然后你基本上就开始了，然后你要做的就是你

289
12:19:02,000 --> 12:19:04,960
必须在这里定义两个键一个是类型

290
12:19:04,960 --> 12:19:09,272
和 oops 类型，然后另一个是

291
12:19:09,272 --> 12:19:11,912
例子

292
12:19:11,912 --> 12:19:16,080
像这样，让我们​​来看看它实际上是什么样子

293
12:19:16,080 --> 12:19:19,120
所以基本上我们所说的

294
12:19:19,120 --> 12:19:24,960
arb is that or dart 在这种情况下，我们说嘿，这个注释标题键

295
12:19:24,960 --> 12:19:31,040
我们的阿拉伯人有一个叫做 count 的参数，在这里我们说嘿

296
12:19:31,040 --> 12:19:34,160
这些是占位符，它的名字很重要，现在你必须输入

297
12:19:34,160 --> 12:19:36,800
定义一个你必须实际告诉飞镖嘿的类型

298
12:19:36,800 --> 12:19:40,232
这是使用什么数据类型 它是一个字符串 它是一个整数 它是一个

299
12:19:40,232 --> 12:19:44,320
boolean 它是什么所以在这里你只是说它是一个整数然后你会

300
12:19:44,320 --> 12:19:49,680
很快看到代码生成然后看看这个并说好吧我期待你

301
12:19:49,680 --> 12:19:53,680
发送一个整数，它将创建一个名为节点标题的函数

302
12:19:53,680 --> 12:19:58,480
使用 account 一个整数类型的参数，所以这非常重要，它是数据

303
12:19:58,480 --> 12:20:03,512
该计数参数的类型可以，一个示例仅供您了解

304
12:20:03,512 --> 12:20:07,592
好的，这将如何使用，所以一个例子是三个节点，好的

305
12:20:07,592 --> 12:20:10,400
所以我们只想说一个例子，说明这件事的结果

306
12:20:10,400 --> 12:20:13,832
看起来不错

307
12:20:13,832 --> 12:20:20,080
所以我们现在要做的就是在这里告诉这个 erb 和 dart 代码生成器

308
12:20:20,080 --> 12:20:25,592
这个计数实际上有一个关于它是复数的逻辑，所以它有

309
12:20:25,592 --> 12:20:29,440
复数逻辑和做到这一点的方法是你在这里放一个逗号然后你说

310
12:20:29,440 --> 12:20:33,592
复数和逗号之后因为你必须指定逻辑

311
12:20:33,592 --> 12:20:36,640
那个复数

312
12:20:36,640 --> 12:20:41,272
作为旁注，我完全理解这太奇怪了，我的意思是它是

313
12:20:41,272 --> 12:20:46,480
奇怪的语法我觉得不舒服我有时用我有时看

314
12:20:46,480 --> 12:20:49,120
在文档中只是为了提醒这一点

315
12:20:49,120 --> 12:20:52,960
逻辑，但我看待它的方式是，这是我们拥有的最好的东西，我们不要

316
12:20:52,960 --> 12:20:57,272
讨厌它让我们使用它让我们了解它有力量

317
12:20:57,272 --> 12:21:02,400
尽管我们不是 100 岁，但它是这样的原因

318
12:21:02,400 --> 12:21:04,232
像

319
12:21:04,232 --> 12:21:07,192
因为我们没有参与其中的推理，我们甚至不知道是什么

320
12:21:07,192 --> 12:21:10,320
推理是，但这就是格式，这就是我们基本上必须要做的

321
12:21:10,320 --> 12:21:16,480
去吧，所以创建这个的方法是给你的

322
12:21:16,480 --> 12:21:19,120
呃有你的逻辑，所以我们要走了

323
12:21:19,120 --> 12:21:25,360
说等于零，让我们这样做，然后

324
12:21:25,360 --> 12:21:30,080
我们会说等于一，然后我们会说其他

325
12:21:30,080 --> 12:21:33,440
好的，这就是你创建它的方式，所以你

326
12:21:33,440 --> 12:21:37,592
说如果这个计数的值为零

327
12:21:37,592 --> 12:21:42,800
那么我们将在这里做一些事情，如果该计数的值是我们

328
12:21:42,800 --> 12:21:46,800
会在这里做点什么，如果它是其他的东西，我们就是

329
12:21:46,800 --> 12:21:50,960
在这里做点什么所以让我们说当它等于零时我们会说

330
12:21:50,960 --> 12:21:54,160
没有注释还可以，这就是字符串

331
12:21:54,160 --> 12:21:58,872
如果计数等于 1，我们将显示计数是否为零

332
12:21:58,872 --> 12:22:03,192
说一个音符然后重要的是如果我们

333
12:22:03,192 --> 12:22:07,360
以这种情况结束，如果不是，那么我们想说在这种情况下，我们

334
12:22:07,360 --> 12:22:11,592
实际上想要得到计数所以如果你传递了我们想说的三的值

335
12:22:11,592 --> 12:22:16,400
三个音符，因此获得该计数的方法是使用另一个大括号对和

336
12:22:16,400 --> 12:22:20,000
你说count然后你说notes好吗

337
12:22:20,000 --> 12:22:25,680
所以这就是你创造这些东西的方式所以嗯，我认为我们实际上错过了一个

338
12:22:25,680 --> 12:22:31,120
花括号，那是最后的花括号是的

339
12:22:31,120 --> 12:22:34,800
这个大括号属于喜欢如果我们

340
12:22:34,800 --> 12:22:40,232
如果你看这里如果我删除这些

341
12:22:40,232 --> 12:22:43,832
另一个有两个大括号和

342
12:22:43,832 --> 12:22:49,592
这是两个大括号，这里是另一个大括号，那里是一个大括号

343
12:22:49,592 --> 12:22:55,440
这里的括号一个在这里结束一个在这里结束所以最后一个大括号是

344
12:22:55,440 --> 12:23:00,400
对于从这里开始的大括号，我又不知道该说什么

345
12:23:00,400 --> 12:23:04,960
格式是它的方式吗？我们只需要忍受它就可以了，所以我们创建了

346
12:23:04,960 --> 12:23:08,640
笔记标题和我们要做的就是继续做同样的事情

347
12:23:08,640 --> 12:23:12,480
但是对于瑞典语，我已经准备好了，所以我要走了

348
12:23:12,480 --> 12:23:16,232
向前，从我手上的瑞典绳子上抓起那根绳子

349
12:23:16,232 --> 12:23:20,552
已经制作好了，所以我们不必再次输入所有内容

350
12:23:20,552 --> 12:23:23,592
所以让我去抓住它并把它带进去

351
12:23:23,592 --> 12:23:27,592
l10n sv 用于瑞典语，然后带上

352
12:23:27,592 --> 12:23:32,080
它在屏幕的底部并粘贴在那里并带有

353
12:23:32,080 --> 12:23:37,680
该行末尾的逗号，所以你可以看到复数，它说还没有注释

354
12:23:37,680 --> 12:23:42,080
对于一个它说一个音符，对于另一个它只是说

355
12:23:42,080 --> 12:23:45,272
x笔记没问题

356
12:23:45,272 --> 12:23:48,960
所以我要保存这个 我要保存这个 我要热重启

357
12:23:48,960 --> 12:23:52,800
让我们只希望 scr cpy 不会崩溃，也不会崩溃

358
12:23:52,800 --> 12:23:57,272
所以我们现在要做的是按照计划我们要去我们的

359
12:23:57,272 --> 12:24:00,160
笔记视图，我也要去我的笔记

360
12:24:00,160 --> 12:24:05,912
在这里让我们去笔记视图看看我们的标题在这里

361
12:24:05,912 --> 12:24:09,832
你看到我们此刻我们正在看到你的笔记，但我们真正的

362
12:24:09,832 --> 12:24:14,080
想要的是能够显示音符的数量

363
12:24:14,080 --> 12:24:20,000
在我们的节点提供者里面，所以如果我们有

364
12:24:20,000 --> 12:24:23,120
看看我们如何阅读 num 以及您可以看到我们正在使用的注释

365
12:24:23,120 --> 12:24:27,192
注意服务，然后我们说所有节点，这是一个流

366
12:24:27,192 --> 12:24:32,232
i 三倍的云节点，所以我们想要一个流构建器，我们想要一个

367
12:24:32,232 --> 12:24:36,560
流构建器来创建我们的标题我们的应用栏，我们将要做

368
12:24:36,560 --> 12:24:40,080
同样的事情，所以我们将有一个流构建器来创建我们的应用栏

369
12:24:40,080 --> 12:24:42,000
好的，但是

370
12:24:42,000 --> 12:24:46,800
或者实际上它会创建文本但我们如何获得计数

371
12:24:46,800 --> 12:24:50,640
笔记和做到这一点的方法是我要去的一个方便的扩展

372
12:24:50,640 --> 12:24:56,232
向您展示如何创建，让我们进入我们的笔记视图和

373
12:24:56,232 --> 12:25:00,232
我们要说扩展，我们要说计数

374
12:25:00,232 --> 12:25:04,720
我们想在流上创建它，所以我们要说任何流都必须是

375
12:25:04,720 --> 12:25:08,560
能够喜欢任何包含可迭代对象的流

376
12:25:08,560 --> 12:25:12,952
它的值是可迭代的，我们想要创建一个

377
12:25:12,952 --> 12:25:17,112
称为长度的属性，例如它获取长度，所以

378
12:25:17,112 --> 12:25:22,080
让我们进去说好吧，这个流有一些价值，但我们想要那个

379
12:25:22,080 --> 12:25:24,872
可迭代的值

380
12:25:24,872 --> 12:25:30,640
好的，所以在这里我们基本上是说我们正在扩展任何包含

381
12:25:30,640 --> 12:25:35,440
呃，我很麻烦，因为它的价值会有这个扩展

382
12:25:35,440 --> 12:25:38,872
然后我们会说好吧，这将是一个提示

383
12:25:38,872 --> 12:25:43,280
我们将把它称为获取链接好

384
12:25:43,280 --> 12:25:46,000
这基本上要做的是

385
12:25:46,000 --> 12:25:51,440
说它映射流的值所以让我们说事件

386
12:25:51,440 --> 12:25:55,672
在这里我们只是说它返回事件的长度，所以我理解这可能

387
12:25:55,672 --> 12:25:59,032
对你来说有点神秘，但是嗯

388
12:25:59,032 --> 12:26:04,640
你必须知道每个流都是一个通用函数，如果你很抱歉

389
12:26:04,640 --> 12:26:08,800
它是一个泛型类，你可以看到它是抽象类它有一个参数

390
12:26:08,800 --> 12:26:13,840
称为 t 这是它的泛型类型，所以我们在这里说的是

391
12:26:13,840 --> 12:26:18,872
好的，我们正在为其参数或类型的任何流创建扩展

392
12:26:18,872 --> 12:26:22,392
are and i treble and iterable 有一个长度

393
12:26:22,392 --> 12:26:26,488
这意味着我们可以扩展和扩展任何具有 i 的流

394
12:26:26,488 --> 12:26:30,800
高音，然后我们返回其名为 get length 的属性 OK

395
12:26:30,800 --> 12:26:37,200
所以我们现在需要做的是继续前进并进入应用程序栏内

396
12:26:37,200 --> 12:26:41,920
当我们需要首先删除这个常量时，我​​们有一个常量文本实际上让我们

397
12:26:41,920 --> 12:26:46,232
保留它，我会看看我们是否可以用流包裹它

398
12:26:46,232 --> 12:26:50,800
builder 现在好了 所以在这里我们要做的是我们说这里是一个流

399
12:26:50,800 --> 12:26:55,200
builder，我们还不知道它的流是什么

400
12:26:55,200 --> 12:27:01,280
像这样的笔记服务，我们有所有笔记

401
12:27:01,280 --> 12:27:08,160
所有者用户 id 是我们的用户 id，就像我们在这里一样

402
12:27:08,160 --> 12:27:11,672
好的，但是这里的流我们实际上并不想要我们想要的笔记

403
12:27:11,672 --> 12:27:14,952
音符的长度，所以让我们说获取长度

404
12:27:14,952 --> 12:27:21,032
它在哪里可以得到长度，现在我们知道快照可以

405
12:27:21,032 --> 12:27:26,872
为我们返回那个 uh 值，所以如果我在这里按 command s，让我们放一个

406
12:27:26,872 --> 12:27:31,032
逗号也在这里你可以看到没有什么改变它只是

407
12:27:31,032 --> 12:27:34,000
说你的笔记，因为我们仍然在这里看到你的笔记，但是什么

408
12:27:34,000 --> 12:27:39,032
我们想要的是从我们的快照中获取数据，这个快照是异步的

409
12:27:39,032 --> 12:27:42,640
整数的快照

410
12:27:42,640 --> 12:27:47,920
让我们看看未定义的类，它被称为异步快照，是的，就像那样

411
12:27:47,920 --> 12:27:50,952
对，所以你可以告诉一个流

412
12:27:50,952 --> 12:27:54,160
int 的生成器，然后我相信你的快照

413
12:27:54,160 --> 12:27:59,112
自动将面临抢夺，或者你可以

414
12:27:59,112 --> 12:28:02,800
只是说流构建器普通流构建器和它的异步快照，所以

415
12:28:02,800 --> 12:28:06,312
你可以用两种不同的方式输入它，而我只是选择了这种方式

416
12:28:06,312 --> 12:28:09,920
好吧，我们在这里需要做的就是看到

417
12:28:09,920 --> 12:28:14,640
一旦快照有数据，我们就会抓取该数据，这意味着它具有长度

418
12:28:14,640 --> 12:28:19,752
内置它没关系，所以我们要说如果快照有

419
12:28:19,752 --> 12:28:24,160
data 这意味着它有长度，否则我们将返回

420
12:28:24,160 --> 12:28:29,112
const of text 没什么意思 我们没有什么可显示的

421
12:28:29,112 --> 12:28:32,640
如果此快照没有文本，则在屏幕顶部

422
12:28:32,640 --> 12:28:36,488
然后在这里我们会说它会说最后的音符计数

423
12:28:36,488 --> 12:28:40,312
snapchat 日期可以吗

424
12:28:40,312 --> 12:28:44,640
或为零，因为它只是说是的，我可能没有数据

425
12:28:44,640 --> 12:28:47,440
很奇怪，因为您实际上是在说有数据，但是这两个属性

426
12:28:47,440 --> 12:28:50,000
有点像他们和你不一样 我是说

427
12:28:50,000 --> 12:28:53,032
它们并没有什么不同，但它们彼此分开只是因为

428
12:28:53,032 --> 12:28:56,312
你正在检查的东西有数据并不一定意味着下一个

429
12:28:56,312 --> 12:29:00,000
行应该明白它有数据的数据类型

430
12:29:00,000 --> 12:29:04,800
这个数据属性的仍然是 final t 所以你不能改变那好吧

431
12:29:04,800 --> 12:29:08,392
为什么我们这里有这个 um elvis 标志

432
12:29:08,392 --> 12:29:12,000
或问号问号只是说这是否没有任何价值

433
12:29:12,000 --> 12:29:15,440
现在我们有节点数，我们必须使用零

434
12:29:15,440 --> 12:29:18,872
获取该上下文块

435
12:29:18,872 --> 12:29:23,112
我们哦，我们没有日志，让我们导入它

436
12:29:23,112 --> 12:29:28,800
并记住我们使用英特尔我的密钥，它被称为笔记标题让我们说

437
12:29:28,800 --> 12:29:33,440
注释标题，现在突然你可以看到它是一个函数

438
12:29:33,440 --> 12:29:38,160
一个整数你好，它是我们内置到我们的 arb 和

439
12:29:38,160 --> 12:29:42,080
它返回一个你可以在这里看到的完美的字符串，因为这样我们就可以通过

440
12:29:42,080 --> 12:29:44,872
这里的笔记数没问题

441
12:29:44,872 --> 12:29:49,440
这将是我们的文本

442
12:29:49,440 --> 12:29:52,560
然后我们可以说返回

443
12:29:52,560 --> 12:29:56,392
一个带有该文本的文本小部件，就像这样

444
12:29:56,392 --> 12:29:59,280
好的，然后我们可以保存这个，你可以

445
12:29:59,280 --> 12:30:03,360
现在看到，只要我点击 command s 它说还没有笔记

446
12:30:03,360 --> 12:30:07,840
如果我说，如果我在这里按下加号按钮，你可以看到我可以输入一些东西

447
12:30:07,840 --> 12:30:12,080
在这里，我回去，如果我创建另一个，它会说 onenote

448
12:30:12,080 --> 12:30:16,000
在屏幕顶部，它说两个音符，差不多就是这样

449
12:30:16,000 --> 12:30:19,592
我们内置的逻辑，所以现在它说 onenote delete that note and it

450
12:30:19,592 --> 12:30:24,312
说还没有完美的笔记，所以逻辑似乎对我们来说很好用

451
12:30:24,312 --> 12:30:27,920
所以这就是那部分，我们在这个底部还有另一个字符串

452
12:30:27,920 --> 12:30:33,512
屏幕显示注销，我们也必须更改它，所以

453
12:30:33,512 --> 12:30:39,360
我们不得不说上下文注销按钮

454
12:30:39,360 --> 12:30:44,640
这个错误是因为我们说无效常量，但你就像哦，但是

455
12:30:44,640 --> 12:30:48,800
这不是一个恒定的问题，当

456
12:30:48,800 --> 12:30:52,080
我们创建了这个弹出菜单项数组，我们说它是一个常量，所以

457
12:30:52,080 --> 12:30:57,752
让我们把它去掉，这太棒了，我的意思是

458
12:30:57,752 --> 12:31:01,360
现在我们几乎完成了我们没有的整个应用程序

459
12:31:01,360 --> 12:31:05,440
任何硬编码的字符串，如果您查看我们的问题

460
12:31:05,440 --> 12:31:09,512
部分没有问题要修复，例如没有未使用的导入，所以我们已经

461
12:31:09,512 --> 12:31:13,280
也照顾好这些，只是为了测试这一点，我们能做的就是去

462
12:31:13,280 --> 12:31:16,640
到这里的设置屏幕，我要带上瑞典语

463
12:31:16,640 --> 12:31:20,312
让我们回到我们的应用程序看看，它说不

464
12:31:20,312 --> 12:31:24,000
笔记但我要按下加号按钮，我要写一些

465
12:31:24,000 --> 12:31:27,200
字符串回到这里它说一个音符

466
12:31:27,200 --> 12:31:33,032
创建一个新的，它说两个注释删除这个和你看到的所有

467
12:31:33,032 --> 12:31:37,280
对话现在是瑞典语 是 删除此注释

468
12:31:37,280 --> 12:31:41,360
是的，让我们现在尝试注销，它说日志看看它

469
12:31:41,360 --> 12:31:44,312
它说看看去添加第二个顺便看看你确定你想要吗

470
12:31:44,312 --> 12:31:49,200
注销是的，您可以在这里看到我们所有的字符串基本上也是

471
12:31:49,200 --> 12:31:52,000
嗯，这个屏幕上的一切都是

472
12:31:52,000 --> 12:31:57,360
本地化了，这太棒了，我们基本上做了我们所做的

473
12:31:57,360 --> 12:32:02,392
应该做的和我们承诺要做的，非常祝贺

474
12:32:02,392 --> 12:32:06,080
如果你然后做我们通常在每一章结束时做的事情，我们

475
12:32:06,080 --> 12:32:10,160
提交我们的工作，所以我要看看这个，让我们看看我们的

476
12:32:10,160 --> 12:32:13,440
良好的状态并查看我们的 git 日志

477
12:32:13,440 --> 12:32:17,032
我要改变屏幕布局有点抱歉，所以你看

478
12:32:17,032 --> 12:32:22,872
代码更好地删除 scr cpy 使这个全屏

479
12:32:22,872 --> 12:32:28,080
好的，我要把它放大很多，这样你看得更清楚

480
12:32:28,080 --> 12:32:32,800
再看看 git log 你可以看到我们最后一个 git step

481
12:32:32,800 --> 12:32:38,080
抱歉，第 31 步，所以我们只说 git add

482
12:32:38,080 --> 12:32:42,080
所有命中提交 32

483
12:32:42,080 --> 12:32:45,280
好的并获得状态

484
12:32:45,280 --> 12:32:49,752
太好了，然后我们也将推动我们的改变

485
12:32:49,752 --> 12:32:55,200
让我们也给它贴上标签 步骤 32

486
12:32:55,200 --> 12:33:01,112
如果您查看我们的标签所有标签，我们可以看到 20 blah blah

487
12:33:01,112 --> 12:33:06,080
让我们看看我们是否有 31 30 31 和 32 很棒，然后我们必须推送我们的标签

488
12:33:06,080 --> 12:33:10,392
也太棒了

489
12:33:10,392 --> 12:33:13,672
嗯，我们到目前为止所做的是我的意思是我们已经

490
12:33:13,672 --> 12:33:17,440
做了大量的工作，在本章中，我们已经本地化了我们的

491
12:33:17,440 --> 12:33:20,160
应用程序我们研究了本地化的工作原理 代码生成方式

492
12:33:20,160 --> 12:33:23,200
对于本地化工作，我们也看了一些

493
12:33:23,200 --> 12:33:26,560
您可以创建重要的扩展，以使您的本地化更

494
12:33:26,560 --> 12:33:32,232
对颤振效果更好，我们还研究了向我们的套利添加一些逻辑

495
12:33:32,232 --> 12:33:36,312
带有复数形式的文件，因此恭喜您通过了这个

496
12:33:36,312 --> 12:33:38,560
我个人认为这一章对于本地化您的

497
12:33:38,560 --> 12:33:42,160
如果您本地化您的应用程序，您将接触到更多用户

498
12:33:42,160 --> 12:33:47,200
适合您的目标市场的应用程序

499
12:33:47,200 --> 12:33:51,280
嗯，它应该可以帮助您的用户也感觉与您的应用程序有更多的联系

500
12:33:51,280 --> 12:33:55,280
所以嗯，我说我可能真的到那时

501
12:33:55,280 --> 12:34:00,640
下一章见大家好，我不能说欢迎

502
12:34:00,640 --> 12:34:04,560
现在这一章，因为这本身并不是真正的一章，而是

503
12:34:04,560 --> 12:34:08,952
这门课的结尾，我不知道这是一个苦乐参半的时刻

504
12:34:08,952 --> 12:34:13,672
因为呃，我为你整理这门课程非常有趣，现在我

505
12:34:13,672 --> 12:34:16,560
不得不说再见，嗯

506
12:34:16,560 --> 12:34:22,232
我不想情绪激动，但这有点难过，呃，因为这是一个伟大的时刻

507
12:34:22,232 --> 12:34:25,112
感谢你经历了

508
12:34:25,112 --> 12:34:29,512
这门课，我也想真正扩展

509
12:34:29,512 --> 12:34:32,560
并祝贺你通过

510
12:34:32,560 --> 12:34:37,592
这门课程和你所学的一样，因为它不是

511
12:34:37,592 --> 12:34:42,392
完成这么长的课程很容易，但正如我在

512
12:34:42,392 --> 12:34:46,080
如果你还记得的话，这个嗯课程的开始

513
12:34:46,080 --> 12:34:51,440
介绍我提到了嗯很多视频基本上都跳过了

514
12:34:51,440 --> 12:34:54,872
相当多的信息，我不想在这门课程中这样做

515
12:34:54,872 --> 12:34:58,720
这就是为什么这门课程变成了

516
12:34:58,720 --> 12:35:03,112
很长很长

517
12:35:03,112 --> 12:35:07,200
我们经历了很多我们不仅谈论过

518
12:35:07,200 --> 12:35:11,592
颤振的发展，但我们也弄脏了一些

519
12:35:11,592 --> 12:35:15,440
本机 ios 而不是真正的开发，但实际上都是 xcode 和

520
12:35:15,440 --> 12:35:19,840
摆弄 info 中的一些属性以及我们也有的 excel 项目

521
12:35:19,840 --> 12:35:26,232
必须打开 android studio 来创建我们使用过的虚拟设备

522
12:35:26,232 --> 12:35:31,512
figma 和我们与 app store connect 和 google play store 合作的设计工具

523
12:35:31,512 --> 12:35:36,312
控制台，所以我们经历了很多，所以我想要

524
12:35:36,312 --> 12:35:41,360
祝贺你一直和我在一起

525
12:35:41,360 --> 12:35:47,592
嗯，希望你现在在设计这门课程时也学到了很多东西，我也

526
12:35:47,592 --> 12:35:51,440
知道它必须是一种有生命的材料它不能只是我丢弃的东西

527
12:35:51,440 --> 12:35:55,672
在互联网上，所以我非常计划让所有内容保持最新

528
12:35:55,672 --> 12:36:00,000
但是我已经计划了很多很多

529
12:36:00,000 --> 12:36:04,560
更多内容将添加到本课程中，因此我无法真正详细介绍

530
12:36:04,560 --> 12:36:08,160
它们是什么我还没有最终确定它们，但就像我在这门课程中所做的那样

531
12:36:08,160 --> 12:36:12,080
需要正确计划他们编写我所有的脚本以知道我要说什么

532
12:36:12,080 --> 12:36:17,360
关于并计划甚至我需要编写的代码来告诉你一切

533
12:36:17,360 --> 12:36:21,200
只知道还有很多事情要做

534
12:36:21,200 --> 12:36:24,160
你可以订阅我的 youtube

535
12:36:24,160 --> 12:36:29,592
频道如果你想保持最新谈论最新的嗯

536
12:36:29,592 --> 12:36:33,440
例如，我们一直在使用 firebase 时，事情一直在发生变化

537
12:36:33,440 --> 12:36:38,872
Firebase 本身就是一个移动产品，所以它是一个像以往一样的更新

538
12:36:38,872 --> 12:36:42,720
它总是在更新，所以新版本会出现新版本

539
12:36:42,720 --> 12:36:46,800
颤振可能会出现，新版本的飞镖可能会出现

540
12:36:46,800 --> 12:36:49,920
figma 例如我们已经使用了很多界面可能会改变

541
12:36:49,920 --> 12:36:53,920
不规律地如此，因为我花了这么多精力去创造

542
12:36:53,920 --> 12:36:58,232
这门课我不想让它死，我不会让它死，所以它是

543
12:36:58,232 --> 12:37:02,000
总是会不时更新，然后我会放

544
12:37:02,000 --> 12:37:06,488
不仅更新了内容，也许我需要替换一些旧内容

545
12:37:06,488 --> 12:37:11,200
有一些新的，但我也计划添加更多，所以

546
12:37:11,200 --> 12:37:16,720
让我们说这门课程希望永远是最新的

547
12:37:16,720 --> 12:37:21,032
正如我在本课程的介绍中提到的，我的钱为零

548
12:37:21,032 --> 12:37:25,752
在营销这门课程的预算中，营销是

549
12:37:25,752 --> 12:37:30,488
可能是错误的词，因为我实际上并没有通过拥有这个来赚钱

550
12:37:30,488 --> 12:37:33,200
当然，我唯一赚到的就是拥有的快乐

551
12:37:33,200 --> 12:37:37,592
嗯，就像你这样的人通过这门课程并在社交上告诉我

552
12:37:37,592 --> 12:37:41,032
媒体也许是关于哦，嘿，我做了这门课，我学到了这个，这个和

553
12:37:41,032 --> 12:37:43,440
这个，我已经发布了我的第一个应用程序，所以

554
12:37:43,440 --> 12:37:47,592
因为我没有预算，如果可以的话，我会很感激的

555
12:37:47,592 --> 12:37:51,440
传播有关它的信息并告诉我是否有人问好我需要一门课程

556
12:37:51,440 --> 12:37:55,112
学习颤振，嗯，这会很可爱，我真的会

557
12:37:55,112 --> 12:37:59,032
如果您能告诉他们这门课程，将不胜感激

558
12:37:59,032 --> 12:38:02,952
嗯，我在介绍中也提到过，但我真的会

559
12:38:02,952 --> 12:38:08,952
如果您能在 van.np 的社交媒体 Twitter 上关注我，将不胜感激

560
12:38:08,952 --> 12:38:12,232
在linkedin上，因为我制作了很多内容

561
12:38:12,232 --> 12:38:16,488
例如，作为信息图表还添加了与颤振相关的视频

562
12:38:16,488 --> 12:38:22,952
javascript python django react native swift 你给它命名所以现在甚至是打字稿

563
12:38:22,952 --> 12:38:25,840
这些天，所以，如果你有的话，我会非常感激

564
12:38:25,840 --> 12:38:31,360
可以在社交媒体上关注我，呃，我在某些地方被告知

565
12:38:31,360 --> 12:38:36,720
嗯，你们中的一些人也许有些人实际上可以支持

566
12:38:36,720 --> 12:38:40,640
我，如果你想这样做，这就是这样做的方法

567
12:38:40,640 --> 12:38:45,512
给我买一个coffee.com，但记住它完全是

568
12:38:45,512 --> 12:38:51,752
可选的，只有你买得起，所以说了我不想

569
12:38:51,752 --> 12:38:57,200
拖到这个结尾我只想再次对你表示衷心的祝贺

570
12:38:57,200 --> 12:39:02,872
和我一起完成这门课程，在这么多的时间里度过你的一生

571
12:39:02,872 --> 12:39:08,640
和我在一起几个小时，我录制了所有这些视频，嗯

572
12:39:08,640 --> 12:39:14,312
我敢肯定这不是一个好的购买，而是基本上对此的正式结束

573
12:39:14,312 --> 12:39:19,280
当然，请留意更多内容，我相信我们会与每个人交谈

574
12:39:19,280 --> 12:39:23,232

